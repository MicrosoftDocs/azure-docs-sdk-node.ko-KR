### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobManagerTask
    name: JobManagerTask
    fullName: JobManagerTask
    children:
      - azure-batch.JobManagerTask.allowLowPriorityNode
      - azure-batch.JobManagerTask.applicationPackageReferences
      - azure-batch.JobManagerTask.authenticationTokenSettings
      - azure-batch.JobManagerTask.commandLine
      - azure-batch.JobManagerTask.constraints
      - azure-batch.JobManagerTask.containerSettings
      - azure-batch.JobManagerTask.displayName
      - azure-batch.JobManagerTask.environmentSettings
      - azure-batch.JobManagerTask.id
      - azure-batch.JobManagerTask.killJobOnCompletion
      - azure-batch.JobManagerTask.outputFiles
      - azure-batch.JobManagerTask.resourceFiles
      - azure-batch.JobManagerTask.runExclusive
      - azure-batch.JobManagerTask.userIdentity
    langs:
      - typeScript
    type: interface
    summary: |-
      작업 관리자 태스크는 작업이 만들어질 때 자동으로 시작 됩니다. Batch 서비스 작업의 다른 태스크 보다 먼저 작업 관리자 태스크를 예약 하려고 시도 합니다. 풀을 축소할 때 Batch 서비스는 작업 관리자 작업 (즉, 계산 노드 실행 'normal' 작업 전에 작업 관리자 태스크를 실행 하는 계산 노드가 제거 됩니다) 최대한 오랫동안 실행 되는 노드를 유지 하려고 합니다. 작업 관리자 태스크가 실패 하 고 다시 시작 해야 하는 경우, 시스템 가장 높은 우선 순위로 예약 하려고 합니다. 사용 가능한 유휴 계산 노드가 없는 경우 시스템 풀에서 실행 중인 태스크 중 하나를 종료 하 고 다시 시작 하려면 작업 관리자 태스크에 대 한 공간을 확보 하기 위해 큐에 반환할 수 있습니다. 하나의 작업에서 작업 관리자 태스크를 다른 작업의 태스크 보다 우선 순위가 높지 않습니다는 참고 합니다. 작업, 작업 수준 우선 순위만 관찰 됩니다. 예를 들어, 우선 순위 0 작업 관리자 작업 다시 시작 해야, 있는 경우 해당 됩니다 하지 치환 우선 순위 1의 작업 작업 합니다. 일괄 처리 노드에서 복구 작업이 트리거될 때 작업을 다시 시도 합니다.
      포함 (하지만에 제한 되지 않습니다)의 복구 작업이 경우에서 비정상 노드를 다시 부팅 하거나 계산 노드 호스트 오류로 인해 표시 되지 않습니다. 복구 작업은 독립적 이며 된 maxTaskRetryCount에 대해 계산 되지 않습니다 인해 다시 시도 합니다. 된 maxTaskRetryCount 0 인 경우에 내부는 재시도 복구 작업으로 인해 발생할 수 있습니다. 이 인해 모든 작업이 멱 등 원 이어야 합니다. 즉, 작업을 중단 되 고 중복 된 데이터 나 손상 없이 다시 시작을 허용 해야 합니다. 최상의 일종의 검사점을 사용 하는 장기 실행 작업에 대 한 연습입니다.
    package: azure-batch
  - uid: azure-batch.JobManagerTask.allowLowPriorityNode
    name: allowLowPriorityNode
    fullName: allowLowPriorityNode
    children: []
    langs:
      - typeScript
    type: property
    summary: 기본값은 true입니다.
    optional: true
    syntax:
      content: 'allowLowPriorityNode?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.JobManagerTask.applicationPackageReferences
    name: applicationPackageReferences
    fullName: applicationPackageReferences
    children: []
    langs:
      - typeScript
    type: property
    summary: '응용 프로그램 패키지는 다운로드 되 고 작업 디렉터리는 작업이 아닌 공유 디렉터리에 배포 합니다. 따라서 참조 응용 프로그램 패키지를 계산 노드에서 이미 최신 상태를 하지 다시 다운로드 됩니다. Compute 계산 노드의 기존 복사본이 사용 됩니다. 참조 된 경우 응용 프로그램 패키지 설치할 수 없습니다, 예를 들어 패키지 삭제 되었거나 다운로드 실패 한 작업이 실패 합니다.'
    optional: true
    syntax:
      content: 'applicationPackageReferences?: ApplicationPackageReference[]'
      return:
        type:
          - 'azure-batch.ApplicationPackageReference[]'
    package: azure-batch
  - uid: azure-batch.JobManagerTask.authenticationTokenSettings
    name: authenticationTokenSettings
    fullName: authenticationTokenSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: '이 속성을 설정 하는 경우 Batch 서비스 계정 액세스 키를 요구 하지 않고 일괄 처리 서비스 작업을 인증에 사용할 수 있는 인증 토큰을 사용 하 여 작업을 제공 합니다. 토큰은 AZ_BATCH_AUTHENTICATION_TOKEN 환경 변수를 통해 제공 됩니다. 토큰을 사용 하 여 작업을 수행할 수 있는 작업의 설정에 따라 달라 집니다. 예를 들어, 태스크를 작업에 다른 작업을 추가 하기 위해 작업 권한을 요청 하거나 작업에서 다른 태스크 또는 작업의 상태를 확인할 수 있습니다.'
    optional: true
    syntax:
      content: 'authenticationTokenSettings?: AuthenticationTokenSettings'
      return:
        type:
          - azure-batch.AuthenticationTokenSettings
    package: azure-batch
  - uid: azure-batch.JobManagerTask.commandLine
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: '명령줄 셸에서 실행 되지 않으며 따라서 환경 변수 확장과 같은 셸 기능을 사용할 수 없습니다. 이러한 기능을 활용 하려는 경우를 호출 해야 명령줄에서 셸을 예를 들어 "cmd /c MyCommand"를 사용 하 여 Windows에서 또는 "/ bin/sh-c MyCommand" Linux에서. 명령줄 파일 경로 가리키는 경우 (태스크 작업 디렉터리의 상대), 상대 경로 사용 하 또는 일괄 처리 제공 된 환경 변수를 사용 해야 합니다 (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)합니다.'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobManagerTask.constraints
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'constraints?: TaskConstraints'
      return:
        type:
          - azure-batch.TaskConstraints
    package: azure-batch
  - uid: azure-batch.JobManagerTask.containerSettings
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: '이 작업을 실행 하는 풀에 containerconfiguration 집합이 설정 하는 경우이 설정 해야 합니다도 합니다. 이 작업을 실행 하는 풀에 containerconfiguration 집합이 설정 없으면이 되지 설정 되어야 합니다. 이 옵션을 지정 하는 경우 AZ_BATCH_NODE_ROOT_DIR (노드에서 Azure Batch 디렉터리의 루트) 아래의 모든 디렉터리가 재귀적으로 컨테이너에 매핑되고, 모든 작업 환경 변수가 컨테이너에 매핑되고 및 태스크 명령줄은 컨테이너에서 실행 합니다. AZ_BATCH_NODE_ROOT_DIR 외부 컨테이너에서 생성 된 파일 배치 파일 Api는 해당 파일에 액세스할 수 없습니다 즉 호스트 디스크에 반영 되지 않을 수 있습니다.'
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - azure-batch.TaskContainerSettings
    package: azure-batch
  - uid: azure-batch.JobManagerTask.displayName
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: 고유한 이름일 필요 하 고 최대 길이는 1024 자 유니코드 문자를 포함할 수 있습니다.
    optional: true
    syntax:
      content: 'displayName?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobManagerTask.environmentSettings
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - 'azure-batch.EnvironmentSetting[]'
    package: azure-batch
  - uid: azure-batch.JobManagerTask.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ID는 하이픈 및 밑줄만 포함 하는 영숫자 문자 조합을 포함할 수 있습니다 및 64 개 이상의 문자를 포함할 수 없습니다.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobManagerTask.killJobOnCompletion
    name: killJobOnCompletion
    fullName: killJobOnCompletion
    children: []
    langs:
      - typeScript
    type: property
    summary: True 이면 작업 관리자 태스크가 완료 되 면 완료 된 것으로 작업의 일괄 처리 서비스 표시 합니다. 모든 작업 (이외의 작업 릴리스)이이 시간에 실행 중인 경우 해당 작업이 종료 됩니다. False 인 경우 작업 관리자 태스크의 완료 작업 상태를 영향을 주지 않습니다. 이 경우 onAllTasksComplete 특성을 사용 하 여 작업을 종료 하거나 클라이언트 또는 사용자 작업을 명시적으로 종료 합니다. 이 예가 경우 작업 관리자 태스크 집합을 만들지만 그런 다음 추가 역할이 실행에서 됩니다. 기본값은 true입니다. OnAllTasksComplete 및 onTaskFailure 특성을 사용 하 여 작업 수명을 제어 하려면 하 고 (필요가 진행률 모니터링) 작업에 대 한 작업을 만드는 데에 작업 관리자 태스크를 사용 하는 경우 다음 반드시 killJobOnCompletion false로 설정 합니다.
    optional: true
    syntax:
      content: 'killJobOnCompletion?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.JobManagerTask.outputFiles
    name: outputFiles
    fullName: outputFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: 다중 인스턴스 작업에 대 한 파일 주 작업 실행 되는 계산 노드에서 업로드만 됩니다.
    optional: true
    syntax:
      content: 'outputFiles?: OutputFile[]'
      return:
        type:
          - 'azure-batch.OutputFile[]'
    package: azure-batch
  - uid: azure-batch.JobManagerTask.resourceFiles
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      이 요소 아래에 나열 된 파일 작업의 작업 디렉터리에 있습니다.
      리소스 파일의 목록에 대 한 최대 크기가 있습니다.  최대 크기를 초과 하면 요청이 실패 하 고 응답 오류 코드는 RequestEntityTooLarge 됩니다. 이런 경우의 ResourceFiles 컬렉션 크기가 줄여야 합니다. .Zip 파일, 응용 프로그램 패키지 또는 Docker 컨테이너를 사용 하 여 수행할 수 있습니다.
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - 'azure-batch.ResourceFile[]'
    package: azure-batch
  - uid: azure-batch.JobManagerTask.runExclusive
    name: runExclusive
    fullName: runExclusive
    children: []
    langs:
      - typeScript
    type: property
    summary: True 이면 작업 관리자가 실행 되는 다른 작업이 없는 동일한 노드에서 실행 됩니다. False 이면 다른 작업이 동시에 실행할 수 작업 관리자를 사용 하 여 계산 노드에서 합니다. 작업 관리자 태스크가 계산 노드에서 여러 동시 작업을 허용 하는 경우 관련만 이것이 계산 노드의 동시 작업 제한에 대해 일반적으로 계산 합니다. 기본값은 true입니다.
    optional: true
    syntax:
      content: 'runExclusive?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.JobManagerTask.userIdentity
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: 생략 하면 태스크에 작업이 고유 관리자가 아닌 사용자로 실행 됩니다.
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - azure-batch.UserIdentity
    package: azure-batch
references:
  - uid: 'azure-batch.ApplicationPackageReference[]'
    name: 'ApplicationPackageReference[]'
    spec.typeScript:
      - name: ApplicationPackageReference
        fullName: ApplicationPackageReference
        uid: azure-batch.ApplicationPackageReference
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.AuthenticationTokenSettings
    name: AuthenticationTokenSettings
    spec.typeScript:
      - name: AuthenticationTokenSettings
        fullName: AuthenticationTokenSettings
        uid: azure-batch.AuthenticationTokenSettings
  - uid: azure-batch.TaskConstraints
    name: TaskConstraints
    spec.typeScript:
      - name: TaskConstraints
        fullName: TaskConstraints
        uid: azure-batch.TaskConstraints
  - uid: azure-batch.TaskContainerSettings
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: azure-batch.TaskContainerSettings
  - uid: 'azure-batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: azure-batch.EnvironmentSetting
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-batch.OutputFile[]'
    name: 'OutputFile[]'
    spec.typeScript:
      - name: OutputFile
        fullName: OutputFile
        uid: azure-batch.OutputFile
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: azure-batch.ResourceFile
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.UserIdentity
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: azure-batch.UserIdentity