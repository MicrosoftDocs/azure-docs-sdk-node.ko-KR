### YamlMime:UniversalReference
ms.openlocfilehash: 4277010b2babd7dd5c15af4eb4ef2eff99c846b5
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/20/2018
ms.locfileid: "53677267"
items:
- uid: azure-batch.JobScheduleExecutionInformation
  name: JobScheduleExecutionInformation
  fullName: JobScheduleExecutionInformation
  children:
  - azure-batch.JobScheduleExecutionInformation.endTime
  - azure-batch.JobScheduleExecutionInformation.nextRunTime
  - azure-batch.JobScheduleExecutionInformation.recentJob
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-batch
- uid: azure-batch.JobScheduleExecutionInformation.endTime
  name: endTime
  fullName: endTime
  children: []
  langs:
  - typeScript
  type: property
  summary: 이 속성은 작업 일정은 완료 상태인 경우에 설정 됩니다.
  optional: true
  syntax:
    content: 'endTime?: Date'
    return:
      type:
      - Date
  package: azure-batch
- uid: azure-batch.JobScheduleExecutionInformation.nextRunTime
  name: nextRunTime
  fullName: nextRunTime
  children: []
  langs:
  - typeScript
  type: property
  summary: 이 속성은 하는 경우 일정은 활성 상태인 경우에 유효 합니다. 예를 들어, 일정 하지 않으면 작업이 만들어집니다 nextRunTime에서 그 전에 작업을 사용 하지 않으면.
  optional: true
  syntax:
    content: 'nextRunTime?: Date'
    return:
      type:
      - Date
  package: azure-batch
- uid: azure-batch.JobScheduleExecutionInformation.recentJob
  name: recentJob
  fullName: recentJob
  children: []
  langs:
  - typeScript
  type: property
  summary: 이 속성은 일정에서 하나 이상의 작업이 실행 된 경우에 제공 합니다.
  optional: true
  syntax:
    content: 'recentJob?: RecentJob'
    return:
      type:
      - azure-batch.RecentJob
  package: azure-batch
references:
- uid: azure-batch.RecentJob
  name: RecentJob
  spec.typeScript:
  - name: RecentJob
    fullName: RecentJob
    uid: azure-batch.RecentJob
