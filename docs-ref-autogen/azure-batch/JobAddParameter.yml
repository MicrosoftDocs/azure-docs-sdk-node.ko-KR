### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobAddParameter
    name: JobAddParameter
    fullName: JobAddParameter
    children:
      - azure-batch.JobAddParameter.commonEnvironmentSettings
      - azure-batch.JobAddParameter.constraints
      - azure-batch.JobAddParameter.displayName
      - azure-batch.JobAddParameter.id
      - azure-batch.JobAddParameter.jobManagerTask
      - azure-batch.JobAddParameter.jobPreparationTask
      - azure-batch.JobAddParameter.jobReleaseTask
      - azure-batch.JobAddParameter.metadata
      - azure-batch.JobAddParameter.networkConfiguration
      - azure-batch.JobAddParameter.onAllTasksComplete
      - azure-batch.JobAddParameter.onTaskFailure
      - azure-batch.JobAddParameter.poolInfo
      - azure-batch.JobAddParameter.priority
      - azure-batch.JobAddParameter.usesTaskDependencies
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.JobAddParameter.commonEnvironmentSettings
    name: commonEnvironmentSettings
    fullName: commonEnvironmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="54c41-101">개별 작업에는 다른 값으로 동일한 설정 이름을 지정 하 여 여기에 지정 된 환경 설정을 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-101">Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.</span></span>
    optional: true
    syntax:
      content: 'commonEnvironmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - 'azure-batch.EnvironmentSetting[]'
    package: azure-batch
  - uid: azure-batch.JobAddParameter.constraints
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="54c41-102">작업에 대 한 실행 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-102">The execution constraints for the Job.</span></span>
    optional: true
    syntax:
      content: 'constraints?: JobConstraints'
      return:
        type:
          - azure-batch.JobConstraints
    package: azure-batch
  - uid: azure-batch.JobAddParameter.displayName
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="54c41-103">표시 이름은 고유할 필요가 및 최대 길이는 1024 자 유니코드 문자를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-103">The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</span></span>
    optional: true
    syntax:
      content: 'displayName?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobAddParameter.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="54c41-104">ID는 하이픈 및 밑줄만 포함 하는 영숫자 문자 조합을 포함할 수 있습니다 및 64 개 이상의 문자를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-104">The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.</span></span> <span data-ttu-id="54c41-105">ID는 대소 문자가 구분 및 대/소문자 (즉, 없을 경우 대/소문자만 다른 계정 내에서 두 개의 Id)입니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-105">The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).</span></span>'
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobAddParameter.jobManagerTask
    name: jobManagerTask
    fullName: jobManagerTask
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="54c41-106">작업에서 작업 관리자 태스크를 지정 하지 않으면, 사용자 작업에 태스크를 명시적으로 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-106">If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job.</span></span> <span data-ttu-id="54c41-107">작업에서 작업 관리자 태스크를 지정 하는 경우 Batch 서비스는 작업을 만들고 작업의 다른 태스크를 예약 하기 전에 작업 관리자 태스크를 예약 하려고 하는 경우 작업 관리자 태스크를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-107">If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job.</span></span> <span data-ttu-id="54c41-108">작업 관리자 태스크의 일반적인 목적은 제어 및/또는 실행할 추가 작업을 결정, 작업이 완료 되 면 확인, 등으로 예를 들어 작업 실행을 모니터링 하는 것입니다. 그러나 (작업 관리자 태스크 제한 되지 않습니다 이러한 활동</span><span class="sxs-lookup"><span data-stu-id="54c41-108">The Job Manager Task's typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities</span></span>
      - <span data-ttu-id="54c41-109">완전 작업 시스템에서 이므로 작업에 필요한 작업을 수행 합니다.) 예를 들어, 작업 관리자 태스크를 수 있습니다 매개 변수로 지정 된 파일을 다운로드, 해당 파일의 내용을 분석 및 해당 내용에 따라 추가 작업을 제출 합니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-109">it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents.</span></span>
    optional: true
    syntax:
      content: 'jobManagerTask?: JobManagerTask'
      return:
        type:
          - azure-batch.JobManagerTask
    package: azure-batch
  - uid: azure-batch.JobAddParameter.jobPreparationTask
    name: jobPreparationTask
    fullName: jobPreparationTask
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="54c41-110">작업에 작업 준비 태스크를 하는 경우 Batch 서비스는 해당 계산 노드에서 작업의 태스크를 시작 하기 전에 작업 준비 태스크를 노드에서 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-110">If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node.</span></span>'
    optional: true
    syntax:
      content: 'jobPreparationTask?: JobPreparationTask'
      return:
        type:
          - azure-batch.JobPreparationTask
    package: azure-batch
  - uid: azure-batch.JobAddParameter.jobReleaseTask
    name: jobReleaseTask
    fullName: jobReleaseTask
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="54c41-111">또한 작업에 대 한 작업 준비 태스크를 지정 하지 않고 작업 릴리스 태스크를 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-111">A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job.</span></span> <span data-ttu-id="54c41-112">Batch 서비스는 노드에서 작업 준비 태스크를 실행 하는 작업 릴리스 태스크를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-112">The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task.</span></span> <span data-ttu-id="54c41-113">작업 릴리스 태스크의 기본 목적은 계산 노드에서 작업 준비 태스크에서 수행한 모든 변경 내용을 취소 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-113">The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task.</span></span> <span data-ttu-id="54c41-114">예제 작업에는 로컬 파일을 삭제 하거나 작업 준비의 일부로 시작 된 서비스를 종료 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-114">Example activities include deleting local files, or shutting down services that were started as part of Job preparation.</span></span>'
    optional: true
    syntax:
      content: 'jobReleaseTask?: JobReleaseTask'
      return:
        type:
          - azure-batch.JobReleaseTask
    package: azure-batch
  - uid: azure-batch.JobAddParameter.metadata
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="54c41-115">Batch 서비스 메타 데이터를 의미를 할당 하지 않습니다. 이 사용자 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-115">The Batch service does not assign any meaning to metadata; it is solely for the use of user code.</span></span>
    optional: true
    syntax:
      content: 'metadata?: MetadataItem[]'
      return:
        type:
          - 'azure-batch.MetadataItem[]'
    package: azure-batch
  - uid: azure-batch.JobAddParameter.networkConfiguration
    name: networkConfiguration
    fullName: networkConfiguration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'networkConfiguration?: JobNetworkConfiguration'
      return:
        type:
          - azure-batch.JobNetworkConfiguration
    package: azure-batch
  - uid: azure-batch.JobAddParameter.onAllTasksComplete
    name: onAllTasksComplete
    fullName: onAllTasksComplete
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="54c41-116">참고 작업을 작업이 있으면 모든 태스크는 완료로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-116">Note that if a Job contains no Tasks, then all Tasks are considered complete.</span></span>
      <span data-ttu-id="54c41-117">이 옵션은 작업 관리자 태스크를 사용 하 여 가장 많이 사용 하므로 자동 작업 종료 작업 관리자 없이 사용 하려는 경우 해야 처음 onAllTasksComplete noaction로 설정 하 고 추가 작업을 완료 했으면 terminatejob onAllTasksComplete로 작업 속성을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-117">This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks.</span></span> <span data-ttu-id="54c41-118">기본값은 noaction 합니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-118">The default is noaction.</span></span> <span data-ttu-id="54c41-119">가능한 값: 'noAction', 'terminateJob'</span><span class="sxs-lookup"><span data-stu-id="54c41-119">Possible values include: 'noAction', 'terminateJob'</span></span>
    optional: true
    syntax:
      content: 'onAllTasksComplete?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobAddParameter.onTaskFailure
    name: onTaskFailure
    fullName: onTaskFailure
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="54c41-120">작업을 할 것으로 간주 됩니다 실패 한 경우에는 failureInfo 합니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-120">A Task is considered to have failed if has a failureInfo.</span></span> <span data-ttu-id="54c41-121">해당 재시도 횟수를 소진 한 후 0이 아닌 종료 코드를 사용 하 여 작업이 완료 되는 경우는 failureInfo 설정할지 또는 작업을 시작할 때 오류가 있는 경우 예를 들어 리소스 파일로 인해 다운로드 오류.</span><span class="sxs-lookup"><span data-stu-id="54c41-121">A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error.</span></span> <span data-ttu-id="54c41-122">기본값은 noaction 합니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-122">The default is noaction.</span></span> <span data-ttu-id="54c41-123">가능한 값: ''noAction'', ''performExitOptionsJobAction''</span><span class="sxs-lookup"><span data-stu-id="54c41-123">Possible values include: ''noAction'', ''performExitOptionsJobAction''</span></span>'
    optional: true
    syntax:
      content: 'onTaskFailure?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobAddParameter.poolInfo
    name: poolInfo
    fullName: poolInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'poolInfo: PoolInformation'
      return:
        type:
          - azure-batch.PoolInformation
    package: azure-batch
  - uid: azure-batch.JobAddParameter.priority
    name: priority
    fullName: priority
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="54c41-124">우선 순위 값의 범위는-1000에서 1000에서 1000이 가장 높은 우선 순위 및-1000이 가장 낮은 우선 순위.</span><span class="sxs-lookup"><span data-stu-id="54c41-124">Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority.</span></span> <span data-ttu-id="54c41-125">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="54c41-125">The default value is 0.</span></span>'
    optional: true
    syntax:
      content: 'priority?: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.JobAddParameter.usesTaskDependencies
    name: usesTaskDependencies
    fullName: usesTaskDependencies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'usesTaskDependencies?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
references:
  - uid: 'azure-batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: azure-batch.EnvironmentSetting
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.JobConstraints
    name: JobConstraints
    spec.typeScript:
      - name: JobConstraints
        fullName: JobConstraints
        uid: azure-batch.JobConstraints
  - uid: azure-batch.JobManagerTask
    name: JobManagerTask
    spec.typeScript:
      - name: JobManagerTask
        fullName: JobManagerTask
        uid: azure-batch.JobManagerTask
  - uid: azure-batch.JobPreparationTask
    name: JobPreparationTask
    spec.typeScript:
      - name: JobPreparationTask
        fullName: JobPreparationTask
        uid: azure-batch.JobPreparationTask
  - uid: azure-batch.JobReleaseTask
    name: JobReleaseTask
    spec.typeScript:
      - name: JobReleaseTask
        fullName: JobReleaseTask
        uid: azure-batch.JobReleaseTask
  - uid: 'azure-batch.MetadataItem[]'
    name: 'MetadataItem[]'
    spec.typeScript:
      - name: MetadataItem
        fullName: MetadataItem
        uid: azure-batch.MetadataItem
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.JobNetworkConfiguration
    name: JobNetworkConfiguration
    spec.typeScript:
      - name: JobNetworkConfiguration
        fullName: JobNetworkConfiguration
        uid: azure-batch.JobNetworkConfiguration
  - uid: azure-batch.PoolInformation
    name: PoolInformation
    spec.typeScript:
      - name: PoolInformation
        fullName: PoolInformation
        uid: azure-batch.PoolInformation