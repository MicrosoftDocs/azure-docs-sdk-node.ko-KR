### YamlMime:UniversalReference
items:
  - uid: azure-batch.StartTask
    name: StartTask
    fullName: StartTask
    children:
      - azure-batch.StartTask.commandLine
      - azure-batch.StartTask.containerSettings
      - azure-batch.StartTask.environmentSettings
      - azure-batch.StartTask.maxTaskRetryCount
      - azure-batch.StartTask.resourceFiles
      - azure-batch.StartTask.userIdentity
      - azure-batch.StartTask.waitForSuccess
    langs:
      - typeScript
    type: interface
    summary: '<span data-ttu-id="bc7e8-101">일괄 처리 노드에서 복구 작업이 트리거될 때 작업을 다시 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-101">Batch will retry Tasks when a recovery operation is triggered on a Node.</span></span> <span data-ttu-id="bc7e8-102">포함 (하지만에 제한 되지 않습니다)의 복구 작업이 경우에서 비정상 노드를 다시 부팅 하거나 계산 노드 호스트 오류로 인해 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-102">Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure.</span></span> <span data-ttu-id="bc7e8-103">복구 작업은 독립적 이며 된 maxTaskRetryCount에 대해 계산 되지 않습니다 인해 다시 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-103">Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount.</span></span> <span data-ttu-id="bc7e8-104">된 maxTaskRetryCount 0 인 경우에 내부는 재시도 복구 작업으로 인해 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-104">Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur.</span></span> <span data-ttu-id="bc7e8-105">이 인해 모든 작업이 멱 등 원 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-105">Because of this, all Tasks should be idempotent.</span></span> <span data-ttu-id="bc7e8-106">즉, 작업을 중단 되 고 중복 된 데이터 나 손상 없이 다시 시작을 허용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-106">This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data.</span></span> <span data-ttu-id="bc7e8-107">최상의 일종의 검사점을 사용 하는 장기 실행 작업에 대 한 연습입니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-107">The best practice for long running Tasks is to use some form of checkpointing.</span></span> <span data-ttu-id="bc7e8-108">일부 경우에 시작 태스크 실행할 수 있습니다 다시 있지만 Compute 노드 다시 부팅 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-108">In some cases the start Task may be re-run even though the Compute Node was not rebooted.</span></span> <span data-ttu-id="bc7e8-109">특별 한 주의 해야 breakaway 만드는 작업을 처리 하는 시작을 방지 하거나 설치/시작 태스크 작업 디렉터리에서에서 서비스를 시작 하려면으로 일괄 처리를 다시 시작 작업을 실행할 수 없도록 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-109">Special care should be taken to avoid start Tasks which create breakaway process or install/launch services from the start Task working directory, as this will block Batch from being able to re-run the start Task.</span></span>'
    package: azure-batch
  - uid: azure-batch.StartTask.commandLine
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="bc7e8-110">명령줄 셸에서 실행 되지 않으며 따라서 환경 변수 확장과 같은 셸 기능을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-110">The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion.</span></span> <span data-ttu-id="bc7e8-111">이러한 기능을 활용 하려는 경우를 호출 해야 명령줄에서 셸을 예를 들어 "cmd /c MyCommand"를 사용 하 여 Windows에서 또는 "/ bin/sh-c MyCommand" Linux에서.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-111">If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.</span></span> <span data-ttu-id="bc7e8-112">명령줄 파일 경로 가리키는 경우 (태스크 작업 디렉터리의 상대), 상대 경로 사용 하 또는 일괄 처리 제공 된 환경 변수를 사용 해야 합니다 (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-112">If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).</span></span>'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.StartTask.containerSettings
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="bc7e8-113">이 옵션을 지정 하는 경우 AZ_BATCH_NODE_ROOT_DIR (노드에서 Azure Batch 디렉터리의 루트) 아래의 모든 디렉터리가 재귀적으로 컨테이너에 매핑되고, 모든 작업 환경 변수가 컨테이너에 매핑되고 및 태스크 명령줄은 컨테이너에서 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-113">When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container.</span></span> <span data-ttu-id="bc7e8-114">AZ_BATCH_NODE_ROOT_DIR 외부 컨테이너에서 생성 된 파일 배치 파일 Api는 해당 파일에 액세스할 수 없습니다 즉 호스트 디스크에 반영 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-114">Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.</span></span>'
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - azure-batch.TaskContainerSettings
    package: azure-batch
  - uid: azure-batch.StartTask.environmentSettings
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - 'azure-batch.EnvironmentSetting[]'
    package: azure-batch
  - uid: azure-batch.StartTask.maxTaskRetryCount
    name: maxTaskRetryCount
    fullName: maxTaskRetryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="bc7e8-115">Batch 서비스의 종료 코드 0이 아닌 경우 작업을 다시 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-115">The Batch service retries a Task if its exit code is nonzero.</span></span> <span data-ttu-id="bc7e8-116">이 값은 구체적으로 재시도 횟수를 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-116">Note that this value specifically controls the number of retries.</span></span> <span data-ttu-id="bc7e8-117">Batch 서비스는 작업을 한 번 시도 및이 한도까지 다시 시도 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-117">The Batch service will try the Task once, and may then retry up to this limit.</span></span> <span data-ttu-id="bc7e8-118">예를 들어 최대 다시 시도 횟수가 3, 작업 일괄 처리 시도 최대 4 (초기 시도 1와 재시도 3 회) 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-118">For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries).</span></span> <span data-ttu-id="bc7e8-119">최대 재시도 횟수가 0 일 경우 Batch 서비스 작업을 재시도 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-119">If the maximum retry count is 0, the Batch service does not retry the Task.</span></span> <span data-ttu-id="bc7e8-120">최대 재시도 횟수가-1 인 경우 Batch 서비스에 제한 없이 작업을 다시 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-120">If the maximum retry count is -1, the Batch service retries the Task without limit.</span></span>'
    optional: true
    syntax:
      content: 'maxTaskRetryCount?: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.StartTask.resourceFiles
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="bc7e8-121">이 요소 아래에 나열 된 파일 작업의 작업 디렉터리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-121">Files listed under this element are located in the Task's working directory.</span></span>
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - 'azure-batch.ResourceFile[]'
    package: azure-batch
  - uid: azure-batch.StartTask.userIdentity
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="bc7e8-122">생략 하면 태스크에 작업이 고유 관리자가 아닌 사용자로 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-122">If omitted, the Task runs as a non-administrative user unique to the Task.</span></span>'
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - azure-batch.UserIdentity
    package: azure-batch
  - uid: azure-batch.StartTask.waitForSuccess
    name: waitForSuccess
    fullName: waitForSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="bc7e8-123">True이 고 시작 된 노드에서 태스크가 실패 하면, Batch 서비스는 최대 재시도 횟수 (maxTaskRetryCount) 최대 시작 태스크 다시 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-123">If true and the start Task fails on a Node, the Batch service retries the start Task up to its maximum retry count (maxTaskRetryCount).</span></span> <span data-ttu-id="bc7e8-124">작업에 여전히 not 모든 재시도 후 일괄 처리 서비스 표시를 사용할 수 없게 노드를 성공적으로 완료 하 고 작업을 예약 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-124">If the Task has still not completed successfully after all retries, then the Batch service marks the Node unusable, and will not schedule Tasks to it.</span></span> <span data-ttu-id="bc7e8-125">Compute 노드 상태 및 오류 정보 세부 정보를 통해이 문제를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-125">This condition can be detected via the Compute Node state and failure info details.</span></span> <span data-ttu-id="bc7e8-126">False 인 경우, Batch 서비스 시작 작업이 완료 되기를 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-126">If false, the Batch service will not wait for the start Task to complete.</span></span> <span data-ttu-id="bc7e8-127">이 경우 다른 작업 시작 작업을 계속 실행 됩니다; 시작 하는 동안 계산 노드에서 실행 및 계산 노드에서 예약 될 새 작업 시작 작업에 실패 하는 경우에 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-127">In this case, other Tasks can start executing on the Compute Node while the start Task is still running; and even if the start Task fails, new Tasks will continue to be scheduled on the Compute Node.</span></span> <span data-ttu-id="bc7e8-128">기본값은 false입니다.</span><span class="sxs-lookup"><span data-stu-id="bc7e8-128">The default is false.</span></span>'
    optional: true
    syntax:
      content: 'waitForSuccess?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
references:
  - uid: azure-batch.TaskContainerSettings
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: azure-batch.TaskContainerSettings
  - uid: 'azure-batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: azure-batch.EnvironmentSetting
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: azure-batch.ResourceFile
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.UserIdentity
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: azure-batch.UserIdentity