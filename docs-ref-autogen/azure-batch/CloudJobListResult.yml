### YamlMime:UniversalReference
items:
  - uid: azure-batch.CloudJobListResult
    name: CloudJobListResult
    fullName: CloudJobListResult
    children:
      - azure-batch.CloudJobListResult.Array
      - azure-batch.CloudJobListResult.concat
      - azure-batch.CloudJobListResult.concat_1
      - azure-batch.CloudJobListResult.every
      - azure-batch.CloudJobListResult.filter_1
      - azure-batch.CloudJobListResult.filter
      - azure-batch.CloudJobListResult.forEach
      - azure-batch.CloudJobListResult.indexOf
      - azure-batch.CloudJobListResult.join
      - azure-batch.CloudJobListResult.lastIndexOf
      - azure-batch.CloudJobListResult.length
      - azure-batch.CloudJobListResult.map
      - azure-batch.CloudJobListResult.odatanextLink
      - azure-batch.CloudJobListResult.pop
      - azure-batch.CloudJobListResult.push
      - azure-batch.CloudJobListResult.reduce
      - azure-batch.CloudJobListResult.reduce_1
      - azure-batch.CloudJobListResult.reduce_2
      - azure-batch.CloudJobListResult.reduceRight
      - azure-batch.CloudJobListResult.reduceRight_1
      - azure-batch.CloudJobListResult.reduceRight_2
      - azure-batch.CloudJobListResult.reverse
      - azure-batch.CloudJobListResult.shift
      - azure-batch.CloudJobListResult.slice
      - azure-batch.CloudJobListResult.some
      - azure-batch.CloudJobListResult.sort
      - azure-batch.CloudJobListResult.splice
      - azure-batch.CloudJobListResult.splice_1
      - azure-batch.CloudJobListResult.toLocaleString
      - azure-batch.CloudJobListResult.toString
      - azure-batch.CloudJobListResult.unshift
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<azure-batch.CloudJob>
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.concat
    name: 'concat(ConcatArray<CloudJob>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-101">두 개 이상의 배열을 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<CloudJob>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-batch.CloudJob>[]'
          description: |
            <span data-ttu-id="20974-102">Array1의 끝에 추가할 추가 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-103">두 개 이상의 배열을 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="20974-104">Array1의 끝에 추가할 추가 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.every
    name: 'every((value: CloudJob, index: number, array: CloudJob[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-105">배열의 모든 구성원은 지정 된 테스트를 만족 하는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-105">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => boolean'
          description: '<span data-ttu-id="20974-106">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-106">A function that accepts up to three arguments.</span></span> <span data-ttu-id="20974-107">모든 메서드는 배열의 끝까지 또는 callbackfn를 false로 반환 될 때까지 array1에서 각 요소에 대 한 callbackfn 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-107">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="20974-108">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20974-108">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="20974-109">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-109">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.filter_1
    name: 'filter((value: CloudJob, index: number, array: CloudJob[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-110">콜백 함수에 지정 된 조건을 충족 하는 배열의 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-110">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => any'
          description: <span data-ttu-id="20974-111">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-111">A function that accepts up to three arguments.</span></span> <span data-ttu-id="20974-112">필터 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-112">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="20974-113">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20974-113">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="20974-114">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-114">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.filter
    name: 'filter((value: CloudJob, index: number, array: CloudJob[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-115">콜백 함수에 지정 된 조건을 충족 하는 배열의 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-115">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => boolean'
          description: <span data-ttu-id="20974-116">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-116">A function that accepts up to three arguments.</span></span> <span data-ttu-id="20974-117">필터 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-117">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="20974-118">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20974-118">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="20974-119">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-119">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.forEach
    name: 'forEach((value: CloudJob, index: number, array: CloudJob[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-120">배열의 각 요소에 대해 지정된 된 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-120">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => void'
          description: <span data-ttu-id="20974-121">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-121">A function that accepts up to three arguments.</span></span> <span data-ttu-id="20974-122">forEach 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-122">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="20974-123">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20974-123">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="20974-124">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-124">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.indexOf
    name: 'indexOf(CloudJob, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-125">배열에서 맨 처음 발견 되는 값의 인덱스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-125">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: CloudJob, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-batch.CloudJob
          description: <span data-ttu-id="20974-126">배열에서 찾을 값입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-126">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="20974-127">검색을 시작 하는 배열 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-127">The array index at which to begin the search.</span></span> <span data-ttu-id="20974-128">FromIndex가 생략 되 면 하는 경우 인덱스 0에 검색을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-128">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-129">지정 된 구분 기호 문자열로 구분 된 배열의 모든 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-129">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="20974-130">결과 문자열에 다음에서 배열의 한 요소를 구분 하는 데는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-130">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="20974-131">생략 하면 배열 요소를 쉼표로 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-131">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.lastIndexOf
    name: 'lastIndexOf(CloudJob, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-132">배열에 지정된 된 값 중 마지막 요소의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-132">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: CloudJob, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-batch.CloudJob
          description: <span data-ttu-id="20974-133">배열에서 찾을 값입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-133">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="20974-134">검색을 시작 하는 배열 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-134">The array index at which to begin the search.</span></span> <span data-ttu-id="20974-135">FromIndex가 생략 되 면 경우 배열의 마지막 인덱스 검색을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-135">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="20974-136">배열의 길이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-136">Gets or sets the length of the array.</span></span> <span data-ttu-id="20974-137">배열에 정의 된 요소의 최고값 보다 더 높은 수 단일입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-137">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.map
    name: 'map((value: CloudJob, index: number, array: CloudJob[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-138">배열의 각 요소에 대해 정의 된 콜백 함수를 호출 하 고 결과 포함 하는 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-138">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => U'
          description: <span data-ttu-id="20974-139">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-139">A function that accepts up to three arguments.</span></span> <span data-ttu-id="20974-140">Map 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-140">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="20974-141">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20974-141">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="20974-142">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-142">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.odatanextLink
    name: odatanextLink
    fullName: odatanextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'odatanextLink?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-143">배열에서 마지막 요소를 제거 하 고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-143">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-batch.CloudJob | undefined
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.push
    name: 'push(CloudJob[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-144">배열에 새 요소를 추가 하 고 배열의 새 길이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-144">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: CloudJob[])'
      parameters:
        - id: items
          type:
            - 'azure-batch.CloudJob[]'
          description: |
            <span data-ttu-id="20974-145">배열의 새 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-145">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduce
    name: 'reduce((previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-146">배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-146">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="20974-147">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-147">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob'
          description: <span data-ttu-id="20974-148">최대 4 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-148">A function that accepts up to four arguments.</span></span> <span data-ttu-id="20974-149">Reduce 메서드를 사용 하는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-149">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-batch.CloudJob
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduce_1
    name: 'reduce((previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob, CloudJob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-150">배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-150">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="20974-151">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-151">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob, initialValue: CloudJob)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob'
          description: ''
        - id: initialValue
          type:
            - azure-batch.CloudJob
          description: ''
      return:
        type:
          - azure-batch.CloudJob
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduce_2
    name: 'reduce((previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-152">배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-152">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="20974-153">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-153">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U'
          description: <span data-ttu-id="20974-154">최대 4 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-154">A function that accepts up to four arguments.</span></span> <span data-ttu-id="20974-155">Reduce 메서드를 사용 하는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-155">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="20974-156">InitialValue를 지정 하는 경우 초기 값으로 누적 시작에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-156">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="20974-157">첫 번째 호출은 callbackfn 함수에 인수로 배열 값 대신이 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-157">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduceRight
    name: 'reduceRight((previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-158">내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-158">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="20974-159">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-159">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob'
          description: <span data-ttu-id="20974-160">최대 4 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-160">A function that accepts up to four arguments.</span></span> <span data-ttu-id="20974-161">ReduceRight 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-161">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-batch.CloudJob
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduceRight_1
    name: 'reduceRight((previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob, CloudJob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-162">내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-162">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="20974-163">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-163">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob, initialValue: CloudJob)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob'
          description: ''
        - id: initialValue
          type:
            - azure-batch.CloudJob
          description: ''
      return:
        type:
          - azure-batch.CloudJob
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-164">내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-164">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="20974-165">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-165">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U'
          description: <span data-ttu-id="20974-166">최대 4 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-166">A function that accepts up to four arguments.</span></span> <span data-ttu-id="20974-167">ReduceRight 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-167">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="20974-168">InitialValue를 지정 하는 경우 초기 값으로 누적 시작에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-168">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="20974-169">첫 번째 호출은 callbackfn 함수에 인수로 배열 값 대신이 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-169">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-170">배열에서 요소를 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="20974-170">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-171">배열에서 첫 번째 요소를 제거 하 고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-171">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-batch.CloudJob | undefined
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-172">배열의 일정 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-172">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="20974-173">시작 배열의 지정된 된 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-173">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="20974-174">끝 배열의 지정된 된 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-174">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.some
    name: 'some((value: CloudJob, index: number, array: CloudJob[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-175">지정 된 콜백 함수를 배열의 모든 요소에 대해 true를 반환 하는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-175">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => boolean'
          description: '<span data-ttu-id="20974-176">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-176">A function that accepts up to three arguments.</span></span> <span data-ttu-id="20974-177">일부 메서드는 배열의 끝까지 또는 callbackfn를 true로 반환 될 때까지 array1에서 각 요소에 대해 callbackfn 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-177">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="20974-178">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20974-178">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="20974-179">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-179">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.sort
    name: 'sort((a: CloudJob, b: CloudJob) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-180">배열을 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-180">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: CloudJob, b: CloudJob) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: CloudJob, b: CloudJob) => number'
          description: |
            <span data-ttu-id="20974-181">요소의 순서를 결정 하는 데 사용 되는 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-181">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="20974-182">생략 하면 요소가 오름차순, ASCII 문자 순서로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-182">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-183">배열에서 요소를 제거 하 고 필요한 경우 새 요소를 삽입 그 자리에 삭제 된 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-183">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="20974-184">시작 요소를 제거 하는 배열의 0부터 시작 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-184">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="20974-185">제거할 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-185">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.splice_1
    name: 'splice(number, number, CloudJob[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="20974-186">배열에서 요소를 제거 하 고 필요한 경우 새 요소를 삽입 그 자리에 삭제 된 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-186">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: CloudJob[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="20974-187">시작 요소를 제거 하는 배열의 0부터 시작 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-187">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="20974-188">제거할 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-188">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-batch.CloudJob[]'
          description: |
            <span data-ttu-id="20974-189">삭제 된 요소 대신 배열에 삽입할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-189">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-190">배열의 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-190">Returns a string representation of an array.</span></span> <span data-ttu-id="20974-191">요소는 해당 toLocalString 메서드를 사용 하 여 문자열로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20974-191">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-192">배열의 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-192">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.unshift
    name: 'unshift(CloudJob[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="20974-193">배열의 시작에 새 요소를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="20974-193">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: CloudJob[])'
      parameters:
        - id: items
          type:
            - 'azure-batch.CloudJob[]'
          description: |
            <span data-ttu-id="20974-194">배열의 시작에 삽입할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="20974-194">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-batch
references:
  - uid: Array<azure-batch.CloudJob>
    name: CloudJob>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-batch.CloudJob>[]'
    name: 'CloudJob>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-batch.CloudJob[]'
    name: 'CloudJob[]'
    spec.typeScript:
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.CloudJob
    name: CloudJob
    spec.typeScript:
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
  - uid: azure-batch.CloudJob | undefined
    name: CloudJob | undefined
    spec.typeScript:
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
      - name: ' | undefined'
        fullName: ' | undefined'