### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobPreparationTask
    name: JobPreparationTask
    fullName: JobPreparationTask
    children:
      - azure-batch.JobPreparationTask.commandLine
      - azure-batch.JobPreparationTask.constraints
      - azure-batch.JobPreparationTask.containerSettings
      - azure-batch.JobPreparationTask.environmentSettings
      - azure-batch.JobPreparationTask.id
      - azure-batch.JobPreparationTask.rerunOnNodeRebootAfterSuccess
      - azure-batch.JobPreparationTask.resourceFiles
      - azure-batch.JobPreparationTask.userIdentity
      - azure-batch.JobPreparationTask.waitForSuccess
    langs:
      - typeScript
    type: interface
    summary: '<span data-ttu-id="e4fe8-101">작업에 대 한 작업을 실행 하는 노드 준비 작업 준비를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-101">You can use Job Preparation to prepare a Node to run Tasks for the Job.</span></span> <span data-ttu-id="e4fe8-102">작업 준비에서 일반적으로 수행 하는 활동이 포함 됩니다. 작업의 모든 태스크에서 사용 하는 공용 리소스 파일을 다운로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-102">Activities commonly performed in Job Preparation include: Downloading common resource files used by all the Tasks in the Job.</span></span> <span data-ttu-id="e4fe8-103">작업 준비 태스크는 노드에서 공유 위치로 이러한 공용 리소스 파일을 다운로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-103">The Job Preparation Task can download these common resource files to the shared location on the Node.</span></span> <span data-ttu-id="e4fe8-104">(AZ_BATCH_NODE_ROOT_DIR\shared) 또는 해당 작업의 모든 태스크에서 통신할 수 있도록 노드에서 로컬 서비스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-104">(AZ_BATCH_NODE_ROOT_DIR\shared), or starting a local service on the Node so that all Tasks of that Job can communicate with it.</span></span> <span data-ttu-id="e4fe8-105">노드에서이 작업의 작업을 실행 되지 않습니다 (즉, exhausts 종료 코드 0으로 종료 하기 전에 해당 재시도 횟수), 작업 준비 태스크 실패에 일괄 처리 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-105">If the Job Preparation Task fails (that is, exhausts its retry count before exiting with exit code 0), Batch will not run Tasks of this Job on the Node.</span></span> <span data-ttu-id="e4fe8-106">Compute 노드를 이미지로 다시 설치 될 때까지이 작업의 작업을 실행 하려면 부적격 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-106">The Compute Node remains ineligible to run Tasks of this Job until it is reimaged.</span></span> <span data-ttu-id="e4fe8-107">Compute 노드는 활성 상태로 유지 되며 다른 작업에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-107">The Compute Node remains active and can be used for other Jobs.</span></span> <span data-ttu-id="e4fe8-108">작업 준비 태스크가 동일한 노드에서 여러 번 실행 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-108">The Job Preparation Task can run multiple times on the same Node.</span></span> <span data-ttu-id="e4fe8-109">따라서 작업 준비 태스크가 다시 실행을 처리 하도록 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-109">Therefore, you should write the Job Preparation Task to handle re-execution.</span></span> <span data-ttu-id="e4fe8-110">노드 다시 부팅 하는 경우 작업 준비 태스크가 다시 실행 됩니다 계산 노드에서 작업 준비 태스크 이전에 완료 되지 않은 경우 또는 rerunOnNodeRebootAfterSuccess 참인 경우 작업의 다른 작업을 예약 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-110">If the Node is rebooted, the Job Preparation Task is run again on the Compute Node before scheduling any other Task of the Job, if rerunOnNodeRebootAfterSuccess is true or if the Job Preparation Task did not previously complete.</span></span> <span data-ttu-id="e4fe8-111">노드, 이미지로 다시 설치 하는 경우에 작업 준비 태스크 작업의 모든 작업을 예약 하기 전에 다시 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-111">If the Node is reimaged, the Job Preparation Task is run again before scheduling any Task of the Job.</span></span> <span data-ttu-id="e4fe8-112">일괄 처리 노드에서 복구 작업이 트리거될 때 작업을 다시 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-112">Batch will retry Tasks when a recovery operation is triggered on a Node.</span></span> <span data-ttu-id="e4fe8-113">포함 (하지만에 제한 되지 않습니다)의 복구 작업이 경우에서 비정상 노드를 다시 부팅 하거나 계산 노드 호스트 오류로 인해 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-113">Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure.</span></span> <span data-ttu-id="e4fe8-114">복구 작업은 독립적 이며 된 maxTaskRetryCount에 대해 계산 되지 않습니다 인해 다시 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-114">Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount.</span></span> <span data-ttu-id="e4fe8-115">된 maxTaskRetryCount 0 인 경우에 내부는 재시도 복구 작업으로 인해 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-115">Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur.</span></span> <span data-ttu-id="e4fe8-116">이 인해 모든 작업이 멱 등 원 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-116">Because of this, all Tasks should be idempotent.</span></span> <span data-ttu-id="e4fe8-117">즉, 작업을 중단 되 고 중복 된 데이터 나 손상 없이 다시 시작을 허용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-117">This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data.</span></span> <span data-ttu-id="e4fe8-118">최상의 일종의 검사점을 사용 하는 장기 실행 작업에 대 한 연습입니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-118">The best practice for long running Tasks is to use some form of checkpointing.</span></span>'
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.commandLine
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e4fe8-119">명령줄 셸에서 실행 되지 않으며 따라서 환경 변수 확장과 같은 셸 기능을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-119">The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion.</span></span> <span data-ttu-id="e4fe8-120">이러한 기능을 활용 하려는 경우를 호출 해야 명령줄에서 셸을 예를 들어 "cmd /c MyCommand"를 사용 하 여 Windows에서 또는 "/ bin/sh-c MyCommand" Linux에서.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-120">If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.</span></span> <span data-ttu-id="e4fe8-121">명령줄 파일 경로 가리키는 경우 (태스크 작업 디렉터리의 상대), 상대 경로 사용 하 또는 일괄 처리 제공 된 환경 변수를 사용 해야 합니다 (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-121">If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).</span></span>'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.constraints
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'constraints?: TaskConstraints'
      return:
        type:
          - azure-batch.TaskConstraints
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.containerSettings
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e4fe8-122">이 옵션을 지정 하는 경우 AZ_BATCH_NODE_ROOT_DIR (노드에서 Azure Batch 디렉터리의 루트) 아래의 모든 디렉터리가 재귀적으로 컨테이너에 매핑되고, 모든 작업 환경 변수가 컨테이너에 매핑되고 및 태스크 명령줄은 컨테이너에서 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-122">When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container.</span></span> <span data-ttu-id="e4fe8-123">AZ_BATCH_NODE_ROOT_DIR 외부 컨테이너에서 생성 된 파일 배치 파일 Api는 해당 파일에 액세스할 수 없습니다 즉 호스트 디스크에 반영 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-123">Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.</span></span>'
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - azure-batch.TaskContainerSettings
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.environmentSettings
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - 'azure-batch.EnvironmentSetting[]'
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e4fe8-124">ID는 하이픈 및 밑줄만 포함 하는 영숫자 문자 조합을 포함할 수 있습니다 및 64 개 이상의 문자를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-124">The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.</span></span> <span data-ttu-id="e4fe8-125">이 속성을 지정 하지 않는 경우 기본값은 ''jobpreparation'' Batch 서비스에 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-125">If you do not specify this property, the Batch service assigns a default value of ''jobpreparation''.</span></span> <span data-ttu-id="e4fe8-126">작업에서 다른 작업이 동일한 ID로 작업 준비 태스크가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-126">No other Task in the Job can have the same ID as the Job Preparation Task.</span></span> <span data-ttu-id="e4fe8-127">Batch 서비스에서 동일한 id 사용 하 여 작업을 제출 하면 TaskIdSameAsJobPreparationTask; 오류 코드로 요청을 거부 REST API를 직접 호출 된 경우 HTTP 상태 코드 409 (충돌) 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-127">If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobPreparationTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict).</span></span>'
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.rerunOnNodeRebootAfterSuccess
    name: rerunOnNodeRebootAfterSuccess
    fullName: rerunOnNodeRebootAfterSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e4fe8-128">작업 준비 태스크는 계산 노드, 이미지로 다시 설치 하는 경우 또는 작업 준비 태스크가 완료 되지 않은 경우 항상 다시 실행 됩니다 (예: 다시 부팅 작업을 실행 하는 동안 발생).</span><span class="sxs-lookup"><span data-stu-id="e4fe8-128">The Job Preparation Task is always rerun if a Compute Node is reimaged, or if the Job Preparation Task did not complete (e.g. because the reboot occurred while the Task was running).</span></span> <span data-ttu-id="e4fe8-129">따라서 작업 준비 태스크 idempotent를 여러 번 실행 하는 경우 올바르게 동작 하려면 항상 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-129">Therefore, you should always write a Job Preparation Task to be idempotent and to behave correctly if run multiple times.</span></span> <span data-ttu-id="e4fe8-130">기본값은 true입니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-130">The default value is true.</span></span>'
    optional: true
    syntax:
      content: 'rerunOnNodeRebootAfterSuccess?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.resourceFiles
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="e4fe8-131">이 요소 아래에 나열 된 파일 작업의 작업 디렉터리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-131">Files listed under this element are located in the Task's working directory.</span></span>
      <span data-ttu-id="e4fe8-132">리소스 파일의 목록에 대 한 최대 크기가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-132">There is a maximum size for the list of resource files.</span></span>  <span data-ttu-id="e4fe8-133">최대 크기를 초과 하면 요청이 실패 하 고 응답 오류 코드는 RequestEntityTooLarge 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-133">When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge.</span></span> <span data-ttu-id="e4fe8-134">이런 경우의 ResourceFiles 컬렉션 크기가 줄여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-134">If this occurs, the collection of ResourceFiles must be reduced in size.</span></span> <span data-ttu-id="e4fe8-135">.Zip 파일, 응용 프로그램 패키지 또는 Docker 컨테이너를 사용 하 여 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-135">This can be achieved using .zip files, Application Packages, or Docker Containers.</span></span>
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - 'azure-batch.ResourceFile[]'
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.userIdentity
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e4fe8-136">생략 하면 작업이 Windows 계산 노드를 작업에 고유한 비관리자 사용자 또는 Linux 계산 노드의 풀에 고유한 관리자가 아닌 사용자로 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-136">If omitted, the Task runs as a non-administrative user unique to the Task on Windows Compute Nodes, or a non-administrative user unique to the Pool on Linux Compute Nodes.</span></span>'
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - azure-batch.UserIdentity
    package: azure-batch
  - uid: azure-batch.JobPreparationTask.waitForSuccess
    name: waitForSuccess
    fullName: waitForSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e4fe8-137">경우 true이 고 노드에서 작업 준비 태스크 실패, 작업 준비 태스크는 최대 다시 시도 최대 일괄 처리 서비스 재시도 계산 (제약 조건 요소에 지정 된).</span><span class="sxs-lookup"><span data-stu-id="e4fe8-137">If true and the Job Preparation Task fails on a Node, the Batch service retries the Job Preparation Task up to its maximum retry count (as specified in the constraints element).</span></span> <span data-ttu-id="e4fe8-138">작업이 아직 완료 되지 않은 경우 성공적으로 모든 재시도 후 다음 Batch 서비스는 노드 작업의 작업을 예약 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-138">If the Task has still not completed successfully after all retries, then the Batch service will not schedule Tasks of the Job to the Node.</span></span> <span data-ttu-id="e4fe8-139">노드는 활성 및 적격 다른 작업의 작업을 실행 하려면 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-139">The Node remains active and eligible to run Tasks of other Jobs.</span></span> <span data-ttu-id="e4fe8-140">False 인 경우, Batch 서비스 작업 준비 태스크가 완료를 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-140">If false, the Batch service will not wait for the Job Preparation Task to complete.</span></span> <span data-ttu-id="e4fe8-141">이 경우 작업 준비 태스크 실행; 중 계산 노드에서 실행 작업의 다른 작업을 시작 수 있습니다. 및 작업 준비 태스크에 실패 한 경우에 새 작업 계속 계산 노드에서 예약 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-141">In this case, other Tasks of the Job can start executing on the Compute Node while the Job Preparation Task is still running; and even if the Job Preparation Task fails, new Tasks will continue to be scheduled on the Compute Node.</span></span> <span data-ttu-id="e4fe8-142">기본값은 true입니다.</span><span class="sxs-lookup"><span data-stu-id="e4fe8-142">The default value is true.</span></span>'
    optional: true
    syntax:
      content: 'waitForSuccess?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
references:
  - uid: azure-batch.TaskConstraints
    name: TaskConstraints
    spec.typeScript:
      - name: TaskConstraints
        fullName: TaskConstraints
        uid: azure-batch.TaskConstraints
  - uid: azure-batch.TaskContainerSettings
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: azure-batch.TaskContainerSettings
  - uid: 'azure-batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: azure-batch.EnvironmentSetting
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: azure-batch.ResourceFile
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.UserIdentity
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: azure-batch.UserIdentity