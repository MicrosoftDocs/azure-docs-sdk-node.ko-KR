### YamlMime:UniversalReference
ms.openlocfilehash: 9a1aa5237f77596ed3e19c3407d985d470abd257
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52069278"
items:
- uid: azure-arm-apimanagement.ApiIssueComment
  name: ApiIssueComment
  fullName: ApiIssueComment
  children:
  - azure-arm-apimanagement.ApiIssueComment.createOrUpdate
  - azure-arm-apimanagement.ApiIssueComment.createOrUpdate_2
  - azure-arm-apimanagement.ApiIssueComment.createOrUpdate_1
  - azure-arm-apimanagement.ApiIssueComment.createOrUpdateWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssueComment.deleteMethod
  - azure-arm-apimanagement.ApiIssueComment.deleteMethod_2
  - azure-arm-apimanagement.ApiIssueComment.deleteMethod_1
  - azure-arm-apimanagement.ApiIssueComment.deleteMethodWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssueComment.get
  - azure-arm-apimanagement.ApiIssueComment.get_2
  - azure-arm-apimanagement.ApiIssueComment.get_1
  - azure-arm-apimanagement.ApiIssueComment.getEntityTag
  - azure-arm-apimanagement.ApiIssueComment.getEntityTag_2
  - azure-arm-apimanagement.ApiIssueComment.getEntityTag_1
  - azure-arm-apimanagement.ApiIssueComment.getEntityTagWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssueComment.getWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssueComment.listByService
  - azure-arm-apimanagement.ApiIssueComment.listByService_2
  - azure-arm-apimanagement.ApiIssueComment.listByService_1
  - azure-arm-apimanagement.ApiIssueComment.listByServiceNext
  - azure-arm-apimanagement.ApiIssueComment.listByServiceNext_2
  - azure-arm-apimanagement.ApiIssueComment.listByServiceNext_1
  - azure-arm-apimanagement.ApiIssueComment.listByServiceNextWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssueComment.listByServiceWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.createOrUpdate
  name: createOrUpdate(string, string, string, string, string, IssueCommentContract, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: API 문제에 대 한 새 메모를를 만들거나 기존 계정을 업데이트 합니다.
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, parameters: IssueCommentContract, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: commentId
      type:
      - string
      description: >
        내 문제 주석 식별자입니다. 현재 내용에서 고유 해야 합니다.
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueCommentContract
      description: >
        매개 변수를 만듭니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.createOrUpdate_2
  name: createOrUpdate(string, string, string, string, string, IssueCommentContract, Object, ServiceCallback<IssueCommentContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: API 문제에 대 한 새 메모를를 만들거나 기존 계정을 업데이트 합니다.
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, parameters: IssueCommentContract, options: Object, callback: ServiceCallback<IssueCommentContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: commentId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueCommentContract
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCommentContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.createOrUpdate_1
  name: createOrUpdate(string, string, string, string, string, IssueCommentContract, ServiceCallback<IssueCommentContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: API 문제에 대 한 새 메모를를 만들거나 기존 계정을 업데이트 합니다.
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, parameters: IssueCommentContract, callback: ServiceCallback<IssueCommentContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: commentId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueCommentContract
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCommentContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse(string, string, string, string, string, IssueCommentContract, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: API 문제에 대 한 새 메모를를 만들거나 기존 계정을 업데이트 합니다.
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, parameters: IssueCommentContract, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: commentId
      type:
      - string
      description: >
        내 문제 주석 식별자입니다. 현재 내용에서 고유 해야 합니다.
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueCommentContract
      description: >
        매개 변수를 만듭니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCommentContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.deleteMethod
  name: deleteMethod(string, string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 문제에서 지정 된 주석을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: commentId
      type:
      - string
      description: >
        내 문제 주석 식별자입니다. 현재 내용에서 고유 해야 합니다.
    - id: ifMatch
      type:
      - string
      description: >
        문제 엔터티의 ETag입니다. ETag에는 GET 요청의 헤더 응답에서 현재 엔터티 상태와 일치 해야 합니다 또는 해야 * 무조건 업데이트에 대 한 합니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.deleteMethod_2
  name: deleteMethod(string, string, string, string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 문제에서 지정 된 주석을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, ifMatch: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: commentId
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.deleteMethod_1
  name: deleteMethod(string, string, string, string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 문제에서 지정 된 주석을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, ifMatch: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: commentId
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 문제에서 지정 된 주석을 삭제합니다.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: commentId
      type:
      - string
      description: >
        내 문제 주석 식별자입니다. 현재 내용에서 고유 해야 합니다.
    - id: ifMatch
      type:
      - string
      description: >
        문제 엔터티의 ETag입니다. ETag에는 GET 요청의 헤더 응답에서 현재 엔터티 상태와 일치 해야 합니다 또는 해야 * 무조건 업데이트에 대 한 합니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.get
  name: get(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 해당 id에서 지정한 API에 대 한 설명 문제의 세부 정보를 가져옵니다.
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: commentId
      type:
      - string
      description: >
        내 문제 주석 식별자입니다. 현재 내용에서 고유 해야 합니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.get_2
  name: get(string, string, string, string, string, Object, ServiceCallback<IssueCommentContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 해당 id에서 지정한 API에 대 한 설명 문제의 세부 정보를 가져옵니다.
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, options: Object, callback: ServiceCallback<IssueCommentContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: commentId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCommentContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.get_1
  name: get(string, string, string, string, string, ServiceCallback<IssueCommentContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 해당 id에서 지정한 API에 대 한 설명 문제의 세부 정보를 가져옵니다.
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, callback: ServiceCallback<IssueCommentContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: commentId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCommentContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.getEntityTag
  name: getEntityTag(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 해당 id에서 지정한 API에 대 한 설명 문제의 엔터티 상태 (Etag) 버전을 가져옵니다.
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: commentId
      type:
      - string
      description: >
        내 문제 주석 식별자입니다. 현재 내용에서 고유 해야 합니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.getEntityTag_2
  name: getEntityTag(string, string, string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 해당 id에서 지정한 API에 대 한 설명 문제의 엔터티 상태 (Etag) 버전을 가져옵니다.
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: commentId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.getEntityTag_1
  name: getEntityTag(string, string, string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 해당 id에서 지정한 API에 대 한 설명 문제의 엔터티 상태 (Etag) 버전을 가져옵니다.
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: commentId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.getEntityTagWithHttpOperationResponse
  name: getEntityTagWithHttpOperationResponse(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 해당 id에서 지정한 API에 대 한 설명 문제의 엔터티 상태 (Etag) 버전을 가져옵니다.
  syntax:
    content: 'function getEntityTagWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: commentId
      type:
      - string
      description: >
        내 문제 주석 식별자입니다. 현재 내용에서 고유 해야 합니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 해당 id에서 지정한 API에 대 한 설명 문제의 세부 정보를 가져옵니다.
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, commentId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: commentId
      type:
      - string
      description: >
        내 문제 주석 식별자입니다. 현재 내용에서 고유 해야 합니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCommentContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.listByService
  name: listByService(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 API 사용 하 여 문제 assosiated 모든 메모를 나열합니다.
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.listByService_2
  name: listByService(string, string, string, string, Object, ServiceCallback<IssueCommentCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 API 사용 하 여 문제 assosiated 모든 메모를 나열합니다.
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options: Object, callback: ServiceCallback<IssueCommentCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCommentCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.listByService_1
  name: listByService(string, string, string, string, ServiceCallback<IssueCommentCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 API 사용 하 여 문제 assosiated 모든 메모를 나열합니다.
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, callback: ServiceCallback<IssueCommentCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCommentCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.listByServiceNext
  name: listByServiceNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 API 사용 하 여 문제 assosiated 모든 메모를 나열합니다.
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        목록 작업에 성공적으로 이전 호출의 NextLink입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.listByServiceNext_2
  name: listByServiceNext(string, Object, ServiceCallback<IssueCommentCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 API 사용 하 여 문제 assosiated 모든 메모를 나열합니다.
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options: Object, callback: ServiceCallback<IssueCommentCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCommentCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.listByServiceNext_1
  name: listByServiceNext(string, ServiceCallback<IssueCommentCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 API 사용 하 여 문제 assosiated 모든 메모를 나열합니다.
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<IssueCommentCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCommentCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCommentCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.listByServiceNextWithHttpOperationResponse
  name: listByServiceNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 API 사용 하 여 문제 assosiated 모든 메모를 나열합니다.
  syntax:
    content: 'function listByServiceNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        목록 작업에 성공적으로 이전 호출의 NextLink입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCommentCollection>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssueComment.listByServiceWithHttpOperationResponse
  name: listByServiceWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 API 사용 하 여 문제 assosiated 모든 메모를 나열합니다.
  syntax:
    content: 'function listByServiceWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: apiId
      type:
      - string
      description: >
        API id입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: issueId
      type:
      - string
      description: >
        식별자를 발급 합니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCommentCollection>>
  package: azure-arm-apimanagement
references:
- uid: azure-arm-apimanagement.IssueCommentContract
  name: IssueCommentContract
  spec.typeScript:
  - name: IssueCommentContract
    fullName: IssueCommentContract
    uid: azure-arm-apimanagement.IssueCommentContract
- uid: Promise<azure-arm-apimanagement.IssueCommentContract>
  name: IssueCommentContract>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: IssueCommentContract
    fullName: IssueCommentContract
    uid: azure-arm-apimanagement.IssueCommentContract
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.IssueCommentContract>
  name: IssueCommentContract>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: IssueCommentContract
    fullName: IssueCommentContract
    uid: azure-arm-apimanagement.IssueCommentContract
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCommentContract>>
  name: IssueCommentContract>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: IssueCommentContract
    fullName: IssueCommentContract
    uid: azure-arm-apimanagement.IssueCommentContract
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-apimanagement.IssueCommentCollection>
  name: IssueCommentCollection>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: IssueCommentCollection
    fullName: IssueCommentCollection
    uid: azure-arm-apimanagement.IssueCommentCollection
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.IssueCommentCollection>
  name: IssueCommentCollection>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: IssueCommentCollection
    fullName: IssueCommentCollection
    uid: azure-arm-apimanagement.IssueCommentCollection
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCommentCollection>>
  name: IssueCommentCollection>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: IssueCommentCollection
    fullName: IssueCommentCollection
    uid: azure-arm-apimanagement.IssueCommentCollection
  - name: '>>'
    fullName: '>>'
