### YamlMime:UniversalReference
ms.openlocfilehash: 7f1cdf74f0df765031b9a22ed13ae79fcca2d601
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40066708"
items:
- uid: azure-arm-apimanagement.DiagnosticLogger
  name: DiagnosticLogger
  fullName: DiagnosticLogger
  children:
  - azure-arm-apimanagement.DiagnosticLogger.checkEntityExists
  - azure-arm-apimanagement.DiagnosticLogger.checkEntityExists_2
  - azure-arm-apimanagement.DiagnosticLogger.checkEntityExists_1
  - azure-arm-apimanagement.DiagnosticLogger.checkEntityExistsWithHttpOperationResponse
  - azure-arm-apimanagement.DiagnosticLogger.createOrUpdate
  - azure-arm-apimanagement.DiagnosticLogger.createOrUpdate_1
  - azure-arm-apimanagement.DiagnosticLogger.createOrUpdate_2
  - azure-arm-apimanagement.DiagnosticLogger.createOrUpdateWithHttpOperationResponse
  - azure-arm-apimanagement.DiagnosticLogger.deleteMethod
  - azure-arm-apimanagement.DiagnosticLogger.deleteMethod_1
  - azure-arm-apimanagement.DiagnosticLogger.deleteMethod_2
  - azure-arm-apimanagement.DiagnosticLogger.deleteMethodWithHttpOperationResponse
  - azure-arm-apimanagement.DiagnosticLogger.listByService
  - azure-arm-apimanagement.DiagnosticLogger.listByService_1
  - azure-arm-apimanagement.DiagnosticLogger.listByService_2
  - azure-arm-apimanagement.DiagnosticLogger.listByServiceNext
  - azure-arm-apimanagement.DiagnosticLogger.listByServiceNext_1
  - azure-arm-apimanagement.DiagnosticLogger.listByServiceNext_2
  - azure-arm-apimanagement.DiagnosticLogger.listByServiceNextWithHttpOperationResponse
  - azure-arm-apimanagement.DiagnosticLogger.listByServiceWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.checkEntityExists
  name: checkEntityExists
  children: []
  type: method
  langs:
  - typeScript
  summary: 식별자 별로 지정 된로 거 엔터티가 진단 엔터티와 연결 인지 확인 합니다.
  syntax:
    content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: diagnosticId
      type:
      - string
      description: >
        진단 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: loggerid
      type:
      - string
      description: >
        로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<boolean>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.checkEntityExists_2
  name: checkEntityExists
  children: []
  type: method
  langs:
  - typeScript
  summary: 식별자 별로 지정 된로 거 엔터티가 진단 엔터티와 연결 인지 확인 합니다.
  syntax:
    content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options: function, callback: ServiceCallback<boolean>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: diagnosticId
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<boolean>
      description: ''
    return:
      type:
      - Promise<boolean>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.checkEntityExists_1
  name: checkEntityExists
  children: []
  type: method
  langs:
  - typeScript
  summary: 식별자 별로 지정 된로 거 엔터티가 진단 엔터티와 연결 인지 확인 합니다.
  syntax:
    content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, callback: ServiceCallback<boolean>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: diagnosticId
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<boolean>
      description: ''
    return:
      type:
      - Promise<boolean>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.checkEntityExistsWithHttpOperationResponse
  name: checkEntityExistsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 식별자 별로 지정 된로 거 엔터티가 진단 엔터티와 연결 인지 확인 합니다.
  syntax:
    content: 'function checkEntityExistsWithHttpOperationResponse(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: diagnosticId
      type:
      - string
      description: >
        진단 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: loggerid
      type:
      - string
      description: >
        로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<boolean>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.createOrUpdate
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: dignostic에로 거를 연결합니다.
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: diagnosticId
      type:
      - string
      description: >
        진단 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: loggerid
      type:
      - string
      description: >
        로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.createOrUpdate_1
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: dignostic에로 거를 연결합니다.
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: diagnosticId
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.createOrUpdate_2
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: dignostic에로 거를 연결합니다.
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options: function, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: diagnosticId
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: dignostic에로 거를 연결합니다.
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: diagnosticId
      type:
      - string
      description: >
        진단 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: loggerid
      type:
      - string
      description: >
        로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 진단에서 지정된 된로 거를 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: diagnosticId
      type:
      - string
      description: >
        진단 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: loggerid
      type:
      - string
      description: >
        로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 진단에서 지정된 된로 거를 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: diagnosticId
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 진단에서 지정된 된로 거를 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: diagnosticId
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 진단에서 지정된 된로 거를 삭제합니다.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, serviceName: string, diagnosticId: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: diagnosticId
      type:
      - string
      description: >
        진단 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: loggerid
      type:
      - string
      description: >
        로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.listByService
  name: listByService
  children: []
  type: method
  langs:
  - typeScript
  summary: API Management 서비스 인스턴스의 지정 된 진단 사용 하 여 모든로 거 assosiated를 나열합니다.
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, diagnosticId: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: diagnosticId
      type:
      - string
      description: >
        진단 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.listByService_1
  name: listByService
  children: []
  type: method
  langs:
  - typeScript
  summary: API Management 서비스 인스턴스의 지정 된 진단 사용 하 여 모든로 거 assosiated를 나열합니다.
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, diagnosticId: string, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: diagnosticId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.listByService_2
  name: listByService
  children: []
  type: method
  langs:
  - typeScript
  summary: API Management 서비스 인스턴스의 지정 된 진단 사용 하 여 모든로 거 assosiated를 나열합니다.
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, diagnosticId: string, options: function, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: diagnosticId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.listByServiceNext
  name: listByServiceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: API Management 서비스 인스턴스의 지정 된 진단 사용 하 여 모든로 거 assosiated를 나열합니다.
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        목록 작업에 성공적으로 이전 호출의 NextLink입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.listByServiceNext_1
  name: listByServiceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: API Management 서비스 인스턴스의 지정 된 진단 사용 하 여 모든로 거 assosiated를 나열합니다.
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.listByServiceNext_2
  name: listByServiceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: API Management 서비스 인스턴스의 지정 된 진단 사용 하 여 모든로 거 assosiated를 나열합니다.
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options: function, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.listByServiceNextWithHttpOperationResponse
  name: listByServiceNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: API Management 서비스 인스턴스의 지정 된 진단 사용 하 여 모든로 거 assosiated를 나열합니다.
  syntax:
    content: 'function listByServiceNextWithHttpOperationResponse(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        목록 작업에 성공적으로 이전 호출의 NextLink입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.DiagnosticLogger.listByServiceWithHttpOperationResponse
  name: listByServiceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: API Management 서비스 인스턴스의 지정 된 진단 사용 하 여 모든로 거 assosiated를 나열합니다.
  syntax:
    content: 'function listByServiceWithHttpOperationResponse(resourceGroupName: string, serviceName: string, diagnosticId: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        리소스 그룹의 이름.
    - id: serviceName
      type:
      - string
      description: >
        API Management 서비스의 이름입니다.
    - id: diagnosticId
      type:
      - string
      description: >
        진단 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  package: azure-arm-apimanagement
references:
- uid: Promise<azure-arm-apimanagement.LoggerContract>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.LoggerContract>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-apimanagement.LoggerCollection>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.LoggerCollection>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>>'
    fullName: '>>'
