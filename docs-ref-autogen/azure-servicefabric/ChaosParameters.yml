### YamlMime:UniversalReference
ms.openlocfilehash: ab15ed7cbbeacca663fe05ea36bf237ea7258053
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52035488"
items:
- uid: azure-servicefabric.ChaosParameters
  name: ChaosParameters
  fullName: ChaosParameters
  children:
  - azure-servicefabric.ChaosParameters.chaosTargetFilter
  - azure-servicefabric.ChaosParameters.clusterHealthPolicy
  - azure-servicefabric.ChaosParameters.context
  - azure-servicefabric.ChaosParameters.enableMoveReplicaFaults
  - azure-servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds
  - azure-servicefabric.ChaosParameters.maxConcurrentFaults
  - azure-servicefabric.ChaosParameters.timeToRunInSeconds
  - azure-servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds
  - azure-servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds
  langs:
  - typeScript
  type: interface
  summary: 비정상 상황 실행을 구성 하는 모든 매개 변수를 정의 합니다.
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.chaosTargetFilter
  name: chaosTargetFilter
  fullName: chaosTargetFilter
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    비정상 상황 오류에 대 한 대상 클러스터 엔터티 목록입니다.

    이 필터는 특정 노드 형식에만 또는 특정 응용 프로그램 인스턴스에서만 대상 비정상 상황 오류에 사용할 수 있습니다. ChaosTargetFilter를 사용하지 않으면 비정상 상황으로 인해 모든 클러스터 엔터티에 오류가 발생합니다.

    ChaosTargetFilter를 사용하면 비정상 상황으로 인해 Chaos ChaosTargetFilter 사양을 충족하는 엔터티에만 오류가 발생합니다.
  optional: true
  syntax:
    content: 'chaosTargetFilter?: ChaosTargetFilter'
    return:
      type:
      - azure-servicefabric.ChaosTargetFilter
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.clusterHealthPolicy
  name: clusterHealthPolicy
  fullName: clusterHealthPolicy
  children: []
  langs:
  - typeScript
  type: property
  summary: 비정상 상황 반복 간에 클러스터의 상태를 확인 하려면 전달 된 클러스터 상태 정책이 사용 됩니다. 클러스터 상태 오류가 있거나 오류 실행 중 예기치 않은 예외가 발생 하는 경우 약간의 시간이 상황은-를 사용 하 여 클러스터를 제공 하 Chaos는 30 분 정도 기다려야 다음 상태 검사 합니다.
  optional: true
  syntax:
    content: 'clusterHealthPolicy?: ClusterHealthPolicy'
    return:
      type:
      - azure-servicefabric.ClusterHealthPolicy
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.context
  name: context
  fullName: context
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    설명 (문자열, 문자열)의 컬렉션인 맵을 키-값 쌍을 입력 합니다. 비정상 상황 실행에 대한 정보를 기록하기 위해 맵이 사용될 수 있습니다. 이러한 쌍은 100개 이하로만 존재할 수 있으며 각 문자열(키 또는 값)은 4095자 이하로만 설정할 수 있습니다.

    비정상 상황 실행 시작 기능이 특정 실행에 대한 컨텍스트를 선택적으로 저장할 수 있게 이러한 맵을 설정합니다.
  optional: true
  syntax:
    content: 'context?: ChaosContext'
    return:
      type:
      - azure-servicefabric.ChaosContext
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.enableMoveReplicaFaults
  name: enableMoveReplicaFaults
  fullName: enableMoveReplicaFaults
  children: []
  langs:
  - typeScript
  type: property
  summary: 사용 하도록 설정 하거나 기본 이동을 사용 하지 않도록 설정 하 고 보조 오류를 이동 합니다.
  optional: true
  syntax:
    content: 'enableMoveReplicaFaults?: boolean'
    return:
      type:
      - boolean
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds
  name: maxClusterStabilizationTimeoutInSeconds
  fullName: maxClusterStabilizationTimeoutInSeconds
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    모든 클러스터 엔티티가 안정적이고 정상화가 될 때까지 기다리는 최대 시간입니다.

    Chaos가 반복적으로 실행되고 각 반복 시작 시 클러스터 엔터티의 상태에 대해 유효성을 검사합니다.

    유효성을 검사하는 동안 클러스터 엔터티가 MaxClusterStabilizationTimeoutInSeconds 내에서 불안정하거나 정상적이지 않으면 Chaos가 유효성 검사 오류 이벤트를 생성합니다.
  optional: true
  syntax:
    content: 'maxClusterStabilizationTimeoutInSeconds?: number'
    return:
      type:
      - number
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.maxConcurrentFaults
  name: maxConcurrentFaults
  fullName: maxConcurrentFaults
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    MaxConcurrentFaults에 반복 당 유도 되는 동시 오류의 최대 수입니다.

    Chaos가 반복적으로 실행되고 두 번의 연속적인 반복은 유효성 검사 단계에 의해 구분됩니다.

    동시성이 높을수록, 복잡할수록 오류의 버그를 파악 하기 더 복잡 한 일련의 상태를 유도 하려면 앞에 삽입 합니다.

    2 또는 3 값으로 시작하고 이동하는 동안 주의하는 것이 좋습니다.
  optional: true
  syntax:
    content: 'maxConcurrentFaults?: number'
    return:
      type:
      - number
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.timeToRunInSeconds
  name: timeToRunInSeconds
  fullName: timeToRunInSeconds
  children: []
  langs:
  - typeScript
  type: property
  summary: Chaos가 자동으로 중지되기 전에 실행되는 총 시간(초)입니다. 최대 허용된 값은 4294967295(System.UInt32.MaxValue)입니다.
  optional: true
  syntax:
    content: 'timeToRunInSeconds?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds
  name: waitTimeBetweenFaultsInSeconds
  fullName: waitTimeBetweenFaultsInSeconds
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    단일 반복 내에서 연속 오류 사이의 대기 시간(초)입니다.

    값이 클수록 오류 간 겹침은 적어지며 클러스터가 통과하는 상태 전환의 시퀀스는 더 단순해집니다.

    1 ~ 5 사이 값으로 시작하고 이동하는 동안 주의하는 것이 좋습니다.
  optional: true
  syntax:
    content: 'waitTimeBetweenFaultsInSeconds?: number'
    return:
      type:
      - number
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds
  name: waitTimeBetweenIterationsInSeconds
  fullName: waitTimeBetweenIterationsInSeconds
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    두 차례의 Chaos 연속 반복 간 시간-구분(초)입니다.

    값이 높을수록 오류 삽입 속도는 낮아집니다.
  optional: true
  syntax:
    content: 'waitTimeBetweenIterationsInSeconds?: number'
    return:
      type:
      - number
  package: azure-servicefabric
references:
- uid: azure-servicefabric.ChaosTargetFilter
  name: ChaosTargetFilter
  spec.typeScript:
  - name: ChaosTargetFilter
    fullName: ChaosTargetFilter
    uid: azure-servicefabric.ChaosTargetFilter
- uid: azure-servicefabric.ClusterHealthPolicy
  name: ClusterHealthPolicy
  spec.typeScript:
  - name: ClusterHealthPolicy
    fullName: ClusterHealthPolicy
    uid: azure-servicefabric.ClusterHealthPolicy
- uid: azure-servicefabric.ChaosContext
  name: ChaosContext
  spec.typeScript:
  - name: ChaosContext
    fullName: ChaosContext
    uid: azure-servicefabric.ChaosContext
