### YamlMime:UniversalReference
items:
  - uid: azure-servicefabric.ServiceFabricClient
    name: ServiceFabricClient
    fullName: ServiceFabricClient
    children:
      - azure-servicefabric.ServiceFabricClient.addUserAgentInfo
      - azure-servicefabric.ServiceFabricClient.backupPartition
      - azure-servicefabric.ServiceFabricClient.backupPartition_2
      - azure-servicefabric.ServiceFabricClient.backupPartition_1
      - azure-servicefabric.ServiceFabricClient.backupPartitionWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.cancelOperation
      - azure-servicefabric.ServiceFabricClient.cancelOperation_2
      - azure-servicefabric.ServiceFabricClient.cancelOperation_1
      - azure-servicefabric.ServiceFabricClient.cancelOperationWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.cancelRepairTask
      - azure-servicefabric.ServiceFabricClient.cancelRepairTask_2
      - azure-servicefabric.ServiceFabricClient.cancelRepairTask_1
      - azure-servicefabric.ServiceFabricClient.cancelRepairTaskWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.commitImageStoreUploadSession
      - azure-servicefabric.ServiceFabricClient.commitImageStoreUploadSession_2
      - azure-servicefabric.ServiceFabricClient.commitImageStoreUploadSession_1
      - azure-servicefabric.ServiceFabricClient.commitImageStoreUploadSessionWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.copyImageStoreContent
      - azure-servicefabric.ServiceFabricClient.copyImageStoreContent_2
      - azure-servicefabric.ServiceFabricClient.copyImageStoreContent_1
      - azure-servicefabric.ServiceFabricClient.copyImageStoreContentWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.createApplication
      - azure-servicefabric.ServiceFabricClient.createApplication_2
      - azure-servicefabric.ServiceFabricClient.createApplication_1
      - azure-servicefabric.ServiceFabricClient.createApplicationWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.createBackupPolicy
      - azure-servicefabric.ServiceFabricClient.createBackupPolicy_2
      - azure-servicefabric.ServiceFabricClient.createBackupPolicy_1
      - azure-servicefabric.ServiceFabricClient.createBackupPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.createComposeDeployment
      - azure-servicefabric.ServiceFabricClient.createComposeDeployment_2
      - azure-servicefabric.ServiceFabricClient.createComposeDeployment_1
      - azure-servicefabric.ServiceFabricClient.createComposeDeploymentWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.createName
      - azure-servicefabric.ServiceFabricClient.createName_2
      - azure-servicefabric.ServiceFabricClient.createName_1
      - azure-servicefabric.ServiceFabricClient.createNameWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.createRepairTask
      - azure-servicefabric.ServiceFabricClient.createRepairTask_2
      - azure-servicefabric.ServiceFabricClient.createRepairTask_1
      - azure-servicefabric.ServiceFabricClient.createRepairTaskWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.createService
      - azure-servicefabric.ServiceFabricClient.createService_2
      - azure-servicefabric.ServiceFabricClient.createService_1
      - azure-servicefabric.ServiceFabricClient.createServiceFromTemplate
      - azure-servicefabric.ServiceFabricClient.createServiceFromTemplate_2
      - azure-servicefabric.ServiceFabricClient.createServiceFromTemplate_1
      - azure-servicefabric.ServiceFabricClient.createServiceFromTemplateWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.createServiceWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deleteApplication
      - azure-servicefabric.ServiceFabricClient.deleteApplication_2
      - azure-servicefabric.ServiceFabricClient.deleteApplication_1
      - azure-servicefabric.ServiceFabricClient.deleteApplicationWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deleteBackupPolicy
      - azure-servicefabric.ServiceFabricClient.deleteBackupPolicy_2
      - azure-servicefabric.ServiceFabricClient.deleteBackupPolicy_1
      - azure-servicefabric.ServiceFabricClient.deleteBackupPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deleteImageStoreContent
      - azure-servicefabric.ServiceFabricClient.deleteImageStoreContent_2
      - azure-servicefabric.ServiceFabricClient.deleteImageStoreContent_1
      - azure-servicefabric.ServiceFabricClient.deleteImageStoreContentWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deleteImageStoreUploadSession
      - azure-servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_2
      - azure-servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_1
      - azure-servicefabric.ServiceFabricClient.deleteImageStoreUploadSessionWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deleteName
      - azure-servicefabric.ServiceFabricClient.deleteName_2
      - azure-servicefabric.ServiceFabricClient.deleteName_1
      - azure-servicefabric.ServiceFabricClient.deleteNameWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deleteProperty
      - azure-servicefabric.ServiceFabricClient.deleteProperty_2
      - azure-servicefabric.ServiceFabricClient.deleteProperty_1
      - azure-servicefabric.ServiceFabricClient.deletePropertyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deleteRepairTask
      - azure-servicefabric.ServiceFabricClient.deleteRepairTask_2
      - azure-servicefabric.ServiceFabricClient.deleteRepairTask_1
      - azure-servicefabric.ServiceFabricClient.deleteRepairTaskWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deleteService
      - azure-servicefabric.ServiceFabricClient.deleteService_2
      - azure-servicefabric.ServiceFabricClient.deleteService_1
      - azure-servicefabric.ServiceFabricClient.deleteServiceWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.deployServicePackageToNode
      - azure-servicefabric.ServiceFabricClient.deployServicePackageToNode_2
      - azure-servicefabric.ServiceFabricClient.deployServicePackageToNode_1
      - azure-servicefabric.ServiceFabricClient.deployServicePackageToNodeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.disableApplicationBackup
      - azure-servicefabric.ServiceFabricClient.disableApplicationBackup_2
      - azure-servicefabric.ServiceFabricClient.disableApplicationBackup_1
      - azure-servicefabric.ServiceFabricClient.disableApplicationBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.disableNode
      - azure-servicefabric.ServiceFabricClient.disableNode_2
      - azure-servicefabric.ServiceFabricClient.disableNode_1
      - azure-servicefabric.ServiceFabricClient.disableNodeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.disablePartitionBackup
      - azure-servicefabric.ServiceFabricClient.disablePartitionBackup_2
      - azure-servicefabric.ServiceFabricClient.disablePartitionBackup_1
      - azure-servicefabric.ServiceFabricClient.disablePartitionBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.disableServiceBackup
      - azure-servicefabric.ServiceFabricClient.disableServiceBackup_2
      - azure-servicefabric.ServiceFabricClient.disableServiceBackup_1
      - azure-servicefabric.ServiceFabricClient.disableServiceBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.enableApplicationBackup
      - azure-servicefabric.ServiceFabricClient.enableApplicationBackup_2
      - azure-servicefabric.ServiceFabricClient.enableApplicationBackup_1
      - azure-servicefabric.ServiceFabricClient.enableApplicationBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.enableNode
      - azure-servicefabric.ServiceFabricClient.enableNode_2
      - azure-servicefabric.ServiceFabricClient.enableNode_1
      - azure-servicefabric.ServiceFabricClient.enableNodeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.enablePartitionBackup
      - azure-servicefabric.ServiceFabricClient.enablePartitionBackup_2
      - azure-servicefabric.ServiceFabricClient.enablePartitionBackup_1
      - azure-servicefabric.ServiceFabricClient.enablePartitionBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.enableServiceBackup
      - azure-servicefabric.ServiceFabricClient.enableServiceBackup_2
      - azure-servicefabric.ServiceFabricClient.enableServiceBackup_1
      - azure-servicefabric.ServiceFabricClient.enableServiceBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.forceApproveRepairTask
      - azure-servicefabric.ServiceFabricClient.forceApproveRepairTask_2
      - azure-servicefabric.ServiceFabricClient.forceApproveRepairTask_1
      - azure-servicefabric.ServiceFabricClient.forceApproveRepairTaskWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getAadMetadata
      - azure-servicefabric.ServiceFabricClient.getAadMetadata_2
      - azure-servicefabric.ServiceFabricClient.getAadMetadata_1
      - azure-servicefabric.ServiceFabricClient.getAadMetadataWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy
      - azure-servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_2
      - azure-servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_1
      - azure-servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo
      - azure-servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_2
      - azure-servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_1
      - azure-servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationBackupList
      - azure-servicefabric.ServiceFabricClient.getApplicationBackupList_2
      - azure-servicefabric.ServiceFabricClient.getApplicationBackupList_1
      - azure-servicefabric.ServiceFabricClient.getApplicationBackupListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationEventList
      - azure-servicefabric.ServiceFabricClient.getApplicationEventList_2
      - azure-servicefabric.ServiceFabricClient.getApplicationEventList_1
      - azure-servicefabric.ServiceFabricClient.getApplicationEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationHealth
      - azure-servicefabric.ServiceFabricClient.getApplicationHealth_2
      - azure-servicefabric.ServiceFabricClient.getApplicationHealth_1
      - azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy
      - azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2
      - azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1
      - azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationInfo
      - azure-servicefabric.ServiceFabricClient.getApplicationInfo_2
      - azure-servicefabric.ServiceFabricClient.getApplicationInfo_1
      - azure-servicefabric.ServiceFabricClient.getApplicationInfoList
      - azure-servicefabric.ServiceFabricClient.getApplicationInfoList_2
      - azure-servicefabric.ServiceFabricClient.getApplicationInfoList_1
      - azure-servicefabric.ServiceFabricClient.getApplicationInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo
      - azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo_2
      - azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo_1
      - azure-servicefabric.ServiceFabricClient.getApplicationLoadInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationManifest
      - azure-servicefabric.ServiceFabricClient.getApplicationManifest_2
      - azure-servicefabric.ServiceFabricClient.getApplicationManifest_1
      - azure-servicefabric.ServiceFabricClient.getApplicationManifestWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationNameInfo
      - azure-servicefabric.ServiceFabricClient.getApplicationNameInfo_2
      - azure-servicefabric.ServiceFabricClient.getApplicationNameInfo_1
      - azure-servicefabric.ServiceFabricClient.getApplicationNameInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationsEventList
      - azure-servicefabric.ServiceFabricClient.getApplicationsEventList_2
      - azure-servicefabric.ServiceFabricClient.getApplicationsEventList_1
      - azure-servicefabric.ServiceFabricClient.getApplicationsEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList
      - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2
      - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1
      - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName
      - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2
      - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1
      - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByNameWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getApplicationUpgrade
      - azure-servicefabric.ServiceFabricClient.getApplicationUpgrade_2
      - azure-servicefabric.ServiceFabricClient.getApplicationUpgrade_1
      - azure-servicefabric.ServiceFabricClient.getApplicationUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getBackupPolicyByName
      - azure-servicefabric.ServiceFabricClient.getBackupPolicyByName_2
      - azure-servicefabric.ServiceFabricClient.getBackupPolicyByName_1
      - azure-servicefabric.ServiceFabricClient.getBackupPolicyByNameWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getBackupPolicyList
      - azure-servicefabric.ServiceFabricClient.getBackupPolicyList_2
      - azure-servicefabric.ServiceFabricClient.getBackupPolicyList_1
      - azure-servicefabric.ServiceFabricClient.getBackupPolicyListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getBackupsFromBackupLocation
      - azure-servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_2
      - azure-servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_1
      - azure-servicefabric.ServiceFabricClient.getBackupsFromBackupLocationWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getChaos
      - azure-servicefabric.ServiceFabricClient.getChaos_2
      - azure-servicefabric.ServiceFabricClient.getChaos_1
      - azure-servicefabric.ServiceFabricClient.getChaosEvents
      - azure-servicefabric.ServiceFabricClient.getChaosEvents_2
      - azure-servicefabric.ServiceFabricClient.getChaosEvents_1
      - azure-servicefabric.ServiceFabricClient.getChaosEventsWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getChaosSchedule
      - azure-servicefabric.ServiceFabricClient.getChaosSchedule_2
      - azure-servicefabric.ServiceFabricClient.getChaosSchedule_1
      - azure-servicefabric.ServiceFabricClient.getChaosScheduleWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getChaosWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterConfiguration
      - azure-servicefabric.ServiceFabricClient.getClusterConfiguration_2
      - azure-servicefabric.ServiceFabricClient.getClusterConfiguration_1
      - azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus
      - azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2
      - azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1
      - azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatusWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterConfigurationWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterEventList
      - azure-servicefabric.ServiceFabricClient.getClusterEventList_2
      - azure-servicefabric.ServiceFabricClient.getClusterEventList_1
      - azure-servicefabric.ServiceFabricClient.getClusterEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterHealth
      - azure-servicefabric.ServiceFabricClient.getClusterHealth_2
      - azure-servicefabric.ServiceFabricClient.getClusterHealth_1
      - azure-servicefabric.ServiceFabricClient.getClusterHealthChunk
      - azure-servicefabric.ServiceFabricClient.getClusterHealthChunk_2
      - azure-servicefabric.ServiceFabricClient.getClusterHealthChunk_1
      - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters
      - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2
      - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1
      - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy
      - azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2
      - azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1
      - azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterManifest
      - azure-servicefabric.ServiceFabricClient.getClusterManifest_2
      - azure-servicefabric.ServiceFabricClient.getClusterManifest_1
      - azure-servicefabric.ServiceFabricClient.getClusterManifestWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress
      - azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2
      - azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1
      - azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgressWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getClusterVersion
      - azure-servicefabric.ServiceFabricClient.getClusterVersion_2
      - azure-servicefabric.ServiceFabricClient.getClusterVersion_1
      - azure-servicefabric.ServiceFabricClient.getClusterVersionWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1
      - azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgressWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode
      - azure-servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_2
      - azure-servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_1
      - azure-servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNodeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getContainersEventList
      - azure-servicefabric.ServiceFabricClient.getContainersEventList_2
      - azure-servicefabric.ServiceFabricClient.getContainersEventList_1
      - azure-servicefabric.ServiceFabricClient.getContainersEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getCorrelatedEventList
      - azure-servicefabric.ServiceFabricClient.getCorrelatedEventList_2
      - azure-servicefabric.ServiceFabricClient.getCorrelatedEventList_1
      - azure-servicefabric.ServiceFabricClient.getCorrelatedEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDataLossProgress
      - azure-servicefabric.ServiceFabricClient.getDataLossProgress_2
      - azure-servicefabric.ServiceFabricClient.getDataLossProgress_1
      - azure-servicefabric.ServiceFabricClient.getDataLossProgressWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList
      - azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2
      - azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1
      - azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByNameWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByNameWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1
      - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getFaultOperationList
      - azure-servicefabric.ServiceFabricClient.getFaultOperationList_2
      - azure-servicefabric.ServiceFabricClient.getFaultOperationList_1
      - azure-servicefabric.ServiceFabricClient.getFaultOperationListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getImageStoreContent
      - azure-servicefabric.ServiceFabricClient.getImageStoreContent_2
      - azure-servicefabric.ServiceFabricClient.getImageStoreContent_1
      - azure-servicefabric.ServiceFabricClient.getImageStoreContentWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getImageStoreRootContent
      - azure-servicefabric.ServiceFabricClient.getImageStoreRootContent_2
      - azure-servicefabric.ServiceFabricClient.getImageStoreRootContent_1
      - azure-servicefabric.ServiceFabricClient.getImageStoreRootContentWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionById
      - azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_2
      - azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_1
      - azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByIdWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath
      - azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_2
      - azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_1
      - azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPathWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNameExistsInfo
      - azure-servicefabric.ServiceFabricClient.getNameExistsInfo_2
      - azure-servicefabric.ServiceFabricClient.getNameExistsInfo_1
      - azure-servicefabric.ServiceFabricClient.getNameExistsInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNodeEventList
      - azure-servicefabric.ServiceFabricClient.getNodeEventList_2
      - azure-servicefabric.ServiceFabricClient.getNodeEventList_1
      - azure-servicefabric.ServiceFabricClient.getNodeEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNodeHealth
      - azure-servicefabric.ServiceFabricClient.getNodeHealth_2
      - azure-servicefabric.ServiceFabricClient.getNodeHealth_1
      - azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy
      - azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2
      - azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1
      - azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNodeHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNodeInfo
      - azure-servicefabric.ServiceFabricClient.getNodeInfo_2
      - azure-servicefabric.ServiceFabricClient.getNodeInfo_1
      - azure-servicefabric.ServiceFabricClient.getNodeInfoList
      - azure-servicefabric.ServiceFabricClient.getNodeInfoList_2
      - azure-servicefabric.ServiceFabricClient.getNodeInfoList_1
      - azure-servicefabric.ServiceFabricClient.getNodeInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNodeInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNodeLoadInfo
      - azure-servicefabric.ServiceFabricClient.getNodeLoadInfo_2
      - azure-servicefabric.ServiceFabricClient.getNodeLoadInfo_1
      - azure-servicefabric.ServiceFabricClient.getNodeLoadInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNodesEventList
      - azure-servicefabric.ServiceFabricClient.getNodesEventList_2
      - azure-servicefabric.ServiceFabricClient.getNodesEventList_1
      - azure-servicefabric.ServiceFabricClient.getNodesEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress
      - azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress_2
      - azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress_1
      - azure-servicefabric.ServiceFabricClient.getNodeTransitionProgressWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPackageJsonInfo
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_2
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_1
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupList
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupList_2
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupList_1
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupProgress
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupProgress_2
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupProgress_1
      - azure-servicefabric.ServiceFabricClient.getPartitionBackupProgressWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionEventList
      - azure-servicefabric.ServiceFabricClient.getPartitionEventList_2
      - azure-servicefabric.ServiceFabricClient.getPartitionEventList_1
      - azure-servicefabric.ServiceFabricClient.getPartitionEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionHealth
      - azure-servicefabric.ServiceFabricClient.getPartitionHealth_2
      - azure-servicefabric.ServiceFabricClient.getPartitionHealth_1
      - azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy
      - azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2
      - azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1
      - azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionInfo
      - azure-servicefabric.ServiceFabricClient.getPartitionInfo_2
      - azure-servicefabric.ServiceFabricClient.getPartitionInfo_1
      - azure-servicefabric.ServiceFabricClient.getPartitionInfoList
      - azure-servicefabric.ServiceFabricClient.getPartitionInfoList_2
      - azure-servicefabric.ServiceFabricClient.getPartitionInfoList_1
      - azure-servicefabric.ServiceFabricClient.getPartitionInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation
      - azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation_2
      - azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation_1
      - azure-servicefabric.ServiceFabricClient.getPartitionLoadInformationWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionReplicaEventList
      - azure-servicefabric.ServiceFabricClient.getPartitionReplicaEventList_2
      - azure-servicefabric.ServiceFabricClient.getPartitionReplicaEventList_1
      - azure-servicefabric.ServiceFabricClient.getPartitionReplicaEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionReplicasEventList
      - azure-servicefabric.ServiceFabricClient.getPartitionReplicasEventList_2
      - azure-servicefabric.ServiceFabricClient.getPartitionReplicasEventList_1
      - azure-servicefabric.ServiceFabricClient.getPartitionReplicasEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress
      - azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress_2
      - azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress_1
      - azure-servicefabric.ServiceFabricClient.getPartitionRestartProgressWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionRestoreProgress
      - azure-servicefabric.ServiceFabricClient.getPartitionRestoreProgress_2
      - azure-servicefabric.ServiceFabricClient.getPartitionRestoreProgress_1
      - azure-servicefabric.ServiceFabricClient.getPartitionRestoreProgressWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPartitionsEventList
      - azure-servicefabric.ServiceFabricClient.getPartitionsEventList_2
      - azure-servicefabric.ServiceFabricClient.getPartitionsEventList_1
      - azure-servicefabric.ServiceFabricClient.getPartitionsEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPropertyInfo
      - azure-servicefabric.ServiceFabricClient.getPropertyInfo_2
      - azure-servicefabric.ServiceFabricClient.getPropertyInfo_1
      - azure-servicefabric.ServiceFabricClient.getPropertyInfoList
      - azure-servicefabric.ServiceFabricClient.getPropertyInfoList_2
      - azure-servicefabric.ServiceFabricClient.getPropertyInfoList_1
      - azure-servicefabric.ServiceFabricClient.getPropertyInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getPropertyInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList
      - azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2
      - azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1
      - azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList
      - azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2
      - azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1
      - azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getQuorumLossProgress
      - azure-servicefabric.ServiceFabricClient.getQuorumLossProgress_2
      - azure-servicefabric.ServiceFabricClient.getQuorumLossProgress_1
      - azure-servicefabric.ServiceFabricClient.getQuorumLossProgressWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getRepairTaskList
      - azure-servicefabric.ServiceFabricClient.getRepairTaskList_2
      - azure-servicefabric.ServiceFabricClient.getRepairTaskList_1
      - azure-servicefabric.ServiceFabricClient.getRepairTaskListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getReplicaHealth
      - azure-servicefabric.ServiceFabricClient.getReplicaHealth_2
      - azure-servicefabric.ServiceFabricClient.getReplicaHealth_1
      - azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy
      - azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2
      - azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1
      - azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getReplicaHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getReplicaInfo
      - azure-servicefabric.ServiceFabricClient.getReplicaInfo_2
      - azure-servicefabric.ServiceFabricClient.getReplicaInfo_1
      - azure-servicefabric.ServiceFabricClient.getReplicaInfoList
      - azure-servicefabric.ServiceFabricClient.getReplicaInfoList_2
      - azure-servicefabric.ServiceFabricClient.getReplicaInfoList_1
      - azure-servicefabric.ServiceFabricClient.getReplicaInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getReplicaInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo
      - azure-servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_2
      - azure-servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_1
      - azure-servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceBackupList
      - azure-servicefabric.ServiceFabricClient.getServiceBackupList_2
      - azure-servicefabric.ServiceFabricClient.getServiceBackupList_1
      - azure-servicefabric.ServiceFabricClient.getServiceBackupListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceDescription
      - azure-servicefabric.ServiceFabricClient.getServiceDescription_2
      - azure-servicefabric.ServiceFabricClient.getServiceDescription_1
      - azure-servicefabric.ServiceFabricClient.getServiceDescriptionWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceEventList
      - azure-servicefabric.ServiceFabricClient.getServiceEventList_2
      - azure-servicefabric.ServiceFabricClient.getServiceEventList_1
      - azure-servicefabric.ServiceFabricClient.getServiceEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceHealth
      - azure-servicefabric.ServiceFabricClient.getServiceHealth_2
      - azure-servicefabric.ServiceFabricClient.getServiceHealth_1
      - azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy
      - azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2
      - azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1
      - azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceInfo
      - azure-servicefabric.ServiceFabricClient.getServiceInfo_2
      - azure-servicefabric.ServiceFabricClient.getServiceInfo_1
      - azure-servicefabric.ServiceFabricClient.getServiceInfoList
      - azure-servicefabric.ServiceFabricClient.getServiceInfoList_2
      - azure-servicefabric.ServiceFabricClient.getServiceInfoList_1
      - azure-servicefabric.ServiceFabricClient.getServiceInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceManifest
      - azure-servicefabric.ServiceFabricClient.getServiceManifest_2
      - azure-servicefabric.ServiceFabricClient.getServiceManifest_1
      - azure-servicefabric.ServiceFabricClient.getServiceManifestWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceNameInfo
      - azure-servicefabric.ServiceFabricClient.getServiceNameInfo_2
      - azure-servicefabric.ServiceFabricClient.getServiceNameInfo_1
      - azure-servicefabric.ServiceFabricClient.getServiceNameInfoWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServicesEventList
      - azure-servicefabric.ServiceFabricClient.getServicesEventList_2
      - azure-servicefabric.ServiceFabricClient.getServicesEventList_1
      - azure-servicefabric.ServiceFabricClient.getServicesEventListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoByName
      - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoByName_2
      - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoByName_1
      - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoByNameWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList
      - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList_2
      - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList_1
      - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getSubNameInfoList
      - azure-servicefabric.ServiceFabricClient.getSubNameInfoList_2
      - azure-servicefabric.ServiceFabricClient.getSubNameInfoList_1
      - azure-servicefabric.ServiceFabricClient.getSubNameInfoListWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState
      - azure-servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_2
      - azure-servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_1
      - azure-servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceStateWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.invokeContainerApi
      - azure-servicefabric.ServiceFabricClient.invokeContainerApi_2
      - azure-servicefabric.ServiceFabricClient.invokeContainerApi_1
      - azure-servicefabric.ServiceFabricClient.invokeContainerApiWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand
      - azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2
      - azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1
      - azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommandWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery
      - azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2
      - azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1
      - azure-servicefabric.ServiceFabricClient.invokeInfrastructureQueryWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.meshApplication
      - azure-servicefabric.ServiceFabricClient.meshCodePackage
      - azure-servicefabric.ServiceFabricClient.meshGateway
      - azure-servicefabric.ServiceFabricClient.meshNetwork
      - azure-servicefabric.ServiceFabricClient.meshSecret
      - azure-servicefabric.ServiceFabricClient.meshSecretValue
      - azure-servicefabric.ServiceFabricClient.meshService
      - azure-servicefabric.ServiceFabricClient.meshServiceReplica
      - azure-servicefabric.ServiceFabricClient.meshVolume
      - azure-servicefabric.ServiceFabricClient.postChaosSchedule
      - azure-servicefabric.ServiceFabricClient.postChaosSchedule_2
      - azure-servicefabric.ServiceFabricClient.postChaosSchedule_1
      - azure-servicefabric.ServiceFabricClient.postChaosScheduleWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.provisionApplicationType
      - azure-servicefabric.ServiceFabricClient.provisionApplicationType_2
      - azure-servicefabric.ServiceFabricClient.provisionApplicationType_1
      - azure-servicefabric.ServiceFabricClient.provisionApplicationTypeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.provisionCluster
      - azure-servicefabric.ServiceFabricClient.provisionCluster_2
      - azure-servicefabric.ServiceFabricClient.provisionCluster_1
      - azure-servicefabric.ServiceFabricClient.provisionClusterWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.putProperty
      - azure-servicefabric.ServiceFabricClient.putProperty_2
      - azure-servicefabric.ServiceFabricClient.putProperty_1
      - azure-servicefabric.ServiceFabricClient.putPropertyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.recoverAllPartitions
      - azure-servicefabric.ServiceFabricClient.recoverAllPartitions_2
      - azure-servicefabric.ServiceFabricClient.recoverAllPartitions_1
      - azure-servicefabric.ServiceFabricClient.recoverAllPartitionsWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.recoverPartition
      - azure-servicefabric.ServiceFabricClient.recoverPartition_2
      - azure-servicefabric.ServiceFabricClient.recoverPartition_1
      - azure-servicefabric.ServiceFabricClient.recoverPartitionWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.recoverServicePartitions
      - azure-servicefabric.ServiceFabricClient.recoverServicePartitions_2
      - azure-servicefabric.ServiceFabricClient.recoverServicePartitions_1
      - azure-servicefabric.ServiceFabricClient.recoverServicePartitionsWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.recoverSystemPartitions
      - azure-servicefabric.ServiceFabricClient.recoverSystemPartitions_2
      - azure-servicefabric.ServiceFabricClient.recoverSystemPartitions_1
      - azure-servicefabric.ServiceFabricClient.recoverSystemPartitionsWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.removeComposeDeployment
      - azure-servicefabric.ServiceFabricClient.removeComposeDeployment_2
      - azure-servicefabric.ServiceFabricClient.removeComposeDeployment_1
      - azure-servicefabric.ServiceFabricClient.removeComposeDeploymentWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.removeNodeState
      - azure-servicefabric.ServiceFabricClient.removeNodeState_2
      - azure-servicefabric.ServiceFabricClient.removeNodeState_1
      - azure-servicefabric.ServiceFabricClient.removeNodeStateWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.removeReplica
      - azure-servicefabric.ServiceFabricClient.removeReplica_2
      - azure-servicefabric.ServiceFabricClient.removeReplica_1
      - azure-servicefabric.ServiceFabricClient.removeReplicaWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.reportApplicationHealth
      - azure-servicefabric.ServiceFabricClient.reportApplicationHealth_2
      - azure-servicefabric.ServiceFabricClient.reportApplicationHealth_1
      - azure-servicefabric.ServiceFabricClient.reportApplicationHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.reportClusterHealth
      - azure-servicefabric.ServiceFabricClient.reportClusterHealth_2
      - azure-servicefabric.ServiceFabricClient.reportClusterHealth_1
      - azure-servicefabric.ServiceFabricClient.reportClusterHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth
      - azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2
      - azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1
      - azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth
      - azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2
      - azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1
      - azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.reportNodeHealth
      - azure-servicefabric.ServiceFabricClient.reportNodeHealth_2
      - azure-servicefabric.ServiceFabricClient.reportNodeHealth_1
      - azure-servicefabric.ServiceFabricClient.reportNodeHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.reportPartitionHealth
      - azure-servicefabric.ServiceFabricClient.reportPartitionHealth_2
      - azure-servicefabric.ServiceFabricClient.reportPartitionHealth_1
      - azure-servicefabric.ServiceFabricClient.reportPartitionHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.reportReplicaHealth
      - azure-servicefabric.ServiceFabricClient.reportReplicaHealth_2
      - azure-servicefabric.ServiceFabricClient.reportReplicaHealth_1
      - azure-servicefabric.ServiceFabricClient.reportReplicaHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.reportServiceHealth
      - azure-servicefabric.ServiceFabricClient.reportServiceHealth_2
      - azure-servicefabric.ServiceFabricClient.reportServiceHealth_1
      - azure-servicefabric.ServiceFabricClient.reportServiceHealthWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.resetPartitionLoad
      - azure-servicefabric.ServiceFabricClient.resetPartitionLoad_2
      - azure-servicefabric.ServiceFabricClient.resetPartitionLoad_1
      - azure-servicefabric.ServiceFabricClient.resetPartitionLoadWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.resolveService
      - azure-servicefabric.ServiceFabricClient.resolveService_2
      - azure-servicefabric.ServiceFabricClient.resolveService_1
      - azure-servicefabric.ServiceFabricClient.resolveServiceWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage
      - azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage_2
      - azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage_1
      - azure-servicefabric.ServiceFabricClient.restartDeployedCodePackageWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.restartNode
      - azure-servicefabric.ServiceFabricClient.restartNode_2
      - azure-servicefabric.ServiceFabricClient.restartNode_1
      - azure-servicefabric.ServiceFabricClient.restartNodeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.restartReplica
      - azure-servicefabric.ServiceFabricClient.restartReplica_2
      - azure-servicefabric.ServiceFabricClient.restartReplica_1
      - azure-servicefabric.ServiceFabricClient.restartReplicaWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.restorePartition
      - azure-servicefabric.ServiceFabricClient.restorePartition_2
      - azure-servicefabric.ServiceFabricClient.restorePartition_1
      - azure-servicefabric.ServiceFabricClient.restorePartitionWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.resumeApplicationBackup
      - azure-servicefabric.ServiceFabricClient.resumeApplicationBackup_2
      - azure-servicefabric.ServiceFabricClient.resumeApplicationBackup_1
      - azure-servicefabric.ServiceFabricClient.resumeApplicationBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade
      - azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2
      - azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1
      - azure-servicefabric.ServiceFabricClient.resumeApplicationUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade
      - azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade_2
      - azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade_1
      - azure-servicefabric.ServiceFabricClient.resumeClusterUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.resumePartitionBackup
      - azure-servicefabric.ServiceFabricClient.resumePartitionBackup_2
      - azure-servicefabric.ServiceFabricClient.resumePartitionBackup_1
      - azure-servicefabric.ServiceFabricClient.resumePartitionBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.resumeServiceBackup
      - azure-servicefabric.ServiceFabricClient.resumeServiceBackup_2
      - azure-servicefabric.ServiceFabricClient.resumeServiceBackup_1
      - azure-servicefabric.ServiceFabricClient.resumeServiceBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade
      - azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2
      - azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1
      - azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade
      - azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2
      - azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1
      - azure-servicefabric.ServiceFabricClient.rollbackClusterUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.sendRequest_1
      - azure-servicefabric.ServiceFabricClient.sendRequest
      - azure-servicefabric.ServiceFabricClient.sendRequestWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.constructor
      - azure-servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState
      - azure-servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_2
      - azure-servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_1
      - azure-servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceStateWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startApplicationUpgrade
      - azure-servicefabric.ServiceFabricClient.startApplicationUpgrade_2
      - azure-servicefabric.ServiceFabricClient.startApplicationUpgrade_1
      - azure-servicefabric.ServiceFabricClient.startApplicationUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startChaos
      - azure-servicefabric.ServiceFabricClient.startChaos_2
      - azure-servicefabric.ServiceFabricClient.startChaos_1
      - azure-servicefabric.ServiceFabricClient.startChaosWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade
      - azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2
      - azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1
      - azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startClusterUpgrade
      - azure-servicefabric.ServiceFabricClient.startClusterUpgrade_2
      - azure-servicefabric.ServiceFabricClient.startClusterUpgrade_1
      - azure-servicefabric.ServiceFabricClient.startClusterUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade
      - azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2
      - azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1
      - azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startDataLoss
      - azure-servicefabric.ServiceFabricClient.startDataLoss_2
      - azure-servicefabric.ServiceFabricClient.startDataLoss_1
      - azure-servicefabric.ServiceFabricClient.startDataLossWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startNodeTransition
      - azure-servicefabric.ServiceFabricClient.startNodeTransition_2
      - azure-servicefabric.ServiceFabricClient.startNodeTransition_1
      - azure-servicefabric.ServiceFabricClient.startNodeTransitionWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startPartitionRestart
      - azure-servicefabric.ServiceFabricClient.startPartitionRestart_2
      - azure-servicefabric.ServiceFabricClient.startPartitionRestart_1
      - azure-servicefabric.ServiceFabricClient.startPartitionRestartWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startQuorumLoss
      - azure-servicefabric.ServiceFabricClient.startQuorumLoss_2
      - azure-servicefabric.ServiceFabricClient.startQuorumLoss_1
      - azure-servicefabric.ServiceFabricClient.startQuorumLossWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade
      - azure-servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_2
      - azure-servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_1
      - azure-servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.stopChaos
      - azure-servicefabric.ServiceFabricClient.stopChaos_2
      - azure-servicefabric.ServiceFabricClient.stopChaos_1
      - azure-servicefabric.ServiceFabricClient.stopChaosWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.submitPropertyBatch
      - azure-servicefabric.ServiceFabricClient.submitPropertyBatch_2
      - azure-servicefabric.ServiceFabricClient.submitPropertyBatch_1
      - azure-servicefabric.ServiceFabricClient.submitPropertyBatchWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.suspendApplicationBackup
      - azure-servicefabric.ServiceFabricClient.suspendApplicationBackup_2
      - azure-servicefabric.ServiceFabricClient.suspendApplicationBackup_1
      - azure-servicefabric.ServiceFabricClient.suspendApplicationBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.suspendPartitionBackup
      - azure-servicefabric.ServiceFabricClient.suspendPartitionBackup_2
      - azure-servicefabric.ServiceFabricClient.suspendPartitionBackup_1
      - azure-servicefabric.ServiceFabricClient.suspendPartitionBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.suspendServiceBackup
      - azure-servicefabric.ServiceFabricClient.suspendServiceBackup_2
      - azure-servicefabric.ServiceFabricClient.suspendServiceBackup_1
      - azure-servicefabric.ServiceFabricClient.suspendServiceBackupWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.unprovisionApplicationType
      - azure-servicefabric.ServiceFabricClient.unprovisionApplicationType_2
      - azure-servicefabric.ServiceFabricClient.unprovisionApplicationType_1
      - azure-servicefabric.ServiceFabricClient.unprovisionApplicationTypeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.unprovisionCluster
      - azure-servicefabric.ServiceFabricClient.unprovisionCluster_2
      - azure-servicefabric.ServiceFabricClient.unprovisionCluster_1
      - azure-servicefabric.ServiceFabricClient.unprovisionClusterWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade
      - azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade_2
      - azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade_1
      - azure-servicefabric.ServiceFabricClient.updateApplicationUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.updateBackupPolicy
      - azure-servicefabric.ServiceFabricClient.updateBackupPolicy_2
      - azure-servicefabric.ServiceFabricClient.updateBackupPolicy_1
      - azure-servicefabric.ServiceFabricClient.updateBackupPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.updateClusterUpgrade
      - azure-servicefabric.ServiceFabricClient.updateClusterUpgrade_2
      - azure-servicefabric.ServiceFabricClient.updateClusterUpgrade_1
      - azure-servicefabric.ServiceFabricClient.updateClusterUpgradeWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.updateRepairExecutionState
      - azure-servicefabric.ServiceFabricClient.updateRepairExecutionState_2
      - azure-servicefabric.ServiceFabricClient.updateRepairExecutionState_1
      - azure-servicefabric.ServiceFabricClient.updateRepairExecutionStateWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy
      - azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2
      - azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1
      - azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicyWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.updateService
      - azure-servicefabric.ServiceFabricClient.updateService_2
      - azure-servicefabric.ServiceFabricClient.updateService_1
      - azure-servicefabric.ServiceFabricClient.updateServiceWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.uploadFile
      - azure-servicefabric.ServiceFabricClient.uploadFile_2
      - azure-servicefabric.ServiceFabricClient.uploadFile_1
      - azure-servicefabric.ServiceFabricClient.uploadFileChunk
      - azure-servicefabric.ServiceFabricClient.uploadFileChunk_2
      - azure-servicefabric.ServiceFabricClient.uploadFileChunk_1
      - azure-servicefabric.ServiceFabricClient.uploadFileChunkWithHttpOperationResponse
      - azure-servicefabric.ServiceFabricClient.uploadFileWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7d81c-101">사용자 에이전트 헤더에 사용자 지정 정보 추가</span><span class="sxs-lookup"><span data-stu-id="7d81c-101">Adds custom information to user agent header</span></span>
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            <span data-ttu-id="7d81c-102">사용자 에이전트 헤더 문자열에 추가할 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-102">information to be added to user agent header, as string.</span></span>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.backupPartition
    name: 'backupPartition(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-103">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-103">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.backupPartition_2
    name: 'backupPartition(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.backupPartition_1
    name: 'backupPartition(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.backupPartitionWithHttpOperationResponse
    name: 'backupPartitionWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartitionWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-104">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-104">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.cancelOperation
    name: 'cancelOperation(string, boolean, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-105">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-105">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-106">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-106">This is passed into the corresponding GetProgress API</span></span>
        - id: force
          type:
            - boolean
          description: |
            <span data-ttu-id="7d81c-107">사용자로 인한 작업을 실행하여 수정된 내부 시스템 상태를 정상적으로 롤백 및 정리할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-107">Indicates whether to gracefully roll back and clean up internal system state modified by executing the user-induced operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.cancelOperation_2
    name: 'cancelOperation(string, boolean, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: force
          type:
            - boolean
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.cancelOperation_1
    name: 'cancelOperation(string, boolean, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, callback: ServiceCallback<void>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: force
          type:
            - boolean
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.cancelOperationWithHttpOperationResponse
    name: 'cancelOperationWithHttpOperationResponse(string, boolean, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperationWithHttpOperationResponse(operationId: string, force: boolean, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-108">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-108">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-109">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-109">This is passed into the corresponding GetProgress API</span></span>
        - id: force
          type:
            - boolean
          description: |
            <span data-ttu-id="7d81c-110">사용자로 인한 작업을 실행하여 수정된 내부 시스템 상태를 정상적으로 롤백 및 정리할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-110">Indicates whether to gracefully roll back and clean up internal system state modified by executing the user-induced operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.cancelRepairTask
    name: 'cancelRepairTask(RepairTaskCancelDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options?: Object)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - azure-servicefabric.RepairTaskCancelDescription
          description: |
            <span data-ttu-id="7d81c-111">복구 작업을을 취소할 수에 대해 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-111">Describes the repair task to be cancelled.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.cancelRepairTask_2
    name: 'cancelRepairTask(RepairTaskCancelDescription, Object, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options: Object, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - azure-servicefabric.RepairTaskCancelDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.cancelRepairTask_1
    name: 'cancelRepairTask(RepairTaskCancelDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - azure-servicefabric.RepairTaskCancelDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.cancelRepairTaskWithHttpOperationResponse
    name: 'cancelRepairTaskWithHttpOperationResponse(RepairTaskCancelDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTaskWithHttpOperationResponse(repairTaskCancelDescription: RepairTaskCancelDescription, options?: Object)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - azure-servicefabric.RepairTaskCancelDescription
          description: |
            <span data-ttu-id="7d81c-112">복구 작업을을 취소할 수에 대해 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-112">Describes the repair task to be cancelled.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.commitImageStoreUploadSession
    name: 'commitImageStoreUploadSession(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, options?: Object)'
      parameters:
        - id: sessionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-113">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-113">A GUID generated by the user for a file uploading.</span></span>
            <span data-ttu-id="7d81c-114">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-114">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.commitImageStoreUploadSession_2
    name: 'commitImageStoreUploadSession(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.commitImageStoreUploadSession_1
    name: 'commitImageStoreUploadSession(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.commitImageStoreUploadSessionWithHttpOperationResponse
    name: 'commitImageStoreUploadSessionWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSessionWithHttpOperationResponse(sessionId: string, options?: Object)'
      parameters:
        - id: sessionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-115">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-115">A GUID generated by the user for a file uploading.</span></span>
            <span data-ttu-id="7d81c-116">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-116">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.copyImageStoreContent
    name: 'copyImageStoreContent(ImageStoreCopyDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options?: Object)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - azure-servicefabric.ImageStoreCopyDescription
          description: |
            <span data-ttu-id="7d81c-117">이미지 저장소에 대 한 복사 설명을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-117">Describes the copy description for the image store.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.copyImageStoreContent_2
    name: 'copyImageStoreContent(ImageStoreCopyDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - azure-servicefabric.ImageStoreCopyDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.copyImageStoreContent_1
    name: 'copyImageStoreContent(ImageStoreCopyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - azure-servicefabric.ImageStoreCopyDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.copyImageStoreContentWithHttpOperationResponse
    name: 'copyImageStoreContentWithHttpOperationResponse(ImageStoreCopyDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContentWithHttpOperationResponse(imageStoreCopyDescription: ImageStoreCopyDescription, options?: Object)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - azure-servicefabric.ImageStoreCopyDescription
          description: |
            <span data-ttu-id="7d81c-118">이미지 저장소에 대 한 복사 설명을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-118">Describes the copy description for the image store.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createApplication
    name: 'createApplication(ApplicationDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, options?: Object)'
      parameters:
        - id: applicationDescription
          type:
            - azure-servicefabric.ApplicationDescription
          description: |
            <span data-ttu-id="7d81c-119">응용 프로그램 만들기에 대 한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-119">Description for creating an application.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createApplication_2
    name: 'createApplication(ApplicationDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationDescription
          type:
            - azure-servicefabric.ApplicationDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createApplication_1
    name: 'createApplication(ApplicationDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationDescription
          type:
            - azure-servicefabric.ApplicationDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createApplicationWithHttpOperationResponse
    name: 'createApplicationWithHttpOperationResponse(ApplicationDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplicationWithHttpOperationResponse(applicationDescription: ApplicationDescription, options?: Object)'
      parameters:
        - id: applicationDescription
          type:
            - azure-servicefabric.ApplicationDescription
          description: |
            <span data-ttu-id="7d81c-120">응용 프로그램 만들기에 대 한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-120">Description for creating an application.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createBackupPolicy
    name: 'createBackupPolicy(BackupPolicyDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, options?: Object)'
      parameters:
        - id: backupPolicyDescription
          type:
            - azure-servicefabric.BackupPolicyDescription
          description: |
            <span data-ttu-id="7d81c-121">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-121">Describes the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createBackupPolicy_2
    name: 'createBackupPolicy(BackupPolicyDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - azure-servicefabric.BackupPolicyDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createBackupPolicy_1
    name: 'createBackupPolicy(BackupPolicyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - azure-servicefabric.BackupPolicyDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createBackupPolicyWithHttpOperationResponse
    name: 'createBackupPolicyWithHttpOperationResponse(BackupPolicyDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicyWithHttpOperationResponse(backupPolicyDescription: BackupPolicyDescription, options?: Object)'
      parameters:
        - id: backupPolicyDescription
          type:
            - azure-servicefabric.BackupPolicyDescription
          description: |
            <span data-ttu-id="7d81c-122">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-122">Describes the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createComposeDeployment
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options?: Object)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - azure-servicefabric.CreateComposeDeploymentDescription
          description: |
            <span data-ttu-id="7d81c-123">만들어야 하는 작성 배포를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-123">Describes the compose deployment that needs to be created.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createComposeDeployment_2
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - azure-servicefabric.CreateComposeDeploymentDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createComposeDeployment_1
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - azure-servicefabric.CreateComposeDeploymentDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createComposeDeploymentWithHttpOperationResponse
    name: 'createComposeDeploymentWithHttpOperationResponse(CreateComposeDeploymentDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeploymentWithHttpOperationResponse(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options?: Object)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - azure-servicefabric.CreateComposeDeploymentDescription
          description: |
            <span data-ttu-id="7d81c-124">만들어야 하는 작성 배포를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-124">Describes the compose deployment that needs to be created.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createName
    name: 'createName(NameDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, options?: Object)'
      parameters:
        - id: nameDescription
          type:
            - azure-servicefabric.NameDescription
          description: |
            <span data-ttu-id="7d81c-125">만들려는 Service Fabric 이름을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-125">Describes the Service Fabric name to be created.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createName_2
    name: 'createName(NameDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nameDescription
          type:
            - azure-servicefabric.NameDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createName_1
    name: 'createName(NameDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nameDescription
          type:
            - azure-servicefabric.NameDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createNameWithHttpOperationResponse
    name: 'createNameWithHttpOperationResponse(NameDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createNameWithHttpOperationResponse(nameDescription: NameDescription, options?: Object)'
      parameters:
        - id: nameDescription
          type:
            - azure-servicefabric.NameDescription
          description: |
            <span data-ttu-id="7d81c-126">만들려는 Service Fabric 이름을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-126">Describes the Service Fabric name to be created.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createRepairTask
    name: 'createRepairTask(RepairTask, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, options?: Object)'
      parameters:
        - id: repairTask
          type:
            - azure-servicefabric.RepairTask
          description: |
            <span data-ttu-id="7d81c-127">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-127">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createRepairTask_2
    name: 'createRepairTask(RepairTask, Object, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, options: Object, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - azure-servicefabric.RepairTask
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createRepairTask_1
    name: 'createRepairTask(RepairTask, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - azure-servicefabric.RepairTask
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createRepairTaskWithHttpOperationResponse
    name: 'createRepairTaskWithHttpOperationResponse(RepairTask, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTaskWithHttpOperationResponse(repairTask: RepairTask, options?: Object)'
      parameters:
        - id: repairTask
          type:
            - azure-servicefabric.RepairTask
          description: |
            <span data-ttu-id="7d81c-128">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-128">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createService
    name: 'createService(string, ServiceDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: ServiceDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-129">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-129">The identity of the application.</span></span> <span data-ttu-id="7d81c-130">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-130">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-131">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-131">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-132">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-132">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceDescription
          type:
            - azure-servicefabric.ServiceDescription
          description: |
            <span data-ttu-id="7d81c-133">서비스를 만드는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-133">The information necessary to create a service.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createService_2
    name: 'createService(string, ServiceDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: ServiceDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceDescription
          type:
            - azure-servicefabric.ServiceDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createService_1
    name: 'createService(string, ServiceDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: ServiceDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceDescription
          type:
            - azure-servicefabric.ServiceDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createServiceFromTemplate
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-134">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-134">The identity of the application.</span></span> <span data-ttu-id="7d81c-135">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-135">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-136">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-136">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-137">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-137">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceFromTemplateDescription
          type:
            - azure-servicefabric.ServiceFromTemplateDescription
          description: |
            <span data-ttu-id="7d81c-138">응용 프로그램 매니페스트에 정의 된 서식 파일에서 만들어야 하는 서비스를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-138">Describes the service that needs to be created from the template defined in the application manifest.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createServiceFromTemplate_2
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceFromTemplateDescription
          type:
            - azure-servicefabric.ServiceFromTemplateDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createServiceFromTemplate_1
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceFromTemplateDescription
          type:
            - azure-servicefabric.ServiceFromTemplateDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createServiceFromTemplateWithHttpOperationResponse
    name: 'createServiceFromTemplateWithHttpOperationResponse(string, ServiceFromTemplateDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplateWithHttpOperationResponse(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-139">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-139">The identity of the application.</span></span> <span data-ttu-id="7d81c-140">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-140">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-141">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-141">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-142">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-142">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceFromTemplateDescription
          type:
            - azure-servicefabric.ServiceFromTemplateDescription
          description: |
            <span data-ttu-id="7d81c-143">응용 프로그램 매니페스트에 정의 된 서식 파일에서 만들어야 하는 서비스를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-143">Describes the service that needs to be created from the template defined in the application manifest.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.createServiceWithHttpOperationResponse
    name: 'createServiceWithHttpOperationResponse(string, ServiceDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceWithHttpOperationResponse(applicationId: string, serviceDescription: ServiceDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-144">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-144">The identity of the application.</span></span> <span data-ttu-id="7d81c-145">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-145">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-146">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-146">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-147">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-147">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceDescription
          type:
            - azure-servicefabric.ServiceDescription
          description: |
            <span data-ttu-id="7d81c-148">서비스를 만드는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-148">The information necessary to create a service.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteApplication
    name: 'deleteApplication(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-149">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-149">The identity of the application.</span></span> <span data-ttu-id="7d81c-150">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-150">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-151">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-151">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-152">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-152">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteApplication_2
    name: 'deleteApplication(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteApplication_1
    name: 'deleteApplication(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteApplicationWithHttpOperationResponse
    name: 'deleteApplicationWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplicationWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-153">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-153">The identity of the application.</span></span> <span data-ttu-id="7d81c-154">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-154">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-155">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-155">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-156">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-156">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteBackupPolicy
    name: 'deleteBackupPolicy(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, options?: Object)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-157">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-157">The name of the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteBackupPolicy_2
    name: 'deleteBackupPolicy(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteBackupPolicy_1
    name: 'deleteBackupPolicy(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteBackupPolicyWithHttpOperationResponse
    name: 'deleteBackupPolicyWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicyWithHttpOperationResponse(backupPolicyName: string, options?: Object)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-158">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-158">The name of the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreContent
    name: 'deleteImageStoreContent(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-159">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-159">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreContent_2
    name: 'deleteImageStoreContent(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreContent_1
    name: 'deleteImageStoreContent(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreContentWithHttpOperationResponse
    name: 'deleteImageStoreContentWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContentWithHttpOperationResponse(contentPath: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-160">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-160">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreUploadSession
    name: 'deleteImageStoreUploadSession(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, options?: Object)'
      parameters:
        - id: sessionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-161">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-161">A GUID generated by the user for a file uploading.</span></span>
            <span data-ttu-id="7d81c-162">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-162">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_2
    name: 'deleteImageStoreUploadSession(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_1
    name: 'deleteImageStoreUploadSession(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreUploadSessionWithHttpOperationResponse
    name: 'deleteImageStoreUploadSessionWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSessionWithHttpOperationResponse(sessionId: string, options?: Object)'
      parameters:
        - id: sessionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-163">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-163">A GUID generated by the user for a file uploading.</span></span>
            <span data-ttu-id="7d81c-164">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-164">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteName
    name: 'deleteName(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-165">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-165">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteName_2
    name: 'deleteName(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteName_1
    name: 'deleteName(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteNameWithHttpOperationResponse
    name: 'deleteNameWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteNameWithHttpOperationResponse(nameId: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-166">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-166">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteProperty
    name: 'deleteProperty(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-167">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-167">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: propertyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-168">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-168">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteProperty_2
    name: 'deleteProperty(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: propertyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteProperty_1
    name: 'deleteProperty(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: propertyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deletePropertyWithHttpOperationResponse
    name: 'deletePropertyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deletePropertyWithHttpOperationResponse(nameId: string, propertyName: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-169">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-169">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: propertyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-170">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-170">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteRepairTask
    name: 'deleteRepairTask(RepairTaskDeleteDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options?: Object)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - azure-servicefabric.RepairTaskDeleteDescription
          description: |
            <span data-ttu-id="7d81c-171">삭제할 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-171">Describes the repair task to be deleted.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteRepairTask_2
    name: 'deleteRepairTask(RepairTaskDeleteDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - azure-servicefabric.RepairTaskDeleteDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteRepairTask_1
    name: 'deleteRepairTask(RepairTaskDeleteDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - azure-servicefabric.RepairTaskDeleteDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteRepairTaskWithHttpOperationResponse
    name: 'deleteRepairTaskWithHttpOperationResponse(RepairTaskDeleteDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTaskWithHttpOperationResponse(repairTaskDeleteDescription: RepairTaskDeleteDescription, options?: Object)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - azure-servicefabric.RepairTaskDeleteDescription
          description: |
            <span data-ttu-id="7d81c-172">삭제할 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-172">Describes the repair task to be deleted.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteService
    name: 'deleteService(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-173">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-173">The identity of the service.</span></span> <span data-ttu-id="7d81c-174">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-174">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-175">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-175">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-176">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-176">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteService_2
    name: 'deleteService(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteService_1
    name: 'deleteService(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deleteServiceWithHttpOperationResponse
    name: 'deleteServiceWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteServiceWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-177">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-177">The identity of the service.</span></span> <span data-ttu-id="7d81c-178">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-178">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-179">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-179">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-180">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-180">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deployServicePackageToNode
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-181">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-181">The name of the node.</span></span>
        - id: deployServicePackageToNodeDescription
          type:
            - azure-servicefabric.DeployServicePackageToNodeDescription
          description: |
            <span data-ttu-id="7d81c-182">Service Fabric 노드를 서비스 패키지를 배포 하는 것에 대 한 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-182">Describes information for deploying a service package to a Service Fabric node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deployServicePackageToNode_2
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription
          type:
            - azure-servicefabric.DeployServicePackageToNodeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deployServicePackageToNode_1
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription
          type:
            - azure-servicefabric.DeployServicePackageToNodeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.deployServicePackageToNodeWithHttpOperationResponse
    name: 'deployServicePackageToNodeWithHttpOperationResponse(string, DeployServicePackageToNodeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNodeWithHttpOperationResponse(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-183">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-183">The name of the node.</span></span>
        - id: deployServicePackageToNodeDescription
          type:
            - azure-servicefabric.DeployServicePackageToNodeDescription
          description: |
            <span data-ttu-id="7d81c-184">Service Fabric 노드를 서비스 패키지를 배포 하는 것에 대 한 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-184">Describes information for deploying a service package to a Service Fabric node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableApplicationBackup
    name: 'disableApplicationBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-185">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-185">The identity of the application.</span></span> <span data-ttu-id="7d81c-186">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-186">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-187">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-187">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-188">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-188">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableApplicationBackup_2
    name: 'disableApplicationBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableApplicationBackup_1
    name: 'disableApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableApplicationBackupWithHttpOperationResponse
    name: 'disableApplicationBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackupWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-189">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-189">The identity of the application.</span></span> <span data-ttu-id="7d81c-190">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-190">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-191">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-191">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-192">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-192">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableNode
    name: 'disableNode(string, DeactivationIntentDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-193">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-193">The name of the node.</span></span>
        - id: deactivationIntentDescription
          type:
            - azure-servicefabric.DeactivationIntentDescription
          description: |
            <span data-ttu-id="7d81c-194">노드를 비활성화하는 의도나 이유를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-194">Describes the intent or reason for deactivating the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableNode_2
    name: 'disableNode(string, DeactivationIntentDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: deactivationIntentDescription
          type:
            - azure-servicefabric.DeactivationIntentDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableNode_1
    name: 'disableNode(string, DeactivationIntentDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: deactivationIntentDescription
          type:
            - azure-servicefabric.DeactivationIntentDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableNodeWithHttpOperationResponse
    name: 'disableNodeWithHttpOperationResponse(string, DeactivationIntentDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNodeWithHttpOperationResponse(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-195">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-195">The name of the node.</span></span>
        - id: deactivationIntentDescription
          type:
            - azure-servicefabric.DeactivationIntentDescription
          description: |
            <span data-ttu-id="7d81c-196">노드를 비활성화하는 의도나 이유를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-196">Describes the intent or reason for deactivating the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disablePartitionBackup
    name: 'disablePartitionBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-197">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-197">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disablePartitionBackup_2
    name: 'disablePartitionBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disablePartitionBackup_1
    name: 'disablePartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disablePartitionBackupWithHttpOperationResponse
    name: 'disablePartitionBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackupWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-198">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-198">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableServiceBackup
    name: 'disableServiceBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-199">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-199">The identity of the service.</span></span> <span data-ttu-id="7d81c-200">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-200">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-201">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-201">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-202">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-202">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableServiceBackup_2
    name: 'disableServiceBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableServiceBackup_1
    name: 'disableServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.disableServiceBackupWithHttpOperationResponse
    name: 'disableServiceBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackupWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-203">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-203">The identity of the service.</span></span> <span data-ttu-id="7d81c-204">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-204">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-205">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-205">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-206">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-206">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableApplicationBackup
    name: 'enableApplicationBackup(string, EnableBackupDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-207">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-207">The identity of the application.</span></span> <span data-ttu-id="7d81c-208">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-208">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-209">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-209">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-210">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-210">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: |
            <span data-ttu-id="7d81c-211">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-211">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableApplicationBackup_2
    name: 'enableApplicationBackup(string, EnableBackupDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableApplicationBackup_1
    name: 'enableApplicationBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableApplicationBackupWithHttpOperationResponse
    name: 'enableApplicationBackupWithHttpOperationResponse(string, EnableBackupDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackupWithHttpOperationResponse(applicationId: string, enableBackupDescription: EnableBackupDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-212">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-212">The identity of the application.</span></span> <span data-ttu-id="7d81c-213">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-213">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-214">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-214">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-215">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-215">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: |
            <span data-ttu-id="7d81c-216">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-216">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableNode
    name: 'enableNode(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-217">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-217">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableNode_2
    name: 'enableNode(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableNode_1
    name: 'enableNode(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableNodeWithHttpOperationResponse
    name: 'enableNodeWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNodeWithHttpOperationResponse(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-218">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-218">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enablePartitionBackup
    name: 'enablePartitionBackup(string, EnableBackupDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-219">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-219">The identity of the partition.</span></span>
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: |
            <span data-ttu-id="7d81c-220">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-220">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enablePartitionBackup_2
    name: 'enablePartitionBackup(string, EnableBackupDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enablePartitionBackup_1
    name: 'enablePartitionBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enablePartitionBackupWithHttpOperationResponse
    name: 'enablePartitionBackupWithHttpOperationResponse(string, EnableBackupDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackupWithHttpOperationResponse(partitionId: string, enableBackupDescription: EnableBackupDescription, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-221">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-221">The identity of the partition.</span></span>
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: |
            <span data-ttu-id="7d81c-222">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-222">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableServiceBackup
    name: 'enableServiceBackup(string, EnableBackupDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-223">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-223">The identity of the service.</span></span> <span data-ttu-id="7d81c-224">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-224">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-225">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-225">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-226">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-226">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: |
            <span data-ttu-id="7d81c-227">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-227">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableServiceBackup_2
    name: 'enableServiceBackup(string, EnableBackupDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableServiceBackup_1
    name: 'enableServiceBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.enableServiceBackupWithHttpOperationResponse
    name: 'enableServiceBackupWithHttpOperationResponse(string, EnableBackupDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackupWithHttpOperationResponse(serviceId: string, enableBackupDescription: EnableBackupDescription, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-228">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-228">The identity of the service.</span></span> <span data-ttu-id="7d81c-229">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-229">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-230">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-230">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-231">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-231">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - azure-servicefabric.EnableBackupDescription
          description: |
            <span data-ttu-id="7d81c-232">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-232">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.forceApproveRepairTask
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options?: Object)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - azure-servicefabric.RepairTaskApproveDescription
          description: |
            <span data-ttu-id="7d81c-233">승인이 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-233">Describes the repair task to be approved.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.forceApproveRepairTask_2
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, Object, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options: Object, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - azure-servicefabric.RepairTaskApproveDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.forceApproveRepairTask_1
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - azure-servicefabric.RepairTaskApproveDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.forceApproveRepairTaskWithHttpOperationResponse
    name: 'forceApproveRepairTaskWithHttpOperationResponse(RepairTaskApproveDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTaskWithHttpOperationResponse(repairTaskApproveDescription: RepairTaskApproveDescription, options?: Object)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - azure-servicefabric.RepairTaskApproveDescription
          description: |
            <span data-ttu-id="7d81c-234">승인이 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-234">Describes the repair task to be approved.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getAadMetadata
    name: getAadMetadata(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.AadMetadataObject>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getAadMetadata_2
    name: 'getAadMetadata(Object, ServiceCallback<AadMetadataObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(options: Object, callback: ServiceCallback<AadMetadataObject>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.AadMetadataObject>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.AadMetadataObject>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getAadMetadata_1
    name: getAadMetadata(ServiceCallback<AadMetadataObject>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(callback: ServiceCallback<AadMetadataObject>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.AadMetadataObject>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.AadMetadataObject>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getAadMetadataWithHttpOperationResponse
    name: getAadMetadataWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadataWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.AadMetadataObject>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy
    name: 'getAllEntitiesBackedUpByPolicy(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, options?: Object)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-235">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-235">The name of the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupEntityList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_2
    name: 'getAllEntitiesBackedUpByPolicy(string, Object, ServiceCallback<PagedBackupEntityList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, options: Object, callback: ServiceCallback<PagedBackupEntityList>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupEntityList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupEntityList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_1
    name: 'getAllEntitiesBackedUpByPolicy(string, ServiceCallback<PagedBackupEntityList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, callback: ServiceCallback<PagedBackupEntityList>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupEntityList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupEntityList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicyWithHttpOperationResponse
    name: 'getAllEntitiesBackedUpByPolicyWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicyWithHttpOperationResponse(backupPolicyName: string, options?: Object)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-236">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-236">The name of the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedBackupEntityList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo
    name: 'getApplicationBackupConfigurationInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-237">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-237">The identity of the application.</span></span> <span data-ttu-id="7d81c-238">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-238">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-239">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-239">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-240">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-240">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupConfigurationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_2
    name: 'getApplicationBackupConfigurationInfo(string, Object, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, options: Object, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupConfigurationInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupConfigurationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_1
    name: 'getApplicationBackupConfigurationInfo(string, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupConfigurationInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupConfigurationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfoWithHttpOperationResponse
    name: 'getApplicationBackupConfigurationInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfoWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-241">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-241">The identity of the application.</span></span> <span data-ttu-id="7d81c-242">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-242">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-243">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-243">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-244">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-244">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedBackupConfigurationInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationBackupList
    name: 'getApplicationBackupList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-245">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-245">The identity of the application.</span></span> <span data-ttu-id="7d81c-246">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-246">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-247">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-247">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-248">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-248">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationBackupList_2
    name: 'getApplicationBackupList(string, Object, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, options: Object, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationBackupList_1
    name: 'getApplicationBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationBackupListWithHttpOperationResponse
    name: 'getApplicationBackupListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupListWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-249">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-249">The identity of the application.</span></span> <span data-ttu-id="7d81c-250">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-250">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-251">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-251">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-252">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-252">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedBackupInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationEventList
    name: 'getApplicationEventList(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-253">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-253">The identity of the application.</span></span> <span data-ttu-id="7d81c-254">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-254">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-255">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-255">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-256">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-256">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-257">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-257">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-258">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-258">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ApplicationEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationEventList_2
    name: 'getApplicationEventList(string, string, string, Object, ServiceCallback<ApplicationEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<ApplicationEvent[]>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ApplicationEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ApplicationEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationEventList_1
    name: 'getApplicationEventList(string, string, string, ServiceCallback<ApplicationEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ApplicationEvent[]>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ApplicationEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ApplicationEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationEventListWithHttpOperationResponse
    name: 'getApplicationEventListWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventListWithHttpOperationResponse(applicationId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-259">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-259">The identity of the application.</span></span> <span data-ttu-id="7d81c-260">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-260">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-261">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-261">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-262">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-262">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-263">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-263">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-264">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-264">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ApplicationEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationHealth
    name: 'getApplicationHealth(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-265">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-265">The identity of the application.</span></span> <span data-ttu-id="7d81c-266">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-266">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-267">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-267">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-268">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-268">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationHealth_2
    name: 'getApplicationHealth(string, Object, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, options: Object, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationHealth_1
    name: 'getApplicationHealth(string, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy
    name: 'getApplicationHealthUsingPolicy(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-269">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-269">The identity of the application.</span></span> <span data-ttu-id="7d81c-270">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-270">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-271">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-271">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-272">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-272">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2
    name: 'getApplicationHealthUsingPolicy(string, Object, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, options: Object, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1
    name: 'getApplicationHealthUsingPolicy(string, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicyWithHttpOperationResponse
    name: 'getApplicationHealthUsingPolicyWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicyWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-273">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-273">The identity of the application.</span></span> <span data-ttu-id="7d81c-274">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-274">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-275">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-275">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-276">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-276">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ApplicationHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthWithHttpOperationResponse
    name: 'getApplicationHealthWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-277">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-277">The identity of the application.</span></span> <span data-ttu-id="7d81c-278">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-278">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-279">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-279">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-280">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-280">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ApplicationHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationInfo
    name: 'getApplicationInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-281">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-281">The identity of the application.</span></span> <span data-ttu-id="7d81c-282">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-282">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-283">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-283">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-284">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-284">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ApplicationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationInfo_2
    name: 'getApplicationInfo(string, Object, ServiceCallback<ApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, options: Object, callback: ServiceCallback<ApplicationInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationInfo_1
    name: 'getApplicationInfo(string, ServiceCallback<ApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, callback: ServiceCallback<ApplicationInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoList
    name: getApplicationInfoList(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoList_2
    name: 'getApplicationInfoList(Object, ServiceCallback<PagedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(options: Object, callback: ServiceCallback<PagedApplicationInfoList>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedApplicationInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoList_1
    name: getApplicationInfoList(ServiceCallback<PagedApplicationInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(callback: ServiceCallback<PagedApplicationInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedApplicationInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoListWithHttpOperationResponse
    name: getApplicationInfoListWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoListWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoWithHttpOperationResponse
    name: 'getApplicationInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-285">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-285">The identity of the application.</span></span> <span data-ttu-id="7d81c-286">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-286">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-287">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-287">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-288">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-288">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ApplicationInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo
    name: 'getApplicationLoadInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-289">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-289">The identity of the application.</span></span> <span data-ttu-id="7d81c-290">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-290">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-291">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-291">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-292">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-292">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ApplicationLoadInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo_2
    name: 'getApplicationLoadInfo(string, Object, ServiceCallback<ApplicationLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, options: Object, callback: ServiceCallback<ApplicationLoadInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationLoadInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationLoadInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo_1
    name: 'getApplicationLoadInfo(string, ServiceCallback<ApplicationLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, callback: ServiceCallback<ApplicationLoadInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationLoadInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationLoadInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationLoadInfoWithHttpOperationResponse
    name: 'getApplicationLoadInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfoWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-293">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-293">The identity of the application.</span></span> <span data-ttu-id="7d81c-294">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-294">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-295">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-295">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-296">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-296">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ApplicationLoadInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationManifest
    name: 'getApplicationManifest(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-297">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-297">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-298">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-298">The version of the application type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ApplicationTypeManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationManifest_2
    name: 'getApplicationManifest(string, string, Object, ServiceCallback<ApplicationTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options: Object, callback: ServiceCallback<ApplicationTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: applicationTypeVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationTypeManifest>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationTypeManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationManifest_1
    name: 'getApplicationManifest(string, string, ServiceCallback<ApplicationTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ApplicationTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: applicationTypeVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationTypeManifest>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationTypeManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationManifestWithHttpOperationResponse
    name: 'getApplicationManifestWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifestWithHttpOperationResponse(applicationTypeName: string, applicationTypeVersion: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-299">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-299">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-300">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-300">The version of the application type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ApplicationTypeManifest>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationNameInfo
    name: 'getApplicationNameInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-301">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-301">The identity of the service.</span></span> <span data-ttu-id="7d81c-302">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-302">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-303">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-303">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-304">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-304">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ApplicationNameInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationNameInfo_2
    name: 'getApplicationNameInfo(string, Object, ServiceCallback<ApplicationNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, options: Object, callback: ServiceCallback<ApplicationNameInfo>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationNameInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationNameInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationNameInfo_1
    name: 'getApplicationNameInfo(string, ServiceCallback<ApplicationNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, callback: ServiceCallback<ApplicationNameInfo>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationNameInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationNameInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationNameInfoWithHttpOperationResponse
    name: 'getApplicationNameInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfoWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-305">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-305">The identity of the service.</span></span> <span data-ttu-id="7d81c-306">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-306">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-307">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-307">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-308">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-308">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ApplicationNameInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationsEventList
    name: 'getApplicationsEventList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-309">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-309">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-310">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-310">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ApplicationEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationsEventList_2
    name: 'getApplicationsEventList(string, string, Object, ServiceCallback<ApplicationEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<ApplicationEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ApplicationEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ApplicationEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationsEventList_1
    name: 'getApplicationsEventList(string, string, ServiceCallback<ApplicationEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ApplicationEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ApplicationEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ApplicationEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationsEventListWithHttpOperationResponse
    name: 'getApplicationsEventListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventListWithHttpOperationResponse(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-311">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-311">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-312">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-312">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ApplicationEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList
    name: getApplicationTypeInfoList(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2
    name: 'getApplicationTypeInfoList(Object, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(options: Object, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1
    name: getApplicationTypeInfoList(ServiceCallback<PagedApplicationTypeInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName
    name: 'getApplicationTypeInfoListByName(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-313">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-313">The name of the application type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2
    name: 'getApplicationTypeInfoListByName(string, Object, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options: Object, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1
    name: 'getApplicationTypeInfoListByName(string, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByNameWithHttpOperationResponse
    name: 'getApplicationTypeInfoListByNameWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByNameWithHttpOperationResponse(applicationTypeName: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-314">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-314">The name of the application type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationTypeInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListWithHttpOperationResponse
    name: getApplicationTypeInfoListWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationTypeInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationUpgrade
    name: 'getApplicationUpgrade(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-315">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-315">The identity of the application.</span></span> <span data-ttu-id="7d81c-316">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-316">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-317">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-317">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-318">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-318">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ApplicationUpgradeProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationUpgrade_2
    name: 'getApplicationUpgrade(string, Object, ServiceCallback<ApplicationUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, options: Object, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationUpgradeProgressInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationUpgradeProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationUpgrade_1
    name: 'getApplicationUpgrade(string, ServiceCallback<ApplicationUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ApplicationUpgradeProgressInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ApplicationUpgradeProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getApplicationUpgradeWithHttpOperationResponse
    name: 'getApplicationUpgradeWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgradeWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-319">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-319">The identity of the application.</span></span> <span data-ttu-id="7d81c-320">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-320">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-321">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-321">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-322">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-322">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ApplicationUpgradeProgressInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupPolicyByName
    name: 'getBackupPolicyByName(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, options?: Object)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-323">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-323">The name of the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.BackupPolicyDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupPolicyByName_2
    name: 'getBackupPolicyByName(string, Object, ServiceCallback<BackupPolicyDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, options: Object, callback: ServiceCallback<BackupPolicyDescription>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.BackupPolicyDescription>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.BackupPolicyDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupPolicyByName_1
    name: 'getBackupPolicyByName(string, ServiceCallback<BackupPolicyDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, callback: ServiceCallback<BackupPolicyDescription>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.BackupPolicyDescription>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.BackupPolicyDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupPolicyByNameWithHttpOperationResponse
    name: 'getBackupPolicyByNameWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByNameWithHttpOperationResponse(backupPolicyName: string, options?: Object)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-324">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-324">The name of the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.BackupPolicyDescription>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupPolicyList
    name: getBackupPolicyList(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupPolicyDescriptionList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupPolicyList_2
    name: 'getBackupPolicyList(Object, ServiceCallback<PagedBackupPolicyDescriptionList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(options: Object, callback: ServiceCallback<PagedBackupPolicyDescriptionList>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupPolicyDescriptionList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupPolicyDescriptionList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupPolicyList_1
    name: getBackupPolicyList(ServiceCallback<PagedBackupPolicyDescriptionList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(callback: ServiceCallback<PagedBackupPolicyDescriptionList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupPolicyDescriptionList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupPolicyDescriptionList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupPolicyListWithHttpOperationResponse
    name: getBackupPolicyListWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyListWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedBackupPolicyDescriptionList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupsFromBackupLocation
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options?: Object)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - azure-servicefabric.GetBackupByStorageQueryDescription
          description: |
            <span data-ttu-id="7d81c-325">필터 및 열거 백업에 사용할 백업 저장소 세부 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-325">Describes the filters and backup storage details to be used for enumerating backups.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_2
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, Object, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options: Object, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - azure-servicefabric.GetBackupByStorageQueryDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_1
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - azure-servicefabric.GetBackupByStorageQueryDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getBackupsFromBackupLocationWithHttpOperationResponse
    name: 'getBackupsFromBackupLocationWithHttpOperationResponse(GetBackupByStorageQueryDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocationWithHttpOperationResponse(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options?: Object)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - azure-servicefabric.GetBackupByStorageQueryDescription
          description: |
            <span data-ttu-id="7d81c-326">필터 및 열거 백업에 사용할 백업 저장소 세부 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-326">Describes the filters and backup storage details to be used for enumerating backups.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedBackupInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaos
    name: getChaos(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.Chaos>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaos_2
    name: 'getChaos(Object, ServiceCallback<Chaos>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(options: Object, callback: ServiceCallback<Chaos>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.Chaos>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.Chaos>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaos_1
    name: getChaos(ServiceCallback<Chaos>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(callback: ServiceCallback<Chaos>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.Chaos>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.Chaos>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosEvents
    name: getChaosEvents(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ChaosEventsSegment>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosEvents_2
    name: 'getChaosEvents(Object, ServiceCallback<ChaosEventsSegment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(options: Object, callback: ServiceCallback<ChaosEventsSegment>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ChaosEventsSegment>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ChaosEventsSegment>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosEvents_1
    name: getChaosEvents(ServiceCallback<ChaosEventsSegment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(callback: ServiceCallback<ChaosEventsSegment>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ChaosEventsSegment>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ChaosEventsSegment>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosEventsWithHttpOperationResponse
    name: getChaosEventsWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEventsWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ChaosEventsSegment>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosSchedule
    name: getChaosSchedule(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ChaosScheduleDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosSchedule_2
    name: 'getChaosSchedule(Object, ServiceCallback<ChaosScheduleDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(options: Object, callback: ServiceCallback<ChaosScheduleDescription>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ChaosScheduleDescription>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ChaosScheduleDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosSchedule_1
    name: getChaosSchedule(ServiceCallback<ChaosScheduleDescription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(callback: ServiceCallback<ChaosScheduleDescription>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ChaosScheduleDescription>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ChaosScheduleDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosScheduleWithHttpOperationResponse
    name: getChaosScheduleWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosScheduleWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ChaosScheduleDescription>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getChaosWithHttpOperationResponse
    name: getChaosWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.Chaos>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterConfiguration
    name: 'getClusterConfiguration(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, options?: Object)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-327">독립 실행형 클러스터 json 구성의 API 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-327">The API version of the Standalone cluster json configuration.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterConfiguration>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterConfiguration_2
    name: 'getClusterConfiguration(string, Object, ServiceCallback<ClusterConfiguration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, options: Object, callback: ServiceCallback<ClusterConfiguration>)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterConfiguration>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterConfiguration>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterConfiguration_1
    name: 'getClusterConfiguration(string, ServiceCallback<ClusterConfiguration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, callback: ServiceCallback<ClusterConfiguration>)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterConfiguration>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterConfiguration>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus
    name: getClusterConfigurationUpgradeStatus(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2
    name: 'getClusterConfigurationUpgradeStatus(Object, ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(options: Object, callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1
    name: getClusterConfigurationUpgradeStatus(ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatusWithHttpOperationResponse
    name: getClusterConfigurationUpgradeStatusWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatusWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationWithHttpOperationResponse
    name: 'getClusterConfigurationWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationWithHttpOperationResponse(configurationApiVersion: string, options?: Object)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-328">독립 실행형 클러스터 json 구성의 API 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-328">The API version of the Standalone cluster json configuration.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterConfiguration>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterEventList
    name: 'getClusterEventList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-329">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-329">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-330">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-330">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ClusterEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterEventList_2
    name: 'getClusterEventList(string, string, Object, ServiceCallback<ClusterEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<ClusterEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ClusterEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ClusterEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterEventList_1
    name: 'getClusterEventList(string, string, ServiceCallback<ClusterEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ClusterEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ClusterEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ClusterEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterEventListWithHttpOperationResponse
    name: 'getClusterEventListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventListWithHttpOperationResponse(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-331">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-331">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-332">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-332">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ClusterEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealth
    name: getClusterHealth(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealth_2
    name: 'getClusterHealth(Object, ServiceCallback<ClusterHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(options: Object, callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealth_1
    name: getClusterHealth(ServiceCallback<ClusterHealth>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunk
    name: getClusterHealthChunk(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealthChunk>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunk_2
    name: 'getClusterHealthChunk(Object, ServiceCallback<ClusterHealthChunk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(options: Object, callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterHealthChunk>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealthChunk>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunk_1
    name: getClusterHealthChunk(ServiceCallback<ClusterHealthChunk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterHealthChunk>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealthChunk>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters
    name: getClusterHealthChunkUsingPolicyAndAdvancedFilters(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealthChunk>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2
    name: 'getClusterHealthChunkUsingPolicyAndAdvancedFilters(Object, ServiceCallback<ClusterHealthChunk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options: Object, callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterHealthChunk>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealthChunk>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1
    name: getClusterHealthChunkUsingPolicyAndAdvancedFilters(ServiceCallback<ClusterHealthChunk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterHealthChunk>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealthChunk>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse
    name: getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterHealthChunk>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkWithHttpOperationResponse
    name: getClusterHealthChunkWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterHealthChunk>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy
    name: getClusterHealthUsingPolicy(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2
    name: 'getClusterHealthUsingPolicy(Object, ServiceCallback<ClusterHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(options: Object, callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1
    name: getClusterHealthUsingPolicy(ServiceCallback<ClusterHealth>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicyWithHttpOperationResponse
    name: getClusterHealthUsingPolicyWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicyWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterHealthWithHttpOperationResponse
    name: getClusterHealthWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterManifest
    name: getClusterManifest(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterManifest_2
    name: 'getClusterManifest(Object, ServiceCallback<ClusterManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(options: Object, callback: ServiceCallback<ClusterManifest>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterManifest>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterManifest_1
    name: getClusterManifest(ServiceCallback<ClusterManifest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(callback: ServiceCallback<ClusterManifest>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterManifest>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterManifestWithHttpOperationResponse
    name: getClusterManifestWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifestWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterManifest>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress
    name: getClusterUpgradeProgress(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterUpgradeProgressObject>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2
    name: 'getClusterUpgradeProgress(Object, ServiceCallback<ClusterUpgradeProgressObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(options: Object, callback: ServiceCallback<ClusterUpgradeProgressObject>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterUpgradeProgressObject>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterUpgradeProgressObject>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1
    name: getClusterUpgradeProgress(ServiceCallback<ClusterUpgradeProgressObject>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(callback: ServiceCallback<ClusterUpgradeProgressObject>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterUpgradeProgressObject>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterUpgradeProgressObject>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgressWithHttpOperationResponse
    name: getClusterUpgradeProgressWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgressWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterUpgradeProgressObject>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterVersion
    name: getClusterVersion(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ClusterVersion>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterVersion_2
    name: 'getClusterVersion(Object, ServiceCallback<ClusterVersion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(options: Object, callback: ServiceCallback<ClusterVersion>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterVersion>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterVersion>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterVersion_1
    name: getClusterVersion(ServiceCallback<ClusterVersion>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(callback: ServiceCallback<ClusterVersion>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ClusterVersion>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ClusterVersion>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getClusterVersionWithHttpOperationResponse
    name: getClusterVersionWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersionWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ClusterVersion>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus
    name: 'getComposeDeploymentStatus(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-333">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-333">The identity of the deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ComposeDeploymentStatusInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2
    name: 'getComposeDeploymentStatus(string, Object, ServiceCallback<ComposeDeploymentStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, options: Object, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ComposeDeploymentStatusInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ComposeDeploymentStatusInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1
    name: 'getComposeDeploymentStatus(string, ServiceCallback<ComposeDeploymentStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ComposeDeploymentStatusInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ComposeDeploymentStatusInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList
    name: getComposeDeploymentStatusList(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2
    name: 'getComposeDeploymentStatusList(Object, ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(options: Object, callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1
    name: getComposeDeploymentStatusList(ServiceCallback<PagedComposeDeploymentStatusInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusListWithHttpOperationResponse
    name: getComposeDeploymentStatusListWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusListWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedComposeDeploymentStatusInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusWithHttpOperationResponse
    name: 'getComposeDeploymentStatusWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusWithHttpOperationResponse(deploymentName: string, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-334">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-334">The identity of the deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ComposeDeploymentStatusInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress
    name: 'getComposeDeploymentUpgradeProgress(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-335">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-335">The identity of the deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2
    name: 'getComposeDeploymentUpgradeProgress(string, Object, ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options: Object, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1
    name: 'getComposeDeploymentUpgradeProgress(string, ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgressWithHttpOperationResponse
    name: 'getComposeDeploymentUpgradeProgressWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgressWithHttpOperationResponse(deploymentName: string, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-336">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-336">The identity of the deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-337">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-337">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-338">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-338">The identity of the application.</span></span> <span data-ttu-id="7d81c-339">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-339">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-340">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-340">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-341">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-341">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-342">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-342">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-343">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-343">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ContainerLogs>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_2
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, Object, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options: Object, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceManifestName
          type:
            - string
          description: ''
        - id: codePackageName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ContainerLogs>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ContainerLogs>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_1
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceManifestName
          type:
            - string
          description: ''
        - id: codePackageName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ContainerLogs>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ContainerLogs>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNodeWithHttpOperationResponse
    name: 'getContainerLogsDeployedOnNodeWithHttpOperationResponse(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNodeWithHttpOperationResponse(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-344">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-344">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-345">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-345">The identity of the application.</span></span> <span data-ttu-id="7d81c-346">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-346">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-347">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-347">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-348">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-348">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-349">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-349">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-350">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-350">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ContainerLogs>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getContainersEventList
    name: 'getContainersEventList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-351">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-351">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-352">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-352">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ContainerInstanceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getContainersEventList_2
    name: 'getContainersEventList(string, string, Object, ServiceCallback<ContainerInstanceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<ContainerInstanceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ContainerInstanceEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ContainerInstanceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getContainersEventList_1
    name: 'getContainersEventList(string, string, ServiceCallback<ContainerInstanceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ContainerInstanceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ContainerInstanceEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ContainerInstanceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getContainersEventListWithHttpOperationResponse
    name: 'getContainersEventListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventListWithHttpOperationResponse(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-353">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-353">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-354">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-354">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ContainerInstanceEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getCorrelatedEventList
    name: 'getCorrelatedEventList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, options?: Object)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-355">EventInstanceId 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-355">The EventInstanceId.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.FabricEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getCorrelatedEventList_2
    name: 'getCorrelatedEventList(string, Object, ServiceCallback<FabricEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, options: Object, callback: ServiceCallback<FabricEvent[]>)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.FabricEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.FabricEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getCorrelatedEventList_1
    name: 'getCorrelatedEventList(string, ServiceCallback<FabricEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, callback: ServiceCallback<FabricEvent[]>)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.FabricEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.FabricEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getCorrelatedEventListWithHttpOperationResponse
    name: 'getCorrelatedEventListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventListWithHttpOperationResponse(eventInstanceId: string, options?: Object)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-356">EventInstanceId 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-356">The EventInstanceId.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.FabricEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDataLossProgress
    name: 'getDataLossProgress(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-357">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-357">The identity of the service.</span></span> <span data-ttu-id="7d81c-358">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-358">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-359">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-359">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-360">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-360">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-361">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-361">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-362">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-362">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-363">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-363">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PartitionDataLossProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDataLossProgress_2
    name: 'getDataLossProgress(string, string, string, Object, ServiceCallback<PartitionDataLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options: Object, callback: ServiceCallback<PartitionDataLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionDataLossProgress>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionDataLossProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDataLossProgress_1
    name: 'getDataLossProgress(string, string, string, ServiceCallback<PartitionDataLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionDataLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionDataLossProgress>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionDataLossProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDataLossProgressWithHttpOperationResponse
    name: 'getDataLossProgressWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgressWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-364">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-364">The identity of the service.</span></span> <span data-ttu-id="7d81c-365">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-365">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-366">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-366">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-367">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-367">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-368">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-368">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-369">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-369">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-370">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-370">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PartitionDataLossProgress>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth
    name: 'getDeployedApplicationHealth(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-371">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-371">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-372">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-372">The identity of the application.</span></span> <span data-ttu-id="7d81c-373">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-373">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-374">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-374">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-375">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-375">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2
    name: 'getDeployedApplicationHealth(string, string, Object, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options: Object, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1
    name: 'getDeployedApplicationHealth(string, string, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-376">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-376">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-377">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-377">The identity of the application.</span></span> <span data-ttu-id="7d81c-378">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-378">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-379">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-379">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-380">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-380">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, Object, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options: Object, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse
    name: 'getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-381">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-381">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-382">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-382">The identity of the application.</span></span> <span data-ttu-id="7d81c-383">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-383">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-384">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-384">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-385">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-385">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthWithHttpOperationResponse
    name: 'getDeployedApplicationHealthWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthWithHttpOperationResponse(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-386">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-386">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-387">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-387">The identity of the application.</span></span> <span data-ttu-id="7d81c-388">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-388">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-389">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-389">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-390">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-390">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo
    name: 'getDeployedApplicationInfo(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-391">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-391">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-392">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-392">The identity of the application.</span></span> <span data-ttu-id="7d81c-393">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-393">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-394">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-394">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-395">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-395">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2
    name: 'getDeployedApplicationInfo(string, string, Object, ServiceCallback<DeployedApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options: Object, callback: ServiceCallback<DeployedApplicationInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedApplicationInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1
    name: 'getDeployedApplicationInfo(string, string, ServiceCallback<DeployedApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedApplicationInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedApplicationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList
    name: 'getDeployedApplicationInfoList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-396">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-396">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedDeployedApplicationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2
    name: 'getDeployedApplicationInfoList(string, Object, ServiceCallback<PagedDeployedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, options: Object, callback: ServiceCallback<PagedDeployedApplicationInfoList>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedDeployedApplicationInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedDeployedApplicationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1
    name: 'getDeployedApplicationInfoList(string, ServiceCallback<PagedDeployedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, callback: ServiceCallback<PagedDeployedApplicationInfoList>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedDeployedApplicationInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedDeployedApplicationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoListWithHttpOperationResponse
    name: 'getDeployedApplicationInfoListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoListWithHttpOperationResponse(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-397">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-397">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedDeployedApplicationInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoWithHttpOperationResponse
    name: 'getDeployedApplicationInfoWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoWithHttpOperationResponse(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-398">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-398">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-399">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-399">The identity of the application.</span></span> <span data-ttu-id="7d81c-400">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-400">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-401">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-401">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-402">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-402">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList
    name: 'getDeployedCodePackageInfoList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-403">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-403">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-404">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-404">The identity of the application.</span></span> <span data-ttu-id="7d81c-405">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-405">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-406">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-406">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-407">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-407">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedCodePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2
    name: 'getDeployedCodePackageInfoList(string, string, Object, ServiceCallback<DeployedCodePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options: Object, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedCodePackageInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedCodePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1
    name: 'getDeployedCodePackageInfoList(string, string, ServiceCallback<DeployedCodePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedCodePackageInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedCodePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoListWithHttpOperationResponse
    name: 'getDeployedCodePackageInfoListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoListWithHttpOperationResponse(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-408">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-408">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-409">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-409">The identity of the application.</span></span> <span data-ttu-id="7d81c-410">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-410">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-411">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-411">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-412">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-412">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.DeployedCodePackageInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth
    name: 'getDeployedServicePackageHealth(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-413">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-413">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-414">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-414">The identity of the application.</span></span> <span data-ttu-id="7d81c-415">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-415">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-416">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-416">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-417">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-417">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-418">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-418">The name of the service package.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.DeployedServicePackageHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2
    name: 'getDeployedServicePackageHealth(string, string, string, Object, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options: Object, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: servicePackageName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedServicePackageHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1
    name: 'getDeployedServicePackageHealth(string, string, string, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: servicePackageName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedServicePackageHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-419">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-419">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-420">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-420">The identity of the application.</span></span> <span data-ttu-id="7d81c-421">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-421">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-422">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-422">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-423">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-423">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-424">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-424">The name of the service package.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.DeployedServicePackageHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, Object, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options: Object, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: servicePackageName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedServicePackageHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: servicePackageName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedServicePackageHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse
    name: 'getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse(nodeName: string, applicationId: string, servicePackageName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-425">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-425">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-426">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-426">The identity of the application.</span></span> <span data-ttu-id="7d81c-427">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-427">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-428">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-428">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-429">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-429">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-430">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-430">The name of the service package.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthWithHttpOperationResponse
    name: 'getDeployedServicePackageHealthWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthWithHttpOperationResponse(nodeName: string, applicationId: string, servicePackageName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-431">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-431">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-432">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-432">The identity of the application.</span></span> <span data-ttu-id="7d81c-433">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-433">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-434">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-434">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-435">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-435">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-436">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-436">The name of the service package.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList
    name: 'getDeployedServicePackageInfoList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-437">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-437">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-438">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-438">The identity of the application.</span></span> <span data-ttu-id="7d81c-439">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-439">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-440">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-440">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-441">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-441">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServicePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2
    name: 'getDeployedServicePackageInfoList(string, string, Object, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options: Object, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServicePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1
    name: 'getDeployedServicePackageInfoList(string, string, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServicePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName
    name: 'getDeployedServicePackageInfoListByName(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-442">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-442">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-443">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-443">The identity of the application.</span></span> <span data-ttu-id="7d81c-444">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-444">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-445">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-445">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-446">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-446">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-447">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-447">The name of the service package.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServicePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2
    name: 'getDeployedServicePackageInfoListByName(string, string, string, Object, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options: Object, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: servicePackageName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServicePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1
    name: 'getDeployedServicePackageInfoListByName(string, string, string, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: servicePackageName
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServicePackageInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByNameWithHttpOperationResponse
    name: 'getDeployedServicePackageInfoListByNameWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByNameWithHttpOperationResponse(nodeName: string, applicationId: string, servicePackageName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-448">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-448">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-449">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-449">The identity of the application.</span></span> <span data-ttu-id="7d81c-450">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-450">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-451">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-451">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-452">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-452">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-453">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-453">The name of the service package.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListWithHttpOperationResponse
    name: 'getDeployedServicePackageInfoListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListWithHttpOperationResponse(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-454">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-454">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-455">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-455">The identity of the application.</span></span> <span data-ttu-id="7d81c-456">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-456">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-457">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-457">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-458">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-458">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-459">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-459">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-460">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-460">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-461">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-461">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, Object, ServiceCallback<DeployedServiceReplicaDetailInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options: Object, callback: ServiceCallback<DeployedServiceReplicaDetailInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, ServiceCallback<DeployedServiceReplicaDetailInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<DeployedServiceReplicaDetailInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-462">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-462">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-463">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-463">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, Object, ServiceCallback<DeployedServiceReplicaDetailInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options: Object, callback: ServiceCallback<DeployedServiceReplicaDetailInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, ServiceCallback<DeployedServiceReplicaDetailInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, callback: ServiceCallback<DeployedServiceReplicaDetailInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse
    name: 'getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse(nodeName: string, partitionId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-464">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-464">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-465">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-465">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaDetailInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoWithHttpOperationResponse
    name: 'getDeployedServiceReplicaDetailInfoWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoWithHttpOperationResponse(nodeName: string, partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-466">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-466">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-467">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-467">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-468">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-468">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaDetailInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList
    name: 'getDeployedServiceReplicaInfoList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-469">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-469">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-470">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-470">The identity of the application.</span></span> <span data-ttu-id="7d81c-471">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-471">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-472">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-472">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-473">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-473">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceReplicaInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2
    name: 'getDeployedServiceReplicaInfoList(string, string, Object, ServiceCallback<DeployedServiceReplicaInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options: Object, callback: ServiceCallback<DeployedServiceReplicaInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServiceReplicaInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceReplicaInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1
    name: 'getDeployedServiceReplicaInfoList(string, string, ServiceCallback<DeployedServiceReplicaInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServiceReplicaInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServiceReplicaInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceReplicaInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoListWithHttpOperationResponse
    name: 'getDeployedServiceReplicaInfoListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoListWithHttpOperationResponse(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-474">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-474">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-475">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-475">The identity of the application.</span></span> <span data-ttu-id="7d81c-476">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-476">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-477">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-477">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-478">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-478">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName
    name: 'getDeployedServiceTypeInfoByName(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-479">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-479">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-480">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-480">The identity of the application.</span></span> <span data-ttu-id="7d81c-481">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-481">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-482">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-482">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-483">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-483">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-484">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-484">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2
    name: 'getDeployedServiceTypeInfoByName(string, string, string, Object, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options: Object, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceTypeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1
    name: 'getDeployedServiceTypeInfoByName(string, string, string, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceTypeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByNameWithHttpOperationResponse
    name: 'getDeployedServiceTypeInfoByNameWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByNameWithHttpOperationResponse(nodeName: string, applicationId: string, serviceTypeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-485">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-485">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-486">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-486">The identity of the application.</span></span> <span data-ttu-id="7d81c-487">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-487">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-488">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-488">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-489">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-489">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-490">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-490">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceTypeInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList
    name: 'getDeployedServiceTypeInfoList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-491">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-491">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-492">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-492">The identity of the application.</span></span> <span data-ttu-id="7d81c-493">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-493">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-494">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-494">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-495">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-495">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2
    name: 'getDeployedServiceTypeInfoList(string, string, Object, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options: Object, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1
    name: 'getDeployedServiceTypeInfoList(string, string, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.DeployedServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoListWithHttpOperationResponse
    name: 'getDeployedServiceTypeInfoListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoListWithHttpOperationResponse(nodeName: string, applicationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-496">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-496">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-497">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-497">The identity of the application.</span></span> <span data-ttu-id="7d81c-498">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-498">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-499">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-499">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-500">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-500">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceTypeInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getFaultOperationList
    name: 'getFaultOperationList(number, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options?: Object)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |
            <span data-ttu-id="7d81c-501">사용자로 인한 작업에 대한 OperationType을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-501">Used to filter on OperationType for user-induced operations.</span></span>

            - <span data-ttu-id="7d81c-502">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="7d81c-502">65535 - select all</span></span>
            - <span data-ttu-id="7d81c-503">1-PartitionDataLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-503">1 - select PartitionDataLoss.</span></span>
            - <span data-ttu-id="7d81c-504">2-PartitionQuorumLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-504">2 - select PartitionQuorumLoss.</span></span>
            - <span data-ttu-id="7d81c-505">4 - select PartitionRestart.</span><span class="sxs-lookup"><span data-stu-id="7d81c-505">4 - select PartitionRestart.</span></span>
            - <span data-ttu-id="7d81c-506">8-NodeTransition 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-506">8 - select NodeTransition.</span></span>
        - id: stateFilter
          type:
            - number
          description: |
            <span data-ttu-id="7d81c-507">OperationState의 사용자로 인한 작업을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-507">Used to filter on OperationState's for user-induced operations.</span></span>

            - <span data-ttu-id="7d81c-508">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="7d81c-508">65535 - select All</span></span>
            - <span data-ttu-id="7d81c-509">1 - Running 선택</span><span class="sxs-lookup"><span data-stu-id="7d81c-509">1 - select Running</span></span>
            - <span data-ttu-id="7d81c-510">2-롤백하는 중 선택</span><span class="sxs-lookup"><span data-stu-id="7d81c-510">2 - select RollingBack</span></span>
            - <span data-ttu-id="7d81c-511">8-완료 됨을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-511">8 - select Completed</span></span>
            - <span data-ttu-id="7d81c-512">16-Faulted를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-512">16 - select Faulted</span></span>
            - <span data-ttu-id="7d81c-513">32 비트 취소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-513">32 - select Cancelled</span></span>
            - <span data-ttu-id="7d81c-514">64-ForceCancelled를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-514">64 - select ForceCancelled</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.OperationStatus[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getFaultOperationList_2
    name: 'getFaultOperationList(number, number, Object, ServiceCallback<OperationStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options: Object, callback: ServiceCallback<OperationStatus[]>)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: ''
        - id: stateFilter
          type:
            - number
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.OperationStatus[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.OperationStatus[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getFaultOperationList_1
    name: 'getFaultOperationList(number, number, ServiceCallback<OperationStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, callback: ServiceCallback<OperationStatus[]>)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: ''
        - id: stateFilter
          type:
            - number
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.OperationStatus[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.OperationStatus[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getFaultOperationListWithHttpOperationResponse
    name: 'getFaultOperationListWithHttpOperationResponse(number, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationListWithHttpOperationResponse(typeFilter: number, stateFilter: number, options?: Object)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |
            <span data-ttu-id="7d81c-515">사용자로 인한 작업에 대한 OperationType을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-515">Used to filter on OperationType for user-induced operations.</span></span>

            - <span data-ttu-id="7d81c-516">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="7d81c-516">65535 - select all</span></span>
            - <span data-ttu-id="7d81c-517">1-PartitionDataLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-517">1 - select PartitionDataLoss.</span></span>
            - <span data-ttu-id="7d81c-518">2-PartitionQuorumLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-518">2 - select PartitionQuorumLoss.</span></span>
            - <span data-ttu-id="7d81c-519">4 - select PartitionRestart.</span><span class="sxs-lookup"><span data-stu-id="7d81c-519">4 - select PartitionRestart.</span></span>
            - <span data-ttu-id="7d81c-520">8-NodeTransition 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-520">8 - select NodeTransition.</span></span>
        - id: stateFilter
          type:
            - number
          description: |
            <span data-ttu-id="7d81c-521">OperationState의 사용자로 인한 작업을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-521">Used to filter on OperationState's for user-induced operations.</span></span>

            - <span data-ttu-id="7d81c-522">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="7d81c-522">65535 - select All</span></span>
            - <span data-ttu-id="7d81c-523">1 - Running 선택</span><span class="sxs-lookup"><span data-stu-id="7d81c-523">1 - select Running</span></span>
            - <span data-ttu-id="7d81c-524">2-롤백하는 중 선택</span><span class="sxs-lookup"><span data-stu-id="7d81c-524">2 - select RollingBack</span></span>
            - <span data-ttu-id="7d81c-525">8-완료 됨을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-525">8 - select Completed</span></span>
            - <span data-ttu-id="7d81c-526">16-Faulted를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-526">16 - select Faulted</span></span>
            - <span data-ttu-id="7d81c-527">32 비트 취소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-527">32 - select Cancelled</span></span>
            - <span data-ttu-id="7d81c-528">64-ForceCancelled를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-528">64 - select ForceCancelled</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.OperationStatus[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreContent
    name: 'getImageStoreContent(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-529">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-529">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ImageStoreContent>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreContent_2
    name: 'getImageStoreContent(string, Object, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, options: Object, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ImageStoreContent>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ImageStoreContent>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreContent_1
    name: 'getImageStoreContent(string, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ImageStoreContent>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ImageStoreContent>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreContentWithHttpOperationResponse
    name: 'getImageStoreContentWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContentWithHttpOperationResponse(contentPath: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-530">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-530">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ImageStoreContent>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreRootContent
    name: getImageStoreRootContent(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ImageStoreContent>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreRootContent_2
    name: 'getImageStoreRootContent(Object, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(options: Object, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ImageStoreContent>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ImageStoreContent>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreRootContent_1
    name: getImageStoreRootContent(ServiceCallback<ImageStoreContent>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ImageStoreContent>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ImageStoreContent>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreRootContentWithHttpOperationResponse
    name: getImageStoreRootContentWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContentWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ImageStoreContent>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionById
    name: 'getImageStoreUploadSessionById(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, options?: Object)'
      parameters:
        - id: sessionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-531">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-531">A GUID generated by the user for a file uploading.</span></span>
            <span data-ttu-id="7d81c-532">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-532">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.UploadSession>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_2
    name: 'getImageStoreUploadSessionById(string, Object, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, options: Object, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.UploadSession>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.UploadSession>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_1
    name: 'getImageStoreUploadSessionById(string, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.UploadSession>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.UploadSession>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByIdWithHttpOperationResponse
    name: 'getImageStoreUploadSessionByIdWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByIdWithHttpOperationResponse(sessionId: string, options?: Object)'
      parameters:
        - id: sessionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-533">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-533">A GUID generated by the user for a file uploading.</span></span>
            <span data-ttu-id="7d81c-534">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-534">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.UploadSession>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath
    name: 'getImageStoreUploadSessionByPath(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-535">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-535">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.UploadSession>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_2
    name: 'getImageStoreUploadSessionByPath(string, Object, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, options: Object, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.UploadSession>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.UploadSession>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_1
    name: 'getImageStoreUploadSessionByPath(string, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.UploadSession>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.UploadSession>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPathWithHttpOperationResponse
    name: 'getImageStoreUploadSessionByPathWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPathWithHttpOperationResponse(contentPath: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-536">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-536">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.UploadSession>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNameExistsInfo
    name: 'getNameExistsInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-537">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-537">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNameExistsInfo_2
    name: 'getNameExistsInfo(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNameExistsInfo_1
    name: 'getNameExistsInfo(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNameExistsInfoWithHttpOperationResponse
    name: 'getNameExistsInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfoWithHttpOperationResponse(nameId: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-538">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-538">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeEventList
    name: 'getNodeEventList(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-539">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-539">The name of the node.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-540">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-540">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-541">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-541">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.NodeEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeEventList_2
    name: 'getNodeEventList(string, string, string, Object, ServiceCallback<NodeEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<NodeEvent[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.NodeEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.NodeEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeEventList_1
    name: 'getNodeEventList(string, string, string, ServiceCallback<NodeEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<NodeEvent[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.NodeEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.NodeEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeEventListWithHttpOperationResponse
    name: 'getNodeEventListWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventListWithHttpOperationResponse(nodeName: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-542">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-542">The name of the node.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-543">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-543">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-544">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-544">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.NodeEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeHealth
    name: 'getNodeHealth(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-545">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-545">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.NodeHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeHealth_2
    name: 'getNodeHealth(string, Object, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, options: Object, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeHealth_1
    name: 'getNodeHealth(string, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy
    name: 'getNodeHealthUsingPolicy(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-546">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-546">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.NodeHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2
    name: 'getNodeHealthUsingPolicy(string, Object, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, options: Object, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1
    name: 'getNodeHealthUsingPolicy(string, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicyWithHttpOperationResponse
    name: 'getNodeHealthUsingPolicyWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicyWithHttpOperationResponse(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-547">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-547">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.NodeHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeHealthWithHttpOperationResponse
    name: 'getNodeHealthWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthWithHttpOperationResponse(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-548">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-548">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.NodeHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeInfo
    name: 'getNodeInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-549">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-549">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.NodeInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeInfo_2
    name: 'getNodeInfo(string, Object, ServiceCallback<NodeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, options: Object, callback: ServiceCallback<NodeInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeInfo_1
    name: 'getNodeInfo(string, ServiceCallback<NodeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, callback: ServiceCallback<NodeInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeInfoList
    name: getNodeInfoList(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedNodeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeInfoList_2
    name: 'getNodeInfoList(Object, ServiceCallback<PagedNodeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(options: Object, callback: ServiceCallback<PagedNodeInfoList>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedNodeInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedNodeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeInfoList_1
    name: getNodeInfoList(ServiceCallback<PagedNodeInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(callback: ServiceCallback<PagedNodeInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedNodeInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedNodeInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeInfoListWithHttpOperationResponse
    name: getNodeInfoListWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoListWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedNodeInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeInfoWithHttpOperationResponse
    name: 'getNodeInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoWithHttpOperationResponse(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-550">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-550">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.NodeInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeLoadInfo
    name: 'getNodeLoadInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-551">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-551">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.NodeLoadInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeLoadInfo_2
    name: 'getNodeLoadInfo(string, Object, ServiceCallback<NodeLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, options: Object, callback: ServiceCallback<NodeLoadInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeLoadInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeLoadInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeLoadInfo_1
    name: 'getNodeLoadInfo(string, ServiceCallback<NodeLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, callback: ServiceCallback<NodeLoadInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeLoadInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeLoadInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeLoadInfoWithHttpOperationResponse
    name: 'getNodeLoadInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfoWithHttpOperationResponse(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-552">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-552">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.NodeLoadInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodesEventList
    name: 'getNodesEventList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-553">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-553">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-554">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-554">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.NodeEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodesEventList_2
    name: 'getNodesEventList(string, string, Object, ServiceCallback<NodeEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<NodeEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.NodeEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.NodeEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodesEventList_1
    name: 'getNodesEventList(string, string, ServiceCallback<NodeEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<NodeEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.NodeEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.NodeEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodesEventListWithHttpOperationResponse
    name: 'getNodesEventListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventListWithHttpOperationResponse(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-555">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-555">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-556">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-556">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.NodeEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress
    name: 'getNodeTransitionProgress(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-557">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-557">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-558">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-558">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-559">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-559">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.NodeTransitionProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress_2
    name: 'getNodeTransitionProgress(string, string, Object, ServiceCallback<NodeTransitionProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options: Object, callback: ServiceCallback<NodeTransitionProgress>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeTransitionProgress>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeTransitionProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress_1
    name: 'getNodeTransitionProgress(string, string, ServiceCallback<NodeTransitionProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, callback: ServiceCallback<NodeTransitionProgress>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.NodeTransitionProgress>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.NodeTransitionProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getNodeTransitionProgressWithHttpOperationResponse
    name: 'getNodeTransitionProgressWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgressWithHttpOperationResponse(nodeName: string, operationId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-560">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-560">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-561">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-561">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-562">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-562">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.NodeTransitionProgress>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7d81c-563">지정 된 azure nodejs 패키지용 package.json을 찾으려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-563">Attempts to find package.json for the given azure nodejs package.</span></span>
      <span data-ttu-id="7d81c-564">하는 경우 발견, 이름 및 버전을 반환 합니다. 참조 하 여 패키지의 package.json package.json 없으면 기본값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-564">If found, returns the name and version of the package by reading the package.json If package.json is not found, returns a default value.</span></span>
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: <span data-ttu-id="7d81c-565">특정 azure management 클라이언트의 디렉터리를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-565">pass the directory of the specific azure management client.</span></span>
      return:
        type:
          - Object
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo
    name: 'getPartitionBackupConfigurationInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-566">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-566">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PartitionBackupConfigurationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_2
    name: 'getPartitionBackupConfigurationInfo(string, Object, ServiceCallback<PartitionBackupConfigurationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, options: Object, callback: ServiceCallback<PartitionBackupConfigurationInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionBackupConfigurationInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionBackupConfigurationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_1
    name: 'getPartitionBackupConfigurationInfo(string, ServiceCallback<PartitionBackupConfigurationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, callback: ServiceCallback<PartitionBackupConfigurationInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionBackupConfigurationInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionBackupConfigurationInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfoWithHttpOperationResponse
    name: 'getPartitionBackupConfigurationInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfoWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-567">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-567">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PartitionBackupConfigurationInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupList
    name: 'getPartitionBackupList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-568">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-568">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupList_2
    name: 'getPartitionBackupList(string, Object, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, options: Object, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupList_1
    name: 'getPartitionBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupListWithHttpOperationResponse
    name: 'getPartitionBackupListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupListWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-569">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-569">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedBackupInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupProgress
    name: 'getPartitionBackupProgress(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-570">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-570">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.BackupProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupProgress_2
    name: 'getPartitionBackupProgress(string, Object, ServiceCallback<BackupProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, options: Object, callback: ServiceCallback<BackupProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.BackupProgressInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.BackupProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupProgress_1
    name: 'getPartitionBackupProgress(string, ServiceCallback<BackupProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, callback: ServiceCallback<BackupProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.BackupProgressInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.BackupProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionBackupProgressWithHttpOperationResponse
    name: 'getPartitionBackupProgressWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgressWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-571">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-571">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.BackupProgressInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionEventList
    name: 'getPartitionEventList(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-572">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-572">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-573">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-573">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-574">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-574">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.PartitionEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionEventList_2
    name: 'getPartitionEventList(string, string, string, Object, ServiceCallback<PartitionEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<PartitionEvent[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.PartitionEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.PartitionEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionEventList_1
    name: 'getPartitionEventList(string, string, string, ServiceCallback<PartitionEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<PartitionEvent[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.PartitionEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.PartitionEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionEventListWithHttpOperationResponse
    name: 'getPartitionEventListWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventListWithHttpOperationResponse(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-575">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-575">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-576">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-576">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-577">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-577">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.PartitionEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionHealth
    name: 'getPartitionHealth(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-578">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-578">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PartitionHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionHealth_2
    name: 'getPartitionHealth(string, Object, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, options: Object, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionHealth_1
    name: 'getPartitionHealth(string, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy
    name: 'getPartitionHealthUsingPolicy(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-579">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-579">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PartitionHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2
    name: 'getPartitionHealthUsingPolicy(string, Object, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, options: Object, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1
    name: 'getPartitionHealthUsingPolicy(string, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicyWithHttpOperationResponse
    name: 'getPartitionHealthUsingPolicyWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicyWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-580">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-580">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PartitionHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthWithHttpOperationResponse
    name: 'getPartitionHealthWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-581">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-581">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PartitionHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionInfo
    name: 'getPartitionInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-582">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-582">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ServicePartitionInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionInfo_2
    name: 'getPartitionInfo(string, Object, ServiceCallback<ServicePartitionInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, options: Object, callback: ServiceCallback<ServicePartitionInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServicePartitionInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServicePartitionInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionInfo_1
    name: 'getPartitionInfo(string, ServiceCallback<ServicePartitionInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, callback: ServiceCallback<ServicePartitionInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServicePartitionInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServicePartitionInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoList
    name: 'getPartitionInfoList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-583">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-583">The identity of the service.</span></span> <span data-ttu-id="7d81c-584">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-584">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-585">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-585">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-586">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-586">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedServicePartitionInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoList_2
    name: 'getPartitionInfoList(string, Object, ServiceCallback<PagedServicePartitionInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, options: Object, callback: ServiceCallback<PagedServicePartitionInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedServicePartitionInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedServicePartitionInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoList_1
    name: 'getPartitionInfoList(string, ServiceCallback<PagedServicePartitionInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, callback: ServiceCallback<PagedServicePartitionInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedServicePartitionInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedServicePartitionInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoListWithHttpOperationResponse
    name: 'getPartitionInfoListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoListWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-587">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-587">The identity of the service.</span></span> <span data-ttu-id="7d81c-588">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-588">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-589">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-589">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-590">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-590">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedServicePartitionInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoWithHttpOperationResponse
    name: 'getPartitionInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-591">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-591">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ServicePartitionInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation
    name: 'getPartitionLoadInformation(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-592">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-592">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PartitionLoadInformation>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation_2
    name: 'getPartitionLoadInformation(string, Object, ServiceCallback<PartitionLoadInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, options: Object, callback: ServiceCallback<PartitionLoadInformation>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionLoadInformation>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionLoadInformation>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation_1
    name: 'getPartitionLoadInformation(string, ServiceCallback<PartitionLoadInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, callback: ServiceCallback<PartitionLoadInformation>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionLoadInformation>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionLoadInformation>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionLoadInformationWithHttpOperationResponse
    name: 'getPartitionLoadInformationWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformationWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-593">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-593">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PartitionLoadInformation>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionReplicaEventList
    name: 'getPartitionReplicaEventList(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-594">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-594">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-595">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-595">The identifier of the replica.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-596">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-596">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-597">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-597">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ReplicaEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionReplicaEventList_2
    name: 'getPartitionReplicaEventList(string, string, string, string, Object, ServiceCallback<ReplicaEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<ReplicaEvent[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ReplicaEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ReplicaEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionReplicaEventList_1
    name: 'getPartitionReplicaEventList(string, string, string, string, ServiceCallback<ReplicaEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ReplicaEvent[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ReplicaEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ReplicaEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionReplicaEventListWithHttpOperationResponse
    name: 'getPartitionReplicaEventListWithHttpOperationResponse(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventListWithHttpOperationResponse(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-598">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-598">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-599">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-599">The identifier of the replica.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-600">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-600">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-601">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-601">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ReplicaEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionReplicasEventList
    name: 'getPartitionReplicasEventList(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-602">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-602">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-603">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-603">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-604">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-604">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ReplicaEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionReplicasEventList_2
    name: 'getPartitionReplicasEventList(string, string, string, Object, ServiceCallback<ReplicaEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<ReplicaEvent[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ReplicaEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ReplicaEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionReplicasEventList_1
    name: 'getPartitionReplicasEventList(string, string, string, ServiceCallback<ReplicaEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ReplicaEvent[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ReplicaEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ReplicaEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionReplicasEventListWithHttpOperationResponse
    name: 'getPartitionReplicasEventListWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventListWithHttpOperationResponse(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-605">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-605">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-606">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-606">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-607">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-607">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ReplicaEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress
    name: 'getPartitionRestartProgress(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-608">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-608">The identity of the service.</span></span> <span data-ttu-id="7d81c-609">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-609">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-610">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-610">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-611">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-611">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-612">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-612">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-613">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-613">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-614">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-614">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PartitionRestartProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress_2
    name: 'getPartitionRestartProgress(string, string, string, Object, ServiceCallback<PartitionRestartProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options: Object, callback: ServiceCallback<PartitionRestartProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionRestartProgress>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionRestartProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress_1
    name: 'getPartitionRestartProgress(string, string, string, ServiceCallback<PartitionRestartProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionRestartProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionRestartProgress>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionRestartProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionRestartProgressWithHttpOperationResponse
    name: 'getPartitionRestartProgressWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgressWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-615">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-615">The identity of the service.</span></span> <span data-ttu-id="7d81c-616">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-616">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-617">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-617">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-618">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-618">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-619">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-619">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-620">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-620">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-621">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-621">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PartitionRestartProgress>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionRestoreProgress
    name: 'getPartitionRestoreProgress(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-622">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-622">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.RestoreProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionRestoreProgress_2
    name: 'getPartitionRestoreProgress(string, Object, ServiceCallback<RestoreProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, options: Object, callback: ServiceCallback<RestoreProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RestoreProgressInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RestoreProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionRestoreProgress_1
    name: 'getPartitionRestoreProgress(string, ServiceCallback<RestoreProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, callback: ServiceCallback<RestoreProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RestoreProgressInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RestoreProgressInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionRestoreProgressWithHttpOperationResponse
    name: 'getPartitionRestoreProgressWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgressWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-623">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-623">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.RestoreProgressInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionsEventList
    name: 'getPartitionsEventList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-624">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-624">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-625">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-625">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.PartitionEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionsEventList_2
    name: 'getPartitionsEventList(string, string, Object, ServiceCallback<PartitionEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<PartitionEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.PartitionEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.PartitionEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionsEventList_1
    name: 'getPartitionsEventList(string, string, ServiceCallback<PartitionEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<PartitionEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.PartitionEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.PartitionEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPartitionsEventListWithHttpOperationResponse
    name: 'getPartitionsEventListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventListWithHttpOperationResponse(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-626">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-626">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-627">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-627">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.PartitionEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPropertyInfo
    name: 'getPropertyInfo(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-628">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-628">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: propertyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-629">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-629">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PropertyInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPropertyInfo_2
    name: 'getPropertyInfo(string, string, Object, ServiceCallback<PropertyInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, options: Object, callback: ServiceCallback<PropertyInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: propertyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PropertyInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PropertyInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPropertyInfo_1
    name: 'getPropertyInfo(string, string, ServiceCallback<PropertyInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, callback: ServiceCallback<PropertyInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: propertyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PropertyInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PropertyInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPropertyInfoList
    name: 'getPropertyInfoList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-630">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-630">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedPropertyInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPropertyInfoList_2
    name: 'getPropertyInfoList(string, Object, ServiceCallback<PagedPropertyInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, options: Object, callback: ServiceCallback<PagedPropertyInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedPropertyInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedPropertyInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPropertyInfoList_1
    name: 'getPropertyInfoList(string, ServiceCallback<PagedPropertyInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, callback: ServiceCallback<PagedPropertyInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedPropertyInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedPropertyInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPropertyInfoListWithHttpOperationResponse
    name: 'getPropertyInfoListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoListWithHttpOperationResponse(nameId: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-631">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-631">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedPropertyInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getPropertyInfoWithHttpOperationResponse
    name: 'getPropertyInfoWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoWithHttpOperationResponse(nameId: string, propertyName: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-632">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-632">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: propertyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-633">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-633">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PropertyInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList
    name: getProvisionedFabricCodeVersionInfoList(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.FabricCodeVersionInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2
    name: 'getProvisionedFabricCodeVersionInfoList(Object, ServiceCallback<FabricCodeVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(options: Object, callback: ServiceCallback<FabricCodeVersionInfo[]>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.FabricCodeVersionInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.FabricCodeVersionInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1
    name: 'getProvisionedFabricCodeVersionInfoList(ServiceCallback<FabricCodeVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(callback: ServiceCallback<FabricCodeVersionInfo[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.FabricCodeVersionInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.FabricCodeVersionInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse
    name: getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.FabricCodeVersionInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList
    name: getProvisionedFabricConfigVersionInfoList(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.FabricConfigVersionInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2
    name: 'getProvisionedFabricConfigVersionInfoList(Object, ServiceCallback<FabricConfigVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(options: Object, callback: ServiceCallback<FabricConfigVersionInfo[]>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.FabricConfigVersionInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.FabricConfigVersionInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1
    name: 'getProvisionedFabricConfigVersionInfoList(ServiceCallback<FabricConfigVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(callback: ServiceCallback<FabricConfigVersionInfo[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.FabricConfigVersionInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.FabricConfigVersionInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse
    name: getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.FabricConfigVersionInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getQuorumLossProgress
    name: 'getQuorumLossProgress(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-634">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-634">The identity of the service.</span></span> <span data-ttu-id="7d81c-635">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-635">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-636">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-636">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-637">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-637">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-638">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-638">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-639">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-639">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-640">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-640">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PartitionQuorumLossProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getQuorumLossProgress_2
    name: 'getQuorumLossProgress(string, string, string, Object, ServiceCallback<PartitionQuorumLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options: Object, callback: ServiceCallback<PartitionQuorumLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionQuorumLossProgress>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionQuorumLossProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getQuorumLossProgress_1
    name: 'getQuorumLossProgress(string, string, string, ServiceCallback<PartitionQuorumLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionQuorumLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PartitionQuorumLossProgress>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PartitionQuorumLossProgress>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getQuorumLossProgressWithHttpOperationResponse
    name: 'getQuorumLossProgressWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgressWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-641">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-641">The identity of the service.</span></span> <span data-ttu-id="7d81c-642">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-642">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-643">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-643">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-644">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-644">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-645">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-645">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-646">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-646">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-647">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-647">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PartitionQuorumLossProgress>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getRepairTaskList
    name: getRepairTaskList(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.RepairTask[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getRepairTaskList_2
    name: 'getRepairTaskList(Object, ServiceCallback<RepairTask[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(options: Object, callback: ServiceCallback<RepairTask[]>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.RepairTask[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.RepairTask[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getRepairTaskList_1
    name: 'getRepairTaskList(ServiceCallback<RepairTask[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(callback: ServiceCallback<RepairTask[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.RepairTask[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.RepairTask[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getRepairTaskListWithHttpOperationResponse
    name: getRepairTaskListWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskListWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.RepairTask[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaHealth
    name: 'getReplicaHealth(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-648">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-648">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-649">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-649">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ReplicaHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaHealth_2
    name: 'getReplicaHealth(string, string, Object, ServiceCallback<ReplicaHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, options: Object, callback: ServiceCallback<ReplicaHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ReplicaHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ReplicaHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaHealth_1
    name: 'getReplicaHealth(string, string, ServiceCallback<ReplicaHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, callback: ServiceCallback<ReplicaHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ReplicaHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ReplicaHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy
    name: 'getReplicaHealthUsingPolicy(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-650">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-650">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-651">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-651">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ReplicaHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2
    name: 'getReplicaHealthUsingPolicy(string, string, Object, ServiceCallback<ReplicaHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options: Object, callback: ServiceCallback<ReplicaHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ReplicaHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ReplicaHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1
    name: 'getReplicaHealthUsingPolicy(string, string, ServiceCallback<ReplicaHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, callback: ServiceCallback<ReplicaHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ReplicaHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ReplicaHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicyWithHttpOperationResponse
    name: 'getReplicaHealthUsingPolicyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicyWithHttpOperationResponse(partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-652">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-652">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-653">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-653">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ReplicaHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthWithHttpOperationResponse
    name: 'getReplicaHealthWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthWithHttpOperationResponse(partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-654">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-654">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-655">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-655">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ReplicaHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaInfo
    name: 'getReplicaInfo(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-656">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-656">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-657">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-657">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ReplicaInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaInfo_2
    name: 'getReplicaInfo(string, string, Object, ServiceCallback<ReplicaInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, options: Object, callback: ServiceCallback<ReplicaInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ReplicaInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ReplicaInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaInfo_1
    name: 'getReplicaInfo(string, string, ServiceCallback<ReplicaInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, callback: ServiceCallback<ReplicaInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ReplicaInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ReplicaInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoList
    name: 'getReplicaInfoList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-658">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-658">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedReplicaInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoList_2
    name: 'getReplicaInfoList(string, Object, ServiceCallback<PagedReplicaInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, options: Object, callback: ServiceCallback<PagedReplicaInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedReplicaInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedReplicaInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoList_1
    name: 'getReplicaInfoList(string, ServiceCallback<PagedReplicaInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, callback: ServiceCallback<PagedReplicaInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedReplicaInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedReplicaInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoListWithHttpOperationResponse
    name: 'getReplicaInfoListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoListWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-659">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-659">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedReplicaInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoWithHttpOperationResponse
    name: 'getReplicaInfoWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoWithHttpOperationResponse(partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-660">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-660">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-661">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-661">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ReplicaInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo
    name: 'getServiceBackupConfigurationInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-662">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-662">The identity of the service.</span></span> <span data-ttu-id="7d81c-663">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-663">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-664">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-664">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-665">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-665">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupConfigurationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_2
    name: 'getServiceBackupConfigurationInfo(string, Object, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, options: Object, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupConfigurationInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupConfigurationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_1
    name: 'getServiceBackupConfigurationInfo(string, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupConfigurationInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupConfigurationInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfoWithHttpOperationResponse
    name: 'getServiceBackupConfigurationInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfoWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-666">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-666">The identity of the service.</span></span> <span data-ttu-id="7d81c-667">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-667">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-668">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-668">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-669">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-669">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedBackupConfigurationInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceBackupList
    name: 'getServiceBackupList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-670">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-670">The identity of the service.</span></span> <span data-ttu-id="7d81c-671">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-671">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-672">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-672">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-673">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-673">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceBackupList_2
    name: 'getServiceBackupList(string, Object, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, options: Object, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceBackupList_1
    name: 'getServiceBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedBackupInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedBackupInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceBackupListWithHttpOperationResponse
    name: 'getServiceBackupListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupListWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-674">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-674">The identity of the service.</span></span> <span data-ttu-id="7d81c-675">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-675">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-676">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-676">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-677">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-677">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedBackupInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceDescription
    name: 'getServiceDescription(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-678">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-678">The identity of the service.</span></span> <span data-ttu-id="7d81c-679">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-679">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-680">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-680">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-681">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-681">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ServiceDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceDescription_2
    name: 'getServiceDescription(string, Object, ServiceCallback<ServiceDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, options: Object, callback: ServiceCallback<ServiceDescription>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceDescription>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceDescription_1
    name: 'getServiceDescription(string, ServiceCallback<ServiceDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, callback: ServiceCallback<ServiceDescription>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceDescription>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceDescription>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceDescriptionWithHttpOperationResponse
    name: 'getServiceDescriptionWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescriptionWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-682">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-682">The identity of the service.</span></span> <span data-ttu-id="7d81c-683">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-683">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-684">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-684">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-685">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-685">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ServiceDescription>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceEventList
    name: 'getServiceEventList(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-686">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-686">The identity of the service.</span></span> <span data-ttu-id="7d81c-687">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-687">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-688">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-688">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-689">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-689">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-690">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-690">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-691">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-691">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceEventList_2
    name: 'getServiceEventList(string, string, string, Object, ServiceCallback<ServiceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<ServiceEvent[]>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ServiceEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceEventList_1
    name: 'getServiceEventList(string, string, string, ServiceCallback<ServiceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ServiceEvent[]>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ServiceEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceEventListWithHttpOperationResponse
    name: 'getServiceEventListWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventListWithHttpOperationResponse(serviceId: string, startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-692">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-692">The identity of the service.</span></span> <span data-ttu-id="7d81c-693">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-693">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-694">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-694">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-695">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-695">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-696">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-696">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-697">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-697">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ServiceEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceHealth
    name: 'getServiceHealth(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-698">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-698">The identity of the service.</span></span> <span data-ttu-id="7d81c-699">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-699">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-700">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-700">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-701">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-701">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ServiceHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceHealth_2
    name: 'getServiceHealth(string, Object, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, options: Object, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceHealth_1
    name: 'getServiceHealth(string, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy
    name: 'getServiceHealthUsingPolicy(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-702">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-702">The identity of the service.</span></span> <span data-ttu-id="7d81c-703">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-703">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-704">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-704">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-705">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-705">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ServiceHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2
    name: 'getServiceHealthUsingPolicy(string, Object, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, options: Object, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1
    name: 'getServiceHealthUsingPolicy(string, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceHealth>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceHealth>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicyWithHttpOperationResponse
    name: 'getServiceHealthUsingPolicyWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicyWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-706">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-706">The identity of the service.</span></span> <span data-ttu-id="7d81c-707">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-707">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-708">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-708">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-709">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-709">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ServiceHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceHealthWithHttpOperationResponse
    name: 'getServiceHealthWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-710">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-710">The identity of the service.</span></span> <span data-ttu-id="7d81c-711">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-711">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-712">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-712">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-713">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-713">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ServiceHealth>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceInfo
    name: 'getServiceInfo(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-714">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-714">The identity of the application.</span></span> <span data-ttu-id="7d81c-715">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-715">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-716">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-716">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-717">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-717">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-718">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-718">The identity of the service.</span></span> <span data-ttu-id="7d81c-719">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-719">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-720">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-720">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-721">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-721">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ServiceInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceInfo_2
    name: 'getServiceInfo(string, string, Object, ServiceCallback<ServiceInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, options: Object, callback: ServiceCallback<ServiceInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceInfo_1
    name: 'getServiceInfo(string, string, ServiceCallback<ServiceInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, callback: ServiceCallback<ServiceInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceInfoList
    name: 'getServiceInfoList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-722">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-722">The identity of the application.</span></span> <span data-ttu-id="7d81c-723">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-723">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-724">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-724">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-725">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-725">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedServiceInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceInfoList_2
    name: 'getServiceInfoList(string, Object, ServiceCallback<PagedServiceInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, options: Object, callback: ServiceCallback<PagedServiceInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedServiceInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedServiceInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceInfoList_1
    name: 'getServiceInfoList(string, ServiceCallback<PagedServiceInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, callback: ServiceCallback<PagedServiceInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedServiceInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedServiceInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceInfoListWithHttpOperationResponse
    name: 'getServiceInfoListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoListWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-726">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-726">The identity of the application.</span></span> <span data-ttu-id="7d81c-727">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-727">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-728">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-728">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-729">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-729">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedServiceInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceInfoWithHttpOperationResponse
    name: 'getServiceInfoWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoWithHttpOperationResponse(applicationId: string, serviceId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-730">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-730">The identity of the application.</span></span> <span data-ttu-id="7d81c-731">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-731">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-732">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-732">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-733">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-733">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-734">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-734">The identity of the service.</span></span> <span data-ttu-id="7d81c-735">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-735">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-736">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-736">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-737">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-737">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ServiceInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceManifest
    name: 'getServiceManifest(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-738">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-738">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-739">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-739">The version of the application type.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-740">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-740">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ServiceTypeManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceManifest_2
    name: 'getServiceManifest(string, string, string, Object, ServiceCallback<ServiceTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options: Object, callback: ServiceCallback<ServiceTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: applicationTypeVersion
          type:
            - string
          description: ''
        - id: serviceManifestName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceTypeManifest>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceTypeManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceManifest_1
    name: 'getServiceManifest(string, string, string, ServiceCallback<ServiceTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, callback: ServiceCallback<ServiceTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: applicationTypeVersion
          type:
            - string
          description: ''
        - id: serviceManifestName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceTypeManifest>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceTypeManifest>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceManifestWithHttpOperationResponse
    name: 'getServiceManifestWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifestWithHttpOperationResponse(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-741">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-741">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-742">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-742">The version of the application type.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-743">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-743">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeManifest>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceNameInfo
    name: 'getServiceNameInfo(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-744">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-744">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ServiceNameInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceNameInfo_2
    name: 'getServiceNameInfo(string, Object, ServiceCallback<ServiceNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, options: Object, callback: ServiceCallback<ServiceNameInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceNameInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceNameInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceNameInfo_1
    name: 'getServiceNameInfo(string, ServiceCallback<ServiceNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, callback: ServiceCallback<ServiceNameInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceNameInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceNameInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceNameInfoWithHttpOperationResponse
    name: 'getServiceNameInfoWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfoWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-745">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-745">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ServiceNameInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServicesEventList
    name: 'getServicesEventList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-746">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-746">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-747">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-747">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServicesEventList_2
    name: 'getServicesEventList(string, string, Object, ServiceCallback<ServiceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, options: Object, callback: ServiceCallback<ServiceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ServiceEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServicesEventList_1
    name: 'getServicesEventList(string, string, ServiceCallback<ServiceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ServiceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: ''
        - id: endTimeUtc
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ServiceEvent[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceEvent[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServicesEventListWithHttpOperationResponse
    name: 'getServicesEventListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventListWithHttpOperationResponse(startTimeUtc: string, endTimeUtc: string, options?: Object)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-748">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-748">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: endTimeUtc
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-749">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-749">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ServiceEvent[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoByName
    name: 'getServiceTypeInfoByName(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-750">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-750">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-751">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-751">The version of the application type.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-752">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-752">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ServiceTypeInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoByName_2
    name: 'getServiceTypeInfoByName(string, string, string, Object, ServiceCallback<ServiceTypeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options: Object, callback: ServiceCallback<ServiceTypeInfo>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: applicationTypeVersion
          type:
            - string
          description: ''
        - id: serviceTypeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceTypeInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceTypeInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoByName_1
    name: 'getServiceTypeInfoByName(string, string, string, ServiceCallback<ServiceTypeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, callback: ServiceCallback<ServiceTypeInfo>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: applicationTypeVersion
          type:
            - string
          description: ''
        - id: serviceTypeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ServiceTypeInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ServiceTypeInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoByNameWithHttpOperationResponse
    name: 'getServiceTypeInfoByNameWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByNameWithHttpOperationResponse(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-753">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-753">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-754">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-754">The version of the application type.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-755">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-755">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList
    name: 'getServiceTypeInfoList(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-756">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-756">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-757">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-757">The version of the application type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList_2
    name: 'getServiceTypeInfoList(string, string, Object, ServiceCallback<ServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options: Object, callback: ServiceCallback<ServiceTypeInfo[]>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: applicationTypeVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ServiceTypeInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList_1
    name: 'getServiceTypeInfoList(string, string, ServiceCallback<ServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ServiceTypeInfo[]>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: applicationTypeVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-servicefabric.ServiceTypeInfo[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-servicefabric.ServiceTypeInfo[]>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoListWithHttpOperationResponse
    name: 'getServiceTypeInfoListWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoListWithHttpOperationResponse(applicationTypeName: string, applicationTypeVersion: string, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-758">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-758">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-759">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-759">The version of the application type.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeInfo[]>>'
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getSubNameInfoList
    name: 'getSubNameInfoList(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-760">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-760">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PagedSubNameInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getSubNameInfoList_2
    name: 'getSubNameInfoList(string, Object, ServiceCallback<PagedSubNameInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, options: Object, callback: ServiceCallback<PagedSubNameInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedSubNameInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedSubNameInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getSubNameInfoList_1
    name: 'getSubNameInfoList(string, ServiceCallback<PagedSubNameInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, callback: ServiceCallback<PagedSubNameInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PagedSubNameInfoList>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PagedSubNameInfoList>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getSubNameInfoListWithHttpOperationResponse
    name: 'getSubNameInfoListWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoListWithHttpOperationResponse(nameId: string, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-761">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-761">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PagedSubNameInfoList>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState
    name: getUpgradeOrchestrationServiceState(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.UpgradeOrchestrationServiceState>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_2
    name: 'getUpgradeOrchestrationServiceState(Object, ServiceCallback<UpgradeOrchestrationServiceState>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(options: Object, callback: ServiceCallback<UpgradeOrchestrationServiceState>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.UpgradeOrchestrationServiceState>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.UpgradeOrchestrationServiceState>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_1
    name: getUpgradeOrchestrationServiceState(ServiceCallback<UpgradeOrchestrationServiceState>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(callback: ServiceCallback<UpgradeOrchestrationServiceState>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.UpgradeOrchestrationServiceState>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.UpgradeOrchestrationServiceState>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceStateWithHttpOperationResponse
    name: getUpgradeOrchestrationServiceStateWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceStateWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.UpgradeOrchestrationServiceState>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeContainerApi
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-762">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-762">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-763">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-763">The identity of the application.</span></span> <span data-ttu-id="7d81c-764">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-764">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-765">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-765">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-766">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-766">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-767">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-767">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-768">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-768">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageInstanceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-769">Service Fabric 노드에 배포된 코드 패키지 인스턴스를 고유하게 식별하는 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-769">ID that uniquely identifies a code package instance deployed on a service fabric node.</span></span>
        - id: containerApiRequestBody
          type:
            - azure-servicefabric.ContainerApiRequestBody
          description: |
            <span data-ttu-id="7d81c-770">컨테이너 API 호출에 대 한 매개 변수</span><span class="sxs-lookup"><span data-stu-id="7d81c-770">Parameters for making container API call</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ContainerApiResponse>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeContainerApi_2
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, Object, ServiceCallback<ContainerApiResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options: Object, callback: ServiceCallback<ContainerApiResponse>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceManifestName
          type:
            - string
          description: ''
        - id: codePackageName
          type:
            - string
          description: ''
        - id: codePackageInstanceId
          type:
            - string
          description: ''
        - id: containerApiRequestBody
          type:
            - azure-servicefabric.ContainerApiRequestBody
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ContainerApiResponse>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ContainerApiResponse>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeContainerApi_1
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, ServiceCallback<ContainerApiResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, callback: ServiceCallback<ContainerApiResponse>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: serviceManifestName
          type:
            - string
          description: ''
        - id: codePackageName
          type:
            - string
          description: ''
        - id: codePackageInstanceId
          type:
            - string
          description: ''
        - id: containerApiRequestBody
          type:
            - azure-servicefabric.ContainerApiRequestBody
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ContainerApiResponse>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ContainerApiResponse>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeContainerApiWithHttpOperationResponse
    name: 'invokeContainerApiWithHttpOperationResponse(string, string, string, string, string, ContainerApiRequestBody, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApiWithHttpOperationResponse(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-771">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-771">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-772">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-772">The identity of the application.</span></span> <span data-ttu-id="7d81c-773">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-773">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-774">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-774">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-775">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-775">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-776">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-776">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-777">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-777">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageInstanceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-778">Service Fabric 노드에 배포된 코드 패키지 인스턴스를 고유하게 식별하는 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-778">ID that uniquely identifies a code package instance deployed on a service fabric node.</span></span>
        - id: containerApiRequestBody
          type:
            - azure-servicefabric.ContainerApiRequestBody
          description: |
            <span data-ttu-id="7d81c-779">컨테이너 API 호출에 대 한 매개 변수</span><span class="sxs-lookup"><span data-stu-id="7d81c-779">Parameters for making container API call</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ContainerApiResponse>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand
    name: 'invokeInfrastructureCommand(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, options?: Object)'
      parameters:
        - id: command
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-780">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-780">The text of the command to be invoked.</span></span> <span data-ttu-id="7d81c-781">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-781">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2
    name: 'invokeInfrastructureCommand(string, Object, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, options: Object, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<string>
          description: ''
      return:
        type:
          - Promise<string>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1
    name: 'invokeInfrastructureCommand(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<string>
          description: ''
      return:
        type:
          - Promise<string>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommandWithHttpOperationResponse
    name: 'invokeInfrastructureCommandWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommandWithHttpOperationResponse(command: string, options?: Object)'
      parameters:
        - id: command
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-782">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-782">The text of the command to be invoked.</span></span> <span data-ttu-id="7d81c-783">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-783">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<string>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery
    name: 'invokeInfrastructureQuery(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, options?: Object)'
      parameters:
        - id: command
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-784">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-784">The text of the command to be invoked.</span></span> <span data-ttu-id="7d81c-785">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-785">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2
    name: 'invokeInfrastructureQuery(string, Object, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, options: Object, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<string>
          description: ''
      return:
        type:
          - Promise<string>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1
    name: 'invokeInfrastructureQuery(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<string>
          description: ''
      return:
        type:
          - Promise<string>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureQueryWithHttpOperationResponse
    name: 'invokeInfrastructureQueryWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQueryWithHttpOperationResponse(command: string, options?: Object)'
      parameters:
        - id: command
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-786">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-786">The text of the command to be invoked.</span></span> <span data-ttu-id="7d81c-787">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-787">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<string>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshApplication
    name: meshApplication
    fullName: meshApplication
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshApplication: MeshApplication'
      return:
        type:
          - azure-servicefabric.MeshApplication
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshCodePackage
    name: meshCodePackage
    fullName: meshCodePackage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshCodePackage: MeshCodePackage'
      return:
        type:
          - azure-servicefabric.MeshCodePackage
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshGateway
    name: meshGateway
    fullName: meshGateway
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshGateway: MeshGateway'
      return:
        type:
          - azure-servicefabric.MeshGateway
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshNetwork
    name: meshNetwork
    fullName: meshNetwork
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshNetwork: MeshNetwork'
      return:
        type:
          - azure-servicefabric.MeshNetwork
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshSecret
    name: meshSecret
    fullName: meshSecret
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshSecret: MeshSecret'
      return:
        type:
          - azure-servicefabric.MeshSecret
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshSecretValue
    name: meshSecretValue
    fullName: meshSecretValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshSecretValue: MeshSecretValue'
      return:
        type:
          - azure-servicefabric.MeshSecretValue
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshService
    name: meshService
    fullName: meshService
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshService: MeshService'
      return:
        type:
          - azure-servicefabric.MeshService
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshServiceReplica
    name: meshServiceReplica
    fullName: meshServiceReplica
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshServiceReplica: MeshServiceReplica'
      return:
        type:
          - azure-servicefabric.MeshServiceReplica
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.meshVolume
    name: meshVolume
    fullName: meshVolume
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshVolume: MeshVolume'
      return:
        type:
          - azure-servicefabric.MeshVolume
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.postChaosSchedule
    name: 'postChaosSchedule(ChaosScheduleDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, options?: Object)'
      parameters:
        - id: chaosSchedule
          type:
            - azure-servicefabric.ChaosScheduleDescription
          description: |
            <span data-ttu-id="7d81c-788">비정상 상황에서 사용 하는 일정을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-788">Describes the schedule used by Chaos.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.postChaosSchedule_2
    name: 'postChaosSchedule(ChaosScheduleDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosSchedule
          type:
            - azure-servicefabric.ChaosScheduleDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.postChaosSchedule_1
    name: 'postChaosSchedule(ChaosScheduleDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosSchedule
          type:
            - azure-servicefabric.ChaosScheduleDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.postChaosScheduleWithHttpOperationResponse
    name: 'postChaosScheduleWithHttpOperationResponse(ChaosScheduleDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosScheduleWithHttpOperationResponse(chaosSchedule: ChaosScheduleDescription, options?: Object)'
      parameters:
        - id: chaosSchedule
          type:
            - azure-servicefabric.ChaosScheduleDescription
          description: |
            <span data-ttu-id="7d81c-789">비정상 상황에서 사용 하는 일정을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-789">Describes the schedule used by Chaos.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.provisionApplicationType
    name: 'provisionApplicationType(ProvisionApplicationTypeDescriptionBase, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: ProvisionApplicationTypeDescriptionBase, options?: Object)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - azure-servicefabric.ProvisionApplicationTypeDescriptionBase
          description: |
            <span data-ttu-id="7d81c-790">이미지 저장소 기반 프로 비전 또는 외부 저장소 기반 프로 비전을 지 원하는 프로 비전 응용 프로그램 형식 설명의 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-790">The base type of provision application type description which supports either image store-based provision or external store-based provision.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.provisionApplicationType_2
    name: 'provisionApplicationType(ProvisionApplicationTypeDescriptionBase, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: ProvisionApplicationTypeDescriptionBase, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - azure-servicefabric.ProvisionApplicationTypeDescriptionBase
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.provisionApplicationType_1
    name: 'provisionApplicationType(ProvisionApplicationTypeDescriptionBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: ProvisionApplicationTypeDescriptionBase, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - azure-servicefabric.ProvisionApplicationTypeDescriptionBase
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.provisionApplicationTypeWithHttpOperationResponse
    name: 'provisionApplicationTypeWithHttpOperationResponse(ProvisionApplicationTypeDescriptionBase, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationTypeWithHttpOperationResponse(provisionApplicationTypeDescriptionBaseRequiredBodyParam: ProvisionApplicationTypeDescriptionBase, options?: Object)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - azure-servicefabric.ProvisionApplicationTypeDescriptionBase
          description: |
            <span data-ttu-id="7d81c-791">이미지 저장소 기반 프로 비전 또는 외부 저장소 기반 프로 비전을 지 원하는 프로 비전 응용 프로그램 형식 설명의 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-791">The base type of provision application type description which supports either image store-based provision or external store-based provision.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.provisionCluster
    name: 'provisionCluster(ProvisionFabricDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options?: Object)'
      parameters:
        - id: provisionFabricDescription
          type:
            - azure-servicefabric.ProvisionFabricDescription
          description: |
            <span data-ttu-id="7d81c-792">클러스터를 프로 비전에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-792">Describes the parameters for provisioning a cluster.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.provisionCluster_2
    name: 'provisionCluster(ProvisionFabricDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionFabricDescription
          type:
            - azure-servicefabric.ProvisionFabricDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.provisionCluster_1
    name: 'provisionCluster(ProvisionFabricDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionFabricDescription
          type:
            - azure-servicefabric.ProvisionFabricDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.provisionClusterWithHttpOperationResponse
    name: 'provisionClusterWithHttpOperationResponse(ProvisionFabricDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionClusterWithHttpOperationResponse(provisionFabricDescription: ProvisionFabricDescription, options?: Object)'
      parameters:
        - id: provisionFabricDescription
          type:
            - azure-servicefabric.ProvisionFabricDescription
          description: |
            <span data-ttu-id="7d81c-793">클러스터를 프로 비전에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-793">Describes the parameters for provisioning a cluster.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.putProperty
    name: 'putProperty(string, PropertyDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-794">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-794">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: propertyDescription
          type:
            - azure-servicefabric.PropertyDescription
          description: |
            <span data-ttu-id="7d81c-795">만들 Service Fabric 속성을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-795">Describes the Service Fabric property to be created.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.putProperty_2
    name: 'putProperty(string, PropertyDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: propertyDescription
          type:
            - azure-servicefabric.PropertyDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.putProperty_1
    name: 'putProperty(string, PropertyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: propertyDescription
          type:
            - azure-servicefabric.PropertyDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.putPropertyWithHttpOperationResponse
    name: 'putPropertyWithHttpOperationResponse(string, PropertyDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putPropertyWithHttpOperationResponse(nameId: string, propertyDescription: PropertyDescription, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-796">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-796">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: propertyDescription
          type:
            - azure-servicefabric.PropertyDescription
          description: |
            <span data-ttu-id="7d81c-797">만들 Service Fabric 속성을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-797">Describes the Service Fabric property to be created.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverAllPartitions
    name: recoverAllPartitions(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverAllPartitions_2
    name: 'recoverAllPartitions(Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverAllPartitions_1
    name: recoverAllPartitions(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverAllPartitionsWithHttpOperationResponse
    name: recoverAllPartitionsWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitionsWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverPartition
    name: 'recoverPartition(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-798">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-798">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverPartition_2
    name: 'recoverPartition(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverPartition_1
    name: 'recoverPartition(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverPartitionWithHttpOperationResponse
    name: 'recoverPartitionWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartitionWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-799">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-799">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverServicePartitions
    name: 'recoverServicePartitions(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-800">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-800">The identity of the service.</span></span> <span data-ttu-id="7d81c-801">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-801">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-802">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-802">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-803">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-803">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverServicePartitions_2
    name: 'recoverServicePartitions(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverServicePartitions_1
    name: 'recoverServicePartitions(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverServicePartitionsWithHttpOperationResponse
    name: 'recoverServicePartitionsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitionsWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-804">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-804">The identity of the service.</span></span> <span data-ttu-id="7d81c-805">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-805">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-806">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-806">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-807">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-807">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverSystemPartitions
    name: recoverSystemPartitions(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverSystemPartitions_2
    name: 'recoverSystemPartitions(Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverSystemPartitions_1
    name: recoverSystemPartitions(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.recoverSystemPartitionsWithHttpOperationResponse
    name: recoverSystemPartitionsWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitionsWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeComposeDeployment
    name: 'removeComposeDeployment(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-808">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-808">The identity of the deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeComposeDeployment_2
    name: 'removeComposeDeployment(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeComposeDeployment_1
    name: 'removeComposeDeployment(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeComposeDeploymentWithHttpOperationResponse
    name: 'removeComposeDeploymentWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeploymentWithHttpOperationResponse(deploymentName: string, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-809">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-809">The identity of the deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeNodeState
    name: 'removeNodeState(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-810">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-810">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeNodeState_2
    name: 'removeNodeState(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeNodeState_1
    name: 'removeNodeState(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeNodeStateWithHttpOperationResponse
    name: 'removeNodeStateWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeStateWithHttpOperationResponse(nodeName: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-811">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-811">The name of the node.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeReplica
    name: 'removeReplica(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-812">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-812">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-813">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-813">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-814">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-814">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeReplica_2
    name: 'removeReplica(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeReplica_1
    name: 'removeReplica(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.removeReplicaWithHttpOperationResponse
    name: 'removeReplicaWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplicaWithHttpOperationResponse(nodeName: string, partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-815">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-815">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-816">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-816">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-817">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-817">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportApplicationHealth
    name: 'reportApplicationHealth(string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-818">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-818">The identity of the application.</span></span> <span data-ttu-id="7d81c-819">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-819">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-820">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-820">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-821">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-821">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-822">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-822">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-823">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-823">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportApplicationHealth_2
    name: 'reportApplicationHealth(string, HealthInformation, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportApplicationHealth_1
    name: 'reportApplicationHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportApplicationHealthWithHttpOperationResponse
    name: 'reportApplicationHealthWithHttpOperationResponse(string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealthWithHttpOperationResponse(applicationId: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-824">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-824">The identity of the application.</span></span> <span data-ttu-id="7d81c-825">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-825">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-826">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-826">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-827">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-827">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-828">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-828">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-829">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-829">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportClusterHealth
    name: 'reportClusterHealth(HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-830">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-830">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-831">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-831">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportClusterHealth_2
    name: 'reportClusterHealth(HealthInformation, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportClusterHealth_1
    name: 'reportClusterHealth(HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportClusterHealthWithHttpOperationResponse
    name: 'reportClusterHealthWithHttpOperationResponse(HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealthWithHttpOperationResponse(healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-832">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-832">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-833">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-833">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-834">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-834">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-835">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-835">The identity of the application.</span></span> <span data-ttu-id="7d81c-836">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-836">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-837">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-837">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-838">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-838">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-839">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-839">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-840">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-840">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealthWithHttpOperationResponse
    name: 'reportDeployedApplicationHealthWithHttpOperationResponse(string, string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealthWithHttpOperationResponse(nodeName: string, applicationId: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-841">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-841">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-842">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-842">The identity of the application.</span></span> <span data-ttu-id="7d81c-843">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-843">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-844">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-844">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-845">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-845">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-846">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-846">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-847">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-847">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-848">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-848">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-849">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-849">The identity of the application.</span></span> <span data-ttu-id="7d81c-850">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-850">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-851">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-851">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-852">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-852">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-853">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-853">The name of the service package.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-854">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-854">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-855">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-855">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: servicePackageName
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: servicePackageName
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealthWithHttpOperationResponse
    name: 'reportDeployedServicePackageHealthWithHttpOperationResponse(string, string, string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealthWithHttpOperationResponse(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-856">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-856">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-857">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-857">The identity of the application.</span></span> <span data-ttu-id="7d81c-858">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-858">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-859">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-859">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-860">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-860">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-861">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-861">The name of the service package.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-862">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-862">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-863">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-863">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportNodeHealth
    name: 'reportNodeHealth(string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-864">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-864">The name of the node.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-865">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-865">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-866">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-866">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportNodeHealth_2
    name: 'reportNodeHealth(string, HealthInformation, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportNodeHealth_1
    name: 'reportNodeHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportNodeHealthWithHttpOperationResponse
    name: 'reportNodeHealthWithHttpOperationResponse(string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealthWithHttpOperationResponse(nodeName: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-867">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-867">The name of the node.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-868">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-868">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-869">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-869">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportPartitionHealth
    name: 'reportPartitionHealth(string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-870">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-870">The identity of the partition.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-871">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-871">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-872">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-872">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportPartitionHealth_2
    name: 'reportPartitionHealth(string, HealthInformation, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportPartitionHealth_1
    name: 'reportPartitionHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportPartitionHealthWithHttpOperationResponse
    name: 'reportPartitionHealthWithHttpOperationResponse(string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealthWithHttpOperationResponse(partitionId: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-873">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-873">The identity of the partition.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-874">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-874">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-875">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-875">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportReplicaHealth
    name: 'reportReplicaHealth(string, string, string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-876">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-876">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-877">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-877">The identifier of the replica.</span></span>
        - id: replicaHealthReportServiceKind
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-878">상태 보고 되는 서비스 복제본 (상태 비저장 또는 상태 저장)의 종류입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-878">The kind of service replica (Stateless or Stateful) for which the health is being reported.</span></span> <span data-ttu-id="7d81c-879">다음은 가능한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-879">Following are the possible values.</span></span> <span data-ttu-id="7d81c-880">가능한 값은 다음과 같습니다. '상태 비저장', '상태 저장'</span><span class="sxs-lookup"><span data-stu-id="7d81c-880">Possible values include: 'Stateless', 'Stateful'</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-881">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-881">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-882">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-882">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportReplicaHealth_2
    name: 'reportReplicaHealth(string, string, string, HealthInformation, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: string, healthInformation: HealthInformation, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: replicaHealthReportServiceKind
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportReplicaHealth_1
    name: 'reportReplicaHealth(string, string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: replicaHealthReportServiceKind
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportReplicaHealthWithHttpOperationResponse
    name: 'reportReplicaHealthWithHttpOperationResponse(string, string, string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealthWithHttpOperationResponse(partitionId: string, replicaId: string, replicaHealthReportServiceKind: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-883">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-883">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-884">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-884">The identifier of the replica.</span></span>
        - id: replicaHealthReportServiceKind
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-885">상태 보고 되는 서비스 복제본 (상태 비저장 또는 상태 저장)의 종류입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-885">The kind of service replica (Stateless or Stateful) for which the health is being reported.</span></span> <span data-ttu-id="7d81c-886">다음은 가능한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-886">Following are the possible values.</span></span> <span data-ttu-id="7d81c-887">가능한 값은 다음과 같습니다. '상태 비저장', '상태 저장'</span><span class="sxs-lookup"><span data-stu-id="7d81c-887">Possible values include: 'Stateless', 'Stateful'</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-888">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-888">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-889">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-889">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportServiceHealth
    name: 'reportServiceHealth(string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-890">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-890">The identity of the service.</span></span> <span data-ttu-id="7d81c-891">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-891">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-892">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-892">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-893">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-893">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-894">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-894">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-895">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-895">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportServiceHealth_2
    name: 'reportServiceHealth(string, HealthInformation, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportServiceHealth_1
    name: 'reportServiceHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.reportServiceHealthWithHttpOperationResponse
    name: 'reportServiceHealthWithHttpOperationResponse(string, HealthInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealthWithHttpOperationResponse(serviceId: string, healthInformation: HealthInformation, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-896">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-896">The identity of the service.</span></span> <span data-ttu-id="7d81c-897">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-897">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-898">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-898">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-899">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-899">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - azure-servicefabric.HealthInformation
          description: |
            <span data-ttu-id="7d81c-900">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-900">Describes the health information for the health report.</span></span> <span data-ttu-id="7d81c-901">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-901">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resetPartitionLoad
    name: 'resetPartitionLoad(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-902">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-902">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resetPartitionLoad_2
    name: 'resetPartitionLoad(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resetPartitionLoad_1
    name: 'resetPartitionLoad(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resetPartitionLoadWithHttpOperationResponse
    name: 'resetPartitionLoadWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoadWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-903">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-903">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resolveService
    name: 'resolveService(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-904">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-904">The identity of the service.</span></span> <span data-ttu-id="7d81c-905">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-905">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-906">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-906">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-907">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-907">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.ResolvedServicePartition>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resolveService_2
    name: 'resolveService(string, Object, ServiceCallback<ResolvedServicePartition>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, options: Object, callback: ServiceCallback<ResolvedServicePartition>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ResolvedServicePartition>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ResolvedServicePartition>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resolveService_1
    name: 'resolveService(string, ServiceCallback<ResolvedServicePartition>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, callback: ServiceCallback<ResolvedServicePartition>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.ResolvedServicePartition>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.ResolvedServicePartition>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resolveServiceWithHttpOperationResponse
    name: 'resolveServiceWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveServiceWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-908">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-908">The identity of the service.</span></span> <span data-ttu-id="7d81c-909">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-909">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-910">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-910">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-911">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-911">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.ResolvedServicePartition>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-912">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-912">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-913">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-913">The identity of the application.</span></span> <span data-ttu-id="7d81c-914">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-914">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-915">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-915">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-916">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-916">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: restartDeployedCodePackageDescription
          type:
            - azure-servicefabric.RestartDeployedCodePackageDescription
          description: |
            <span data-ttu-id="7d81c-917">다시 시작 하기 위해 Service Fabric 노드에서 배포 된 코드 패키지를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-917">Describes the deployed code package on Service Fabric node to restart.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage_2
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: restartDeployedCodePackageDescription
          type:
            - azure-servicefabric.RestartDeployedCodePackageDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage_1
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: applicationId
          type:
            - string
          description: ''
        - id: restartDeployedCodePackageDescription
          type:
            - azure-servicefabric.RestartDeployedCodePackageDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartDeployedCodePackageWithHttpOperationResponse
    name: 'restartDeployedCodePackageWithHttpOperationResponse(string, string, RestartDeployedCodePackageDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackageWithHttpOperationResponse(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-918">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-918">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-919">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-919">The identity of the application.</span></span> <span data-ttu-id="7d81c-920">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-920">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-921">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-921">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-922">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-922">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: restartDeployedCodePackageDescription
          type:
            - azure-servicefabric.RestartDeployedCodePackageDescription
          description: |
            <span data-ttu-id="7d81c-923">다시 시작 하기 위해 Service Fabric 노드에서 배포 된 코드 패키지를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-923">Describes the deployed code package on Service Fabric node to restart.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartNode
    name: 'restartNode(string, RestartNodeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-924">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-924">The name of the node.</span></span>
        - id: restartNodeDescription
          type:
            - azure-servicefabric.RestartNodeDescription
          description: |
            <span data-ttu-id="7d81c-925">인스턴스의 노드를 다시 시작 및 fabric 프로세스의 덤프를 수행 해야 함을 나타내는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-925">The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartNode_2
    name: 'restartNode(string, RestartNodeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: restartNodeDescription
          type:
            - azure-servicefabric.RestartNodeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartNode_1
    name: 'restartNode(string, RestartNodeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: restartNodeDescription
          type:
            - azure-servicefabric.RestartNodeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartNodeWithHttpOperationResponse
    name: 'restartNodeWithHttpOperationResponse(string, RestartNodeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNodeWithHttpOperationResponse(nodeName: string, restartNodeDescription: RestartNodeDescription, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-926">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-926">The name of the node.</span></span>
        - id: restartNodeDescription
          type:
            - azure-servicefabric.RestartNodeDescription
          description: |
            <span data-ttu-id="7d81c-927">인스턴스의 노드를 다시 시작 및 fabric 프로세스의 덤프를 수행 해야 함을 나타내는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-927">The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartReplica
    name: 'restartReplica(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-928">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-928">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-929">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-929">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-930">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-930">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartReplica_2
    name: 'restartReplica(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartReplica_1
    name: 'restartReplica(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: replicaId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restartReplicaWithHttpOperationResponse
    name: 'restartReplicaWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplicaWithHttpOperationResponse(nodeName: string, partitionId: string, replicaId: string, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-931">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-931">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-932">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-932">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-933">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-933">The identifier of the replica.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restorePartition
    name: 'restorePartition(string, RestorePartitionDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-934">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-934">The identity of the partition.</span></span>
        - id: restorePartitionDescription
          type:
            - azure-servicefabric.RestorePartitionDescription
          description: |
            <span data-ttu-id="7d81c-935">파티션을 복원 하려면 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-935">Describes the parameters to restore the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restorePartition_2
    name: 'restorePartition(string, RestorePartitionDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: restorePartitionDescription
          type:
            - azure-servicefabric.RestorePartitionDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restorePartition_1
    name: 'restorePartition(string, RestorePartitionDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: restorePartitionDescription
          type:
            - azure-servicefabric.RestorePartitionDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.restorePartitionWithHttpOperationResponse
    name: 'restorePartitionWithHttpOperationResponse(string, RestorePartitionDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartitionWithHttpOperationResponse(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-936">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-936">The identity of the partition.</span></span>
        - id: restorePartitionDescription
          type:
            - azure-servicefabric.RestorePartitionDescription
          description: |
            <span data-ttu-id="7d81c-937">파티션을 복원 하려면 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-937">Describes the parameters to restore the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeApplicationBackup
    name: 'resumeApplicationBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-938">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-938">The identity of the application.</span></span> <span data-ttu-id="7d81c-939">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-939">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-940">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-940">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-941">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-941">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeApplicationBackup_2
    name: 'resumeApplicationBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeApplicationBackup_1
    name: 'resumeApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeApplicationBackupWithHttpOperationResponse
    name: 'resumeApplicationBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackupWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-942">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-942">The identity of the application.</span></span> <span data-ttu-id="7d81c-943">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-943">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-944">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-944">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-945">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-945">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-946">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-946">The identity of the application.</span></span> <span data-ttu-id="7d81c-947">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-947">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-948">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-948">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-949">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-949">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: resumeApplicationUpgradeDescription
          type:
            - azure-servicefabric.ResumeApplicationUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-950">응용 프로그램 업그레이드를 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-950">Describes the parameters for resuming an application upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: resumeApplicationUpgradeDescription
          type:
            - azure-servicefabric.ResumeApplicationUpgradeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: resumeApplicationUpgradeDescription
          type:
            - azure-servicefabric.ResumeApplicationUpgradeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeApplicationUpgradeWithHttpOperationResponse
    name: 'resumeApplicationUpgradeWithHttpOperationResponse(string, ResumeApplicationUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgradeWithHttpOperationResponse(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-951">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-951">The identity of the application.</span></span> <span data-ttu-id="7d81c-952">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-952">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-953">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-953">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-954">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-954">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: resumeApplicationUpgradeDescription
          type:
            - azure-servicefabric.ResumeApplicationUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-955">응용 프로그램 업그레이드를 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-955">Describes the parameters for resuming an application upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options?: Object)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - azure-servicefabric.ResumeClusterUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-956">클러스터 업그레이드 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-956">Describes the parameters for resuming a cluster upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade_2
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - azure-servicefabric.ResumeClusterUpgradeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade_1
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - azure-servicefabric.ResumeClusterUpgradeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeClusterUpgradeWithHttpOperationResponse
    name: 'resumeClusterUpgradeWithHttpOperationResponse(ResumeClusterUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgradeWithHttpOperationResponse(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options?: Object)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - azure-servicefabric.ResumeClusterUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-957">클러스터 업그레이드 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-957">Describes the parameters for resuming a cluster upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumePartitionBackup
    name: 'resumePartitionBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-958">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-958">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumePartitionBackup_2
    name: 'resumePartitionBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumePartitionBackup_1
    name: 'resumePartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumePartitionBackupWithHttpOperationResponse
    name: 'resumePartitionBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackupWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-959">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-959">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeServiceBackup
    name: 'resumeServiceBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-960">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-960">The identity of the service.</span></span> <span data-ttu-id="7d81c-961">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-961">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-962">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-962">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-963">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-963">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeServiceBackup_2
    name: 'resumeServiceBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeServiceBackup_1
    name: 'resumeServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.resumeServiceBackupWithHttpOperationResponse
    name: 'resumeServiceBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackupWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-964">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-964">The identity of the service.</span></span> <span data-ttu-id="7d81c-965">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-965">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-966">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-966">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-967">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-967">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade
    name: 'rollbackApplicationUpgrade(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-968">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-968">The identity of the application.</span></span> <span data-ttu-id="7d81c-969">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-969">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-970">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-970">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-971">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-971">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2
    name: 'rollbackApplicationUpgrade(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1
    name: 'rollbackApplicationUpgrade(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgradeWithHttpOperationResponse
    name: 'rollbackApplicationUpgradeWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgradeWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-972">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-972">The identity of the application.</span></span> <span data-ttu-id="7d81c-973">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-973">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-974">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-974">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-975">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-975">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade
    name: rollbackClusterUpgrade(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2
    name: 'rollbackClusterUpgrade(Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1
    name: rollbackClusterUpgrade(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.rollbackClusterUpgradeWithHttpOperationResponse
    name: rollbackClusterUpgradeWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgradeWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.constructor
    name: 'ServiceFabricClient(string, ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ServiceFabricClient(baseUri?: string, options?: ServiceClientOptions)'
      parameters:
        - id: baseUri
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - ServiceClientOptions
          description: ''
          optional: true
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options?: Object)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - azure-servicefabric.UpgradeOrchestrationServiceState
          description: |
            <span data-ttu-id="7d81c-976">Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-976">Service state of Service Fabric Upgrade Orchestration Service.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_2
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, Object, ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options: Object, callback: ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - azure-servicefabric.UpgradeOrchestrationServiceState
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_1
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, callback: ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - azure-servicefabric.UpgradeOrchestrationServiceState
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceStateWithHttpOperationResponse
    name: 'setUpgradeOrchestrationServiceStateWithHttpOperationResponse(UpgradeOrchestrationServiceState, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceStateWithHttpOperationResponse(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options?: Object)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - azure-servicefabric.UpgradeOrchestrationServiceState
          description: |
            <span data-ttu-id="7d81c-977">Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-977">Service state of Service Fabric Upgrade Orchestration Service.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startApplicationUpgrade
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-978">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-978">The identity of the application.</span></span> <span data-ttu-id="7d81c-979">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-979">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-980">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-980">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-981">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-981">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeDescription
          type:
            - azure-servicefabric.ApplicationUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-982">응용 프로그램 업그레이드 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-982">Parameters for an application upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startApplicationUpgrade_2
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: applicationUpgradeDescription
          type:
            - azure-servicefabric.ApplicationUpgradeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startApplicationUpgrade_1
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: applicationUpgradeDescription
          type:
            - azure-servicefabric.ApplicationUpgradeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startApplicationUpgradeWithHttpOperationResponse
    name: 'startApplicationUpgradeWithHttpOperationResponse(string, ApplicationUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgradeWithHttpOperationResponse(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-983">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-983">The identity of the application.</span></span> <span data-ttu-id="7d81c-984">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-984">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-985">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-985">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-986">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-986">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeDescription
          type:
            - azure-servicefabric.ApplicationUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-987">응용 프로그램 업그레이드 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-987">Parameters for an application upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startChaos
    name: 'startChaos(ChaosParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, options?: Object)'
      parameters:
        - id: chaosParameters
          type:
            - azure-servicefabric.ChaosParameters
          description: |
            <span data-ttu-id="7d81c-988">비정상 상황 실행을 구성 하는 모든 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-988">Describes all the parameters to configure a Chaos run.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startChaos_2
    name: 'startChaos(ChaosParameters, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosParameters
          type:
            - azure-servicefabric.ChaosParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startChaos_1
    name: 'startChaos(ChaosParameters, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosParameters
          type:
            - azure-servicefabric.ChaosParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startChaosWithHttpOperationResponse
    name: 'startChaosWithHttpOperationResponse(ChaosParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaosWithHttpOperationResponse(chaosParameters: ChaosParameters, options?: Object)'
      parameters:
        - id: chaosParameters
          type:
            - azure-servicefabric.ChaosParameters
          description: |
            <span data-ttu-id="7d81c-989">비정상 상황 실행을 구성 하는 모든 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-989">Describes all the parameters to configure a Chaos run.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options?: Object)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - azure-servicefabric.ClusterConfigurationUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-990">독립 실행형 클러스터 구성 업그레이드에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-990">Parameters for a standalone cluster configuration upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - azure-servicefabric.ClusterConfigurationUpgradeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - azure-servicefabric.ClusterConfigurationUpgradeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgradeWithHttpOperationResponse
    name: 'startClusterConfigurationUpgradeWithHttpOperationResponse(ClusterConfigurationUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgradeWithHttpOperationResponse(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options?: Object)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - azure-servicefabric.ClusterConfigurationUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-991">독립 실행형 클러스터 구성 업그레이드에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-991">Parameters for a standalone cluster configuration upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startClusterUpgrade
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options?: Object)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - azure-servicefabric.StartClusterUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-992">클러스터 업그레이드를 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-992">Describes the parameters for starting a cluster upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startClusterUpgrade_2
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - azure-servicefabric.StartClusterUpgradeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startClusterUpgrade_1
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - azure-servicefabric.StartClusterUpgradeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startClusterUpgradeWithHttpOperationResponse
    name: 'startClusterUpgradeWithHttpOperationResponse(StartClusterUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgradeWithHttpOperationResponse(startClusterUpgradeDescription: StartClusterUpgradeDescription, options?: Object)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - azure-servicefabric.StartClusterUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-993">클러스터 업그레이드를 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-993">Describes the parameters for starting a cluster upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-994">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-994">The identity of the deployment.</span></span>
        - id: composeDeploymentUpgradeDescription
          type:
            - azure-servicefabric.ComposeDeploymentUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-995">업그레이드에 대 한 매개 변수는 배포를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-995">Parameters for upgrading compose deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: composeDeploymentUpgradeDescription
          type:
            - azure-servicefabric.ComposeDeploymentUpgradeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: composeDeploymentUpgradeDescription
          type:
            - azure-servicefabric.ComposeDeploymentUpgradeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgradeWithHttpOperationResponse
    name: 'startComposeDeploymentUpgradeWithHttpOperationResponse(string, ComposeDeploymentUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgradeWithHttpOperationResponse(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-996">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-996">The identity of the deployment.</span></span>
        - id: composeDeploymentUpgradeDescription
          type:
            - azure-servicefabric.ComposeDeploymentUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-997">업그레이드에 대 한 매개 변수는 배포를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-997">Parameters for upgrading compose deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startDataLoss
    name: 'startDataLoss(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-998">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-998">The identity of the service.</span></span> <span data-ttu-id="7d81c-999">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-999">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1000">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1000">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1001">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1001">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1002">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1002">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1003">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1003">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-1004">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1004">This is passed into the corresponding GetProgress API</span></span>
        - id: dataLossMode
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1005">이 열거형은 유도한 데이터 손실의 유형을 나타내도록 StartDataLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1005">This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.</span></span> <span data-ttu-id="7d81c-1006">가능한 값은 다음과 같습니다. ' Invalid', 'PartialDataLoss', 'FullDataLoss'</span><span class="sxs-lookup"><span data-stu-id="7d81c-1006">Possible values include: 'Invalid', 'PartialDataLoss', 'FullDataLoss'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startDataLoss_2
    name: 'startDataLoss(string, string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: dataLossMode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startDataLoss_1
    name: 'startDataLoss(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: dataLossMode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startDataLossWithHttpOperationResponse
    name: 'startDataLossWithHttpOperationResponse(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLossWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, dataLossMode: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1007">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1007">The identity of the service.</span></span> <span data-ttu-id="7d81c-1008">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1008">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1009">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1009">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1010">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1010">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1011">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1011">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1012">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1012">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-1013">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1013">This is passed into the corresponding GetProgress API</span></span>
        - id: dataLossMode
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1014">이 열거형은 유도한 데이터 손실의 유형을 나타내도록 StartDataLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1014">This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.</span></span> <span data-ttu-id="7d81c-1015">가능한 값은 다음과 같습니다. ' Invalid', 'PartialDataLoss', 'FullDataLoss'</span><span class="sxs-lookup"><span data-stu-id="7d81c-1015">Possible values include: 'Invalid', 'PartialDataLoss', 'FullDataLoss'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startNodeTransition
    name: 'startNodeTransition(string, string, string, string, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: string, nodeInstanceId: string, stopDurationInSeconds: number, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1016">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1016">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1017">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1017">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-1018">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1018">This is passed into the corresponding GetProgress API</span></span>
        - id: nodeTransitionType
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1019">수행할 전환의 유형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1019">Indicates the type of transition to perform.</span></span>  <span data-ttu-id="7d81c-1020">NodeTransitionType.Start는 중지된 노드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1020">NodeTransitionType.Start will start a stopped node.</span></span>
            <span data-ttu-id="7d81c-1021">NodeTransitionType.Stop은 작동하는 노드를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1021">NodeTransitionType.Stop will stop a node that is up.</span></span> <span data-ttu-id="7d81c-1022">가능한 값은 다음과 같습니다. 'Invalid', ' Start', 'Stop'</span><span class="sxs-lookup"><span data-stu-id="7d81c-1022">Possible values include: 'Invalid', 'Start', 'Stop'</span></span>
        - id: nodeInstanceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1023">대상 노드의 노드 인스턴스 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1023">The node instance ID of the target node.</span></span>
            <span data-ttu-id="7d81c-1024">이것은 GetNodeInfo API를 통해 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1024">This can be determined through GetNodeInfo API.</span></span>
        - id: stopDurationInSeconds
          type:
            - number
          description: |
            <span data-ttu-id="7d81c-1025">노드가 중지된 채로 유지되는 기간(초).</span><span class="sxs-lookup"><span data-stu-id="7d81c-1025">The duration, in seconds, to keep the node stopped.</span></span>  <span data-ttu-id="7d81c-1026">최솟값은 600, 최댓값은 14400입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1026">The minimum value is 600, the maximum is 14400.</span></span>  <span data-ttu-id="7d81c-1027">이 시간이 만료되면 노드가 자동으로 다시 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1027">After this time expires, the node will automatically come back up.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startNodeTransition_2
    name: 'startNodeTransition(string, string, string, string, number, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: string, nodeInstanceId: string, stopDurationInSeconds: number, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: nodeTransitionType
          type:
            - string
          description: ''
        - id: nodeInstanceId
          type:
            - string
          description: ''
        - id: stopDurationInSeconds
          type:
            - number
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startNodeTransition_1
    name: 'startNodeTransition(string, string, string, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: string, nodeInstanceId: string, stopDurationInSeconds: number, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: nodeTransitionType
          type:
            - string
          description: ''
        - id: nodeInstanceId
          type:
            - string
          description: ''
        - id: stopDurationInSeconds
          type:
            - number
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startNodeTransitionWithHttpOperationResponse
    name: 'startNodeTransitionWithHttpOperationResponse(string, string, string, string, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransitionWithHttpOperationResponse(nodeName: string, operationId: string, nodeTransitionType: string, nodeInstanceId: string, stopDurationInSeconds: number, options?: Object)'
      parameters:
        - id: nodeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1028">노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1028">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1029">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1029">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-1030">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1030">This is passed into the corresponding GetProgress API</span></span>
        - id: nodeTransitionType
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1031">수행할 전환의 유형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1031">Indicates the type of transition to perform.</span></span>  <span data-ttu-id="7d81c-1032">NodeTransitionType.Start는 중지된 노드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1032">NodeTransitionType.Start will start a stopped node.</span></span>
            <span data-ttu-id="7d81c-1033">NodeTransitionType.Stop은 작동하는 노드를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1033">NodeTransitionType.Stop will stop a node that is up.</span></span> <span data-ttu-id="7d81c-1034">가능한 값은 다음과 같습니다. 'Invalid', ' Start', 'Stop'</span><span class="sxs-lookup"><span data-stu-id="7d81c-1034">Possible values include: 'Invalid', 'Start', 'Stop'</span></span>
        - id: nodeInstanceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1035">대상 노드의 노드 인스턴스 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1035">The node instance ID of the target node.</span></span>
            <span data-ttu-id="7d81c-1036">이것은 GetNodeInfo API를 통해 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1036">This can be determined through GetNodeInfo API.</span></span>
        - id: stopDurationInSeconds
          type:
            - number
          description: |
            <span data-ttu-id="7d81c-1037">노드가 중지된 채로 유지되는 기간(초).</span><span class="sxs-lookup"><span data-stu-id="7d81c-1037">The duration, in seconds, to keep the node stopped.</span></span>  <span data-ttu-id="7d81c-1038">최솟값은 600, 최댓값은 14400입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1038">The minimum value is 600, the maximum is 14400.</span></span>  <span data-ttu-id="7d81c-1039">이 시간이 만료되면 노드가 자동으로 다시 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1039">After this time expires, the node will automatically come back up.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startPartitionRestart
    name: 'startPartitionRestart(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1040">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1040">The identity of the service.</span></span> <span data-ttu-id="7d81c-1041">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1041">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1042">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1042">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1043">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1043">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1044">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1044">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1045">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1045">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-1046">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1046">This is passed into the corresponding GetProgress API</span></span>
        - id: restartPartitionMode
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1047">다시 시작하는 파티션을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1047">Describe which partitions to restart.</span></span>
            <span data-ttu-id="7d81c-1048">가능한 값은 다음과 같습니다. 'Invalid', 'AllReplicasOrInstances', 'OnlyActiveSecondaries'</span><span class="sxs-lookup"><span data-stu-id="7d81c-1048">Possible values include: 'Invalid', 'AllReplicasOrInstances', 'OnlyActiveSecondaries'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startPartitionRestart_2
    name: 'startPartitionRestart(string, string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: restartPartitionMode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startPartitionRestart_1
    name: 'startPartitionRestart(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: restartPartitionMode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startPartitionRestartWithHttpOperationResponse
    name: 'startPartitionRestartWithHttpOperationResponse(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestartWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1049">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1049">The identity of the service.</span></span> <span data-ttu-id="7d81c-1050">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1050">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1051">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1051">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1052">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1052">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1053">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1053">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1054">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1054">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-1055">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1055">This is passed into the corresponding GetProgress API</span></span>
        - id: restartPartitionMode
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1056">다시 시작하는 파티션을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1056">Describe which partitions to restart.</span></span>
            <span data-ttu-id="7d81c-1057">가능한 값은 다음과 같습니다. 'Invalid', 'AllReplicasOrInstances', 'OnlyActiveSecondaries'</span><span class="sxs-lookup"><span data-stu-id="7d81c-1057">Possible values include: 'Invalid', 'AllReplicasOrInstances', 'OnlyActiveSecondaries'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startQuorumLoss
    name: 'startQuorumLoss(string, string, string, string, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: string, quorumLossDuration: number, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1058">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1058">The identity of the service.</span></span> <span data-ttu-id="7d81c-1059">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1059">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1060">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1060">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1061">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1061">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1062">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1062">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1063">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1063">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-1064">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1064">This is passed into the corresponding GetProgress API</span></span>
        - id: quorumLossMode
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1065">이 열거형은 유도한 쿼럼 손실의 유형을 나타내도록 StartQuorumLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1065">This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.</span></span> <span data-ttu-id="7d81c-1066">가능한 값은 다음과 같습니다. ' Invalid', 'QuorumReplicas', 'AllReplicas'</span><span class="sxs-lookup"><span data-stu-id="7d81c-1066">Possible values include: 'Invalid', 'QuorumReplicas', 'AllReplicas'</span></span>
        - id: quorumLossDuration
          type:
            - number
          description: |
            <span data-ttu-id="7d81c-1067">파티션이 쿼럼 손실에 보관되는 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1067">The amount of time for which the partition will be kept in quorum loss.</span></span>  <span data-ttu-id="7d81c-1068">초 단위로 지정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1068">This must be specified in seconds.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startQuorumLoss_2
    name: 'startQuorumLoss(string, string, string, string, number, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: string, quorumLossDuration: number, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: quorumLossMode
          type:
            - string
          description: ''
        - id: quorumLossDuration
          type:
            - number
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startQuorumLoss_1
    name: 'startQuorumLoss(string, string, string, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: string, quorumLossDuration: number, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: partitionId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: quorumLossMode
          type:
            - string
          description: ''
        - id: quorumLossDuration
          type:
            - number
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startQuorumLossWithHttpOperationResponse
    name: 'startQuorumLossWithHttpOperationResponse(string, string, string, string, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLossWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, quorumLossMode: string, quorumLossDuration: number, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1069">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1069">The identity of the service.</span></span> <span data-ttu-id="7d81c-1070">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1070">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1071">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1071">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1072">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1072">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1073">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1073">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1074">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1074">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="7d81c-1075">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1075">This is passed into the corresponding GetProgress API</span></span>
        - id: quorumLossMode
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1076">이 열거형은 유도한 쿼럼 손실의 유형을 나타내도록 StartQuorumLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1076">This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.</span></span> <span data-ttu-id="7d81c-1077">가능한 값은 다음과 같습니다. ' Invalid', 'QuorumReplicas', 'AllReplicas'</span><span class="sxs-lookup"><span data-stu-id="7d81c-1077">Possible values include: 'Invalid', 'QuorumReplicas', 'AllReplicas'</span></span>
        - id: quorumLossDuration
          type:
            - number
          description: |
            <span data-ttu-id="7d81c-1078">파티션이 쿼럼 손실에 보관되는 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1078">The amount of time for which the partition will be kept in quorum loss.</span></span>  <span data-ttu-id="7d81c-1079">초 단위로 지정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1079">This must be specified in seconds.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade
    name: 'startRollbackComposeDeploymentUpgrade(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1080">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1080">The identity of the deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_2
    name: 'startRollbackComposeDeploymentUpgrade(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_1
    name: 'startRollbackComposeDeploymentUpgrade(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgradeWithHttpOperationResponse
    name: 'startRollbackComposeDeploymentUpgradeWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgradeWithHttpOperationResponse(deploymentName: string, options?: Object)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1081">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1081">The identity of the deployment.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.stopChaos
    name: stopChaos(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.stopChaos_2
    name: 'stopChaos(Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.stopChaos_1
    name: stopChaos(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.stopChaosWithHttpOperationResponse
    name: stopChaosWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaosWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.submitPropertyBatch
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1082">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1082">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: propertyBatchDescriptionList
          type:
            - azure-servicefabric.PropertyBatchDescriptionList
          description: |
            <span data-ttu-id="7d81c-1083">전송할 속성 일괄 처리 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1083">Describes the property batch operations to be submitted.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.PropertyBatchInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.submitPropertyBatch_2
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, Object, ServiceCallback<PropertyBatchInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options: Object, callback: ServiceCallback<PropertyBatchInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: propertyBatchDescriptionList
          type:
            - azure-servicefabric.PropertyBatchDescriptionList
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PropertyBatchInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PropertyBatchInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.submitPropertyBatch_1
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, ServiceCallback<PropertyBatchInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, callback: ServiceCallback<PropertyBatchInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: ''
        - id: propertyBatchDescriptionList
          type:
            - azure-servicefabric.PropertyBatchDescriptionList
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.PropertyBatchInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.PropertyBatchInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.submitPropertyBatchWithHttpOperationResponse
    name: 'submitPropertyBatchWithHttpOperationResponse(string, PropertyBatchDescriptionList, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatchWithHttpOperationResponse(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options?: Object)'
      parameters:
        - id: nameId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1084">Service Fabric 이름 없이 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1084">The Service Fabric name, without the 'fabric:' URI scheme.</span></span>
        - id: propertyBatchDescriptionList
          type:
            - azure-servicefabric.PropertyBatchDescriptionList
          description: |
            <span data-ttu-id="7d81c-1085">전송할 속성 일괄 처리 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1085">Describes the property batch operations to be submitted.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.PropertyBatchInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendApplicationBackup
    name: 'suspendApplicationBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1086">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1086">The identity of the application.</span></span> <span data-ttu-id="7d81c-1087">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1087">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1088">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1088">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1089">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1089">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendApplicationBackup_2
    name: 'suspendApplicationBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendApplicationBackup_1
    name: 'suspendApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendApplicationBackupWithHttpOperationResponse
    name: 'suspendApplicationBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackupWithHttpOperationResponse(applicationId: string, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1090">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1090">The identity of the application.</span></span> <span data-ttu-id="7d81c-1091">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1091">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1092">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1092">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1093">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1093">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendPartitionBackup
    name: 'suspendPartitionBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1094">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1094">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendPartitionBackup_2
    name: 'suspendPartitionBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendPartitionBackup_1
    name: 'suspendPartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendPartitionBackupWithHttpOperationResponse
    name: 'suspendPartitionBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackupWithHttpOperationResponse(partitionId: string, options?: Object)'
      parameters:
        - id: partitionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1095">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1095">The identity of the partition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendServiceBackup
    name: 'suspendServiceBackup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1096">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1096">The identity of the service.</span></span> <span data-ttu-id="7d81c-1097">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1097">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1098">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1098">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1099">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1099">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendServiceBackup_2
    name: 'suspendServiceBackup(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendServiceBackup_1
    name: 'suspendServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.suspendServiceBackupWithHttpOperationResponse
    name: 'suspendServiceBackupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackupWithHttpOperationResponse(serviceId: string, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1100">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1100">The identity of the service.</span></span> <span data-ttu-id="7d81c-1101">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1101">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1102">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1102">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1103">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1103">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.unprovisionApplicationType
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1104">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1104">The name of the application type.</span></span>
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - azure-servicefabric.UnprovisionApplicationTypeDescriptionInfo
          description: |
            <span data-ttu-id="7d81c-1105">이전 복사 작업 중 지정 된 이미지 저장소에서 응용 프로그램 패키지에 대 한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1105">The relative path for the application package in the image store specified during the prior copy operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.unprovisionApplicationType_2
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - azure-servicefabric.UnprovisionApplicationTypeDescriptionInfo
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.unprovisionApplicationType_1
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: ''
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - azure-servicefabric.UnprovisionApplicationTypeDescriptionInfo
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.unprovisionApplicationTypeWithHttpOperationResponse
    name: 'unprovisionApplicationTypeWithHttpOperationResponse(string, UnprovisionApplicationTypeDescriptionInfo, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationTypeWithHttpOperationResponse(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options?: Object)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1106">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1106">The name of the application type.</span></span>
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - azure-servicefabric.UnprovisionApplicationTypeDescriptionInfo
          description: |
            <span data-ttu-id="7d81c-1107">이전 복사 작업 중 지정 된 이미지 저장소에서 응용 프로그램 패키지에 대 한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1107">The relative path for the application package in the image store specified during the prior copy operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.unprovisionCluster
    name: 'unprovisionCluster(UnprovisionFabricDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options?: Object)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - azure-servicefabric.UnprovisionFabricDescription
          description: |
            <span data-ttu-id="7d81c-1108">클러스터를 프로 비전 해제에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1108">Describes the parameters for unprovisioning a cluster.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.unprovisionCluster_2
    name: 'unprovisionCluster(UnprovisionFabricDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - azure-servicefabric.UnprovisionFabricDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.unprovisionCluster_1
    name: 'unprovisionCluster(UnprovisionFabricDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - azure-servicefabric.UnprovisionFabricDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.unprovisionClusterWithHttpOperationResponse
    name: 'unprovisionClusterWithHttpOperationResponse(UnprovisionFabricDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionClusterWithHttpOperationResponse(unprovisionFabricDescription: UnprovisionFabricDescription, options?: Object)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - azure-servicefabric.UnprovisionFabricDescription
          description: |
            <span data-ttu-id="7d81c-1109">클러스터를 프로 비전 해제에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1109">Describes the parameters for unprovisioning a cluster.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1110">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1110">The identity of the application.</span></span> <span data-ttu-id="7d81c-1111">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1111">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1112">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1112">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1113">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1113">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeUpdateDescription
          type:
            - azure-servicefabric.ApplicationUpgradeUpdateDescription
          description: |
            <span data-ttu-id="7d81c-1114">매개 변수는 기존 응용 프로그램 업그레이드를 업데이트 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1114">Parameters for updating an existing application upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade_2
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: applicationUpgradeUpdateDescription
          type:
            - azure-servicefabric.ApplicationUpgradeUpdateDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade_1
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: applicationUpgradeUpdateDescription
          type:
            - azure-servicefabric.ApplicationUpgradeUpdateDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateApplicationUpgradeWithHttpOperationResponse
    name: 'updateApplicationUpgradeWithHttpOperationResponse(string, ApplicationUpgradeUpdateDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgradeWithHttpOperationResponse(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options?: Object)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1115">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1115">The identity of the application.</span></span> <span data-ttu-id="7d81c-1116">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1116">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1117">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1117">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1118">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1118">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeUpdateDescription
          type:
            - azure-servicefabric.ApplicationUpgradeUpdateDescription
          description: |
            <span data-ttu-id="7d81c-1119">매개 변수는 기존 응용 프로그램 업그레이드를 업데이트 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1119">Parameters for updating an existing application upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateBackupPolicy
    name: 'updateBackupPolicy(BackupPolicyDescription, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options?: Object)'
      parameters:
        - id: backupPolicyDescription
          type:
            - azure-servicefabric.BackupPolicyDescription
          description: |
            <span data-ttu-id="7d81c-1120">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1120">Describes the backup policy.</span></span>
        - id: backupPolicyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1121">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1121">The name of the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateBackupPolicy_2
    name: 'updateBackupPolicy(BackupPolicyDescription, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - azure-servicefabric.BackupPolicyDescription
          description: ''
        - id: backupPolicyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateBackupPolicy_1
    name: 'updateBackupPolicy(BackupPolicyDescription, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - azure-servicefabric.BackupPolicyDescription
          description: ''
        - id: backupPolicyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateBackupPolicyWithHttpOperationResponse
    name: 'updateBackupPolicyWithHttpOperationResponse(BackupPolicyDescription, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicyWithHttpOperationResponse(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options?: Object)'
      parameters:
        - id: backupPolicyDescription
          type:
            - azure-servicefabric.BackupPolicyDescription
          description: |
            <span data-ttu-id="7d81c-1122">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1122">Describes the backup policy.</span></span>
        - id: backupPolicyName
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1123">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1123">The name of the backup policy.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateClusterUpgrade
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options?: Object)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - azure-servicefabric.UpdateClusterUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-1124">클러스터 업그레이드는 업데이트에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1124">Parameters for updating a cluster upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateClusterUpgrade_2
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - azure-servicefabric.UpdateClusterUpgradeDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateClusterUpgrade_1
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - azure-servicefabric.UpdateClusterUpgradeDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateClusterUpgradeWithHttpOperationResponse
    name: 'updateClusterUpgradeWithHttpOperationResponse(UpdateClusterUpgradeDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgradeWithHttpOperationResponse(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options?: Object)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - azure-servicefabric.UpdateClusterUpgradeDescription
          description: |
            <span data-ttu-id="7d81c-1125">클러스터 업그레이드는 업데이트에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1125">Parameters for updating a cluster upgrade.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateRepairExecutionState
    name: 'updateRepairExecutionState(RepairTask, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, options?: Object)'
      parameters:
        - id: repairTask
          type:
            - azure-servicefabric.RepairTask
          description: |
            <span data-ttu-id="7d81c-1126">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1126">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateRepairExecutionState_2
    name: 'updateRepairExecutionState(RepairTask, Object, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, options: Object, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - azure-servicefabric.RepairTask
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateRepairExecutionState_1
    name: 'updateRepairExecutionState(RepairTask, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - azure-servicefabric.RepairTask
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateRepairExecutionStateWithHttpOperationResponse
    name: 'updateRepairExecutionStateWithHttpOperationResponse(RepairTask, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionStateWithHttpOperationResponse(repairTask: RepairTask, options?: Object)'
      parameters:
        - id: repairTask
          type:
            - azure-servicefabric.RepairTask
          description: |
            <span data-ttu-id="7d81c-1127">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1127">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options?: Object)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
          description: |
            <span data-ttu-id="7d81c-1128">업데이트할 복구 작업 상태 정책을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1128">Describes the repair task healthy policy to be updated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, Object, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options: Object, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
          description: ''
      return:
        type:
          - Promise<azure-servicefabric.RepairTaskUpdateInfo>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicyWithHttpOperationResponse
    name: 'updateRepairTaskHealthPolicyWithHttpOperationResponse(RepairTaskUpdateHealthPolicyDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicyWithHttpOperationResponse(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options?: Object)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
          description: |
            <span data-ttu-id="7d81c-1129">업데이트할 복구 작업 상태 정책을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1129">Describes the repair task healthy policy to be updated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateService
    name: 'updateService(string, ServiceUpdateDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: ServiceUpdateDescription, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1130">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1130">The identity of the service.</span></span> <span data-ttu-id="7d81c-1131">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1131">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1132">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1132">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1133">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1133">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: serviceUpdateDescription
          type:
            - azure-servicefabric.ServiceUpdateDescription
          description: |
            <span data-ttu-id="7d81c-1134">서비스를 업데이트 하는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1134">The information necessary to update a service.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateService_2
    name: 'updateService(string, ServiceUpdateDescription, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: ServiceUpdateDescription, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: serviceUpdateDescription
          type:
            - azure-servicefabric.ServiceUpdateDescription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateService_1
    name: 'updateService(string, ServiceUpdateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: ServiceUpdateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: ''
        - id: serviceUpdateDescription
          type:
            - azure-servicefabric.ServiceUpdateDescription
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.updateServiceWithHttpOperationResponse
    name: 'updateServiceWithHttpOperationResponse(string, ServiceUpdateDescription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateServiceWithHttpOperationResponse(serviceId: string, serviceUpdateDescription: ServiceUpdateDescription, options?: Object)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1135">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1135">The identity of the service.</span></span> <span data-ttu-id="7d81c-1136">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1136">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="7d81c-1137">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1137">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="7d81c-1138">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1138">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: serviceUpdateDescription
          type:
            - azure-servicefabric.ServiceUpdateDescription
          description: |
            <span data-ttu-id="7d81c-1139">서비스를 업데이트 하는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1139">The information necessary to update a service.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.uploadFile
    name: 'uploadFile(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1140">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1140">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.uploadFile_2
    name: 'uploadFile(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.uploadFile_1
    name: 'uploadFile(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.uploadFileChunk
    name: 'uploadFileChunk(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1141">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1141">Relative path to file or folder in the image store from its root.</span></span>
        - id: sessionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1142">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1142">A GUID generated by the user for a file uploading.</span></span>
            <span data-ttu-id="7d81c-1143">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1143">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: contentRange
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1144">파일 청크를 이미지 저장소에 업로드 하는 경우 Content-range 헤더 필드를 구성 하 고 요청으로 전송 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1144">When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request.</span></span> <span data-ttu-id="7d81c-1145">형식으로 "바이트 {First-Byte-Position}-{Last-Byte-Position}/{File-Length}" 같습니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1145">The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}".</span></span> <span data-ttu-id="7d81c-1146">예를 들어, 콘텐츠-바이트 범위: 300-5000/20000 사용자 5,000 통해 300 바이트를 전송 하는 총 파일 길이 20, 000 바이트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1146">For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.uploadFileChunk_2
    name: 'uploadFileChunk(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
        - id: contentRange
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.uploadFileChunk_1
    name: 'uploadFileChunk(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
        - id: contentRange
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.uploadFileChunkWithHttpOperationResponse
    name: 'uploadFileChunkWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunkWithHttpOperationResponse(contentPath: string, sessionId: string, contentRange: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1147">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1147">Relative path to file or folder in the image store from its root.</span></span>
        - id: sessionId
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1148">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1148">A GUID generated by the user for a file uploading.</span></span>
            <span data-ttu-id="7d81c-1149">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1149">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: contentRange
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1150">파일 청크를 이미지 저장소에 업로드 하는 경우 Content-range 헤더 필드를 구성 하 고 요청으로 전송 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1150">When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request.</span></span> <span data-ttu-id="7d81c-1151">형식으로 "바이트 {First-Byte-Position}-{Last-Byte-Position}/{File-Length}" 같습니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1151">The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}".</span></span> <span data-ttu-id="7d81c-1152">예를 들어, 콘텐츠-바이트 범위: 300-5000/20000 사용자 5,000 통해 300 바이트를 전송 하는 총 파일 길이 20, 000 바이트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1152">For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
  - uid: azure-servicefabric.ServiceFabricClient.uploadFileWithHttpOperationResponse
    name: 'uploadFileWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileWithHttpOperationResponse(contentPath: string, options?: Object)'
      parameters:
        - id: contentPath
          type:
            - string
          description: |
            <span data-ttu-id="7d81c-1153">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="7d81c-1153">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-servicefabric
references:
  - uid: azure-servicefabric.MeshApplication
    name: MeshApplication
    spec.typeScript:
      - name: MeshApplication
        fullName: MeshApplication
        uid: azure-servicefabric.MeshApplication
  - uid: azure-servicefabric.MeshCodePackage
    name: MeshCodePackage
    spec.typeScript:
      - name: MeshCodePackage
        fullName: MeshCodePackage
        uid: azure-servicefabric.MeshCodePackage
  - uid: azure-servicefabric.MeshGateway
    name: MeshGateway
    spec.typeScript:
      - name: MeshGateway
        fullName: MeshGateway
        uid: azure-servicefabric.MeshGateway
  - uid: azure-servicefabric.MeshNetwork
    name: MeshNetwork
    spec.typeScript:
      - name: MeshNetwork
        fullName: MeshNetwork
        uid: azure-servicefabric.MeshNetwork
  - uid: azure-servicefabric.MeshSecret
    name: MeshSecret
    spec.typeScript:
      - name: MeshSecret
        fullName: MeshSecret
        uid: azure-servicefabric.MeshSecret
  - uid: azure-servicefabric.MeshSecretValue
    name: MeshSecretValue
    spec.typeScript:
      - name: MeshSecretValue
        fullName: MeshSecretValue
        uid: azure-servicefabric.MeshSecretValue
  - uid: azure-servicefabric.MeshService
    name: MeshService
    spec.typeScript:
      - name: MeshService
        fullName: MeshService
        uid: azure-servicefabric.MeshService
  - uid: azure-servicefabric.MeshServiceReplica
    name: MeshServiceReplica
    spec.typeScript:
      - name: MeshServiceReplica
        fullName: MeshServiceReplica
        uid: azure-servicefabric.MeshServiceReplica
  - uid: azure-servicefabric.MeshVolume
    name: MeshVolume
    spec.typeScript:
      - name: MeshVolume
        fullName: MeshVolume
        uid: azure-servicefabric.MeshVolume
  - uid: azure-servicefabric.RepairTaskCancelDescription
    name: RepairTaskCancelDescription
    spec.typeScript:
      - name: RepairTaskCancelDescription
        fullName: RepairTaskCancelDescription
        uid: azure-servicefabric.RepairTaskCancelDescription
  - uid: Promise<azure-servicefabric.RepairTaskUpdateInfo>
    name: RepairTaskUpdateInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RepairTaskUpdateInfo
        fullName: RepairTaskUpdateInfo
        uid: azure-servicefabric.RepairTaskUpdateInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
    name: RepairTaskUpdateInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RepairTaskUpdateInfo
        fullName: RepairTaskUpdateInfo
        uid: azure-servicefabric.RepairTaskUpdateInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
    name: RepairTaskUpdateInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RepairTaskUpdateInfo
        fullName: RepairTaskUpdateInfo
        uid: azure-servicefabric.RepairTaskUpdateInfo
      - name: '>>'
        fullName: '>>'
  - uid: azure-servicefabric.ImageStoreCopyDescription
    name: ImageStoreCopyDescription
    spec.typeScript:
      - name: ImageStoreCopyDescription
        fullName: ImageStoreCopyDescription
        uid: azure-servicefabric.ImageStoreCopyDescription
  - uid: azure-servicefabric.ApplicationDescription
    name: ApplicationDescription
    spec.typeScript:
      - name: ApplicationDescription
        fullName: ApplicationDescription
        uid: azure-servicefabric.ApplicationDescription
  - uid: azure-servicefabric.BackupPolicyDescription
    name: BackupPolicyDescription
    spec.typeScript:
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: azure-servicefabric.BackupPolicyDescription
  - uid: azure-servicefabric.CreateComposeDeploymentDescription
    name: CreateComposeDeploymentDescription
    spec.typeScript:
      - name: CreateComposeDeploymentDescription
        fullName: CreateComposeDeploymentDescription
        uid: azure-servicefabric.CreateComposeDeploymentDescription
  - uid: azure-servicefabric.NameDescription
    name: NameDescription
    spec.typeScript:
      - name: NameDescription
        fullName: NameDescription
        uid: azure-servicefabric.NameDescription
  - uid: azure-servicefabric.RepairTask
    name: RepairTask
    spec.typeScript:
      - name: RepairTask
        fullName: RepairTask
        uid: azure-servicefabric.RepairTask
  - uid: azure-servicefabric.ServiceDescription
    name: ServiceDescription
    spec.typeScript:
      - name: ServiceDescription
        fullName: ServiceDescription
        uid: azure-servicefabric.ServiceDescription
  - uid: azure-servicefabric.ServiceFromTemplateDescription
    name: ServiceFromTemplateDescription
    spec.typeScript:
      - name: ServiceFromTemplateDescription
        fullName: ServiceFromTemplateDescription
        uid: azure-servicefabric.ServiceFromTemplateDescription
  - uid: azure-servicefabric.RepairTaskDeleteDescription
    name: RepairTaskDeleteDescription
    spec.typeScript:
      - name: RepairTaskDeleteDescription
        fullName: RepairTaskDeleteDescription
        uid: azure-servicefabric.RepairTaskDeleteDescription
  - uid: azure-servicefabric.DeployServicePackageToNodeDescription
    name: DeployServicePackageToNodeDescription
    spec.typeScript:
      - name: DeployServicePackageToNodeDescription
        fullName: DeployServicePackageToNodeDescription
        uid: azure-servicefabric.DeployServicePackageToNodeDescription
  - uid: azure-servicefabric.DeactivationIntentDescription
    name: DeactivationIntentDescription
    spec.typeScript:
      - name: DeactivationIntentDescription
        fullName: DeactivationIntentDescription
        uid: azure-servicefabric.DeactivationIntentDescription
  - uid: azure-servicefabric.EnableBackupDescription
    name: EnableBackupDescription
    spec.typeScript:
      - name: EnableBackupDescription
        fullName: EnableBackupDescription
        uid: azure-servicefabric.EnableBackupDescription
  - uid: azure-servicefabric.RepairTaskApproveDescription
    name: RepairTaskApproveDescription
    spec.typeScript:
      - name: RepairTaskApproveDescription
        fullName: RepairTaskApproveDescription
        uid: azure-servicefabric.RepairTaskApproveDescription
  - uid: Promise<azure-servicefabric.AadMetadataObject>
    name: AadMetadataObject>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AadMetadataObject
        fullName: AadMetadataObject
        uid: azure-servicefabric.AadMetadataObject
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.AadMetadataObject>
    name: AadMetadataObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AadMetadataObject
        fullName: AadMetadataObject
        uid: azure-servicefabric.AadMetadataObject
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.AadMetadataObject>>
    name: AadMetadataObject>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AadMetadataObject
        fullName: AadMetadataObject
        uid: azure-servicefabric.AadMetadataObject
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.PagedBackupEntityList>
    name: PagedBackupEntityList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedBackupEntityList
        fullName: PagedBackupEntityList
        uid: azure-servicefabric.PagedBackupEntityList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedBackupEntityList>
    name: PagedBackupEntityList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupEntityList
        fullName: PagedBackupEntityList
        uid: azure-servicefabric.PagedBackupEntityList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedBackupEntityList>>
    name: PagedBackupEntityList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedBackupEntityList
        fullName: PagedBackupEntityList
        uid: azure-servicefabric.PagedBackupEntityList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.PagedBackupConfigurationInfoList>
    name: PagedBackupConfigurationInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedBackupConfigurationInfoList
        fullName: PagedBackupConfigurationInfoList
        uid: azure-servicefabric.PagedBackupConfigurationInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedBackupConfigurationInfoList>
    name: PagedBackupConfigurationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupConfigurationInfoList
        fullName: PagedBackupConfigurationInfoList
        uid: azure-servicefabric.PagedBackupConfigurationInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedBackupConfigurationInfoList>>
    name: PagedBackupConfigurationInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedBackupConfigurationInfoList
        fullName: PagedBackupConfigurationInfoList
        uid: azure-servicefabric.PagedBackupConfigurationInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.PagedBackupInfoList>
    name: PagedBackupInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedBackupInfoList
        fullName: PagedBackupInfoList
        uid: azure-servicefabric.PagedBackupInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedBackupInfoList>
    name: PagedBackupInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupInfoList
        fullName: PagedBackupInfoList
        uid: azure-servicefabric.PagedBackupInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedBackupInfoList>>
    name: PagedBackupInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedBackupInfoList
        fullName: PagedBackupInfoList
        uid: azure-servicefabric.PagedBackupInfoList
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.ApplicationEvent[]>'
    name: 'ApplicationEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ApplicationEvent
        fullName: ApplicationEvent
        uid: azure-servicefabric.ApplicationEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.ApplicationEvent[]>'
    name: 'ApplicationEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationEvent
        fullName: ApplicationEvent
        uid: azure-servicefabric.ApplicationEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.ApplicationEvent[]>>'
    name: 'ApplicationEvent[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ApplicationEvent
        fullName: ApplicationEvent
        uid: azure-servicefabric.ApplicationEvent
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.ApplicationHealth>
    name: ApplicationHealth>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ApplicationHealth
        fullName: ApplicationHealth
        uid: azure-servicefabric.ApplicationHealth
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ApplicationHealth>
    name: ApplicationHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationHealth
        fullName: ApplicationHealth
        uid: azure-servicefabric.ApplicationHealth
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationHealth>>
    name: ApplicationHealth>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ApplicationHealth
        fullName: ApplicationHealth
        uid: azure-servicefabric.ApplicationHealth
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ApplicationInfo>
    name: ApplicationInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ApplicationInfo
        fullName: ApplicationInfo
        uid: azure-servicefabric.ApplicationInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ApplicationInfo>
    name: ApplicationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationInfo
        fullName: ApplicationInfo
        uid: azure-servicefabric.ApplicationInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.PagedApplicationInfoList>
    name: PagedApplicationInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedApplicationInfoList
        fullName: PagedApplicationInfoList
        uid: azure-servicefabric.PagedApplicationInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedApplicationInfoList>
    name: PagedApplicationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationInfoList
        fullName: PagedApplicationInfoList
        uid: azure-servicefabric.PagedApplicationInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationInfoList>>
    name: PagedApplicationInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedApplicationInfoList
        fullName: PagedApplicationInfoList
        uid: azure-servicefabric.PagedApplicationInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationInfo>>
    name: ApplicationInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ApplicationInfo
        fullName: ApplicationInfo
        uid: azure-servicefabric.ApplicationInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ApplicationLoadInfo>
    name: ApplicationLoadInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ApplicationLoadInfo
        fullName: ApplicationLoadInfo
        uid: azure-servicefabric.ApplicationLoadInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ApplicationLoadInfo>
    name: ApplicationLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationLoadInfo
        fullName: ApplicationLoadInfo
        uid: azure-servicefabric.ApplicationLoadInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationLoadInfo>>
    name: ApplicationLoadInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ApplicationLoadInfo
        fullName: ApplicationLoadInfo
        uid: azure-servicefabric.ApplicationLoadInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ApplicationTypeManifest>
    name: ApplicationTypeManifest>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ApplicationTypeManifest
        fullName: ApplicationTypeManifest
        uid: azure-servicefabric.ApplicationTypeManifest
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ApplicationTypeManifest>
    name: ApplicationTypeManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationTypeManifest
        fullName: ApplicationTypeManifest
        uid: azure-servicefabric.ApplicationTypeManifest
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationTypeManifest>>
    name: ApplicationTypeManifest>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ApplicationTypeManifest
        fullName: ApplicationTypeManifest
        uid: azure-servicefabric.ApplicationTypeManifest
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ApplicationNameInfo>
    name: ApplicationNameInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ApplicationNameInfo
        fullName: ApplicationNameInfo
        uid: azure-servicefabric.ApplicationNameInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ApplicationNameInfo>
    name: ApplicationNameInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationNameInfo
        fullName: ApplicationNameInfo
        uid: azure-servicefabric.ApplicationNameInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationNameInfo>>
    name: ApplicationNameInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ApplicationNameInfo
        fullName: ApplicationNameInfo
        uid: azure-servicefabric.ApplicationNameInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.PagedApplicationTypeInfoList>
    name: PagedApplicationTypeInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedApplicationTypeInfoList
        fullName: PagedApplicationTypeInfoList
        uid: azure-servicefabric.PagedApplicationTypeInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
    name: PagedApplicationTypeInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationTypeInfoList
        fullName: PagedApplicationTypeInfoList
        uid: azure-servicefabric.PagedApplicationTypeInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationTypeInfoList>>
    name: PagedApplicationTypeInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedApplicationTypeInfoList
        fullName: PagedApplicationTypeInfoList
        uid: azure-servicefabric.PagedApplicationTypeInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ApplicationUpgradeProgressInfo>
    name: ApplicationUpgradeProgressInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ApplicationUpgradeProgressInfo
        fullName: ApplicationUpgradeProgressInfo
        uid: azure-servicefabric.ApplicationUpgradeProgressInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ApplicationUpgradeProgressInfo>
    name: ApplicationUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationUpgradeProgressInfo
        fullName: ApplicationUpgradeProgressInfo
        uid: azure-servicefabric.ApplicationUpgradeProgressInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationUpgradeProgressInfo>>
    name: ApplicationUpgradeProgressInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ApplicationUpgradeProgressInfo
        fullName: ApplicationUpgradeProgressInfo
        uid: azure-servicefabric.ApplicationUpgradeProgressInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.BackupPolicyDescription>
    name: BackupPolicyDescription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: azure-servicefabric.BackupPolicyDescription
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.BackupPolicyDescription>
    name: BackupPolicyDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: azure-servicefabric.BackupPolicyDescription
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.BackupPolicyDescription>>
    name: BackupPolicyDescription>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: azure-servicefabric.BackupPolicyDescription
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.PagedBackupPolicyDescriptionList>
    name: PagedBackupPolicyDescriptionList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedBackupPolicyDescriptionList
        fullName: PagedBackupPolicyDescriptionList
        uid: azure-servicefabric.PagedBackupPolicyDescriptionList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedBackupPolicyDescriptionList>
    name: PagedBackupPolicyDescriptionList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupPolicyDescriptionList
        fullName: PagedBackupPolicyDescriptionList
        uid: azure-servicefabric.PagedBackupPolicyDescriptionList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedBackupPolicyDescriptionList>>
    name: PagedBackupPolicyDescriptionList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedBackupPolicyDescriptionList
        fullName: PagedBackupPolicyDescriptionList
        uid: azure-servicefabric.PagedBackupPolicyDescriptionList
      - name: '>>'
        fullName: '>>'
  - uid: azure-servicefabric.GetBackupByStorageQueryDescription
    name: GetBackupByStorageQueryDescription
    spec.typeScript:
      - name: GetBackupByStorageQueryDescription
        fullName: GetBackupByStorageQueryDescription
        uid: azure-servicefabric.GetBackupByStorageQueryDescription
  - uid: Promise<azure-servicefabric.Chaos>
    name: Chaos>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Chaos
        fullName: Chaos
        uid: azure-servicefabric.Chaos
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.Chaos>
    name: Chaos>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Chaos
        fullName: Chaos
        uid: azure-servicefabric.Chaos
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.ChaosEventsSegment>
    name: ChaosEventsSegment>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChaosEventsSegment
        fullName: ChaosEventsSegment
        uid: azure-servicefabric.ChaosEventsSegment
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ChaosEventsSegment>
    name: ChaosEventsSegment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ChaosEventsSegment
        fullName: ChaosEventsSegment
        uid: azure-servicefabric.ChaosEventsSegment
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ChaosEventsSegment>>
    name: ChaosEventsSegment>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ChaosEventsSegment
        fullName: ChaosEventsSegment
        uid: azure-servicefabric.ChaosEventsSegment
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ChaosScheduleDescription>
    name: ChaosScheduleDescription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: azure-servicefabric.ChaosScheduleDescription
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ChaosScheduleDescription>
    name: ChaosScheduleDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: azure-servicefabric.ChaosScheduleDescription
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ChaosScheduleDescription>>
    name: ChaosScheduleDescription>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: azure-servicefabric.ChaosScheduleDescription
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.Chaos>>
    name: Chaos>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Chaos
        fullName: Chaos
        uid: azure-servicefabric.Chaos
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ClusterConfiguration>
    name: ClusterConfiguration>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClusterConfiguration
        fullName: ClusterConfiguration
        uid: azure-servicefabric.ClusterConfiguration
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ClusterConfiguration>
    name: ClusterConfiguration>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterConfiguration
        fullName: ClusterConfiguration
        uid: azure-servicefabric.ClusterConfiguration
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
    name: ClusterConfigurationUpgradeStatusInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClusterConfigurationUpgradeStatusInfo
        fullName: ClusterConfigurationUpgradeStatusInfo
        uid: azure-servicefabric.ClusterConfigurationUpgradeStatusInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
    name: ClusterConfigurationUpgradeStatusInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterConfigurationUpgradeStatusInfo
        fullName: ClusterConfigurationUpgradeStatusInfo
        uid: azure-servicefabric.ClusterConfigurationUpgradeStatusInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>>
    name: ClusterConfigurationUpgradeStatusInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ClusterConfigurationUpgradeStatusInfo
        fullName: ClusterConfigurationUpgradeStatusInfo
        uid: azure-servicefabric.ClusterConfigurationUpgradeStatusInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterConfiguration>>
    name: ClusterConfiguration>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ClusterConfiguration
        fullName: ClusterConfiguration
        uid: azure-servicefabric.ClusterConfiguration
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.ClusterEvent[]>'
    name: 'ClusterEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClusterEvent
        fullName: ClusterEvent
        uid: azure-servicefabric.ClusterEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.ClusterEvent[]>'
    name: 'ClusterEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterEvent
        fullName: ClusterEvent
        uid: azure-servicefabric.ClusterEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.ClusterEvent[]>>'
    name: 'ClusterEvent[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ClusterEvent
        fullName: ClusterEvent
        uid: azure-servicefabric.ClusterEvent
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.ClusterHealth>
    name: ClusterHealth>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClusterHealth
        fullName: ClusterHealth
        uid: azure-servicefabric.ClusterHealth
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ClusterHealth>
    name: ClusterHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterHealth
        fullName: ClusterHealth
        uid: azure-servicefabric.ClusterHealth
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.ClusterHealthChunk>
    name: ClusterHealthChunk>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClusterHealthChunk
        fullName: ClusterHealthChunk
        uid: azure-servicefabric.ClusterHealthChunk
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ClusterHealthChunk>
    name: ClusterHealthChunk>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterHealthChunk
        fullName: ClusterHealthChunk
        uid: azure-servicefabric.ClusterHealthChunk
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterHealthChunk>>
    name: ClusterHealthChunk>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ClusterHealthChunk
        fullName: ClusterHealthChunk
        uid: azure-servicefabric.ClusterHealthChunk
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterHealth>>
    name: ClusterHealth>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ClusterHealth
        fullName: ClusterHealth
        uid: azure-servicefabric.ClusterHealth
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ClusterManifest>
    name: ClusterManifest>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClusterManifest
        fullName: ClusterManifest
        uid: azure-servicefabric.ClusterManifest
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ClusterManifest>
    name: ClusterManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterManifest
        fullName: ClusterManifest
        uid: azure-servicefabric.ClusterManifest
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterManifest>>
    name: ClusterManifest>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ClusterManifest
        fullName: ClusterManifest
        uid: azure-servicefabric.ClusterManifest
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ClusterUpgradeProgressObject>
    name: ClusterUpgradeProgressObject>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClusterUpgradeProgressObject
        fullName: ClusterUpgradeProgressObject
        uid: azure-servicefabric.ClusterUpgradeProgressObject
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ClusterUpgradeProgressObject>
    name: ClusterUpgradeProgressObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterUpgradeProgressObject
        fullName: ClusterUpgradeProgressObject
        uid: azure-servicefabric.ClusterUpgradeProgressObject
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterUpgradeProgressObject>>
    name: ClusterUpgradeProgressObject>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ClusterUpgradeProgressObject
        fullName: ClusterUpgradeProgressObject
        uid: azure-servicefabric.ClusterUpgradeProgressObject
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ClusterVersion>
    name: ClusterVersion>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClusterVersion
        fullName: ClusterVersion
        uid: azure-servicefabric.ClusterVersion
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ClusterVersion>
    name: ClusterVersion>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterVersion
        fullName: ClusterVersion
        uid: azure-servicefabric.ClusterVersion
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterVersion>>
    name: ClusterVersion>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ClusterVersion
        fullName: ClusterVersion
        uid: azure-servicefabric.ClusterVersion
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ComposeDeploymentStatusInfo>
    name: ComposeDeploymentStatusInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ComposeDeploymentStatusInfo
        fullName: ComposeDeploymentStatusInfo
        uid: azure-servicefabric.ComposeDeploymentStatusInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ComposeDeploymentStatusInfo>
    name: ComposeDeploymentStatusInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComposeDeploymentStatusInfo
        fullName: ComposeDeploymentStatusInfo
        uid: azure-servicefabric.ComposeDeploymentStatusInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
    name: PagedComposeDeploymentStatusInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedComposeDeploymentStatusInfoList
        fullName: PagedComposeDeploymentStatusInfoList
        uid: azure-servicefabric.PagedComposeDeploymentStatusInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
    name: PagedComposeDeploymentStatusInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedComposeDeploymentStatusInfoList
        fullName: PagedComposeDeploymentStatusInfoList
        uid: azure-servicefabric.PagedComposeDeploymentStatusInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedComposeDeploymentStatusInfoList>>
    name: PagedComposeDeploymentStatusInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedComposeDeploymentStatusInfoList
        fullName: PagedComposeDeploymentStatusInfoList
        uid: azure-servicefabric.PagedComposeDeploymentStatusInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ComposeDeploymentStatusInfo>>
    name: ComposeDeploymentStatusInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ComposeDeploymentStatusInfo
        fullName: ComposeDeploymentStatusInfo
        uid: azure-servicefabric.ComposeDeploymentStatusInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
    name: ComposeDeploymentUpgradeProgressInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ComposeDeploymentUpgradeProgressInfo
        fullName: ComposeDeploymentUpgradeProgressInfo
        uid: azure-servicefabric.ComposeDeploymentUpgradeProgressInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
    name: ComposeDeploymentUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComposeDeploymentUpgradeProgressInfo
        fullName: ComposeDeploymentUpgradeProgressInfo
        uid: azure-servicefabric.ComposeDeploymentUpgradeProgressInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>>
    name: ComposeDeploymentUpgradeProgressInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ComposeDeploymentUpgradeProgressInfo
        fullName: ComposeDeploymentUpgradeProgressInfo
        uid: azure-servicefabric.ComposeDeploymentUpgradeProgressInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ContainerLogs>
    name: ContainerLogs>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainerLogs
        fullName: ContainerLogs
        uid: azure-servicefabric.ContainerLogs
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ContainerLogs>
    name: ContainerLogs>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerLogs
        fullName: ContainerLogs
        uid: azure-servicefabric.ContainerLogs
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ContainerLogs>>
    name: ContainerLogs>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ContainerLogs
        fullName: ContainerLogs
        uid: azure-servicefabric.ContainerLogs
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.ContainerInstanceEvent[]>'
    name: 'ContainerInstanceEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainerInstanceEvent
        fullName: ContainerInstanceEvent
        uid: azure-servicefabric.ContainerInstanceEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.ContainerInstanceEvent[]>'
    name: 'ContainerInstanceEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerInstanceEvent
        fullName: ContainerInstanceEvent
        uid: azure-servicefabric.ContainerInstanceEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.ContainerInstanceEvent[]>>'
    name: 'ContainerInstanceEvent[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ContainerInstanceEvent
        fullName: ContainerInstanceEvent
        uid: azure-servicefabric.ContainerInstanceEvent
      - name: '[]>>'
        fullName: '[]>>'
  - uid: 'Promise<azure-servicefabric.FabricEvent[]>'
    name: 'FabricEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: FabricEvent
        fullName: FabricEvent
        uid: azure-servicefabric.FabricEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.FabricEvent[]>'
    name: 'FabricEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricEvent
        fullName: FabricEvent
        uid: azure-servicefabric.FabricEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.FabricEvent[]>>'
    name: 'FabricEvent[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: FabricEvent
        fullName: FabricEvent
        uid: azure-servicefabric.FabricEvent
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.PartitionDataLossProgress>
    name: PartitionDataLossProgress>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionDataLossProgress
        fullName: PartitionDataLossProgress
        uid: azure-servicefabric.PartitionDataLossProgress
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PartitionDataLossProgress>
    name: PartitionDataLossProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionDataLossProgress
        fullName: PartitionDataLossProgress
        uid: azure-servicefabric.PartitionDataLossProgress
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionDataLossProgress>>
    name: PartitionDataLossProgress>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PartitionDataLossProgress
        fullName: PartitionDataLossProgress
        uid: azure-servicefabric.PartitionDataLossProgress
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.DeployedApplicationHealth>
    name: DeployedApplicationHealth>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeployedApplicationHealth
        fullName: DeployedApplicationHealth
        uid: azure-servicefabric.DeployedApplicationHealth
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
    name: DeployedApplicationHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedApplicationHealth
        fullName: DeployedApplicationHealth
        uid: azure-servicefabric.DeployedApplicationHealth
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationHealth>>
    name: DeployedApplicationHealth>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeployedApplicationHealth
        fullName: DeployedApplicationHealth
        uid: azure-servicefabric.DeployedApplicationHealth
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.DeployedApplicationInfo>
    name: DeployedApplicationInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeployedApplicationInfo
        fullName: DeployedApplicationInfo
        uid: azure-servicefabric.DeployedApplicationInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.DeployedApplicationInfo>
    name: DeployedApplicationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedApplicationInfo
        fullName: DeployedApplicationInfo
        uid: azure-servicefabric.DeployedApplicationInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.PagedDeployedApplicationInfoList>
    name: PagedDeployedApplicationInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedDeployedApplicationInfoList
        fullName: PagedDeployedApplicationInfoList
        uid: azure-servicefabric.PagedDeployedApplicationInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedDeployedApplicationInfoList>
    name: PagedDeployedApplicationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedDeployedApplicationInfoList
        fullName: PagedDeployedApplicationInfoList
        uid: azure-servicefabric.PagedDeployedApplicationInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedDeployedApplicationInfoList>>
    name: PagedDeployedApplicationInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedDeployedApplicationInfoList
        fullName: PagedDeployedApplicationInfoList
        uid: azure-servicefabric.PagedDeployedApplicationInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationInfo>>
    name: DeployedApplicationInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeployedApplicationInfo
        fullName: DeployedApplicationInfo
        uid: azure-servicefabric.DeployedApplicationInfo
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.DeployedCodePackageInfo[]>'
    name: 'DeployedCodePackageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeployedCodePackageInfo
        fullName: DeployedCodePackageInfo
        uid: azure-servicefabric.DeployedCodePackageInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.DeployedCodePackageInfo[]>'
    name: 'DeployedCodePackageInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedCodePackageInfo
        fullName: DeployedCodePackageInfo
        uid: azure-servicefabric.DeployedCodePackageInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.DeployedCodePackageInfo[]>>'
    name: 'DeployedCodePackageInfo[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeployedCodePackageInfo
        fullName: DeployedCodePackageInfo
        uid: azure-servicefabric.DeployedCodePackageInfo
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.DeployedServicePackageHealth>
    name: DeployedServicePackageHealth>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeployedServicePackageHealth
        fullName: DeployedServicePackageHealth
        uid: azure-servicefabric.DeployedServicePackageHealth
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
    name: DeployedServicePackageHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServicePackageHealth
        fullName: DeployedServicePackageHealth
        uid: azure-servicefabric.DeployedServicePackageHealth
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageHealth>>
    name: DeployedServicePackageHealth>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeployedServicePackageHealth
        fullName: DeployedServicePackageHealth
        uid: azure-servicefabric.DeployedServicePackageHealth
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.DeployedServicePackageInfo[]>'
    name: 'DeployedServicePackageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeployedServicePackageInfo
        fullName: DeployedServicePackageInfo
        uid: azure-servicefabric.DeployedServicePackageInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>'
    name: 'DeployedServicePackageInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServicePackageInfo
        fullName: DeployedServicePackageInfo
        uid: azure-servicefabric.DeployedServicePackageInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageInfo[]>>'
    name: 'DeployedServicePackageInfo[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeployedServicePackageInfo
        fullName: DeployedServicePackageInfo
        uid: azure-servicefabric.DeployedServicePackageInfo
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
    name: DeployedServiceReplicaDetailInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeployedServiceReplicaDetailInfo
        fullName: DeployedServiceReplicaDetailInfo
        uid: azure-servicefabric.DeployedServiceReplicaDetailInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
    name: DeployedServiceReplicaDetailInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServiceReplicaDetailInfo
        fullName: DeployedServiceReplicaDetailInfo
        uid: azure-servicefabric.DeployedServiceReplicaDetailInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaDetailInfo>>
    name: DeployedServiceReplicaDetailInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeployedServiceReplicaDetailInfo
        fullName: DeployedServiceReplicaDetailInfo
        uid: azure-servicefabric.DeployedServiceReplicaDetailInfo
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.DeployedServiceReplicaInfo[]>'
    name: 'DeployedServiceReplicaInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeployedServiceReplicaInfo
        fullName: DeployedServiceReplicaInfo
        uid: azure-servicefabric.DeployedServiceReplicaInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.DeployedServiceReplicaInfo[]>'
    name: 'DeployedServiceReplicaInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServiceReplicaInfo
        fullName: DeployedServiceReplicaInfo
        uid: azure-servicefabric.DeployedServiceReplicaInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaInfo[]>>'
    name: 'DeployedServiceReplicaInfo[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeployedServiceReplicaInfo
        fullName: DeployedServiceReplicaInfo
        uid: azure-servicefabric.DeployedServiceReplicaInfo
      - name: '[]>>'
        fullName: '[]>>'
  - uid: 'Promise<azure-servicefabric.DeployedServiceTypeInfo[]>'
    name: 'DeployedServiceTypeInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeployedServiceTypeInfo
        fullName: DeployedServiceTypeInfo
        uid: azure-servicefabric.DeployedServiceTypeInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>'
    name: 'DeployedServiceTypeInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServiceTypeInfo
        fullName: DeployedServiceTypeInfo
        uid: azure-servicefabric.DeployedServiceTypeInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceTypeInfo[]>>'
    name: 'DeployedServiceTypeInfo[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeployedServiceTypeInfo
        fullName: DeployedServiceTypeInfo
        uid: azure-servicefabric.DeployedServiceTypeInfo
      - name: '[]>>'
        fullName: '[]>>'
  - uid: 'Promise<azure-servicefabric.OperationStatus[]>'
    name: 'OperationStatus[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OperationStatus
        fullName: OperationStatus
        uid: azure-servicefabric.OperationStatus
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.OperationStatus[]>'
    name: 'OperationStatus[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: azure-servicefabric.OperationStatus
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.OperationStatus[]>>'
    name: 'OperationStatus[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: OperationStatus
        fullName: OperationStatus
        uid: azure-servicefabric.OperationStatus
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.ImageStoreContent>
    name: ImageStoreContent>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageStoreContent
        fullName: ImageStoreContent
        uid: azure-servicefabric.ImageStoreContent
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ImageStoreContent>
    name: ImageStoreContent>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageStoreContent
        fullName: ImageStoreContent
        uid: azure-servicefabric.ImageStoreContent
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ImageStoreContent>>
    name: ImageStoreContent>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageStoreContent
        fullName: ImageStoreContent
        uid: azure-servicefabric.ImageStoreContent
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.UploadSession>
    name: UploadSession>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UploadSession
        fullName: UploadSession
        uid: azure-servicefabric.UploadSession
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.UploadSession>
    name: UploadSession>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UploadSession
        fullName: UploadSession
        uid: azure-servicefabric.UploadSession
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.UploadSession>>
    name: UploadSession>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: UploadSession
        fullName: UploadSession
        uid: azure-servicefabric.UploadSession
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.NodeEvent[]>'
    name: 'NodeEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NodeEvent
        fullName: NodeEvent
        uid: azure-servicefabric.NodeEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.NodeEvent[]>'
    name: 'NodeEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeEvent
        fullName: NodeEvent
        uid: azure-servicefabric.NodeEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.NodeEvent[]>>'
    name: 'NodeEvent[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NodeEvent
        fullName: NodeEvent
        uid: azure-servicefabric.NodeEvent
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.NodeHealth>
    name: NodeHealth>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NodeHealth
        fullName: NodeHealth
        uid: azure-servicefabric.NodeHealth
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.NodeHealth>
    name: NodeHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeHealth
        fullName: NodeHealth
        uid: azure-servicefabric.NodeHealth
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.NodeHealth>>
    name: NodeHealth>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NodeHealth
        fullName: NodeHealth
        uid: azure-servicefabric.NodeHealth
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.NodeInfo>
    name: NodeInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NodeInfo
        fullName: NodeInfo
        uid: azure-servicefabric.NodeInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.NodeInfo>
    name: NodeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeInfo
        fullName: NodeInfo
        uid: azure-servicefabric.NodeInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.PagedNodeInfoList>
    name: PagedNodeInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedNodeInfoList
        fullName: PagedNodeInfoList
        uid: azure-servicefabric.PagedNodeInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedNodeInfoList>
    name: PagedNodeInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedNodeInfoList
        fullName: PagedNodeInfoList
        uid: azure-servicefabric.PagedNodeInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedNodeInfoList>>
    name: PagedNodeInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedNodeInfoList
        fullName: PagedNodeInfoList
        uid: azure-servicefabric.PagedNodeInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.NodeInfo>>
    name: NodeInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NodeInfo
        fullName: NodeInfo
        uid: azure-servicefabric.NodeInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.NodeLoadInfo>
    name: NodeLoadInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NodeLoadInfo
        fullName: NodeLoadInfo
        uid: azure-servicefabric.NodeLoadInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.NodeLoadInfo>
    name: NodeLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeLoadInfo
        fullName: NodeLoadInfo
        uid: azure-servicefabric.NodeLoadInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.NodeLoadInfo>>
    name: NodeLoadInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NodeLoadInfo
        fullName: NodeLoadInfo
        uid: azure-servicefabric.NodeLoadInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.NodeTransitionProgress>
    name: NodeTransitionProgress>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NodeTransitionProgress
        fullName: NodeTransitionProgress
        uid: azure-servicefabric.NodeTransitionProgress
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.NodeTransitionProgress>
    name: NodeTransitionProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeTransitionProgress
        fullName: NodeTransitionProgress
        uid: azure-servicefabric.NodeTransitionProgress
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.NodeTransitionProgress>>
    name: NodeTransitionProgress>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NodeTransitionProgress
        fullName: NodeTransitionProgress
        uid: azure-servicefabric.NodeTransitionProgress
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.PartitionBackupConfigurationInfo>
    name: PartitionBackupConfigurationInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionBackupConfigurationInfo
        fullName: PartitionBackupConfigurationInfo
        uid: azure-servicefabric.PartitionBackupConfigurationInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PartitionBackupConfigurationInfo>
    name: PartitionBackupConfigurationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionBackupConfigurationInfo
        fullName: PartitionBackupConfigurationInfo
        uid: azure-servicefabric.PartitionBackupConfigurationInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionBackupConfigurationInfo>>
    name: PartitionBackupConfigurationInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PartitionBackupConfigurationInfo
        fullName: PartitionBackupConfigurationInfo
        uid: azure-servicefabric.PartitionBackupConfigurationInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.BackupProgressInfo>
    name: BackupProgressInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupProgressInfo
        fullName: BackupProgressInfo
        uid: azure-servicefabric.BackupProgressInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.BackupProgressInfo>
    name: BackupProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupProgressInfo
        fullName: BackupProgressInfo
        uid: azure-servicefabric.BackupProgressInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.BackupProgressInfo>>
    name: BackupProgressInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupProgressInfo
        fullName: BackupProgressInfo
        uid: azure-servicefabric.BackupProgressInfo
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.PartitionEvent[]>'
    name: 'PartitionEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionEvent
        fullName: PartitionEvent
        uid: azure-servicefabric.PartitionEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.PartitionEvent[]>'
    name: 'PartitionEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionEvent
        fullName: PartitionEvent
        uid: azure-servicefabric.PartitionEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.PartitionEvent[]>>'
    name: 'PartitionEvent[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PartitionEvent
        fullName: PartitionEvent
        uid: azure-servicefabric.PartitionEvent
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.PartitionHealth>
    name: PartitionHealth>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionHealth
        fullName: PartitionHealth
        uid: azure-servicefabric.PartitionHealth
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PartitionHealth>
    name: PartitionHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionHealth
        fullName: PartitionHealth
        uid: azure-servicefabric.PartitionHealth
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionHealth>>
    name: PartitionHealth>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PartitionHealth
        fullName: PartitionHealth
        uid: azure-servicefabric.PartitionHealth
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ServicePartitionInfo>
    name: ServicePartitionInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServicePartitionInfo
        fullName: ServicePartitionInfo
        uid: azure-servicefabric.ServicePartitionInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ServicePartitionInfo>
    name: ServicePartitionInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServicePartitionInfo
        fullName: ServicePartitionInfo
        uid: azure-servicefabric.ServicePartitionInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.PagedServicePartitionInfoList>
    name: PagedServicePartitionInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedServicePartitionInfoList
        fullName: PagedServicePartitionInfoList
        uid: azure-servicefabric.PagedServicePartitionInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedServicePartitionInfoList>
    name: PagedServicePartitionInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedServicePartitionInfoList
        fullName: PagedServicePartitionInfoList
        uid: azure-servicefabric.PagedServicePartitionInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedServicePartitionInfoList>>
    name: PagedServicePartitionInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedServicePartitionInfoList
        fullName: PagedServicePartitionInfoList
        uid: azure-servicefabric.PagedServicePartitionInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ServicePartitionInfo>>
    name: ServicePartitionInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServicePartitionInfo
        fullName: ServicePartitionInfo
        uid: azure-servicefabric.ServicePartitionInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.PartitionLoadInformation>
    name: PartitionLoadInformation>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionLoadInformation
        fullName: PartitionLoadInformation
        uid: azure-servicefabric.PartitionLoadInformation
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PartitionLoadInformation>
    name: PartitionLoadInformation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionLoadInformation
        fullName: PartitionLoadInformation
        uid: azure-servicefabric.PartitionLoadInformation
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionLoadInformation>>
    name: PartitionLoadInformation>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PartitionLoadInformation
        fullName: PartitionLoadInformation
        uid: azure-servicefabric.PartitionLoadInformation
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.ReplicaEvent[]>'
    name: 'ReplicaEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReplicaEvent
        fullName: ReplicaEvent
        uid: azure-servicefabric.ReplicaEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.ReplicaEvent[]>'
    name: 'ReplicaEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReplicaEvent
        fullName: ReplicaEvent
        uid: azure-servicefabric.ReplicaEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.ReplicaEvent[]>>'
    name: 'ReplicaEvent[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ReplicaEvent
        fullName: ReplicaEvent
        uid: azure-servicefabric.ReplicaEvent
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.PartitionRestartProgress>
    name: PartitionRestartProgress>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionRestartProgress
        fullName: PartitionRestartProgress
        uid: azure-servicefabric.PartitionRestartProgress
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PartitionRestartProgress>
    name: PartitionRestartProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionRestartProgress
        fullName: PartitionRestartProgress
        uid: azure-servicefabric.PartitionRestartProgress
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionRestartProgress>>
    name: PartitionRestartProgress>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PartitionRestartProgress
        fullName: PartitionRestartProgress
        uid: azure-servicefabric.PartitionRestartProgress
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.RestoreProgressInfo>
    name: RestoreProgressInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RestoreProgressInfo
        fullName: RestoreProgressInfo
        uid: azure-servicefabric.RestoreProgressInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.RestoreProgressInfo>
    name: RestoreProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RestoreProgressInfo
        fullName: RestoreProgressInfo
        uid: azure-servicefabric.RestoreProgressInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.RestoreProgressInfo>>
    name: RestoreProgressInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RestoreProgressInfo
        fullName: RestoreProgressInfo
        uid: azure-servicefabric.RestoreProgressInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.PropertyInfo>
    name: PropertyInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PropertyInfo
        fullName: PropertyInfo
        uid: azure-servicefabric.PropertyInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PropertyInfo>
    name: PropertyInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PropertyInfo
        fullName: PropertyInfo
        uid: azure-servicefabric.PropertyInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.PagedPropertyInfoList>
    name: PagedPropertyInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedPropertyInfoList
        fullName: PagedPropertyInfoList
        uid: azure-servicefabric.PagedPropertyInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedPropertyInfoList>
    name: PagedPropertyInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedPropertyInfoList
        fullName: PagedPropertyInfoList
        uid: azure-servicefabric.PagedPropertyInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedPropertyInfoList>>
    name: PagedPropertyInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedPropertyInfoList
        fullName: PagedPropertyInfoList
        uid: azure-servicefabric.PagedPropertyInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PropertyInfo>>
    name: PropertyInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PropertyInfo
        fullName: PropertyInfo
        uid: azure-servicefabric.PropertyInfo
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.FabricCodeVersionInfo[]>'
    name: 'FabricCodeVersionInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: FabricCodeVersionInfo
        fullName: FabricCodeVersionInfo
        uid: azure-servicefabric.FabricCodeVersionInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.FabricCodeVersionInfo[]>'
    name: 'FabricCodeVersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricCodeVersionInfo
        fullName: FabricCodeVersionInfo
        uid: azure-servicefabric.FabricCodeVersionInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.FabricCodeVersionInfo[]>>'
    name: 'FabricCodeVersionInfo[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: FabricCodeVersionInfo
        fullName: FabricCodeVersionInfo
        uid: azure-servicefabric.FabricCodeVersionInfo
      - name: '[]>>'
        fullName: '[]>>'
  - uid: 'Promise<azure-servicefabric.FabricConfigVersionInfo[]>'
    name: 'FabricConfigVersionInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: FabricConfigVersionInfo
        fullName: FabricConfigVersionInfo
        uid: azure-servicefabric.FabricConfigVersionInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.FabricConfigVersionInfo[]>'
    name: 'FabricConfigVersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricConfigVersionInfo
        fullName: FabricConfigVersionInfo
        uid: azure-servicefabric.FabricConfigVersionInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.FabricConfigVersionInfo[]>>'
    name: 'FabricConfigVersionInfo[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: FabricConfigVersionInfo
        fullName: FabricConfigVersionInfo
        uid: azure-servicefabric.FabricConfigVersionInfo
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.PartitionQuorumLossProgress>
    name: PartitionQuorumLossProgress>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionQuorumLossProgress
        fullName: PartitionQuorumLossProgress
        uid: azure-servicefabric.PartitionQuorumLossProgress
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PartitionQuorumLossProgress>
    name: PartitionQuorumLossProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionQuorumLossProgress
        fullName: PartitionQuorumLossProgress
        uid: azure-servicefabric.PartitionQuorumLossProgress
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionQuorumLossProgress>>
    name: PartitionQuorumLossProgress>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PartitionQuorumLossProgress
        fullName: PartitionQuorumLossProgress
        uid: azure-servicefabric.PartitionQuorumLossProgress
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.RepairTask[]>'
    name: 'RepairTask[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RepairTask
        fullName: RepairTask
        uid: azure-servicefabric.RepairTask
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.RepairTask[]>'
    name: 'RepairTask[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RepairTask
        fullName: RepairTask
        uid: azure-servicefabric.RepairTask
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.RepairTask[]>>'
    name: 'RepairTask[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RepairTask
        fullName: RepairTask
        uid: azure-servicefabric.RepairTask
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.ReplicaHealth>
    name: ReplicaHealth>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReplicaHealth
        fullName: ReplicaHealth
        uid: azure-servicefabric.ReplicaHealth
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ReplicaHealth>
    name: ReplicaHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReplicaHealth
        fullName: ReplicaHealth
        uid: azure-servicefabric.ReplicaHealth
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ReplicaHealth>>
    name: ReplicaHealth>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ReplicaHealth
        fullName: ReplicaHealth
        uid: azure-servicefabric.ReplicaHealth
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ReplicaInfo>
    name: ReplicaInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReplicaInfo
        fullName: ReplicaInfo
        uid: azure-servicefabric.ReplicaInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ReplicaInfo>
    name: ReplicaInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReplicaInfo
        fullName: ReplicaInfo
        uid: azure-servicefabric.ReplicaInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.PagedReplicaInfoList>
    name: PagedReplicaInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedReplicaInfoList
        fullName: PagedReplicaInfoList
        uid: azure-servicefabric.PagedReplicaInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedReplicaInfoList>
    name: PagedReplicaInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedReplicaInfoList
        fullName: PagedReplicaInfoList
        uid: azure-servicefabric.PagedReplicaInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedReplicaInfoList>>
    name: PagedReplicaInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedReplicaInfoList
        fullName: PagedReplicaInfoList
        uid: azure-servicefabric.PagedReplicaInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ReplicaInfo>>
    name: ReplicaInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ReplicaInfo
        fullName: ReplicaInfo
        uid: azure-servicefabric.ReplicaInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ServiceDescription>
    name: ServiceDescription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceDescription
        fullName: ServiceDescription
        uid: azure-servicefabric.ServiceDescription
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ServiceDescription>
    name: ServiceDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceDescription
        fullName: ServiceDescription
        uid: azure-servicefabric.ServiceDescription
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceDescription>>
    name: ServiceDescription>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServiceDescription
        fullName: ServiceDescription
        uid: azure-servicefabric.ServiceDescription
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.ServiceEvent[]>'
    name: 'ServiceEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceEvent
        fullName: ServiceEvent
        uid: azure-servicefabric.ServiceEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.ServiceEvent[]>'
    name: 'ServiceEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceEvent
        fullName: ServiceEvent
        uid: azure-servicefabric.ServiceEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.ServiceEvent[]>>'
    name: 'ServiceEvent[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServiceEvent
        fullName: ServiceEvent
        uid: azure-servicefabric.ServiceEvent
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.ServiceHealth>
    name: ServiceHealth>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceHealth
        fullName: ServiceHealth
        uid: azure-servicefabric.ServiceHealth
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ServiceHealth>
    name: ServiceHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceHealth
        fullName: ServiceHealth
        uid: azure-servicefabric.ServiceHealth
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceHealth>>
    name: ServiceHealth>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServiceHealth
        fullName: ServiceHealth
        uid: azure-servicefabric.ServiceHealth
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ServiceInfo>
    name: ServiceInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceInfo
        fullName: ServiceInfo
        uid: azure-servicefabric.ServiceInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ServiceInfo>
    name: ServiceInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceInfo
        fullName: ServiceInfo
        uid: azure-servicefabric.ServiceInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-servicefabric.PagedServiceInfoList>
    name: PagedServiceInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedServiceInfoList
        fullName: PagedServiceInfoList
        uid: azure-servicefabric.PagedServiceInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedServiceInfoList>
    name: PagedServiceInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedServiceInfoList
        fullName: PagedServiceInfoList
        uid: azure-servicefabric.PagedServiceInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedServiceInfoList>>
    name: PagedServiceInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedServiceInfoList
        fullName: PagedServiceInfoList
        uid: azure-servicefabric.PagedServiceInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceInfo>>
    name: ServiceInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServiceInfo
        fullName: ServiceInfo
        uid: azure-servicefabric.ServiceInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ServiceTypeManifest>
    name: ServiceTypeManifest>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceTypeManifest
        fullName: ServiceTypeManifest
        uid: azure-servicefabric.ServiceTypeManifest
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ServiceTypeManifest>
    name: ServiceTypeManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeManifest
        fullName: ServiceTypeManifest
        uid: azure-servicefabric.ServiceTypeManifest
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeManifest>>
    name: ServiceTypeManifest>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServiceTypeManifest
        fullName: ServiceTypeManifest
        uid: azure-servicefabric.ServiceTypeManifest
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ServiceNameInfo>
    name: ServiceNameInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceNameInfo
        fullName: ServiceNameInfo
        uid: azure-servicefabric.ServiceNameInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ServiceNameInfo>
    name: ServiceNameInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceNameInfo
        fullName: ServiceNameInfo
        uid: azure-servicefabric.ServiceNameInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceNameInfo>>
    name: ServiceNameInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServiceNameInfo
        fullName: ServiceNameInfo
        uid: azure-servicefabric.ServiceNameInfo
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.ServiceTypeInfo>
    name: ServiceTypeInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: azure-servicefabric.ServiceTypeInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ServiceTypeInfo>
    name: ServiceTypeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: azure-servicefabric.ServiceTypeInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeInfo>>
    name: ServiceTypeInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: azure-servicefabric.ServiceTypeInfo
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-servicefabric.ServiceTypeInfo[]>'
    name: 'ServiceTypeInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: azure-servicefabric.ServiceTypeInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-servicefabric.ServiceTypeInfo[]>'
    name: 'ServiceTypeInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: azure-servicefabric.ServiceTypeInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeInfo[]>>'
    name: 'ServiceTypeInfo[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: azure-servicefabric.ServiceTypeInfo
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-servicefabric.PagedSubNameInfoList>
    name: PagedSubNameInfoList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PagedSubNameInfoList
        fullName: PagedSubNameInfoList
        uid: azure-servicefabric.PagedSubNameInfoList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PagedSubNameInfoList>
    name: PagedSubNameInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedSubNameInfoList
        fullName: PagedSubNameInfoList
        uid: azure-servicefabric.PagedSubNameInfoList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PagedSubNameInfoList>>
    name: PagedSubNameInfoList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PagedSubNameInfoList
        fullName: PagedSubNameInfoList
        uid: azure-servicefabric.PagedSubNameInfoList
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-servicefabric.UpgradeOrchestrationServiceState>
    name: UpgradeOrchestrationServiceState>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: azure-servicefabric.UpgradeOrchestrationServiceState
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.UpgradeOrchestrationServiceState>
    name: UpgradeOrchestrationServiceState>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: azure-servicefabric.UpgradeOrchestrationServiceState
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.UpgradeOrchestrationServiceState>>
    name: UpgradeOrchestrationServiceState>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: azure-servicefabric.UpgradeOrchestrationServiceState
      - name: '>>'
        fullName: '>>'
  - uid: azure-servicefabric.ContainerApiRequestBody
    name: ContainerApiRequestBody
    spec.typeScript:
      - name: ContainerApiRequestBody
        fullName: ContainerApiRequestBody
        uid: azure-servicefabric.ContainerApiRequestBody
  - uid: Promise<azure-servicefabric.ContainerApiResponse>
    name: ContainerApiResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainerApiResponse
        fullName: ContainerApiResponse
        uid: azure-servicefabric.ContainerApiResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ContainerApiResponse>
    name: ContainerApiResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerApiResponse
        fullName: ContainerApiResponse
        uid: azure-servicefabric.ContainerApiResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ContainerApiResponse>>
    name: ContainerApiResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ContainerApiResponse
        fullName: ContainerApiResponse
        uid: azure-servicefabric.ContainerApiResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-servicefabric.ChaosScheduleDescription
    name: ChaosScheduleDescription
    spec.typeScript:
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: azure-servicefabric.ChaosScheduleDescription
  - uid: azure-servicefabric.ProvisionApplicationTypeDescriptionBase
    name: ProvisionApplicationTypeDescriptionBase
    spec.typeScript:
      - name: ProvisionApplicationTypeDescriptionBase
        fullName: ProvisionApplicationTypeDescriptionBase
        uid: azure-servicefabric.ProvisionApplicationTypeDescriptionBase
  - uid: azure-servicefabric.ProvisionFabricDescription
    name: ProvisionFabricDescription
    spec.typeScript:
      - name: ProvisionFabricDescription
        fullName: ProvisionFabricDescription
        uid: azure-servicefabric.ProvisionFabricDescription
  - uid: azure-servicefabric.PropertyDescription
    name: PropertyDescription
    spec.typeScript:
      - name: PropertyDescription
        fullName: PropertyDescription
        uid: azure-servicefabric.PropertyDescription
  - uid: azure-servicefabric.HealthInformation
    name: HealthInformation
    spec.typeScript:
      - name: HealthInformation
        fullName: HealthInformation
        uid: azure-servicefabric.HealthInformation
  - uid: Promise<azure-servicefabric.ResolvedServicePartition>
    name: ResolvedServicePartition>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ResolvedServicePartition
        fullName: ResolvedServicePartition
        uid: azure-servicefabric.ResolvedServicePartition
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.ResolvedServicePartition>
    name: ResolvedServicePartition>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResolvedServicePartition
        fullName: ResolvedServicePartition
        uid: azure-servicefabric.ResolvedServicePartition
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.ResolvedServicePartition>>
    name: ResolvedServicePartition>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ResolvedServicePartition
        fullName: ResolvedServicePartition
        uid: azure-servicefabric.ResolvedServicePartition
      - name: '>>'
        fullName: '>>'
  - uid: azure-servicefabric.RestartDeployedCodePackageDescription
    name: RestartDeployedCodePackageDescription
    spec.typeScript:
      - name: RestartDeployedCodePackageDescription
        fullName: RestartDeployedCodePackageDescription
        uid: azure-servicefabric.RestartDeployedCodePackageDescription
  - uid: azure-servicefabric.RestartNodeDescription
    name: RestartNodeDescription
    spec.typeScript:
      - name: RestartNodeDescription
        fullName: RestartNodeDescription
        uid: azure-servicefabric.RestartNodeDescription
  - uid: azure-servicefabric.RestorePartitionDescription
    name: RestorePartitionDescription
    spec.typeScript:
      - name: RestorePartitionDescription
        fullName: RestorePartitionDescription
        uid: azure-servicefabric.RestorePartitionDescription
  - uid: azure-servicefabric.ResumeApplicationUpgradeDescription
    name: ResumeApplicationUpgradeDescription
    spec.typeScript:
      - name: ResumeApplicationUpgradeDescription
        fullName: ResumeApplicationUpgradeDescription
        uid: azure-servicefabric.ResumeApplicationUpgradeDescription
  - uid: azure-servicefabric.ResumeClusterUpgradeDescription
    name: ResumeClusterUpgradeDescription
    spec.typeScript:
      - name: ResumeClusterUpgradeDescription
        fullName: ResumeClusterUpgradeDescription
        uid: azure-servicefabric.ResumeClusterUpgradeDescription
  - uid: azure-servicefabric.UpgradeOrchestrationServiceState
    name: UpgradeOrchestrationServiceState
    spec.typeScript:
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: azure-servicefabric.UpgradeOrchestrationServiceState
  - uid: Promise<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>
    name: UpgradeOrchestrationServiceStateSummary>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UpgradeOrchestrationServiceStateSummary
        fullName: UpgradeOrchestrationServiceStateSummary
        uid: azure-servicefabric.UpgradeOrchestrationServiceStateSummary
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>
    name: UpgradeOrchestrationServiceStateSummary>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UpgradeOrchestrationServiceStateSummary
        fullName: UpgradeOrchestrationServiceStateSummary
        uid: azure-servicefabric.UpgradeOrchestrationServiceStateSummary
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.UpgradeOrchestrationServiceStateSummary>>
    name: UpgradeOrchestrationServiceStateSummary>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: UpgradeOrchestrationServiceStateSummary
        fullName: UpgradeOrchestrationServiceStateSummary
        uid: azure-servicefabric.UpgradeOrchestrationServiceStateSummary
      - name: '>>'
        fullName: '>>'
  - uid: azure-servicefabric.ApplicationUpgradeDescription
    name: ApplicationUpgradeDescription
    spec.typeScript:
      - name: ApplicationUpgradeDescription
        fullName: ApplicationUpgradeDescription
        uid: azure-servicefabric.ApplicationUpgradeDescription
  - uid: azure-servicefabric.ChaosParameters
    name: ChaosParameters
    spec.typeScript:
      - name: ChaosParameters
        fullName: ChaosParameters
        uid: azure-servicefabric.ChaosParameters
  - uid: azure-servicefabric.ClusterConfigurationUpgradeDescription
    name: ClusterConfigurationUpgradeDescription
    spec.typeScript:
      - name: ClusterConfigurationUpgradeDescription
        fullName: ClusterConfigurationUpgradeDescription
        uid: azure-servicefabric.ClusterConfigurationUpgradeDescription
  - uid: azure-servicefabric.StartClusterUpgradeDescription
    name: StartClusterUpgradeDescription
    spec.typeScript:
      - name: StartClusterUpgradeDescription
        fullName: StartClusterUpgradeDescription
        uid: azure-servicefabric.StartClusterUpgradeDescription
  - uid: azure-servicefabric.ComposeDeploymentUpgradeDescription
    name: ComposeDeploymentUpgradeDescription
    spec.typeScript:
      - name: ComposeDeploymentUpgradeDescription
        fullName: ComposeDeploymentUpgradeDescription
        uid: azure-servicefabric.ComposeDeploymentUpgradeDescription
  - uid: azure-servicefabric.PropertyBatchDescriptionList
    name: PropertyBatchDescriptionList
    spec.typeScript:
      - name: PropertyBatchDescriptionList
        fullName: PropertyBatchDescriptionList
        uid: azure-servicefabric.PropertyBatchDescriptionList
  - uid: Promise<azure-servicefabric.PropertyBatchInfo>
    name: PropertyBatchInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PropertyBatchInfo
        fullName: PropertyBatchInfo
        uid: azure-servicefabric.PropertyBatchInfo
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-servicefabric.PropertyBatchInfo>
    name: PropertyBatchInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PropertyBatchInfo
        fullName: PropertyBatchInfo
        uid: azure-servicefabric.PropertyBatchInfo
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-servicefabric.PropertyBatchInfo>>
    name: PropertyBatchInfo>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PropertyBatchInfo
        fullName: PropertyBatchInfo
        uid: azure-servicefabric.PropertyBatchInfo
      - name: '>>'
        fullName: '>>'
  - uid: azure-servicefabric.UnprovisionApplicationTypeDescriptionInfo
    name: UnprovisionApplicationTypeDescriptionInfo
    spec.typeScript:
      - name: UnprovisionApplicationTypeDescriptionInfo
        fullName: UnprovisionApplicationTypeDescriptionInfo
        uid: azure-servicefabric.UnprovisionApplicationTypeDescriptionInfo
  - uid: azure-servicefabric.UnprovisionFabricDescription
    name: UnprovisionFabricDescription
    spec.typeScript:
      - name: UnprovisionFabricDescription
        fullName: UnprovisionFabricDescription
        uid: azure-servicefabric.UnprovisionFabricDescription
  - uid: azure-servicefabric.ApplicationUpgradeUpdateDescription
    name: ApplicationUpgradeUpdateDescription
    spec.typeScript:
      - name: ApplicationUpgradeUpdateDescription
        fullName: ApplicationUpgradeUpdateDescription
        uid: azure-servicefabric.ApplicationUpgradeUpdateDescription
  - uid: azure-servicefabric.UpdateClusterUpgradeDescription
    name: UpdateClusterUpgradeDescription
    spec.typeScript:
      - name: UpdateClusterUpgradeDescription
        fullName: UpdateClusterUpgradeDescription
        uid: azure-servicefabric.UpdateClusterUpgradeDescription
  - uid: azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
    name: RepairTaskUpdateHealthPolicyDescription
    spec.typeScript:
      - name: RepairTaskUpdateHealthPolicyDescription
        fullName: RepairTaskUpdateHealthPolicyDescription
        uid: azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
  - uid: azure-servicefabric.ServiceUpdateDescription
    name: ServiceUpdateDescription
    spec.typeScript:
      - name: ServiceUpdateDescription
        fullName: ServiceUpdateDescription
        uid: azure-servicefabric.ServiceUpdateDescription