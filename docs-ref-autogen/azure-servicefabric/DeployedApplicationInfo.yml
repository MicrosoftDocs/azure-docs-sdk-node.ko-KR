### YamlMime:UniversalReference
ms.openlocfilehash: 7bd05f9b0cd434cb3e82b3daca8126a36444e426
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52029617"
items:
- uid: azure-servicefabric.DeployedApplicationInfo
  name: DeployedApplicationInfo
  fullName: DeployedApplicationInfo
  children:
  - azure-servicefabric.DeployedApplicationInfo.healthState
  - azure-servicefabric.DeployedApplicationInfo.id
  - azure-servicefabric.DeployedApplicationInfo.logDirectory
  - azure-servicefabric.DeployedApplicationInfo.name
  - azure-servicefabric.DeployedApplicationInfo.status
  - azure-servicefabric.DeployedApplicationInfo.tempDirectory
  - azure-servicefabric.DeployedApplicationInfo.typeName
  - azure-servicefabric.DeployedApplicationInfo.workDirectory
  langs:
  - typeScript
  type: interface
  summary: <span data-ttu-id="2b42e-101">노드에 배포 된 응용 프로그램에 대 한 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-101">Information about application deployed on the node.</span></span>
  package: azure-servicefabric
- uid: azure-servicefabric.DeployedApplicationInfo.healthState
  name: healthState
  fullName: healthState
  children: []
  langs:
  - typeScript
  type: property
  summary: "<span data-ttu-id=\"2b42e-102\">Service Fabric 엔터티를 같은 클러스터, 노드, 응용 프로그램, 서비스, 파티션, 복제본 등의 상태입니다. 가능한 값은 다음과 같습니다. 'Invalid', '확인', 'Warning', 'Error', '알 수 없는'</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b42e-102\">The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'</span></span>"
  optional: true
  syntax:
    content: 'healthState?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.DeployedApplicationInfo.id
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    <span data-ttu-id="2b42e-103">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-103">The identity of the application.</span></span> <span data-ttu-id="2b42e-104">이것이 응용 프로그램 이름에 대 한 인코딩된 표현을입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-104">This is an encoded representation of the application name.</span></span>

    <span data-ttu-id="2b42e-105">이 응용 프로그램 리소스를 식별 하는 REST Api에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-105">This is used in the REST APIs to identify the application resource.</span></span>

    <span data-ttu-id="2b42e-106">버전 6.0부터 계층 이름은로 구분 되는 "\~" 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-106">Starting in version 6.0, hierarchical names are delimited with the "\~" character.</span></span> <span data-ttu-id="2b42e-107">예를 들어 응용 프로그램 이름이 "fabric: / myapp/app1", 응용 프로그램 id는 것 "myapp\~app1" 6.0 + 및 이전 버전에서는 "myapp/app1"입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-107">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
  optional: true
  syntax:
    content: 'id?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.DeployedApplicationInfo.logDirectory
  name: logDirectory
  fullName: logDirectory
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2b42e-108">노드에서 응용 프로그램의 로그 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-108">The log directory of the application on the node.</span></span> <span data-ttu-id="2b42e-109">응용 프로그램 로그를 저장 하 여 로그 디렉터리를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-109">The log directory can be used to store application logs.</span></span>
  optional: true
  syntax:
    content: 'logDirectory?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.DeployedApplicationInfo.name
  name: name
  fullName: name
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2b42e-110">응용 프로그램의 이름을 포함 하는 ' fabric:' URI 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-110">The name of the application, including the 'fabric:' URI scheme.</span></span>
  optional: true
  syntax:
    content: 'name?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.DeployedApplicationInfo.status
  name: status
  fullName: status
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    <span data-ttu-id="2b42e-111">노드에 배포 된 응용 프로그램의 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-111">The status of the application deployed on the node.</span></span> <span data-ttu-id="2b42e-112">다음은 가능한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-112">Following are the possible values.</span></span>

    <span data-ttu-id="2b42e-113">가능한 값은 다음과 같습니다. ' Invalid', '다운로드', '활성화', 'Active', '업그레이드', '비활성화'</span><span class="sxs-lookup"><span data-stu-id="2b42e-113">Possible values include: 'Invalid', 'Downloading', 'Activating', 'Active', 'Upgrading', 'Deactivating'</span></span>
  optional: true
  syntax:
    content: 'status?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.DeployedApplicationInfo.tempDirectory
  name: tempDirectory
  fullName: tempDirectory
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2b42e-114">노드에서 응용 프로그램의 임시 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-114">The temp directory of the application on the node.</span></span> <span data-ttu-id="2b42e-115">응용 프로그램에 속하는 코드 패키지는 해당 임시 디렉터리로 설정 합니다.이 디렉터리를 사용 하 여 분기 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-115">The code packages belonging to the application are forked with this directory set as their temporary directory.</span></span>
  optional: true
  syntax:
    content: 'tempDirectory?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.DeployedApplicationInfo.typeName
  name: typeName
  fullName: typeName
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2b42e-116">응용 프로그램 매니페스트에 정의 된 대로 응용 프로그램 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-116">The application type name as defined in the application manifest.</span></span>
  optional: true
  syntax:
    content: 'typeName?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.DeployedApplicationInfo.workDirectory
  name: workDirectory
  fullName: workDirectory
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2b42e-117">노드에서 응용 프로그램의 작업 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-117">The work directory of the application on the node.</span></span> <span data-ttu-id="2b42e-118">응용 프로그램 데이터를 저장 하는 작업 디렉터리를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b42e-118">The work directory can be used to store application data.</span></span>
  optional: true
  syntax:
    content: 'workDirectory?: string'
    return:
      type:
      - string
  package: azure-servicefabric
