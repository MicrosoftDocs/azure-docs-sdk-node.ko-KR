### YamlMime:UniversalReference
ms.openlocfilehash: b668012a360630506b3de5e9274fb380c44683f9
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52170008"
items:
- uid: azure-cognitiveservices-face.PersonGroupPerson
  name: PersonGroupPerson
  fullName: PersonGroupPerson
  children:
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.create
  - azure-cognitiveservices-face.PersonGroupPerson.create_2
  - azure-cognitiveservices-face.PersonGroupPerson.create_1
  - azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.get
  - azure-cognitiveservices-face.PersonGroupPerson.get_2
  - azure-cognitiveservices-face.PersonGroupPerson.get_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFace
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.list
  - azure-cognitiveservices-face.PersonGroupPerson.list_2
  - azure-cognitiveservices-face.PersonGroupPerson.list_1
  - azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.update
  - azure-cognitiveservices-face.PersonGroupPerson.update_2
  - azure-cognitiveservices-face.PersonGroupPerson.update_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-101">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="28f36-102">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-103">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-103">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-104">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-104">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28f36-105">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-106">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-106">Add a representative face to a person for identification.</span></span> <span data-ttu-id="28f36-107">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-107">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-108">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-108">Add a representative face to a person for identification.</span></span> <span data-ttu-id="28f36-109">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-109">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-110">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-110">Add a representative face to a person for identification.</span></span> <span data-ttu-id="28f36-111">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-111">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-112">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-112">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-113">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-113">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28f36-114">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-114">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-115">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-115">Add a representative face to a person for identification.</span></span> <span data-ttu-id="28f36-116">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-116">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-117">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-117">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-118">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-118">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="28f36-119">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="28f36-119">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-120">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-120">Add a representative face to a person for identification.</span></span> <span data-ttu-id="28f36-121">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-121">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-122">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-122">Add a representative face to a person for identification.</span></span> <span data-ttu-id="28f36-123">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-123">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-124">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-124">Add a representative face to a person for identification.</span></span> <span data-ttu-id="28f36-125">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-125">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-126">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-126">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-127">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-127">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="28f36-128">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="28f36-128">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-129">지정 된 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-130">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-130">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-131">지정 된 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-132">지정 된 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-132">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-133">지정 된 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-133">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-134">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-134">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-135">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-135">Delete a face from a person.</span></span> <span data-ttu-id="28f36-136">지속 된 얼굴에 대 한 상대적 기능도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-136">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-137">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-137">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-138">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-138">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-139">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-139">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-140">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-140">Delete a face from a person.</span></span> <span data-ttu-id="28f36-141">지속 된 얼굴에 대 한 상대적 기능도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-141">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-142">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-142">Delete a face from a person.</span></span> <span data-ttu-id="28f36-143">지속 된 얼굴에 대 한 상대적 기능도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-143">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-144">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-144">Delete a face from a person.</span></span> <span data-ttu-id="28f36-145">지속 된 얼굴에 대 한 상대적 기능도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-145">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-146">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-146">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-147">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-147">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-148">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-149">사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-149">Delete an existing person from a person group.</span></span> <span data-ttu-id="28f36-150">모든 사용자 데이터를 저장 하 고 얼굴 기능 사용자 항목에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-150">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-151">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-151">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-152">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-152">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-153">사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="28f36-154">모든 사용자 데이터를 저장 하 고 얼굴 기능 사용자 항목에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-154">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-155">사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="28f36-156">모든 사용자 데이터를 저장 하 고 얼굴 기능 사용자 항목에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-156">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-157">사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-157">Delete an existing person from a person group.</span></span> <span data-ttu-id="28f36-158">모든 사용자 데이터를 저장 하 고 얼굴 기능 사용자 항목에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-158">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-159">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-159">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-160">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-160">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-161">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-161">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-162">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-162">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-163">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-163">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-164">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-164">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-165">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-165">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-166">(PersistedFaceId, personId 및 해당 속하는 personGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-166">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-167">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-167">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-168">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-168">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-169">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-169">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-170">(PersistedFaceId, personId 및 해당 속하는 personGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-171">(PersistedFaceId, personId 및 해당 속하는 personGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-171">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-172">(PersistedFaceId, personId 및 해당 속하는 personGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-173">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-173">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-174">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-174">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-175">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-176">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-176">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-177">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-177">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-178">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-178">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-179">PersonId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 등 개인 정보를 검색 및 사용자 그룹에 모든 사람을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-180">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-180">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-181">PersonId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 등 개인 정보를 검색 및 사용자 그룹에 모든 사람을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-182">PersonId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 등 개인 정보를 검색 및 사용자 그룹에 모든 사람을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-182">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-183">PersonId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 등 개인 정보를 검색 및 사용자 그룹에 모든 사람을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-183">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-184">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-184">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-185">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-185">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-186">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-186">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-187">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-187">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-188">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-188">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-189">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-189">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-190">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-190">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-191">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-191">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-192">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-192">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-193">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-193">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-194">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-195">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-195">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-196">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-196">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-197">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-197">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-198">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-198">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-199">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28f36-200">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-200">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-201">특정 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-201">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="28f36-202">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="28f36-202">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
