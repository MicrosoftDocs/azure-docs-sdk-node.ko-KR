### YamlMime:UniversalReference
ms.openlocfilehash: 20629fabdfd6f519f4262eda48dc707512731099
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026951"
items:
- uid: azure-cognitiveservices-face.LargePersonGroupPerson
  name: LargePersonGroupPerson
  fullName: LargePersonGroupPerson
  children:
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.create
  - azure-cognitiveservices-face.LargePersonGroupPerson.create_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.create_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.get
  - azure-cognitiveservices-face.LargePersonGroupPerson.get_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.get_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.list
  - azure-cognitiveservices-face.LargePersonGroupPerson.list_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.list_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.update
  - azure-cognitiveservices-face.LargePersonGroupPerson.update_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.update_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-101">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="08be9-102">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-103">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-103">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-104">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-104">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="08be9-105">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-106">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-106">Add a representative face to a person for identification.</span></span> <span data-ttu-id="08be9-107">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-107">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-108">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-108">Add a representative face to a person for identification.</span></span> <span data-ttu-id="08be9-109">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-109">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-110">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-110">Add a representative face to a person for identification.</span></span> <span data-ttu-id="08be9-111">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-111">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(largePersonGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-112">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-112">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-113">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-113">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="08be9-114">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-114">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-115">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-115">Add a representative face to a person for identification.</span></span> <span data-ttu-id="08be9-116">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-116">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-117">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-117">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-118">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-118">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="08be9-119">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="08be9-119">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-120">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-120">Add a representative face to a person for identification.</span></span> <span data-ttu-id="08be9-121">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-121">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-122">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-122">Add a representative face to a person for identification.</span></span> <span data-ttu-id="08be9-123">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-123">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-124">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-124">Add a representative face to a person for identification.</span></span> <span data-ttu-id="08be9-125">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-125">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(largePersonGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-126">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-126">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-127">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-127">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="08be9-128">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="08be9-128">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-129">지정 된 대규모 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-129">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-130">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-130">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-131">지정 된 대규모 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-131">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-132">지정 된 대규모 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-132">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-133">지정 된 대규모 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-133">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-134">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-134">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-135">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-135">Delete a face from a person.</span></span> <span data-ttu-id="08be9-136">지속 된 얼굴에 대 한 상대적 기능도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-136">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-137">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-137">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-138">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-138">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-139">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-139">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-140">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-140">Delete a face from a person.</span></span> <span data-ttu-id="08be9-141">지속 된 얼굴에 대 한 상대적 기능도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-141">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-142">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-142">Delete a face from a person.</span></span> <span data-ttu-id="08be9-143">지속 된 얼굴에 대 한 상대적 기능도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-143">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-144">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-144">Delete a face from a person.</span></span> <span data-ttu-id="08be9-145">지속 된 얼굴에 대 한 상대적 기능도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-145">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-146">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-146">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-147">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-147">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-148">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-149">대규모 사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-149">Delete an existing person from a large person group.</span></span> <span data-ttu-id="08be9-150">모든 사용자 데이터를 저장 하 고 얼굴 기능 사용자 항목에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-150">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-151">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-151">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-152">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-152">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-153">대규모 사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-153">Delete an existing person from a large person group.</span></span> <span data-ttu-id="08be9-154">모든 사용자 데이터를 저장 하 고 얼굴 기능 사용자 항목에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-154">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-155">대규모 사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-155">Delete an existing person from a large person group.</span></span> <span data-ttu-id="08be9-156">모든 사용자 데이터를 저장 하 고 얼굴 기능 사용자 항목에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-156">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-157">대규모 사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-157">Delete an existing person from a large person group.</span></span> <span data-ttu-id="08be9-158">모든 사용자 데이터를 저장 하 고 얼굴 기능 사용자 항목에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-158">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-159">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-159">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-160">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-160">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-161">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-161">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-162">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-162">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-163">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-163">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-164">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-164">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-165">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-165">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-166">(PersistedFaceId, personId 및 해당 속하는 largePersonGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-166">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-167">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-167">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-168">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-168">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-169">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-169">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-170">(PersistedFaceId, personId 및 해당 속하는 largePersonGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-171">(PersistedFaceId, personId 및 해당 속하는 largePersonGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-171">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-172">(PersistedFaceId, personId 및 해당 속하는 largePersonGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-173">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-173">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-174">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-174">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-175">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-176">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-176">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-177">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-177">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-178">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-178">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-179">대규모 사용자 그룹에 모든 사람을 나열 하 고 사용자 정보 (personId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 포함)를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-179">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-180">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-180">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-181">대규모 사용자 그룹에 모든 사람을 나열 하 고 사용자 정보 (personId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 포함)를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-181">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-182">대규모 사용자 그룹에 모든 사람을 나열 하 고 사용자 정보 (personId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 포함)를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-182">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-183">대규모 사용자 그룹에 모든 사람을 나열 하 고 사용자 정보 (personId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 포함)를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-183">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-184">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-184">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-185">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-185">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-186">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-186">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-187">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-187">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-188">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-188">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-189">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-189">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-190">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-190">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-191">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-191">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-192">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-192">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-193">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-193">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-194">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-195">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-195">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-196">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-196">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-197">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-197">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-198">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-198">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-199">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="08be9-200">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-200">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-201">특정 대규모 사용자 그룹을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-201">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="08be9-202">특정 사용자를 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="08be9-202">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
