### YamlMime:UniversalReference
ms.openlocfilehash: e2d905a200190804df26d4317afebcd13d535944
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52168488"
items:
- uid: azure-cognitiveservices-face.FaceListOperations
  name: FaceListOperations
  fullName: FaceListOperations
  children:
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.create
  - azure-cognitiveservices-face.FaceListOperations.create_2
  - azure-cognitiveservices-face.FaceListOperations.create_1
  - azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteFace
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.get
  - azure-cognitiveservices-face.FaceListOperations.get_2
  - azure-cognitiveservices-face.FaceListOperations.get_1
  - azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.list
  - azure-cognitiveservices-face.FaceListOperations.list_2
  - azure-cognitiveservices-face.FaceListOperations.list_1
  - azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.update
  - azure-cognitiveservices-face.FaceListOperations.update_2
  - azure-cognitiveservices-face.FaceListOperations.update_1
  - azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-101">얼굴을 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-101">Add a face to a face list.</span></span> <span data-ttu-id="d657f-102">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d657f-103">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-104">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-104">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="d657f-105">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-106">얼굴을 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-106">Add a face to a face list.</span></span> <span data-ttu-id="d657f-107">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d657f-108">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-109">얼굴을 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-109">Add a face to a face list.</span></span> <span data-ttu-id="d657f-110">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d657f-111">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-112">얼굴을 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-112">Add a face to a face list.</span></span> <span data-ttu-id="d657f-113">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d657f-114">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-115">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-115">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="d657f-116">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-117">얼굴을 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-117">Add a face to a face list.</span></span> <span data-ttu-id="d657f-118">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d657f-119">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-120">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-120">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="d657f-121">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="d657f-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-122">얼굴을 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-122">Add a face to a face list.</span></span> <span data-ttu-id="d657f-123">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d657f-124">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-125">얼굴을 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-125">Add a face to a face list.</span></span> <span data-ttu-id="d657f-126">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d657f-127">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-128">얼굴을 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-128">Add a face to a face list.</span></span> <span data-ttu-id="d657f-129">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d657f-130">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-131">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-131">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="d657f-132">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="d657f-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-133">빈 얼굴 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-133">Create an empty face list.</span></span> <span data-ttu-id="d657f-134">최대 64 얼굴 목록 하나의 구독에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-134">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-135">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-135">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-136">빈 얼굴 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-136">Create an empty face list.</span></span> <span data-ttu-id="d657f-137">최대 64 얼굴 목록 하나의 구독에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-138">빈 얼굴 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-138">Create an empty face list.</span></span> <span data-ttu-id="d657f-139">최대 64 얼굴 목록 하나의 구독에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-139">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-140">빈 얼굴 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-140">Create an empty face list.</span></span> <span data-ttu-id="d657f-141">최대 64 얼굴 목록 하나의 구독에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-141">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-142">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-142">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-143">기존 얼굴을 얼굴 목록 (한 persisitedFaceId 및는 faceListId로 지정)에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="d657f-144">지속형된 이미지 면에 관련 된도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-145">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-145">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-146">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-147">기존 얼굴을 얼굴 목록 (한 persisitedFaceId 및는 faceListId로 지정)에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="d657f-148">지속형된 이미지 면에 관련 된도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-149">기존 얼굴을 얼굴 목록 (한 persisitedFaceId 및는 faceListId로 지정)에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-149">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="d657f-150">지속형된 이미지 면에 관련 된도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-151">기존 얼굴을 얼굴 목록 (한 persisitedFaceId 및는 faceListId로 지정)에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-151">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="d657f-152">지속형된 이미지 면에 관련 된도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-153">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-153">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-154">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-155">FaceListId에 따라 기존 얼굴 목록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-155">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="d657f-156">얼굴을 얼굴 목록의 이미지도 삭제 됩니다 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-156">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-157">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-157">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-158">FaceListId에 따라 기존 얼굴 목록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="d657f-159">얼굴을 얼굴 목록의 이미지도 삭제 됩니다 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-160">FaceListId에 따라 기존 얼굴 목록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-160">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="d657f-161">얼굴을 얼굴 목록의 이미지도 삭제 됩니다 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-161">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-162">FaceListId에 따라 기존 얼굴 목록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-162">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="d657f-163">얼굴을 얼굴 목록의 이미지도 삭제 됩니다 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-163">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-164">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-164">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-165">얼굴 목록을 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-166">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-166">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_2
  name: get(string, Object, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-167">얼굴 목록을 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-167">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: Object, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_1
  name: get(string, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-168">얼굴 목록을 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-168">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-169">얼굴 목록을 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-169">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-170">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-170">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-171">모든 기존 얼굴 목록에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="d657f-172">FaceListId, 이름, userData만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_2
  name: list(Object, ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-173">모든 기존 얼굴 목록에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="d657f-174">FaceListId, 이름, userData만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_1
  name: list(ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-175">모든 기존 얼굴 목록에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-175">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="d657f-176">FaceListId, 이름, userData만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-176">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-177">모든 기존 얼굴 목록에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-177">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="d657f-178">FaceListId, 이름, userData만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-178">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-179">얼굴 목록의 정보를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-179">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-180">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-180">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-181">얼굴 목록의 정보를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-181">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-182">얼굴 목록의 정보를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-182">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d657f-183">얼굴 목록의 정보를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-183">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d657f-184">특정 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="d657f-184">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  name: FaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  name: FaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>>'
    fullName: '[]>>'
