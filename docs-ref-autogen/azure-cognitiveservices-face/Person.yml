### YamlMime:UniversalReference
ms.openlocfilehash: 2c5dc4613b6576877b90e42f2a0c2b54bfb52838
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40065593"
items:
- uid: azure-cognitiveservices-face.Person
  name: Person
  fullName: Person
  children:
  - azure-cognitiveservices-face.Person.addPersonFace
  - azure-cognitiveservices-face.Person.addPersonFace_1
  - azure-cognitiveservices-face.Person.addPersonFace_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.create
  - azure-cognitiveservices-face.Person.create_1
  - azure-cognitiveservices-face.Person.create_2
  - azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteFace_1
  - azure-cognitiveservices-face.Person.deleteFace_2
  - azure-cognitiveservices-face.Person.deleteFace
  - azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteMethod
  - azure-cognitiveservices-face.Person.deleteMethod_1
  - azure-cognitiveservices-face.Person.deleteMethod_2
  - azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.get
  - azure-cognitiveservices-face.Person.get_1
  - azure-cognitiveservices-face.Person.get_2
  - azure-cognitiveservices-face.Person.getFace
  - azure-cognitiveservices-face.Person.getFace_2
  - azure-cognitiveservices-face.Person.getFace_1
  - azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.list
  - azure-cognitiveservices-face.Person.list_1
  - azure-cognitiveservices-face.Person.list_2
  - azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.update
  - azure-cognitiveservices-face.Person.update_1
  - azure-cognitiveservices-face.Person.update_2
  - azure-cognitiveservices-face.Person.updateFace
  - azure-cognitiveservices-face.Person.updateFace_1
  - azure-cognitiveservices-face.Person.updateFace_2
  - azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-101">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="70182-102">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-103">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-103">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-104">글꼴에 추가 되는 대상 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-104">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_1
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-105">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-105">Add a representative face to a person for identification.</span></span> <span data-ttu-id="70182-106">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-106">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_2
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-107">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-107">Add a representative face to a person for identification.</span></span> <span data-ttu-id="70182-108">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-108">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-109">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-109">Add a representative face to a person for identification.</span></span> <span data-ttu-id="70182-110">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-110">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-111">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-111">Add a representative face to a person for identification.</span></span> <span data-ttu-id="70182-112">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-112">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-113">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-113">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-114">글꼴에 추가 되는 대상 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-114">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="70182-115">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-115">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-116">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-116">Add a representative face to a person for identification.</span></span> <span data-ttu-id="70182-117">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-117">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  name: addPersonFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-118">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-118">Add a representative face to a person for identification.</span></span> <span data-ttu-id="70182-119">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-119">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-120">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-120">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-121">글꼴에 추가 되는 대상 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-121">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="70182-122">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-122">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  name: addPersonFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-123">대표 face id에 대 한 사람에 게 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-123">Add a representative face to a person for identification.</span></span> <span data-ttu-id="70182-124">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-124">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-125">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-125">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-126">글꼴에 추가 되는 대상 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-126">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-127">지정 된 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="70182-127">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-128">사용자를 만들려면 대상 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-128">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-129">지정 된 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="70182-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-130">지정 된 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="70182-130">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: function, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-131">지정 된 사용자 그룹에 새 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="70182-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-132">사용자를 만들려면 대상 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-132">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-133">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-133">Delete a face from a person.</span></span> <span data-ttu-id="70182-134">지속 된 얼굴에 대 한 상대 이미지도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-134">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-135">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-135">Delete a face from a person.</span></span> <span data-ttu-id="70182-136">지속 된 얼굴에 대 한 상대 이미지도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-136">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-137">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-137">Delete a face from a person.</span></span> <span data-ttu-id="70182-138">지속 된 얼굴에 대 한 상대 이미지도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-138">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-139">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-139">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-140">에 속한 대상 얼굴 유지 되도록 하는 사용자 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-140">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="70182-141">제거할 지속형된 얼굴입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-141">The persisted face to remove.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-142">개인의 얼굴을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-142">Delete a face from a person.</span></span> <span data-ttu-id="70182-143">지속 된 얼굴에 대 한 상대 이미지도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-143">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-144">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-144">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-145">에 속한 대상 얼굴 유지 되도록 하는 사용자 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-145">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="70182-146">제거할 지속형된 얼굴입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-146">The persisted face to remove.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-147">사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-147">Delete an existing person from a person group.</span></span> <span data-ttu-id="70182-148">사용자의 이미지도 삭제 됩니다 얼굴을 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-148">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-149">사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-149">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-150">삭제 하려면 대상 personId 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-150">The target personId to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-151">사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-151">Delete an existing person from a person group.</span></span> <span data-ttu-id="70182-152">사용자의 이미지도 삭제 됩니다 얼굴을 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-152">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-153">사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="70182-154">사용자의 이미지도 삭제 됩니다 얼굴을 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-154">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-155">사용자 그룹에서 기존 사용자를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="70182-156">사용자의 이미지도 삭제 됩니다 얼굴을 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70182-156">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-157">사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-157">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-158">삭제 하려면 대상 personId 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-158">The target personId to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-159">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-159">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-160">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-160">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-161">대상 사용자를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-161">Specifying the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-162">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-162">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-163">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-163">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: function, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-164">(PersistedFaceId, personId 및 해당 속하는 personGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-164">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-165">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-165">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-166">얼굴이 속한 대상 사용자를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-166">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="70182-167">대상의 persistedFaceId 사람의 얼굴을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-167">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_2
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-168">(PersistedFaceId, personId 및 해당 속하는 personGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-168">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_1
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-169">(PersistedFaceId, personId 및 해당 속하는 personGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-169">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-170">(PersistedFaceId, personId 및 해당 속하는 personGroupId 지정) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-171">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-171">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-172">얼굴이 속한 대상 사용자를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-172">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="70182-173">대상의 persistedFaceId 사람의 얼굴을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-173">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-174">등록 된 얼굴, 이름 및 사용자 데이터를 포함 한 사람의 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-174">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-175">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-175">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-176">대상 사용자를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-176">Specifying the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-177">PersonId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 등 개인 정보를 검색 및 사용자 그룹에 모든 사람을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-177">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-178">대상 사용자 그룹의 personGroupId 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-178">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-179">PersonId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 등 개인 정보를 검색 및 사용자 그룹에 모든 사람을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-180">PersonId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 등 개인 정보를 검색 및 사용자 그룹에 모든 사람을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-180">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: function, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-181">PersonId, 이름, 사용자 데이터 및 사용자의 등록 된 얼굴 persistedFaceIds 등 개인 정보를 검색 및 사용자 그룹에 모든 사람을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-182">대상 사용자 그룹의 personGroupId 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-182">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-183">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-183">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-184">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-184">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-185">대상 사용자의 personId 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-185">personId of the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-186">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-186">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-187">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-187">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-188">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-188">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-189">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-189">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-190">대상 사용자의 personId 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-190">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="70182-191">persistedFaceId의 대상 면 유지 되 고 만료 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-191">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_1
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-192">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-192">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_2
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-193">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-193">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-194">사용자 업데이트 얼굴의 userData 필드를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-195">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-195">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-196">대상 사용자의 personId 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-196">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="70182-197">persistedFaceId의 대상 면 유지 되 고 만료 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="70182-197">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="70182-198">이름 또는 사용자의 사용자 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-198">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="70182-199">대상 사용자를 포함 하는 사용자 그룹을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-199">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="70182-200">대상 사용자의 personId 합니다.</span><span class="sxs-lookup"><span data-stu-id="70182-200">personId of the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>>'
    fullName: '[]>>'
