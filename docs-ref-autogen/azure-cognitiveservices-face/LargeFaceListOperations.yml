### YamlMime:UniversalReference
ms.openlocfilehash: 145293f6ed7479b70bb9d3084353eda83a7bad33
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52038114"
items:
- uid: azure-cognitiveservices-face.LargeFaceListOperations
  name: LargeFaceListOperations
  fullName: LargeFaceListOperations
  children:
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.create
  - azure-cognitiveservices-face.LargeFaceListOperations.create_2
  - azure-cognitiveservices-face.LargeFaceListOperations.create_1
  - azure-cognitiveservices-face.LargeFaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.get
  - azure-cognitiveservices-face.LargeFaceListOperations.get_2
  - azure-cognitiveservices-face.LargeFaceListOperations.get_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatusWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.list
  - azure-cognitiveservices-face.LargeFaceListOperations.list_2
  - azure-cognitiveservices-face.LargeFaceListOperations.list_1
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces_2
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces_1
  - azure-cognitiveservices-face.LargeFaceListOperations.listFacesWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.train
  - azure-cognitiveservices-face.LargeFaceListOperations.train_2
  - azure-cognitiveservices-face.LargeFaceListOperations.train_1
  - azure-cognitiveservices-face.LargeFaceListOperations.trainWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.update
  - azure-cognitiveservices-face.LargeFaceListOperations.update_2
  - azure-cognitiveservices-face.LargeFaceListOperations.update_1
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-101">얼굴을 큰 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-101">Add a face to a large face list.</span></span> <span data-ttu-id="1aee5-102">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1aee5-103">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-104">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-104">Id referencing a particular large face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="1aee5-105">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-106">얼굴을 큰 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-106">Add a face to a large face list.</span></span> <span data-ttu-id="1aee5-107">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1aee5-108">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-109">얼굴을 큰 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-109">Add a face to a large face list.</span></span> <span data-ttu-id="1aee5-110">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1aee5-111">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-112">얼굴을 큰 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-112">Add a face to a large face list.</span></span> <span data-ttu-id="1aee5-113">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1aee5-114">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(largeFaceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-115">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-115">Id referencing a particular large face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="1aee5-116">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-117">얼굴을 큰 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-117">Add a face to a large face list.</span></span> <span data-ttu-id="1aee5-118">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1aee5-119">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-120">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-120">Id referencing a particular large face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-121">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="1aee5-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-122">얼굴을 큰 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-122">Add a face to a large face list.</span></span> <span data-ttu-id="1aee5-123">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1aee5-124">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-125">얼굴을 큰 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-125">Add a face to a large face list.</span></span> <span data-ttu-id="1aee5-126">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1aee5-127">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-128">얼굴을 큰 얼굴 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-128">Add a face to a large face list.</span></span> <span data-ttu-id="1aee5-129">입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1aee5-130">추가 얼굴을 나타내는 persistedFaceId를 반환 하 고 persistedFaceId 만료 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(largeFaceListId: string, url: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-131">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-131">Id referencing a particular large face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-132">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="1aee5-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-133">비어 있는 큰 얼굴 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-133">Create an empty large face list.</span></span> <span data-ttu-id="1aee5-134">최대 64 큰 얼굴 목록 하나의 구독에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-134">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-135">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-135">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-136">비어 있는 큰 얼굴 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-136">Create an empty large face list.</span></span> <span data-ttu-id="1aee5-137">최대 64 큰 얼굴 목록 하나의 구독에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-137">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-138">비어 있는 큰 얼굴 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-138">Create an empty large face list.</span></span> <span data-ttu-id="1aee5-139">최대 64 큰 얼굴 목록 하나의 구독에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-139">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-140">비어 있는 큰 얼굴 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-140">Create an empty large face list.</span></span> <span data-ttu-id="1aee5-141">최대 64 큰 얼굴 목록 하나의 구독에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-141">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-142">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-142">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-143">기존 얼굴 큰 얼굴 목록 (한 persisitedFaceId 및는 largeFaceListId로 지정)에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-143">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="1aee5-144">지속형된 이미지 면에 관련 된도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-145">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-145">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-146">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-147">기존 얼굴 큰 얼굴 목록 (한 persisitedFaceId 및는 largeFaceListId로 지정)에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-147">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="1aee5-148">지속형된 이미지 면에 관련 된도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-149">기존 얼굴 큰 얼굴 목록 (한 persisitedFaceId 및는 largeFaceListId로 지정)에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-149">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="1aee5-150">지속형된 이미지 면에 관련 된도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-151">기존 얼굴 큰 얼굴 목록 (한 persisitedFaceId 및는 largeFaceListId로 지정)에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-151">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="1aee5-152">지속형된 이미지 면에 관련 된도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-153">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-153">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-154">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-155">FaceListId에 따라 기존 큰 얼굴 목록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-155">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="1aee5-156">유지 얼굴 큰 얼굴 목록의 이미지도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-156">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-157">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-157">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-158">FaceListId에 따라 기존 큰 얼굴 목록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-158">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="1aee5-159">유지 얼굴 큰 얼굴 목록의 이미지도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-159">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-160">FaceListId에 따라 기존 큰 얼굴 목록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-160">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="1aee5-161">유지 얼굴 큰 얼굴 목록의 이미지도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-161">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-162">FaceListId에 따라 기존 큰 얼굴 목록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-162">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="1aee5-163">유지 얼굴 큰 얼굴 목록의 이미지도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-163">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-164">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-164">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-165">큰 얼굴 목록을 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-165">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-166">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-166">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get_2
  name: get(string, Object, ServiceCallback<LargeFaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-167">큰 얼굴 목록을 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-167">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, options: Object, callback: ServiceCallback<LargeFaceList>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get_1
  name: get(string, ServiceCallback<LargeFaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-168">큰 얼굴 목록을 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-168">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, callback: ServiceCallback<LargeFaceList>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace
  name: getFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-169">(해당 속하는 largeFaceListId persistedFaceId로 지정 됨) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-169">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-170">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-170">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-171">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-171">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace_2
  name: getFace(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-172">(해당 속하는 largeFaceListId persistedFaceId로 지정 됨) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-172">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace_1
  name: getFace(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-173">(해당 속하는 largeFaceListId persistedFaceId로 지정 됨) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-173">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-174">(해당 속하는 largeFaceListId persistedFaceId로 지정 됨) 지속 된 얼굴에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-174">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-175">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-175">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-176">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-176">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus
  name: getTrainingStatus(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-177">큰 얼굴 목록 (완료 됨 또는 진행 중)의 교육 상태를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-177">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-178">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-178">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2
  name: getTrainingStatus(string, Object, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-179">큰 얼굴 목록 (완료 됨 또는 진행 중)의 교육 상태를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-179">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, options: Object, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1
  name: getTrainingStatus(string, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-180">큰 얼굴 목록 (완료 됨 또는 진행 중)의 교육 상태를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-180">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatusWithHttpOperationResponse
  name: getTrainingStatusWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-181">큰 얼굴 목록 (완료 됨 또는 진행 중)의 교육 상태를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-181">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatusWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-182">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-182">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-183">큰 얼굴 목록을 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-183">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-184">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-184">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-185">모든 기존 큰 얼굴 목록에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-185">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="1aee5-186">LargeFaceListId, 이름, userData만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-186">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list_2
  name: list(Object, ServiceCallback<LargeFaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-187">모든 기존 큰 얼굴 목록에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-187">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="1aee5-188">LargeFaceListId, 이름, userData만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-188">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<LargeFaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list_1
  name: list(ServiceCallback<LargeFaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-189">모든 기존 큰 얼굴 목록에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-189">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="1aee5-190">LargeFaceListId, 이름, userData만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-190">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<LargeFaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces
  name: listFaces(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-191">글꼴 정보 (userData 및 글꼴의 등록 된 얼굴 persistedFaceIds 포함)를 검색 및 많은 얼굴 목록에서 모든 얼굴을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-191">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-192">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-192">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces_2
  name: listFaces(string, Object, ServiceCallback<PersistedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-193">글꼴 정보 (userData 및 글꼴의 등록 된 얼굴 persistedFaceIds 포함)를 검색 및 많은 얼굴 목록에서 모든 얼굴을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-193">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, options: Object, callback: ServiceCallback<PersistedFace[]>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces_1
  name: listFaces(string, ServiceCallback<PersistedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-194">글꼴 정보 (userData 및 글꼴의 등록 된 얼굴 persistedFaceIds 포함)를 검색 및 많은 얼굴 목록에서 모든 얼굴을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-194">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, callback: ServiceCallback<PersistedFace[]>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFacesWithHttpOperationResponse
  name: listFacesWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-195">글꼴 정보 (userData 및 글꼴의 등록 된 얼굴 persistedFaceIds 포함)를 검색 및 많은 얼굴 목록에서 모든 얼굴을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-195">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFacesWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-196">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-196">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-197">모든 기존 큰 얼굴 목록에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-197">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="1aee5-198">LargeFaceListId, 이름, userData만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-198">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train
  name: train(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-199">큰 얼굴 목록 교육 작업을 큐의 경우 학습 태스크를 즉시 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-199">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-200">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-200">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train_2
  name: train(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-201">큰 얼굴 목록 교육 작업을 큐의 경우 학습 태스크를 즉시 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-201">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train_1
  name: train(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-202">큰 얼굴 목록 교육 작업을 큐의 경우 학습 태스크를 즉시 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-202">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.trainWithHttpOperationResponse
  name: trainWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-203">큰 얼굴 목록 교육 작업을 큐의 경우 학습 태스크를 즉시 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-203">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function trainWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-204">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-204">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-205">큰 얼굴 목록의 정보를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-205">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-206">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-206">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-207">큰 얼굴 목록의 정보를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-207">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-208">큰 얼굴 목록의 정보를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-208">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace
  name: updateFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-209">지속형된 얼굴을 userData 필드를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-209">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-210">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-210">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-211">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-211">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace_2
  name: updateFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-212">지속형된 얼굴을 userData 필드를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-212">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace_1
  name: updateFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-213">지속형된 얼굴을 userData 필드를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-213">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-214">지속형된 얼굴을 userData 필드를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-214">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-215">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-215">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-216">Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-216">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1aee5-217">큰 얼굴 목록의 정보를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-217">Update information of a large face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="1aee5-218">특정 큰 얼굴 목록을 참조 하는 id입니다.</span><span class="sxs-lookup"><span data-stu-id="1aee5-218">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.LargeFaceList>
  name: LargeFaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
  name: LargeFaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  name: TrainingStatus>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList>>
  name: LargeFaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.LargeFaceList[]>
  name: LargeFaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
  name: LargeFaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<azure-cognitiveservices-face.PersistedFace[]>
  name: PersistedFace[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
  name: PersistedFace[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace[]>>
  name: PersistedFace[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList[]>>
  name: LargeFaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>>'
    fullName: '[]>>'
