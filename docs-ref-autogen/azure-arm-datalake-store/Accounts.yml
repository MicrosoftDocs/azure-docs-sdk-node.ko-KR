### YamlMime:UniversalReference
ms.openlocfilehash: d8ef954bd92419e69803377c85d944274bde4366
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52168448"
items:
- uid: azure-arm-datalake-store.Accounts
  name: Accounts
  fullName: Accounts
  children:
  - azure-arm-datalake-store.Accounts.beginCreate
  - azure-arm-datalake-store.Accounts.beginCreate_2
  - azure-arm-datalake-store.Accounts.beginCreate_1
  - azure-arm-datalake-store.Accounts.beginCreateWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.beginDeleteMethod
  - azure-arm-datalake-store.Accounts.beginDeleteMethod_2
  - azure-arm-datalake-store.Accounts.beginDeleteMethod_1
  - azure-arm-datalake-store.Accounts.beginDeleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.beginUpdate
  - azure-arm-datalake-store.Accounts.beginUpdate_2
  - azure-arm-datalake-store.Accounts.beginUpdate_1
  - azure-arm-datalake-store.Accounts.beginUpdateWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.checkNameAvailability
  - azure-arm-datalake-store.Accounts.checkNameAvailability_2
  - azure-arm-datalake-store.Accounts.checkNameAvailability_1
  - azure-arm-datalake-store.Accounts.checkNameAvailabilityWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.create
  - azure-arm-datalake-store.Accounts.create_2
  - azure-arm-datalake-store.Accounts.create_1
  - azure-arm-datalake-store.Accounts.createWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.deleteMethod
  - azure-arm-datalake-store.Accounts.deleteMethod_2
  - azure-arm-datalake-store.Accounts.deleteMethod_1
  - azure-arm-datalake-store.Accounts.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.enableKeyVault
  - azure-arm-datalake-store.Accounts.enableKeyVault_2
  - azure-arm-datalake-store.Accounts.enableKeyVault_1
  - azure-arm-datalake-store.Accounts.enableKeyVaultWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.get
  - azure-arm-datalake-store.Accounts.get_2
  - azure-arm-datalake-store.Accounts.get_1
  - azure-arm-datalake-store.Accounts.getWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.list
  - azure-arm-datalake-store.Accounts.list_2
  - azure-arm-datalake-store.Accounts.list_1
  - azure-arm-datalake-store.Accounts.listByResourceGroup
  - azure-arm-datalake-store.Accounts.listByResourceGroup_2
  - azure-arm-datalake-store.Accounts.listByResourceGroup_1
  - azure-arm-datalake-store.Accounts.listByResourceGroupNext
  - azure-arm-datalake-store.Accounts.listByResourceGroupNext_2
  - azure-arm-datalake-store.Accounts.listByResourceGroupNext_1
  - azure-arm-datalake-store.Accounts.listByResourceGroupNextWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.listByResourceGroupWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.listNext
  - azure-arm-datalake-store.Accounts.listNext_2
  - azure-arm-datalake-store.Accounts.listNext_1
  - azure-arm-datalake-store.Accounts.listNextWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.listWithHttpOperationResponse
  - azure-arm-datalake-store.Accounts.update
  - azure-arm-datalake-store.Accounts.update_2
  - azure-arm-datalake-store.Accounts.update_1
  - azure-arm-datalake-store.Accounts.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginCreate
  name: beginCreate(string, string, CreateDataLakeStoreAccountParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 만듭니다.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: CreateDataLakeStoreAccountParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
      description: >
        Data Lake Store 계정 만들기에 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginCreate_2
  name: beginCreate(string, string, CreateDataLakeStoreAccountParameters, Object, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 만듭니다.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: CreateDataLakeStoreAccountParameters, options: Object, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginCreate_1
  name: beginCreate(string, string, CreateDataLakeStoreAccountParameters, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 만듭니다.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: CreateDataLakeStoreAccountParameters, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginCreateWithHttpOperationResponse
  name: beginCreateWithHttpOperationResponse(string, string, CreateDataLakeStoreAccountParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 만듭니다.
  syntax:
    content: 'function beginCreateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: CreateDataLakeStoreAccountParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
      description: >
        Data Lake Store 계정 만들기에 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccount>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginDeleteMethod
  name: beginDeleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 삭제합니다.
  syntax:
    content: 'function beginDeleteMethod(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginDeleteMethod_2
  name: beginDeleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 삭제합니다.
  syntax:
    content: 'function beginDeleteMethod(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginDeleteMethod_1
  name: beginDeleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 삭제합니다.
  syntax:
    content: 'function beginDeleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginDeleteMethodWithHttpOperationResponse
  name: beginDeleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 삭제합니다.
  syntax:
    content: 'function beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginUpdate
  name: beginUpdate(string, string, UpdateDataLakeStoreAccountParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정 정보를 업데이트합니다.
  syntax:
    content: 'function beginUpdate(resourceGroupName: string, accountName: string, parameters: UpdateDataLakeStoreAccountParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
      description: >
        Data Lake Store 계정을 업데이트 하는 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginUpdate_2
  name: beginUpdate(string, string, UpdateDataLakeStoreAccountParameters, Object, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정 정보를 업데이트합니다.
  syntax:
    content: 'function beginUpdate(resourceGroupName: string, accountName: string, parameters: UpdateDataLakeStoreAccountParameters, options: Object, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginUpdate_1
  name: beginUpdate(string, string, UpdateDataLakeStoreAccountParameters, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정 정보를 업데이트합니다.
  syntax:
    content: 'function beginUpdate(resourceGroupName: string, accountName: string, parameters: UpdateDataLakeStoreAccountParameters, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.beginUpdateWithHttpOperationResponse
  name: beginUpdateWithHttpOperationResponse(string, string, UpdateDataLakeStoreAccountParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정 정보를 업데이트합니다.
  syntax:
    content: 'function beginUpdateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: UpdateDataLakeStoreAccountParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
      description: >
        Data Lake Store 계정을 업데이트 하는 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccount>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.checkNameAvailability
  name: checkNameAvailability(string, CheckNameAvailabilityParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 계정 이름을 사용할 수 없거나 수행한 인지 확인 합니다.
  syntax:
    content: 'function checkNameAvailability(location: string, parameters: CheckNameAvailabilityParameters, options?: Object)'
    parameters:
    - id: location
      type:
      - string
      description: >
        공백 없이 리소스 위치입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.CheckNameAvailabilityParameters
      description: >
        Data Lake Store 계정 이름 가용성 확인에 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.NameAvailabilityInformation>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.checkNameAvailability_2
  name: checkNameAvailability(string, CheckNameAvailabilityParameters, Object, ServiceCallback<NameAvailabilityInformation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 계정 이름을 사용할 수 없거나 수행한 인지 확인 합니다.
  syntax:
    content: 'function checkNameAvailability(location: string, parameters: CheckNameAvailabilityParameters, options: Object, callback: ServiceCallback<NameAvailabilityInformation>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.CheckNameAvailabilityParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.NameAvailabilityInformation>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.NameAvailabilityInformation>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.checkNameAvailability_1
  name: checkNameAvailability(string, CheckNameAvailabilityParameters, ServiceCallback<NameAvailabilityInformation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 계정 이름을 사용할 수 없거나 수행한 인지 확인 합니다.
  syntax:
    content: 'function checkNameAvailability(location: string, parameters: CheckNameAvailabilityParameters, callback: ServiceCallback<NameAvailabilityInformation>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.CheckNameAvailabilityParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.NameAvailabilityInformation>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.NameAvailabilityInformation>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.checkNameAvailabilityWithHttpOperationResponse
  name: checkNameAvailabilityWithHttpOperationResponse(string, CheckNameAvailabilityParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 계정 이름을 사용할 수 없거나 수행한 인지 확인 합니다.
  syntax:
    content: 'function checkNameAvailabilityWithHttpOperationResponse(location: string, parameters: CheckNameAvailabilityParameters, options?: Object)'
    parameters:
    - id: location
      type:
      - string
      description: >
        공백 없이 리소스 위치입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.CheckNameAvailabilityParameters
      description: >
        Data Lake Store 계정 이름 가용성 확인에 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.NameAvailabilityInformation>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.create
  name: create(string, string, CreateDataLakeStoreAccountParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 만듭니다.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: CreateDataLakeStoreAccountParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
      description: >
        Data Lake Store 계정 만들기에 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.create_2
  name: create(string, string, CreateDataLakeStoreAccountParameters, Object, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 만듭니다.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: CreateDataLakeStoreAccountParameters, options: Object, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.create_1
  name: create(string, string, CreateDataLakeStoreAccountParameters, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 만듭니다.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: CreateDataLakeStoreAccountParameters, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, CreateDataLakeStoreAccountParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 만듭니다.
  syntax:
    content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: CreateDataLakeStoreAccountParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
      description: >
        Data Lake Store 계정 만들기에 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccount>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 삭제합니다.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.enableKeyVault
  name: enableKeyVault(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정의 암호화에 Key Vault를 관리 하는 사용자를 사용 하도록 설정 하려고 합니다.
  syntax:
    content: 'function enableKeyVault(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.enableKeyVault_2
  name: enableKeyVault(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정의 암호화에 Key Vault를 관리 하는 사용자를 사용 하도록 설정 하려고 합니다.
  syntax:
    content: 'function enableKeyVault(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.enableKeyVault_1
  name: enableKeyVault(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정의 암호화에 Key Vault를 관리 하는 사용자를 사용 하도록 설정 하려고 합니다.
  syntax:
    content: 'function enableKeyVault(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.enableKeyVaultWithHttpOperationResponse
  name: enableKeyVaultWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정의 암호화에 Key Vault를 관리 하는 사용자를 사용 하도록 설정 하려고 합니다.
  syntax:
    content: 'function enableKeyVaultWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 가져옵니다.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.get_2
  name: get(string, string, Object, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 가져옵니다.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.get_1
  name: get(string, string, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 가져옵니다.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정한 Data Lake Store 계정을 가져옵니다.
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccount>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.list_2
  name: list(Object, ServiceCallback<DataLakeStoreAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<DataLakeStoreAccountListResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.list_1
  name: list(ServiceCallback<DataLakeStoreAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function list(callback: ServiceCallback<DataLakeStoreAccountListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listByResourceGroup
  name: listByResourceGroup(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스 그룹 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listByResourceGroup_2
  name: listByResourceGroup(string, Object, ServiceCallback<DataLakeStoreAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스 그룹 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, options: Object, callback: ServiceCallback<DataLakeStoreAccountListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listByResourceGroup_1
  name: listByResourceGroup(string, ServiceCallback<DataLakeStoreAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스 그룹 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<DataLakeStoreAccountListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listByResourceGroupNext
  name: listByResourceGroupNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스 그룹 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listByResourceGroupNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        목록 작업에 성공적으로 이전 호출의 NextLink입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listByResourceGroupNext_2
  name: listByResourceGroupNext(string, Object, ServiceCallback<DataLakeStoreAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스 그룹 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listByResourceGroupNext(nextPageLink: string, options: Object, callback: ServiceCallback<DataLakeStoreAccountListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listByResourceGroupNext_1
  name: listByResourceGroupNext(string, ServiceCallback<DataLakeStoreAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스 그룹 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<DataLakeStoreAccountListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listByResourceGroupNextWithHttpOperationResponse
  name: listByResourceGroupNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스 그룹 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        목록 작업에 성공적으로 이전 호출의 NextLink입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccountListResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listByResourceGroupWithHttpOperationResponse
  name: listByResourceGroupWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스 그룹 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccountListResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listNext
  name: listNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        목록 작업에 성공적으로 이전 호출의 NextLink입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listNext_2
  name: listNext(string, Object, ServiceCallback<DataLakeStoreAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listNext(nextPageLink: string, options: Object, callback: ServiceCallback<DataLakeStoreAccountListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listNext_1
  name: listNext(string, ServiceCallback<DataLakeStoreAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listNext(nextPageLink: string, callback: ServiceCallback<DataLakeStoreAccountListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listNextWithHttpOperationResponse
  name: listNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        목록 작업에 성공적으로 이전 호출의 NextLink입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccountListResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독 내에서 Data Lake Store 계정을 나열합니다. 모든 경우 결과의 다음 페이지에 대 한 링크를 포함 하는 응답 합니다.
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccountListResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.update
  name: update(string, string, UpdateDataLakeStoreAccountParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정 정보를 업데이트합니다.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: UpdateDataLakeStoreAccountParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
      description: >
        Data Lake Store 계정을 업데이트 하는 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.update_2
  name: update(string, string, UpdateDataLakeStoreAccountParameters, Object, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정 정보를 업데이트합니다.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: UpdateDataLakeStoreAccountParameters, options: Object, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.update_1
  name: update(string, string, UpdateDataLakeStoreAccountParameters, ServiceCallback<DataLakeStoreAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정 정보를 업데이트합니다.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: UpdateDataLakeStoreAccountParameters, callback: ServiceCallback<DataLakeStoreAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.Accounts.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, UpdateDataLakeStoreAccountParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 Data Lake Store 계정 정보를 업데이트합니다.
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: UpdateDataLakeStoreAccountParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Azure 리소스 그룹의 이름입니다.
    - id: accountName
      type:
      - string
      description: >
        Data Lake Store 계정의 이름입니다.
    - id: parameters
      type:
      - azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
      description: >
        Data Lake Store 계정을 업데이트 하는 제공 된 매개 변수입니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccount>>
  package: azure-arm-datalake-store
references:
- uid: azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
  name: CreateDataLakeStoreAccountParameters
  spec.typeScript:
  - name: CreateDataLakeStoreAccountParameters
    fullName: CreateDataLakeStoreAccountParameters
    uid: azure-arm-datalake-store.CreateDataLakeStoreAccountParameters
- uid: Promise<azure-arm-datalake-store.DataLakeStoreAccount>
  name: DataLakeStoreAccount>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DataLakeStoreAccount
    fullName: DataLakeStoreAccount
    uid: azure-arm-datalake-store.DataLakeStoreAccount
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccount>
  name: DataLakeStoreAccount>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DataLakeStoreAccount
    fullName: DataLakeStoreAccount
    uid: azure-arm-datalake-store.DataLakeStoreAccount
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccount>>
  name: DataLakeStoreAccount>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DataLakeStoreAccount
    fullName: DataLakeStoreAccount
    uid: azure-arm-datalake-store.DataLakeStoreAccount
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
  name: UpdateDataLakeStoreAccountParameters
  spec.typeScript:
  - name: UpdateDataLakeStoreAccountParameters
    fullName: UpdateDataLakeStoreAccountParameters
    uid: azure-arm-datalake-store.UpdateDataLakeStoreAccountParameters
- uid: azure-arm-datalake-store.CheckNameAvailabilityParameters
  name: CheckNameAvailabilityParameters
  spec.typeScript:
  - name: CheckNameAvailabilityParameters
    fullName: CheckNameAvailabilityParameters
    uid: azure-arm-datalake-store.CheckNameAvailabilityParameters
- uid: Promise<azure-arm-datalake-store.NameAvailabilityInformation>
  name: NameAvailabilityInformation>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: NameAvailabilityInformation
    fullName: NameAvailabilityInformation
    uid: azure-arm-datalake-store.NameAvailabilityInformation
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.NameAvailabilityInformation>
  name: NameAvailabilityInformation>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: NameAvailabilityInformation
    fullName: NameAvailabilityInformation
    uid: azure-arm-datalake-store.NameAvailabilityInformation
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.NameAvailabilityInformation>>
  name: NameAvailabilityInformation>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: NameAvailabilityInformation
    fullName: NameAvailabilityInformation
    uid: azure-arm-datalake-store.NameAvailabilityInformation
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  name: DataLakeStoreAccountListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DataLakeStoreAccountListResult
    fullName: DataLakeStoreAccountListResult
    uid: azure-arm-datalake-store.DataLakeStoreAccountListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.DataLakeStoreAccountListResult>
  name: DataLakeStoreAccountListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DataLakeStoreAccountListResult
    fullName: DataLakeStoreAccountListResult
    uid: azure-arm-datalake-store.DataLakeStoreAccountListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.DataLakeStoreAccountListResult>>
  name: DataLakeStoreAccountListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DataLakeStoreAccountListResult
    fullName: DataLakeStoreAccountListResult
    uid: azure-arm-datalake-store.DataLakeStoreAccountListResult
  - name: '>>'
    fullName: '>>'
