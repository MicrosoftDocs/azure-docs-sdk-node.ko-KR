### YamlMime:UniversalReference
ms.openlocfilehash: e06222d0ec191b66b287ffe6fe9148fbe92ec6f7
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/13/2018
ms.locfileid: "40064361"
items:
- uid: azure-common.ServiceClient
  id: azure-common.ServiceClient
  name: ServiceClient
  summary: <span data-ttu-id="a358b-101">새 ServiceClient 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-101">Creates a new ServiceClient object.</span></span>
  fullName: azure-common.ServiceClient
  type: Class
  children:
  - azure-common.ServiceClient.#ctor
  - azure-common.ServiceClient#setHost
  - azure-common.ServiceClient#performChunkedRequest
  - azure-common.ServiceClient#performRequest
  - azure-common.ServiceClient#performRequestOutputStream
  - azure-common.ServiceClient#performRequestInputStream
  - azure-common.ServiceClient#withFilter
  - azure-common.ServiceClient#parseMetadataHeaders
  - azure-common.ServiceClient.isEmulated
  langs:
  - js
- id: azure-common.ServiceClient.#ctor
  uid: azure-common.ServiceClient.#ctor
  parent: azure-common.ServiceClient
  name: ServiceClient(host, authenticationProvider)
  fullName: azure-common.ServiceClient.ServiceClient(host, authenticationProvider)
  summary: <span data-ttu-id="a358b-102">새 ServiceClient 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-102">Creates a new ServiceClient object.</span></span>
  type: Constructor
  syntax:
    parameters:
    - id: host
      type:
      - string
      description: <span data-ttu-id="a358b-103">서비스 호스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-103">The host for the service.</span></span>
    - id: authenticationProvider
      type:
      - object
      description: '<span data-ttu-id="a358b-104">인증 공급자 개체 (예: sharedkey / sharedkeytable / sharedaccesssignature).</span><span class="sxs-lookup"><span data-stu-id="a358b-104">The authentication provider object (e.g. sharedkey / sharedkeytable / sharedaccesssignature).</span></span>'
    content: new ServiceClient(host, authenticationProvider)
  langs:
  - js
- uid: azure-common.ServiceClient#setHost
  id: azure-common.ServiceClient#setHost
  parent: azure-common.ServiceClient
  name: setHost(host)
  summary: <span data-ttu-id="a358b-105">서비스에 대 한 호스트를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-105">Sets a host for the service.</span></span>
  fullName: azure-common.ServiceClient.setHost(host)
  type: Function
  syntax:
    parameters:
    - id: host
      type:
      - string
      description: <span data-ttu-id="a358b-106">서비스 호스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-106">The host for the service.</span></span>
    content: function setHost(host)
  langs:
  - js
- uid: azure-common.ServiceClient#performChunkedRequest
  id: azure-common.ServiceClient#performChunkedRequest
  parent: azure-common.ServiceClient
  name: performChunkedRequest(webResource, outputData, options, callback)
  summary: <span data-ttu-id="a358b-107">입력된 스트림을 예상 하는 HTTP 통해 REST 서비스 요청을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-107">Performs a REST service request through HTTP expecting an input stream.</span></span>
  fullName: azure-common.ServiceClient.performChunkedRequest(webResource, outputData, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: <span data-ttu-id="a358b-108">요청을 수행할 수 있는 웹 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-108">The webresource on which to perform the request.</span></span>
    - id: outputData
      type:
      - string
      description: <span data-ttu-id="a358b-109">원시 문자열로 나가는 요청 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-109">The outgoing request data as a raw string.</span></span>
    - id: options
      type:
      - object
      description: <span data-ttu-id="a358b-110">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-110">The request options.</span></span>
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: <span data-ttu-id="a358b-111">밀리초를 요청 하는 데 시간 제한 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-111">The timeout interval, in milliseconds, to use for the request.</span></span>
      optional: true
    - id: callback
      type:
      - function
      description: <span data-ttu-id="a358b-112">청크 분할된 응답 콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-112">The chunked response callback function.</span></span>
    content: function performChunkedRequest(webResource, outputData, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequest
  id: azure-common.ServiceClient#performRequest
  parent: azure-common.ServiceClient
  name: performRequest(webResource, outputData, options, callback)
  summary: <span data-ttu-id="a358b-113">입력된 스트림을 예상 하는 HTTP 통해 REST 서비스 요청을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-113">Performs a REST service request through HTTP expecting an input stream.</span></span>
  fullName: azure-common.ServiceClient.performRequest(webResource, outputData, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: <span data-ttu-id="a358b-114">요청을 수행할 수 있는 웹 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-114">The webresource on which to perform the request.</span></span>
    - id: outputData
      type:
      - string
      description: <span data-ttu-id="a358b-115">원시 문자열로 나가는 요청 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-115">The outgoing request data as a raw string.</span></span>
    - id: options
      type:
      - object
      description: <span data-ttu-id="a358b-116">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-116">The request options.</span></span>
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: <span data-ttu-id="a358b-117">밀리초를 요청 하는 데 시간 제한 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-117">The timeout interval, in milliseconds, to use for the request.</span></span>
      optional: true
    - id: callback
      type:
      - function
      description: <span data-ttu-id="a358b-118">응답 콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-118">The response callback function.</span></span>
    content: function performRequest(webResource, outputData, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequestOutputStream
  id: azure-common.ServiceClient#performRequestOutputStream
  parent: azure-common.ServiceClient
  name: performRequestOutputStream(webResource, outputStream, options, callback)
  summary: <span data-ttu-id="a358b-119">입력된 스트림을 예상 하는 HTTP 통해 REST 서비스 요청을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-119">Performs a REST service request through HTTP expecting an input stream.</span></span>
  fullName: azure-common.ServiceClient.performRequestOutputStream(webResource, outputStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: <span data-ttu-id="a358b-120">요청을 수행할 수 있는 웹 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-120">The webresource on which to perform the request.</span></span>
    - id: outputStream
      type:
      - azure-common.Stream
      description: <span data-ttu-id="a358b-121">스트림으로 나가는 요청 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-121">The outgoing request data as a stream.</span></span>
    - id: options
      type:
      - object
      description: <span data-ttu-id="a358b-122">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-122">The request options.</span></span>
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: <span data-ttu-id="a358b-123">밀리초를 요청 하는 데 시간 제한 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-123">The timeout interval, in milliseconds, to use for the request.</span></span>
      optional: true
    - id: callback
      type:
      - function
      description: <span data-ttu-id="a358b-124">응답 콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-124">The response callback function.</span></span>
    content: function performRequestOutputStream(webResource, outputStream, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequestInputStream
  id: azure-common.ServiceClient#performRequestInputStream
  parent: azure-common.ServiceClient
  name: performRequestInputStream(webResource, outputData, inputStream, options, callback)
  summary: <span data-ttu-id="a358b-125">입력된 스트림을 예상 하는 HTTP 통해 REST 서비스 요청을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-125">Performs a REST service request through HTTP expecting an input stream.</span></span>
  fullName: azure-common.ServiceClient.performRequestInputStream(webResource, outputData, inputStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: <span data-ttu-id="a358b-126">요청을 수행할 수 있는 웹 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-126">The webresource on which to perform the request.</span></span>
    - id: outputData
      type:
      - string
      description: <span data-ttu-id="a358b-127">원시 문자열로 나가는 요청 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-127">The outgoing request data as a raw string.</span></span>
    - id: inputStream
      type:
      - azure-common.Stream
      description: <span data-ttu-id="a358b-128">스트림으로 ingoing 응답 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-128">The ingoing response data as a stream.</span></span>
    - id: options
      type:
      - object
      description: <span data-ttu-id="a358b-129">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-129">The request options.</span></span>
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: <span data-ttu-id="a358b-130">밀리초를 요청 하는 데 시간 제한 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-130">The timeout interval, in milliseconds, to use for the request.</span></span>
      optional: true
    - id: callback
      type:
      - function
      description: <span data-ttu-id="a358b-131">응답 콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-131">The response callback function.</span></span>
    content: function performRequestInputStream(webResource, outputData, inputStream, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#withFilter
  id: azure-common.ServiceClient#withFilter
  parent: azure-common.ServiceClient
  name: withFilter(filter)
  summary: >-
    <span data-ttu-id="a358b-132">이 ServiceClient 필터링 작업을 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-132">Associate a filtering operation with this ServiceClient.</span></span> <span data-ttu-id="a358b-133">필터링 작업은 로깅, 자동 재시도 등을 포함할 수 있습니다. 필터 작업은 시그니처가 있는 메서드를 구현 하는 개체.</span><span class="sxs-lookup"><span data-stu-id="a358b-133">Filtering operations can include logging, automatically retrying, etc. Filter operations are objects that implement a method with the signature:</span></span>

        "function handle (requestOptions, next)".

    <span data-ttu-id="a358b-134">요청 옵션에 대 한 전처리를 수행한 후 메서드를 호출 해야 "다음" 다음 서명 사용 하 여 콜백을 전달: 서명:</span><span class="sxs-lookup"><span data-stu-id="a358b-134">After doing its preprocessing on the request options, the method needs to call "next" passing a callback with the following signature: signature:</span></span>

        "function (returnObject, finalCallback, next)"

    <span data-ttu-id="a358b-135">이 콜백에서 returnObject(서버에 요청 응답 반환)를 처리한 후 콜백은 next(있는 경우)를 호출하여 다른 필터를 계속 처리하거나 finalCallback을 호출하여 서비스 호출을 종료해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-135">In this callback, and after processing the returnObject (the response from the request to the server), the callback needs to either invoke next if it exists to continue processing other filters or simply invoke finalCallback otherwise to end up the service invocation.</span></span>
  fullName: azure-common.ServiceClient.withFilter(filter)
  type: Function
  syntax:
    parameters:
    - id: filter
      type:
      - Object
      description: <span data-ttu-id="a358b-136">새 필터 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-136">The new filter object.</span></span>
    return:
      type:
      - azure-common.ServiceClient
      description: <span data-ttu-id="a358b-137">적용 된 필터를 사용 하 여 새 서비스 클라이언트입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-137">A new service client with the filter applied.</span></span>
    content: function withFilter(filter)
  langs:
  - js
- uid: azure-common.ServiceClient#parseMetadataHeaders
  id: azure-common.ServiceClient#parseMetadataHeaders
  parent: azure-common.ServiceClient
  name: parseMetadataHeaders(headers)
  summary: <span data-ttu-id="a358b-138">응답 헤더에서 메타 데이터 헤더를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-138">Retrieves the metadata headers from the response headers.</span></span>
  fullName: azure-common.ServiceClient.parseMetadataHeaders(headers)
  type: Function
  syntax:
    parameters:
    - id: headers
      type:
      - object
      description: <span data-ttu-id="a358b-139">메타 데이터 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-139">The metadata headers.</span></span>
    return:
      type:
      - object
      description: <span data-ttu-id="a358b-140">("X-ms-" 접두사)가 없는 메타 데이터 헤더를 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-140">An object with the metadata headers (without the "x-ms-" prefix).</span></span>
    content: function parseMetadataHeaders(headers)
  langs:
  - js
- uid: azure-common.ServiceClient.isEmulated
  id: azure-common.ServiceClient.isEmulated
  parent: azure-common.ServiceClient
  name: isEmulated()
  summary: <span data-ttu-id="a358b-141">에 대 한 환경 변수의 값에는 캐싱이 에뮬레이트됩니다 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-141">Gets the value of the environment variable for is emulated.</span></span>
  fullName: azure-common.ServiceClient.isEmulated()
  type: Function
  syntax:
    return:
      type:
      - azure-common.bool
      description: <span data-ttu-id="a358b-142">서비스 클라이언트는 에뮬레이트된 환경에서 실행 중인 경우 true입니다. false이 고, 그렇지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a358b-142">True if the service client is running on an emulated environment; false otherwise.</span></span>
    content: function isEmulated()
  langs:
  - js
references:
- uid: azure-common.WebResource
  name: WebResource
  fullName: azure-common.WebResource
  isExternal: false
