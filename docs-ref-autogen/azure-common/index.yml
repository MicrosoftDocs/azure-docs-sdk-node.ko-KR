### YamlMime:UniversalReference
ms.openlocfilehash: 6894afa5a4cabd5c941cec9d9770b727ab0335b7
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/13/2018
ms.locfileid: "40064394"
items:
- uid: azure-common
  name: azure-common
  langs:
  - js
  type: package
  summary: ''
  children:
  - azure-common.StorageServiceClient
  - azure-common.ServiceManagementClient
  - azure-common.ServiceClient
  - azure-common.HmacSha256Sign
  - azure-common.LinearRetryPolicyFilter
  - azure-common.ExponentialRetryPolicyFilter
  - azure-common.TokenCloudCredentials
  - azure-common.CertificateCloudCredentials
  - azure-common.AnonymousCloudCredentials
  - azure-common.ConnectionStringParser
  - azure-common.WebResource
  - azure-common.parse
  - azure-common.create
  - azure-common.setAgent
  - azure-common.DEFAULT_PROTOCOL
  - azure-common.noMatchConnectionString
  - azure-common.noMatchSettings
  - azure-common.parseAndValidateKeys
  - azure-common.getValidator
  - azure-common.setting
  - azure-common.atLeastOne
  - azure-common.optional
  - azure-common.allRequired
  - azure-common.settingWithFunc
  - azure-common.matchedSpecification
  - azure-common.serializeEntry
  - azure-common.propertyType
  - azure-common.unserializeValue
  - azure-common.serializeQueryValue
  - azure-common.format
  - azure-common.encodeUri
  - azure-common.objectKeysLength
  - azure-common.objectFirstKey
  - azure-common.objectIsNull
  - azure-common.objectIsEmpty
  - azure-common.objectIsInt
  - azure-common.objectIsString
  - azure-common.objectIsFunction
  - azure-common.zeroPaddingString
  - azure-common.stringIsEmpty
  - azure-common.stringFormat
  - azure-common.stringStartsWith
  - azure-common.stringEndsWith
  - azure-common.stringIsInt
  - azure-common.stringIsFloat
  - azure-common.stringIsNumber
  - azure-common.stringIsDate
  - azure-common.urlIsHTTPS
  - azure-common.removeBOM
  - azure-common.merge
  - azure-common.inArrayInsensitive
  - azure-common.tryGetValueInsensitive
  - azure-common.getNameSpace
  - azure-common.isInt
  - azure-common.tryGetValueChain
  - azure-common.truncatedISO8061Date
  - azure-common.isBufferAllZero
  - azure-common.getContentMd5
  - azure-common.isValidUri
  - azure-common.isValidHDInsightCreationObject
  - azure-common.isBase64Encoded
  - azure-common.isValidFunction
  - azure-common.namespaceNameIsValid
  - azure-common.containerNameIsValid
  - azure-common.blobNameIsValid
  - azure-common.tableNameIsValid
  - azure-common.queueNameIsValid
- uid: azure-common.parse
  id: azure-common.parse
  name: parse(connectionString)
  summary: 연결 문자열을 구문 분석합니다.
  fullName: azure-common.parse(connectionString)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - number
      description: 연결 문자열을 구문 분석할 수입니다.
    return:
      type:
      - object
      description: 연결 문자열 개체입니다.
    content: function parse(connectionString)
  langs:
  - js
- uid: azure-common.create
  id: azure-common.create
  name: create()
  summary: 오류 응답을 처리 하는 필터를 만듭니다. 여기에 구문 분석 하 고 오류 응답을 정규화 합니다.
  fullName: azure-common.create()
  type: Function
  syntax:
    content: function create()
  langs:
  - js
- uid: azure-common.setAgent
  id: azure-common.setAgent
  name: setAgent(resouce, proxy)
  summary: 요청 결과 대해 사용 하도록 에이전트에 따라 달라 집니다 프록시 설정 및 프로토콜
  fullName: azure-common.setAgent(resouce, proxy)
  type: Function
  syntax:
    parameters:
    - id: resouce
      type:
      - object
      description: 요청에 대 한 요청 옵션입니다.
    - id: proxy
      type:
      - object
      description: 프록시에 대 한 구문 분석 된 url입니다.
    content: function setAgent(resouce, proxy)
  langs:
  - js
- uid: azure-common.DEFAULT_PROTOCOL
  id: azure-common.DEFAULT_PROTOCOL
  name: DEFAULT_PROTOCOL
  summary: 기본 프로토콜입니다.
  fullName: azure-common.DEFAULT_PROTOCOL
  type: Member
  syntax:
    content: DEFAULT_PROTOCOL
  langs:
  - js
- uid: azure-common.noMatchConnectionString
  id: azure-common.noMatchConnectionString
  name: noMatchConnectionString(connectionString)
  summary: 연결 문자열 형식을 사용할 수 있는 형식 중 하나로 일치 하지 않는 경우 예외가 throw 됩니다.
  fullName: azure-common.noMatchConnectionString(connectionString)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - string
      description: 잘못 된 형식이 지정 된 연결 문자열입니다.
    return:
      description: 없음
    content: function noMatchConnectionString(connectionString)
  langs:
  - js
- uid: azure-common.noMatchSettings
  id: azure-common.noMatchSettings
  name: noMatchSettings(settings)
  summary: 설정을 사용할 수 있는 형식 중 하나로 일치 하지 않는 경우 예외가 throw 됩니다.
  fullName: azure-common.noMatchSettings(settings)
  type: Function
  syntax:
    parameters:
    - id: settings
      type:
      - object
      description: 잘못 된 설정입니다.
    return:
      description: 없음
    content: function noMatchSettings(settings)
  langs:
  - js
- uid: azure-common.parseAndValidateKeys
  id: azure-common.parseAndValidateKeys
  name: parseAndValidateKeys(connectionString, validKeys)
  summary: 연결 문자열을 구문 분석 한 다음 구문 분석 된 키를 validSettingKeys 속한 유효성 검사
  fullName: azure-common.parseAndValidateKeys(connectionString, validKeys)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - string
      description: 사용자 연결 문자열을 제공 합니다.
    - id: validKeys
      type:
      - array
      description: 유효한 키입니다.
    return:
      type:
      - array
      description: 토큰화 된 연결 문자열 키입니다.
    content: function parseAndValidateKeys(connectionString, validKeys)
  langs:
  - js
- uid: azure-common.getValidator
  id: azure-common.getValidator
  name: getValidator(array, boolean, boolean)
  summary: 유효성 검사를 수행 하는 조건자로 사용 되는 익명 함수를 만듭니다.
  fullName: azure-common.getValidator(array, boolean, boolean)
  type: Function
  syntax:
    parameters:
    - id: array
      type:
      - azure-common.requirements
      description: 조건 충족 시키기 위해 배열입니다.
    - id: boolean
      type:
      - azure-common.isRequired
      description: 이러한 조건 중 하나는 모든 필수 또는 모두 선택 사항입니다.
    - id: boolean
      type:
      - azure-common.atLeastOne
      description: 하나 이상의 요구 사항을 성공 해야 합니다를 나타냅니다.
    return:
      type:
      - function
      description: ''
    content: function getValidator(array, boolean, boolean)
  langs:
  - js
- uid: azure-common.setting
  id: azure-common.setting
  name: setting(name)
  summary: 설정 값을 만들고 유효성을 검사 하는 조건을 전달 된 유효한 값 중 하나입니다.
  fullName: azure-common.setting(name)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: 설정 키 이름입니다.
    return:
      type:
      - array
      description: ''
    content: function setting(name)
  langs:
  - js
- uid: azure-common.atLeastOne
  id: azure-common.atLeastOne
  name: atLeastOne()
  summary: 제공 된 목록 요구 사항에 대 한 "에 임대할 하나" 조건자를 만듭니다.
  fullName: azure-common.atLeastOne()
  type: Function
  syntax:
    return:
      description: 호출 가능
    content: function atLeastOne()
  langs:
  - js
- uid: azure-common.optional
  id: azure-common.optional
  name: optional()
  summary: 제공 된 목록 요구 사항에 대 한 선택적 조건자를 만듭니다.
  fullName: azure-common.optional()
  type: Function
  syntax:
    return:
      type:
      - function
      description: ''
    content: function optional()
  langs:
  - js
- uid: azure-common.allRequired
  id: azure-common.allRequired
  name: allRequired()
  summary: 제공 된 목록 요구 사항에 대 한 필수 조건자를 만듭니다.
  fullName: azure-common.allRequired()
  type: Function
  syntax:
    return:
      type:
      - function
      description: ''
    content: function allRequired()
  langs:
  - js
- uid: azure-common.settingWithFunc
  id: azure-common.settingWithFunc
  name: settingWithFunc(name, predicate)
  summary: 전달 된 조건자를 사용 하 여 설정 값 조건을 만듭니다.
  fullName: azure-common.settingWithFunc(name, predicate)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: 설정 키 이름입니다.
    - id: predicate
      type:
      - function
      description: 설정 값 조건자입니다.
    return:
      type:
      - array
      description: ''
    content: function settingWithFunc(name, predicate)
  langs:
  - js
- uid: azure-common.matchedSpecification
  id: azure-common.matchedSpecification
  name: matchedSpecification(array)
  summary: 테스트 설정 목록은 지정 된 필터 집합을 정확 하 게 일치 하는지 확인 합니다.
  fullName: azure-common.matchedSpecification(array)
  type: Function
  syntax:
    parameters:
    - id: array
      description: $settings 설정을 확인 합니다.
    return:
      description: 있는 경우 부울 필터 false null을 반환 합니다. 설정이 있는 경우 모든 후 남은 모든 필터는 처리, false입니다. 그렇지 않으면 true입니다.
    content: function matchedSpecification(array)
  langs:
  - js
- uid: azure-common.serializeEntry
  id: azure-common.serializeEntry
  name: serializeEntry(content, namespaces)
  summary: ''
  fullName: azure-common.serializeEntry(content, namespaces)
  type: Function
  syntax:
    parameters:
    - id: content
      type:
      - object
      description: Js2xml를 serialize 할 수 있으므로 콘텐츠 페이로드가입니다. 모든 루트 노드 포함 되어야 합니다.
    - id: namespaces
      type:
      - array
      description: 상위 수준 네임 스페이스 배열을 정의 합니다.
    content: function serializeEntry(content, namespaces)
  langs:
  - js
- uid: azure-common.propertyType
  id: azure-common.propertyType
  name: propertyType(value)
  summary: 개체의 Edm 형식을 가져옵니다.
  fullName: azure-common.propertyType(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: 형식화 된 인스턴스입니다.
    return:
      type:
      - string
      description: Edm 형식입니다.
    content: function propertyType(value)
  langs:
  - js
- uid: azure-common.unserializeValue
  id: azure-common.unserializeValue
  name: unserializeValue(type, value)
  summary: Serialize 된 값을 형식화 된 개체로 변환 합니다.
  fullName: azure-common.unserializeValue(type, value)
  type: Function
  syntax:
    parameters:
    - id: type
      type:
      - string
      description: 값 형식의 형식 특성에 표시 됩니다.
    - id: value
      type:
      - string
      description: 문자열 형식 값입니다.
    return:
      type:
      - object
      description: 형식화 된 값입니다.
    content: function unserializeValue(type, value)
  langs:
  - js
- uid: azure-common.serializeQueryValue
  id: azure-common.serializeQueryValue
  name: serializeQueryValue(value)
  summary: Odata 쿼리 값에 사용할 적절 한 값으로 값을 serialize 합니다.
  fullName: azure-common.serializeQueryValue(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: Serialize 될 값입니다.
    return:
      type:
      - string
      description: Serialize 된 값입니다.
    content: function serializeQueryValue(value)
  langs:
  - js
- uid: azure-common.format
  id: azure-common.format
  name: format(date, skipMilliseconds, millisecondsPading)
  summary: 날짜는 iso 8061 문자열로 서식을 지정 합니다.
  fullName: azure-common.format(date, skipMilliseconds, millisecondsPading)
  type: Function
  syntax:
    parameters:
    - id: date
      type:
      - date
      description: 날짜 형식입니다.
    - id: skipMilliseconds
      type:
      - azure-common.bool
      description: 부울 값을 나타내는 경우 날짜의 밀리초 부분을 포함 하지 않아야 합니다.
    - id: millisecondsPading
      type:
      - azure-common.integer
      description: 왼쪽으로 자릿수는 밀리초를 채웁니다.
    return:
      type:
      - string
      description: 8061 ISO 날짜 형식으로 포맷 된 날짜입니다.
    content: function format(date, skipMilliseconds, millisecondsPading)
  langs:
  - js
- uid: azure-common.encodeUri
  id: azure-common.encodeUri
  name: encodeUri(uri)
  summary: URI를 인코딩합니다.
  fullName: azure-common.encodeUri(uri)
  type: Function
  syntax:
    parameters:
    - id: uri
      type:
      - string
      description: 인코딩할 URI입니다.
    return:
      type:
      - string
      description: 인코딩된 URI입니다.
    content: function encodeUri(uri)
  langs:
  - js
- uid: azure-common.objectKeysLength
  id: azure-common.objectKeysLength
  name: objectKeysLength(value)
  summary: 개체의 키 (속성)의 수를 반환합니다.
  fullName: azure-common.objectKeysLength(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: 키를 계산할 수 있는 개체입니다.
    return:
      type:
      - number
      description: 키 개체의 수입니다.
    content: function objectKeysLength(value)
  langs:
  - js
- uid: azure-common.objectFirstKey
  id: azure-common.objectFirstKey
  name: objectFirstKey(value)
  summary: 개체의 첫 번째 속성의 이름을 반환합니다.
  fullName: azure-common.objectFirstKey(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: 키가 반환 될 개체입니다.
    return:
      type:
      - number
      description: 첫 번째 개체 키의 이름입니다.
    content: function objectFirstKey(value)
  langs:
  - js
- uid: azure-common.objectIsNull
  id: azure-common.objectIsNull
  name: objectIsNull(value)
  summary: 값이 null 이거나 정의 되지 않은 경우를 확인 합니다.
  fullName: azure-common.objectIsNull(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: Null 이거나 정의 되지 않은 확인 값입니다.
    return:
      type:
      - azure-common.bool
      description: 그렇지 않으면 값이 null 또는 정의 되지 않은, false 이면 true입니다.
    content: function objectIsNull(value)
  langs:
  - js
- uid: azure-common.objectIsEmpty
  id: azure-common.objectIsEmpty
  name: objectIsEmpty(object)
  summary: 개체가 비어 있는지 확인 합니다.
  fullName: azure-common.objectIsEmpty(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: Null 인지 검사할 개체입니다.
    return:
      type:
      - azure-common.bool
      description: True 이면 개체가 비어 있는 경우 false이 고, 그렇지입니다.
    content: function objectIsEmpty(object)
  langs:
  - js
- uid: azure-common.objectIsInt
  id: azure-common.objectIsInt
  name: objectIsInt(value)
  summary: 개체는 정수를 포함 하는 경우를 결정 합니다.
  fullName: azure-common.objectIsInt(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: Assert 개체입니다.
    return:
      type:
      - azure-common.bool
      description: 개체는 정수 숫자를 포함 하는 경우 true입니다. false이 고, 그렇지 합니다.
    content: function objectIsInt(value)
  langs:
  - js
- uid: azure-common.objectIsString
  id: azure-common.objectIsString
  name: objectIsString(object)
  summary: 개체를 문자열 인지 확인 합니다.
  fullName: azure-common.objectIsString(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: 문자열 인지 검사할 개체입니다.
    return:
      type:
      - azure-common.bool
      description: 개체가 있으면 false strign, 그렇지 않으면 true입니다.
    content: function objectIsString(object)
  langs:
  - js
- uid: azure-common.objectIsFunction
  id: azure-common.objectIsFunction
  name: objectIsFunction(object)
  summary: 개체는 함수 인지 확인
  fullName: azure-common.objectIsFunction(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: 함수 인지 여부를 확인할 개체입니다
    return:
      type:
      - azure-common.bool
      description: True 이면 지정한 개체가 함수, 그렇지 않으면 false
    content: function objectIsFunction(object)
  langs:
  - js
- uid: azure-common.zeroPaddingString
  id: azure-common.zeroPaddingString
  name: zeroPaddingString()
  summary: 프런트 sepcified 길이 문자열의 0 패딩
  fullName: azure-common.zeroPaddingString()
  type: Function
  syntax:
    content: function zeroPaddingString()
  langs:
  - js
- uid: azure-common.stringIsEmpty
  id: azure-common.stringIsEmpty
  name: stringIsEmpty(value)
  summary: 값이 null 이거나 정의 되지 않은 빈 문자열 인지 확인 합니다.
  fullName: azure-common.stringIsEmpty(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: 빈 문자열이 면 null 이거나 정의 되지 않은 확인 값입니다.
    return:
      type:
      - azure-common.bool
      description: 그렇지 않으면 값이 빈 문자열을 null 이거나 정의 되지 않은 false 면 true입니다.
    content: function stringIsEmpty(value)
  langs:
  - js
- uid: azure-common.stringFormat
  id: azure-common.stringFormat
  name: stringFormat(text, arguments)
  summary: 대체 텍스트 형식 '?' 인수입니다.
  fullName: azure-common.stringFormat(text, arguments)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: 문자열 위치는? 대체 되어야 합니다.
    - id: arguments
      type:
      - array
      description: 에 삽입할 값 (?) 매개 변수를 표시 합니다.
    return:
      type:
      - string
      description: ''
    content: function stringFormat(text, arguments)
  langs:
  - js
- uid: azure-common.stringStartsWith
  id: azure-common.stringStartsWith
  name: stringStartsWith(text, prefix)
  summary: 다른 문자열로 시작 하는 경우를 결정 합니다.
  fullName: azure-common.stringStartsWith(text, prefix)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: 문자열 어셜션입니다.
    - id: prefix
      type:
      - string
      description: 접두사 문자열입니다.
    return:
      type:
      - azure-common.Bool
      description: 문자열 이거나, 접두사가로 시작 되 면 true입니다. false이 고, 그렇지 합니다.
    content: function stringStartsWith(text, prefix)
  langs:
  - js
- uid: azure-common.stringEndsWith
  id: azure-common.stringEndsWith
  name: stringEndsWith(text, suffix)
  summary: 다른 문자열로 끝나는지를 확인 합니다.
  fullName: azure-common.stringEndsWith(text, suffix)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: 문자열 어셜션입니다.
    - id: suffix
      type:
      - string
      description: 문자열 접미사입니다.
    return:
      type:
      - azure-common.Bool
      description: 문자열; 접미사로 끝나는 경우 true입니다. false이 고, 그렇지 합니다.
    content: function stringEndsWith(text, suffix)
  langs:
  - js
- uid: azure-common.stringIsInt
  id: azure-common.stringIsInt
  name: stringIsInt(text)
  summary: 문자열로 정수를 포함 하는 경우를 결정 합니다.
  fullName: azure-common.stringIsInt(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: 문자열 어셜션입니다.
    return:
      type:
      - azure-common.Bool
      description: 문자열 대 정수; 포함 된 경우 true입니다. false이 고, 그렇지 합니다.
    content: function stringIsInt(text)
  langs:
  - js
- uid: azure-common.stringIsFloat
  id: azure-common.stringIsFloat
  name: stringIsFloat(text)
  summary: 문자열에 부동 소수점 숫자가 포함 된 경우를 결정 합니다.
  fullName: azure-common.stringIsFloat(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: 문자열 어셜션입니다.
    return:
      type:
      - azure-common.Bool
      description: 문자열에 부동 소수점 숫자를 포함 하는 경우 true입니다. false이 고, 그렇지 합니다.
    content: function stringIsFloat(text)
  langs:
  - js
- uid: azure-common.stringIsNumber
  id: azure-common.stringIsNumber
  name: stringIsNumber(text)
  summary: 문자열 수를 포함 하는 경우를 결정 합니다.
  fullName: azure-common.stringIsNumber(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: 문자열 어셜션입니다.
    return:
      type:
      - azure-common.Bool
      description: 문자열에 숫자를 포함 하는 경우 true입니다. false이 고, 그렇지 합니다.
    content: function stringIsNumber(text)
  langs:
  - js
- uid: azure-common.stringIsDate
  id: azure-common.stringIsDate
  name: stringIsDate(date)
  summary: 유효한 날짜 개체 인지 여부를 확인 합니다.
  fullName: azure-common.stringIsDate(date)
  type: Function
  syntax:
    parameters:
    - id: date
      type:
      - Date
      description: 테스트할 날짜
    return:
      type:
      - azure-common.Bool
      description: True 이면 날짜가 잘못 되었습니다. false이 고, 그렇지 합니다.
    content: function stringIsDate(date)
  langs:
  - js
- uid: azure-common.urlIsHTTPS
  id: azure-common.urlIsHTTPS
  name: urlIsHTTPS(urlToCheck)
  summary: 구문 분석 된 URL을 HTTPS 인지 확인
  fullName: azure-common.urlIsHTTPS(urlToCheck)
  type: Function
  syntax:
    parameters:
    - id: urlToCheck
      type:
      - object
      description: Url 확인
    return:
      type:
      - azure-common.bool
      description: URL은 HTTPS 경우 true입니다. false이 고, 그렇지 합니다.
    content: function urlIsHTTPS(urlToCheck)
  langs:
  - js
- uid: azure-common.removeBOM
  id: azure-common.removeBOM
  name: removeBOM(str)
  summary: 문자열에서 BOM을 제거합니다.
  fullName: azure-common.removeBOM(str)
  type: Function
  syntax:
    parameters:
    - id: str
      type:
      - string
      description: 제거할 BOM 인 문자열
    return:
      type:
      - string
      description: BOM 없이 문자열입니다.
    content: function removeBOM(str)
  langs:
  - js
- uid: azure-common.merge
  id: azure-common.merge
  name: merge(object)
  summary: 여러 개체를 병합합니다.
  fullName: azure-common.merge(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: 병합할 개체
    return:
      type:
      - object
      description: 병합 된 개체입니다.
    content: function merge(object)
  langs:
  - js
- uid: azure-common.inArrayInsensitive
  id: azure-common.inArrayInsensitive
  name: inArrayInsensitive(needle, haystack)
  summary: 배열에 값이 있는지 확인 합니다. 비교는 대/소문자 구분 방식으로 수행 됩니다.
  fullName: azure-common.inArrayInsensitive(needle, haystack)
  type: Function
  syntax:
    parameters:
    - id: needle
      type:
      - string
      description: 검색된 값입니다.
    - id: haystack
      type:
      - array
      description: 배열입니다.
    return:
      type:
      - boolean
      description: ''
    content: function inArrayInsensitive(needle, haystack)
  langs:
  - js
- uid: azure-common.tryGetValueInsensitive
  id: azure-common.tryGetValueInsensitive
  name: tryGetValueInsensitive(key, haystack, default)
  summary: 반환 전달 된 키의 지정 된 값 개체에서이 키가 존재 하지 않는 경우 기본값 반환 됩니다. 일치 하는 키 대/소문자 구분 방식으로 수행 됩니다.
  fullName: azure-common.tryGetValueInsensitive(key, haystack, default)
  type: Function
  syntax:
    parameters:
    - id: key
      type:
      - string
      description: 배열의 키입니다.
    - id: haystack
      type:
      - object
      description: 사용할 개체입니다.
    - id: default
      type:
      - azure-common.mix
      description: $Key $array에 없는 경우 반환할 값입니다.
    return:
      description: 혼합
    content: function tryGetValueInsensitive(key, haystack, default)
  langs:
  - js
- uid: azure-common.getNameSpace
  id: azure-common.getNameSpace
  name: getNameSpace()
  summary: SubscriptoinId, 접두사 및 위치에 대 한 네임 스페이스를 반환합니다.
  fullName: azure-common.getNameSpace()
  tags:
  - originalTitle: subscriptionId
    title: subscriptionid
    text: '{string}  The Azure subscription id.'
    value: '{string}  The Azure subscription id.'
  - originalTitle: prefix
    title: prefix
    text: '{string}          The prifix for the service.'
    value: '{string}          The prifix for the service.'
  - originalTitle: location
    title: location
    text: '{string}        The location of the service.'
    value: '{string}        The location of the service.'
  type: Function
  syntax:
    return:
      type:
      - azure-common.Bool
      description: True 이면 값은 정수입니다. false이 고, 그렇지 합니다.
    content: function getNameSpace()
  langs:
  - js
- uid: azure-common.isInt
  id: azure-common.isInt
  name: isInt(The)
  summary: (문자열 또는 숫자) 값이 정수 인지 확인 합니다.
  fullName: azure-common.isInt(The)
  type: Function
  syntax:
    parameters:
    - id: The
      type:
      - object
      description: 평가 값입니다.
    return:
      type:
      - azure-common.Bool
      description: True 이면 값은 정수입니다. false이 고, 그렇지 합니다.
    content: function isInt(The)
  langs:
  - js
- uid: azure-common.tryGetValueChain
  id: azure-common.tryGetValueChain
  name: tryGetValueChain(object, keys, default)
  summary: 연결 된 개체의 값을 반환 합니다.
  fullName: azure-common.tryGetValueChain(object, keys, default)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: 값이 포함 된 개체입니다.
    - id: keys
      type:
      - array
      description: 키입니다.
    - id: default
      type:
      - azure-common.mix
      description: $Key $array에 없는 경우 반환할 값입니다.
    return:
      description: 혼합
    content: function tryGetValueChain(object, keys, default)
  langs:
  - js
- uid: azure-common.truncatedISO8061Date
  id: azure-common.truncatedISO8061Date
  name: truncatedISO8061Date(a)
  summary: 초를 날짜를 반올림합니다.
  fullName: azure-common.truncatedISO8061Date(a)
  type: Function
  syntax:
    parameters:
    - id: a
      type:
      - Date
      description: date
    return:
      type:
      - string
      description: 시간 (밀리초) 구성 요소가 없는 ISO8061 형식으로 날짜
    content: function truncatedISO8061Date(a)
  langs:
  - js
- uid: azure-common.isBufferAllZero
  id: azure-common.isBufferAllZero
  name: isBufferAllZero()
  summary: 버퍼의 내용을 모든 0 인지
  fullName: azure-common.isBufferAllZero()
  type: Function
  syntax:
    content: function isBufferAllZero()
  langs:
  - js
- uid: azure-common.getContentMd5
  id: azure-common.getContentMd5
  name: getContentMd5()
  summary: 콘텐츠에 대 한 md5sum 계산
  fullName: azure-common.getContentMd5()
  type: Function
  syntax:
    content: function getContentMd5()
  langs:
  - js
- uid: azure-common.isValidUri
  id: azure-common.isValidUri
  name: isValidUri(uri)
  summary: 지정된 된 uri는 올바른 경우 확인 하는 익명 함수를 만듭니다.
  fullName: azure-common.isValidUri(uri)
  type: Function
  syntax:
    parameters:
    - id: uri
      type:
      - string
      description: Uri의 유효성을 검사입니다.
    return:
      type:
      - function
      description: ''
    content: function isValidUri(uri)
  langs:
  - js
- uid: azure-common.isValidHDInsightCreationObject
  id: azure-common.isValidHDInsightCreationObject
  name: isValidHDInsightCreationObject(clusterCreationObject)
  summary: clusterCreationObject 올바르게 구성의 유효성을 검사 합니다.
  fullName: azure-common.isValidHDInsightCreationObject(clusterCreationObject)
  type: Function
  syntax:
    parameters:
    - id: clusterCreationObject
      type:
      - object
      description: >-
        클러스터를 만드는 데 필요한 모든 매개 변수를 제공 하는 데 사용 하는 개체입니다.

        {/ 다음은 필수 필드 이름 /: ' (dns 이름) 클러스터의 이름을 모두 소문자 ', 위치: '클러스터를 만들 수는 Azure 데이터 센터', defaultStorageAccountName: '기본 Azure storage 계정 이름', defaultStorageAccountKey: '기본 Azure 저장소 계정에 대 한 비밀 키' defaultStorageContainer: '기본 Azure storage 계정의 컨테이너', 사용자: '클러스터에 사용할 username' 암호: '클러스터에 사용할 암호'를 노드: 번호 / / 사용 하는 노드 수가 / 다음은 선택적 필드 additionalStorageAccounts /: [{이름: '저장소 계정 이름' 키: '저장소 계정에 대 한 비밀 키'}, {/ / 동일한 패턴을 따라 추가 계정}] / / 다음 선택 사항 이지만 다른 필요한 oozieMetastore 하나는 지정 된 경우: {서버: '를 사용 하 여 sql server의 이름', 데이터베이스: '를 사용 하 여 sql 데이터베이스' 사용자: '데이터베이스에 로그인 할 때 사용할 사용자 이름을' 암호: ' 로그인 할 때 사용할 암호를는 데이터베이스 '} hiveMetastore: {서버: '를 사용 하 여 sql server의 이름', 데이터베이스: '를 사용 하 여 sql 데이터베이스' 사용자: '데이터베이스에 로그인 할 때 사용할 사용자 이름을' 암호: '데이터베이스에 로그인 할 때 사용할 암호'}}
    content: function isValidHDInsightCreationObject(clusterCreationObject)
  langs:
  - js
- uid: azure-common.isBase64Encoded
  id: azure-common.isBase64Encoded
  name: isBase64Encoded(key)
  summary: 지정된 된 키 base 64로 인코드됩니다 인지 확인 하는 익명 함수를 만듭니다.
  fullName: azure-common.isBase64Encoded(key)
  type: Function
  syntax:
    parameters:
    - id: key
      type:
      - string
      description: 키의 유효성을 검사입니다.
    return:
      type:
      - function
      description: ''
    content: function isBase64Encoded(key)
  langs:
  - js
- uid: azure-common.isValidFunction
  id: azure-common.isValidFunction
  name: isValidFunction(function)
  summary: 함수를 확인합니다.
  fullName: azure-common.isValidFunction(function)
  type: Function
  syntax:
    parameters:
    - id: function
      type:
      - object
      description: 유효성을 검사 하는 함수입니다.
    return:
      type:
      - function
      description: ''
    content: function isValidFunction(function)
  langs:
  - js
- uid: azure-common.namespaceNameIsValid
  id: azure-common.namespaceNameIsValid
  name: namespaceNameIsValid(name)
  summary: 법적으로 허용 되는 Service Bus 네임 스페이스 이름 인지 확인 합니다. 가용성을 확인 하지 않습니다.
  fullName: azure-common.namespaceNameIsValid(name)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: 이름을 확인 하려면
    return:
      description: 아무것도 아닌 것으로 나타납니다. 예외를 throw 이름이 올바르지 않으면 메시지를 위반 하는 유효성 검사 범주를 설명 하는 합니다.
    content: function namespaceNameIsValid(name)
  langs:
  - js
- uid: azure-common.containerNameIsValid
  id: azure-common.containerNameIsValid
  name: containerNameIsValid(containerName)
  summary: 컨테이너 이름을 확인합니다.
  fullName: azure-common.containerNameIsValid(containerName)
  type: Function
  syntax:
    parameters:
    - id: containerName
      type:
      - string
      description: 컨테이너 이름
    return:
      type:
      - undefined
      description: ''
    content: function containerNameIsValid(containerName)
  langs:
  - js
- uid: azure-common.blobNameIsValid
  id: azure-common.blobNameIsValid
  name: blobNameIsValid(containerName, blobname)
  summary: Blob 이름의 유효성을 검사 합니다.
  fullName: azure-common.blobNameIsValid(containerName, blobname)
  type: Function
  syntax:
    parameters:
    - id: containerName
      type:
      - string
      description: 컨테이너 이름
    - id: blobname
      type:
      - string
      description: Blob 이름입니다.
    return:
      type:
      - undefined
      description: ''
    content: function blobNameIsValid(containerName, blobname)
  langs:
  - js
- uid: azure-common.tableNameIsValid
  id: azure-common.tableNameIsValid
  name: tableNameIsValid(table)
  summary: 테이블 이름을 확인합니다.
  fullName: azure-common.tableNameIsValid(table)
  type: Function
  syntax:
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    return:
      type:
      - undefined
      description: ''
    content: function tableNameIsValid(table)
  langs:
  - js
- uid: azure-common.queueNameIsValid
  id: azure-common.queueNameIsValid
  name: queueNameIsValid(queue)
  summary: 큐 이름을 확인합니다.
  fullName: azure-common.queueNameIsValid(queue)
  type: Function
  syntax:
    parameters:
    - id: queue
      type:
      - string
      description: 큐 이름입니다.
    return:
      type:
      - undefined
      description: ''
    content: function queueNameIsValid(queue)
  langs:
  - js
references:
- uid: azure-common.StorageServiceClient
  name: StorageServiceClient
- uid: azure-common.ServiceManagementClient
  name: ServiceManagementClient
- uid: azure-common.ServiceClient
  name: ServiceClient
- uid: azure-common.HmacSha256Sign
  name: HmacSha256Sign
- uid: azure-common.LinearRetryPolicyFilter
  name: LinearRetryPolicyFilter
- uid: azure-common.ExponentialRetryPolicyFilter
  name: ExponentialRetryPolicyFilter
- uid: azure-common.TokenCloudCredentials
  name: TokenCloudCredentials
- uid: azure-common.CertificateCloudCredentials
  name: CertificateCloudCredentials
- uid: azure-common.AnonymousCloudCredentials
  name: AnonymousCloudCredentials
- uid: azure-common.ConnectionStringParser
  name: ConnectionStringParser
- uid: azure-common.WebResource
  name: WebResource
