### YamlMime:UniversalReference
ms.openlocfilehash: 32c61f1d1e0be7f27878b5ad6d4a04b662dc92f9
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40067299"
items:
- uid: azure-iot-common.ExponentialBackOffWithJitter
  name: ExponentialBackOffWithJitter
  fullName: ExponentialBackOffWithJitter
  children:
  - azure-iot-common.ExponentialBackOffWithJitter.constructor
  - azure-iot-common.ExponentialBackOffWithJitter.immediateFirstRetry
  - azure-iot-common.ExponentialBackOffWithJitter.nextRetryTimeout
  - azure-iot-common.ExponentialBackOffWithJitter.normalParameters
  - azure-iot-common.ExponentialBackOffWithJitter.shouldRetry
  - azure-iot-common.ExponentialBackOffWithJitter.throttledParameters
  langs:
  - typeScript
  type: class
  summary: >-
    구현 지터를 사용 하 여 지 수 백오프 전략을 다시 시도합니다.

    다음 간격을 계산 하는 함수에는 다음과 같습니다 (x는 xth 재시도가 하는 데 사용): f (x) = min (Cmin + (2^(x-1)-1) * rand (C * (1 일 – Jd) C*(1-Ju)), Cmax)
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.constructor
  name: ExponentialBackOffWithJitter
  children: []
  type: constructor
  langs:
  - typeScript
  summary: 새 인스턴스를 초기화 합니다 <xref:azure-iot-common.ExponentialBackOffWithJitter> 클래스입니다.
  syntax:
    content: 'new ExponentialBackOffWithJitter(immediateFirstRetry?: boolean, errorFilter?: ErrorFilter)'
    parameters:
    - id: immediateFirstRetry
      type:
      - boolean
      description: >
        첫 번째 재시도 대기 첫 번째 간격 (c 값) 또는 즉시 (기본값) 할지 여부를 나타내는 부울입니다.
      optional: true
    - id: errorFilter
      type:
      - ErrorFilter
      description: ''
      optional: true
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.immediateFirstRetry
  name: immediateFirstRetry
  fullName: immediateFirstRetry
  children: []
  langs:
  - typeScript
  type: property
  summary: 첫 번째 재시도 직접 실행 해야 하는지 여부를 나타내는 부울 값 (하는 경우 true로 설정) 또는 normalParameters.c 지연 후 (하는 경우 false로 설정).
  syntax:
    content: 'immediateFirstRetry: boolean'
    return:
      type:
      - boolean
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.nextRetryTimeout
  name: nextRetryTimeout
  children: []
  type: method
  langs:
  - typeScript
  summary: 미정 새 각 재시도에 다시 시도 하기 전에 대기할 간격을 계산 합니다.
  syntax:
    content: 'function nextRetryTimeout(retryCount: number, isThrottled: boolean)'
    parameters:
    - id: retryCount
      type:
      - number
      description: 현재 재시도 미정 합니다.
    - id: isThrottled
      type:
      - boolean
      description: Azure IoT hub에서 작업을 제한 여부를 나타내는 부울입니다.
    return:
      type:
      - number
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.normalParameters
  name: normalParameters
  fullName: normalParameters
  children: []
  langs:
  - typeScript
  type: property
  summary: 일반적인 상황에서 각 재시도 사이의 지연 시간을 계산 하는 데 사용 되는 매개 변수를 다시 시도 하세요 (ie. 제한 되지 않음).
  syntax:
    content: 'normalParameters: ExponentialBackoffWithJitterParameters'
    return:
      type:
      - azure-iot-common.ExponentialBackoffWithJitterParameters
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.shouldRetry
  name: shouldRetry
  children: []
  type: method
  langs:
  - typeScript
  summary: 인수로 전달 되는 오류에 따라, 오류가 일시적인 경우 및 여부는 작업을 재시도 해야 하는 경우를 결정 합니다.
  syntax:
    content: 'function shouldRetry(error: Error)'
    parameters:
    - id: error
      type:
      - Error
      description: 작업에서 발생 한 오류입니다.
    return:
      type:
      - boolean
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.throttledParameters
  name: throttledParameters
  fullName: throttledParameters
  children: []
  langs:
  - typeScript
  type: property
  summary: 제한 된 상황에서 각 재시도 사이의 지연 시간을 계산 하는 데 사용 되는 매개 변수를 다시 시도 하세요.
  syntax:
    content: 'throttledParameters: ExponentialBackoffWithJitterParameters'
    return:
      type:
      - azure-iot-common.ExponentialBackoffWithJitterParameters
  package: azure-iot-common
references:
- uid: azure-iot-common.ExponentialBackoffWithJitterParameters
  spec.typeScript:
  - name: ExponentialBackoffWithJitterParameters
    fullName: ExponentialBackoffWithJitterParameters
    uid: azure-iot-common.ExponentialBackoffWithJitterParameters
