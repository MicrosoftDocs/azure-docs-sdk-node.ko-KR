### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-search.SearchManagementClientContext'
    name: SearchManagementClientContext
    fullName: SearchManagementClientContext
    children:
      - '@azure/arm-search.SearchManagementClientContext.acceptLanguage'
      - '@azure/arm-search.SearchManagementClientContext.apiVersion'
      - '@azure/arm-search.SearchManagementClientContext.beginLongRunningRequest'
      - '@azure/arm-search.SearchManagementClientContext.credentials'
      - '@azure/arm-search.SearchManagementClientContext.longRunningOperationRetryTimeout'
      - '@azure/arm-search.SearchManagementClientContext.restoreLROPoller'
      - '@azure/arm-search.SearchManagementClientContext.constructor'
      - '@azure/arm-search.SearchManagementClientContext.sendLongRunningRequest'
      - '@azure/arm-search.SearchManagementClientContext.sendLRORequest'
      - '@azure/arm-search.SearchManagementClientContext.sendOperationRequest'
      - '@azure/arm-search.SearchManagementClientContext.sendRequest'
      - '@azure/arm-search.SearchManagementClientContext.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="283ca-101">(장기 실행 작업)는 LRO의 초기 요청을 보내고 메서드는 LRO 폴링 및는 LRO 완료 된 경우 검사를 제공 하는 HttpLongRunningOperationResponse 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="283ca-102">요청 개체</span><span class="sxs-lookup"><span data-stu-id="283ca-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="283ca-103">장기 실행 작업에 대 한 시간 (초) 다시 시도 제한 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-103">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="283ca-104">기본값은 30입니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-104">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="283ca-105">제공 된 LROPollState에서는 LROPoller를 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-105">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="283ca-106">이 메서드는 LROPoller 다른 프로세스 또는 컴퓨터에 다시 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-106">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.constructor'
    name: 'SearchManagementClientContext(ServiceClientCredentials, string, Models.SearchManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="283ca-107">SearchManagementClient 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-107">Initializes a new instance of the SearchManagementClient class.</span></span>
    syntax:
      content: 'new SearchManagementClientContext(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.SearchManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="283ca-108">Azure에 연결 하는 클라이언트에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-108">Credentials needed for the client to connect to Azure.</span></span>
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="283ca-109">Microsoft Azure 구독에 대 한 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-109">The unique identifier for a Microsoft Azure subscription.</span></span> <span data-ttu-id="283ca-110">Azure Resource Manager API 또는 포털에서이 값을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-110">You can obtain this value from the Azure Resource Manager API or the portal.</span></span>
        - id: options
          type:
            - Models.SearchManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="283ca-111">폴링 되며 최종 결과 제공 하는 요청을 수행 하는 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-111">Provides a mechanism to make a request that will poll and provide the final result.</span></span>
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="283ca-112">요청 개체</span><span class="sxs-lookup"><span data-stu-id="283ca-112">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="283ca-113">(장기 실행 작업)는 LRO의 초기 요청을 보내고 메서드는 LRO 폴링 및는 LRO 완료 된 경우 검사를 제공 하는 LROPoller 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-113">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="283ca-114">작업에 대 한 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-114">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="283ca-115">작업에 대 한 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-115">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="283ca-116">요청을 수행 하는 동안 보낼 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-116">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="283ca-117">제공 된 OperationSpec를 사용 하 여 채워지는 HTTP 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-117">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="283ca-118">HTTP 요청의 템플릿 값에서 채워집니다는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-118">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="283ca-119">Http 요청을 채우는 데 사용할 OperationSpec 합니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-119">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="283ca-120">응답을 받을 때 호출할 콜백.</span><span class="sxs-lookup"><span data-stu-id="283ca-120">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="283ca-121">제공 된 http 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="283ca-121">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.SearchManagementClientContext.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-search'