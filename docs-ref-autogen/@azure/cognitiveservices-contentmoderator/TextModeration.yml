### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration'
    name: TextModeration
    fullName: TextModeration
    children:
      - '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_2'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_1'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.screenText'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_1'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_2'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.constructor'
    langs:
      - typeScript
    type: class
    summary: TextModeration 나타내는 클래스입니다.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage'
    name: 'detectLanguage(Models.TextContentType1, msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 작업 입력된 콘텐츠가 지정 된의 언어를 검색 합니다. 반환 된 <a
      href="http://www-01.sil.org/iso639-3/codes.asp">ISO 639 3 코드</a> 널리 언어 제출 된 텍스트를 구성 합니다. 110 개 언어를 지원 합니다.
    syntax:
      content: 'function detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType1
          description: '콘텐츠 형식입니다. 가능한 값: '' 텍스트/일반 '', '' 텍스트/html '', '' 텍스트/xml '', '' 텍스트/markdown '''
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: 화면 콘텐츠입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TextModerationDetectLanguageResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_2'
    name: 'detectLanguage(Models.TextContentType1, msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<DetectedLanguage>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<DetectedLanguage>)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType1
          description: '콘텐츠 형식입니다. 가능한 값: '' 텍스트/일반 '', '' 텍스트/html '', '' 텍스트/xml '', '' 텍스트/markdown '''
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: 화면 콘텐츠입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.DetectedLanguage>
          description: |
            콜백
      return:
        type:
          - Promise<Models.TextModerationDetectLanguageResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_1'
    name: 'detectLanguage(Models.TextContentType1, msRest.HttpRequestBody, ServiceCallback<DetectedLanguage>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, callback: ServiceCallback<DetectedLanguage>)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType1
          description: '콘텐츠 형식입니다. 가능한 값: '' 텍스트/일반 '', '' 텍스트/html '', '' 텍스트/xml '', '' 텍스트/markdown '''
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: 화면 콘텐츠입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.DetectedLanguage>
          description: |
            콜백
      return:
        type:
          - Promise<Models.TextModerationDetectLanguageResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText'
    name: 'screenText(Models.TextContentType, msRest.HttpRequestBody, Models.TextModerationScreenTextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 100 개가 넘는 언어 및 사용자 지정 및 공유 블랙 리스트에 대 한 일치에서 불경 한 언어를 검색합니다.
    syntax:
      content: 'function screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, options?: Models.TextModerationScreenTextOptionalParams)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType
          description: '콘텐츠 형식입니다. 가능한 값: '' 텍스트/일반 '', '' 텍스트/html '', '' 텍스트/xml '', '' 텍스트/markdown '''
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: 화면 콘텐츠입니다.
        - id: options
          type:
            - Models.TextModerationScreenTextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TextModerationScreenTextResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_1'
    name: 'screenText(Models.TextContentType, msRest.HttpRequestBody, ServiceCallback<Screen>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, callback: ServiceCallback<Screen>)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType
          description: '콘텐츠 형식입니다. 가능한 값: '' 텍스트/일반 '', '' 텍스트/html '', '' 텍스트/xml '', '' 텍스트/markdown '''
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: 화면 콘텐츠입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Screen>
          description: |
            콜백
      return:
        type:
          - Promise<Models.TextModerationScreenTextResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_2'
    name: 'screenText(Models.TextContentType, msRest.HttpRequestBody, TextModerationScreenTextOptionalParams, ServiceCallback<Screen>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, options: TextModerationScreenTextOptionalParams, callback: ServiceCallback<Screen>)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType
          description: '콘텐츠 형식입니다. 가능한 값: '' 텍스트/일반 '', '' 텍스트/html '', '' 텍스트/xml '', '' 텍스트/markdown '''
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: 화면 콘텐츠입니다.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.TextModerationScreenTextOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Screen>
          description: |
            콜백
      return:
        type:
          - Promise<Models.TextModerationScreenTextResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.constructor'
    name: TextModeration(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: TextModeration를 만듭니다.
    syntax:
      content: 'new TextModeration(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.DetectedLanguage>
    name: DetectedLanguage>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectedLanguage
        fullName: DetectedLanguage
        uid: '@azure/cognitiveservices-contentmoderator.DetectedLanguage'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Screen>
    name: Screen>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Screen
        fullName: Screen
        uid: '@azure/cognitiveservices-contentmoderator.Screen'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModerationScreenTextOptionalParams'
    name: TextModerationScreenTextOptionalParams
    spec.typeScript:
      - name: TextModerationScreenTextOptionalParams
        fullName: TextModerationScreenTextOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.TextModerationScreenTextOptionalParams'