### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-commerce.RateCard'
    name: RateCard
    fullName: RateCard
    children:
      - '@azure/arm-commerce.RateCard.get'
      - '@azure/arm-commerce.RateCard.get_2'
      - '@azure/arm-commerce.RateCard.get_1'
      - '@azure/arm-commerce.RateCard.constructor'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="e68b2-101">RateCard를 나타내는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-101">Class representing a RateCard.</span></span>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e68b2-102">리소스/미터 메타 데이터 및 제품 ID, 통화, 로캘 및 지역에서 지정된 된 구독에서 사용 하는 관련 된 가격에 대 한 쿼리 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-102">Enables you to query for the resource/meter metadata and related prices used in a given subscription by Offer ID, Currency, Locale and Region.</span></span> <span data-ttu-id="e68b2-103">메타 데이터를 포함 하 여 요금 청구 기준에 연관 이지만 서비스 이름으로 제한 되지 않는, 형식, 리소스, 측정값 및 지역 단위 언제 든 예 고 없이 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-103">The metadata associated with the billing meters, including but not limited to service names, types, resources, units of measure, and regions, is subject to change at any time and without notice.</span></span> <span data-ttu-id="e68b2-104">자동화 된 방식으로이 청구 데이터를 사용 하려는 경우 각 청구 가능 항목을 고유 하 게 식별 하는 청구 측정기 GUID를 사용 하십시오.</span><span class="sxs-lookup"><span data-stu-id="e68b2-104">If you intend to use this billing data in an automated fashion, please use the billing meter GUID to uniquely identify each billable item.</span></span> <span data-ttu-id="e68b2-105">청구 측정기 GUID를 새 청구 모델을 변경 하려면 일정을 변경 하기 전에 알려드립니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-105">If the billing meter GUID is scheduled to change due to a new billing model, you will be notified in advance of the change.</span></span>'
    syntax:
      content: 'function get(filter: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="e68b2-106">작업에 적용할 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-106">The filter to apply on the operation.</span></span> <span data-ttu-id="e68b2-107">''Eq''만 지원 하 고 지금은 ''및'' 논리 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-107">It ONLY supports the ''eq'' and ''and'' logical operators at this time.</span></span> <span data-ttu-id="e68b2-108">모든 4 개의 쿼리 매개 변수 ''OfferDurableId'', ''통화'', ''로캘'', ''Region''는 $filter의 일부가 될 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-108">All the 4 query parameters ''OfferDurableId'',  ''Currency'', ''Locale'', ''Region'' are required to be a part of the $filter.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<ResourceRateCardInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(filter: string, options: RequestOptionsBase, callback: ServiceCallback<ResourceRateCardInfo>)'
      parameters:
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="e68b2-109">작업에 적용할 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-109">The filter to apply on the operation.</span></span> <span data-ttu-id="e68b2-110">''Eq''만 지원 하 고 지금은 ''및'' 논리 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-110">It ONLY supports the ''eq'' and ''and'' logical operators at this time.</span></span> <span data-ttu-id="e68b2-111">모든 4 개의 쿼리 매개 변수 ''OfferDurableId'', ''통화'', ''로캘'', ''Region''는 $filter의 일부가 될 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-111">All the 4 query parameters ''OfferDurableId'',  ''Currency'', ''Locale'', ''Region'' are required to be a part of the $filter.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e68b2-112">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="e68b2-112">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
          description: |
            <span data-ttu-id="e68b2-113">콜백</span><span class="sxs-lookup"><span data-stu-id="e68b2-113">The callback</span></span>
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get_1'
    name: 'get(string, ServiceCallback<ResourceRateCardInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(filter: string, callback: ServiceCallback<ResourceRateCardInfo>)'
      parameters:
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="e68b2-114">작업에 적용할 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-114">The filter to apply on the operation.</span></span> <span data-ttu-id="e68b2-115">''Eq''만 지원 하 고 지금은 ''및'' 논리 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-115">It ONLY supports the ''eq'' and ''and'' logical operators at this time.</span></span> <span data-ttu-id="e68b2-116">모든 4 개의 쿼리 매개 변수 ''OfferDurableId'', ''통화'', ''로캘'', ''Region''는 $filter의 일부가 될 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-116">All the 4 query parameters ''OfferDurableId'',  ''Currency'', ''Locale'', ''Region'' are required to be a part of the $filter.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
          description: |
            <span data-ttu-id="e68b2-117">콜백</span><span class="sxs-lookup"><span data-stu-id="e68b2-117">The callback</span></span>
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.constructor'
    name: RateCard(UsageManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="e68b2-118">RateCard를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-118">Create a RateCard.</span></span>
    syntax:
      content: 'new RateCard(client: UsageManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-commerce.UsageManagementClientContext'
          description: |
            <span data-ttu-id="e68b2-119">서비스 클라이언트에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="e68b2-119">Reference to the service client.</span></span>
    package: '@azure/arm-commerce'
references:
  - uid: '@azure/arm-commerce.UsageManagementClientContext'
    name: UsageManagementClientContext
    spec.typeScript:
      - name: UsageManagementClientContext
        fullName: UsageManagementClientContext
        uid: '@azure/arm-commerce.UsageManagementClientContext'
  - uid: ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
    name: ResourceRateCardInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceRateCardInfo
        fullName: ResourceRateCardInfo
        uid: '@azure/arm-commerce.ResourceRateCardInfo'
      - name: '>'
        fullName: '>'