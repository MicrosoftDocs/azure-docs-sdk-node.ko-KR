### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext'
    name: LocalSearchClientContext
    fullName: LocalSearchClientContext
    children:
      - '@azure/cognitiveservices-localsearch.LocalSearchClientContext.credentials'
      - '@azure/cognitiveservices-localsearch.LocalSearchClientContext.constructor'
      - '@azure/cognitiveservices-localsearch.LocalSearchClientContext.sendOperationRequest'
      - '@azure/cognitiveservices-localsearch.LocalSearchClientContext.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: '@azure/cognitiveservices-localsearch'
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-localsearch'
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext.constructor'
    name: 'LocalSearchClientContext(ServiceClientCredentials, Models.LocalSearchClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: LocalSearchClientContext 클래스의 새 인스턴스를 초기화합니다.
    syntax:
      content: 'new LocalSearchClientContext(credentials: ServiceClientCredentials, options?: Models.LocalSearchClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: 클라이언트 구독을 고유 하 게 식별 하는 구독 자격 증명입니다.
        - id: options
          type:
            - Models.LocalSearchClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-localsearch'
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공 된 OperationSpec를 사용 하 여 채워지는 HTTP 요청을 보냅니다.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: HTTP 요청의 템플릿 값에서 채워집니다는 인수입니다.
        - id: operationSpec
          type:
            - OperationSpec
          description: Http 요청을 채우는 데 사용할 OperationSpec 합니다.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            응답을 받을 때 호출할 콜백.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-localsearch'
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공 된 http 요청을 보냅니다.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-localsearch'