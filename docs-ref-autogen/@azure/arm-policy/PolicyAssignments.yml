### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-policy.PolicyAssignments'
    name: PolicyAssignments
    fullName: PolicyAssignments
    children:
      - '@azure/arm-policy.PolicyAssignments.create'
      - '@azure/arm-policy.PolicyAssignments.create_2'
      - '@azure/arm-policy.PolicyAssignments.create_1'
      - '@azure/arm-policy.PolicyAssignments.createById'
      - '@azure/arm-policy.PolicyAssignments.createById_2'
      - '@azure/arm-policy.PolicyAssignments.createById_1'
      - '@azure/arm-policy.PolicyAssignments.deleteById'
      - '@azure/arm-policy.PolicyAssignments.deleteById_2'
      - '@azure/arm-policy.PolicyAssignments.deleteById_1'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod_2'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod_1'
      - '@azure/arm-policy.PolicyAssignments.get'
      - '@azure/arm-policy.PolicyAssignments.get_2'
      - '@azure/arm-policy.PolicyAssignments.get_1'
      - '@azure/arm-policy.PolicyAssignments.getById'
      - '@azure/arm-policy.PolicyAssignments.getById_2'
      - '@azure/arm-policy.PolicyAssignments.getById_1'
      - '@azure/arm-policy.PolicyAssignments.list'
      - '@azure/arm-policy.PolicyAssignments.list_2'
      - '@azure/arm-policy.PolicyAssignments.list_1'
      - '@azure/arm-policy.PolicyAssignments.listForResource'
      - '@azure/arm-policy.PolicyAssignments.listForResource_2'
      - '@azure/arm-policy.PolicyAssignments.listForResource_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext_1'
      - '@azure/arm-policy.PolicyAssignments.listNext'
      - '@azure/arm-policy.PolicyAssignments.listNext_2'
      - '@azure/arm-policy.PolicyAssignments.listNext_1'
      - '@azure/arm-policy.PolicyAssignments.constructor'
    langs:
      - typeScript
    type: class
    summary: PolicyAssignments 나타내는 클래스입니다.
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create'
    name: 'create(string, string, PolicyAssignment, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 작업 만들거나 지정 된 범위 및 이름을 사용 하 여 정책 할당을 업데이트 합니다. 정책 할당의 범위 내에 포함 된 모든 리소스에 적용 됩니다. 예를 들어, 리소스 그룹 범위에서 정책에 할당 하면 해당 정책 그룹의 모든 리소스에 적용 됩니다.'
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 정책 할당의 이름입니다.
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: 정책 할당에 대 한 매개 변수입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create_2'
    name: 'create(string, string, PolicyAssignment, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 정책 할당의 이름입니다.
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: 정책 할당에 대 한 매개 변수입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create_1'
    name: 'create(string, string, PolicyAssignment, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 정책 할당의 이름입니다.
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: 정책 할당에 대 한 매개 변수입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById'
    name: 'createById(string, PolicyAssignment, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 작업을 만들거나 지정된 된 ID를 사용 하 여 정책 할당 업데이트 정책 할당 범위에 대 한 해당 범위에 포함 된 모든 리소스에 적용 됩니다. 예를 들어 정책을 리소스 그룹에 할당할 경우 해당 정책을 적용할 그룹의 모든 리소스입니다. 정책 할당 Id에이 형식: ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}''.'
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '만들기 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: 정책 할당에 대 한 매개 변수입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById_2'
    name: 'createById(string, PolicyAssignment, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '만들기 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: 정책 할당에 대 한 매개 변수입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById_1'
    name: 'createById(string, PolicyAssignment, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '만들기 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: 정책 할당에 대 한 매개 변수입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById'
    name: 'deleteById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 작업에 지정된 된 ID 사용 하 여 정책을 삭제합니다. 정책 할당 Id에이 형식: ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''. {Scope}에 대 한 유효한 형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}'' (management group), '' / {subscriptionId}'' (구독), '' / {subscriptionId} /resourceGroups/ { resourceGroupName}'' (리소스 그룹) 또는 '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'' (리소스).'
    syntax:
      content: 'function deleteById(policyAssignmentId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '삭제 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById_2'
    name: 'deleteById(string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteById(policyAssignmentId: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '삭제 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById_1'
    name: 'deleteById(string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteById(policyAssignmentId: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '삭제 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 작업에 지정 된 이름과 범위에서 만든 정책 할당을 삭제 합니다. 정책 할당의 범위는 해당 ID 앞 부분 '' / providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.'
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 삭제 정책 할당의 이름입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 삭제 정책 할당의 이름입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 삭제 정책 할당의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 작업에 지정 된 이름과 범위에서 만들어진 단일 정책 할당을 검색 합니다.
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 가져올 정책 할당의 이름입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 가져올 정책 할당의 이름입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get_1'
    name: 'get(string, string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '정책 할당의 범위입니다. 유효한 범위는: 관리 그룹 (형식: '' / providers/Microsoft.Management/managementGroups/{managementGroup}''), 구독 (형식: '' / {subscriptionId}''), 리소스 그룹 (형식: '' / {subscriptionId} / resourceGroups / {resourceGroupName}'', 또는 리소스 (형식: '' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'''
        - id: policyAssignmentName
          type:
            - string
          description: 가져올 정책 할당의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById'
    name: 'getById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 ID 사용 하 여 정책 할당을 검색 하는 작업 정책 할당 Id에이 형식: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
      유효한 범위는: 관리 그룹 (형식: ' / providers/Microsoft.Management/managementGroups/{managementGroup}'), 구독 (형식: ' / {subscriptionId}'), 리소스 그룹 (형식: ' / {subscriptionId} / resourceGroups / {resourceGroupName}', 또는 리소스 (형식: ' / {subscriptionId} {resourceGroupName} /resourceGroups/ /providers/ {resourceProviderNamespace} / [{parentResourcePath} /] {resourceType} / {resourceName}'.
    syntax:
      content: 'function getById(policyAssignmentId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '가져올 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById_2'
    name: 'getById(string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getById(policyAssignmentId: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '가져올 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById_1'
    name: 'getById(string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getById(policyAssignmentId: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '가져올 정책 할당의 ID입니다. ''{Scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'' 형식을 사용 합니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list'
    name: list(Models.PolicyAssignmentsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 작업에는 모든 정책 할당의 지정 된 구독과 연결 된 선택적 $filter 지정 된 일치 하는 목록을 검색 합니다. $Filter에 대 한 유효한 값은: ''atscope ()'' 또는 '' policyDefinitionId eq '' {value} ''입니다. 직접 적용 되는 포함 하 여 구독과 연결 된 모든 정책 할당을 포함 하는 필터링 되지 않은 목록 또는에 포함 된 개체에 적용과로 지정된 된 구독을 포함 하는 관리 그룹에서 $filter 제공 되지 않은 경우 구독입니다. $Filter=atScope() 제공 된 경우 반환된 된 목록 필터링 되지 않은 목록의 구독 내에 포함 된 개체에 적용할 항목을 제외한 모든 문자는 구독에 적용 되는 모든 정책 할당을 포함 합니다. 경우 $filter = policyDefinitionId eq ''{value}가 제공 하는, 반환 된 목록에는 구독에 적용 하 고 id가 {value} 정책 정의 할당 하는 정책 할당만 포함 됩니다.'
    syntax:
      content: 'function list(options?: Models.PolicyAssignmentsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.PolicyAssignmentsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list_2'
    name: 'list(PolicyAssignmentsListOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: PolicyAssignmentsListOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list_1'
    name: list(ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource'
    name: 'listForResource(string, string, string, string, string, Models.PolicyAssignmentsListForResourceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 작업에는 모든 정책 할당의 지정 된 리소스 그룹 및 구독에 지정된 된 리소스와 연결 된 선택적 $filter 지정 된 일치 하는 목록을 검색 합니다.
      $Filter에 대 한 유효한 값은: 'atscope ()' 또는 ' policyDefinitionId eq ' {value} '입니다. $Filter 제공 하지 않으면 리소스 내에 포함 된 리소스에도 마찬가지로 적용으로 모든 포함 하는 범위 또는 직접 적용 되는 포함 리소스와 연결 된 모든 정책 할당 필터링 되지 않은 목록에 포함 됩니다. $Filter=atScope() 제공 하는 경우 반환된 된 목록에 있는 리소스에 포함 된 리소스에 적용할 항목을 제외한 필터링 되지 않은 목록의 모든 항목의 리소스에 적용 되는 모든 정책 할당 포함 됩니다. 경우 $filter = policyDefinitionId eq '{value}가 제공 하는, 반환 된 목록에는 리소스에 적용 하 고 id가 {value} 정책 정의 할당 하는 정책 할당만 포함 됩니다.
      리소스 이름과 세 개의 매개 변수는 특정 리소스를 식별 하는 데 사용 됩니다. 부모 리소스 경로 제공 하지 않은 리소스는 부모 리소스 (대부분의 경우)의 일부를 없는 경우 (또는으로 제공 된 '). 웹 앱으로 예를 들어 지정할 수 있습니다 ({resourceProviderNamespace} {parentResourcePath} ' Microsoft.Web' = = = = ', {resourceType} {resourceName} ' 사이트' = = 'MyWebApp' = =) 합니다. 리소스 부모 리소스의 일부 이면 모든 매개 변수가 제공 되어야 합니다. 가상 컴퓨터 DNS 이름으로 예를 들어 지정할 수 있습니다 ({resourceProviderNamespace} {parentResourcePath} ' Microsoft.Compute' = = ' virtualMachines/MyVirtualMachine ', {resourceType} = = {resourceName} ' domainNames' = = 'MyComputerName' = =) 합니다. 개별적으로 네임 스페이스 및 형식 이름을 제공 하는 편리한 대체 방법 모두 {resourceType} 매개 변수를 제공, 서식을 지정 하는 것: ({resourceProviderNamespace} = = ', {parentResourcePath} = = ', {resourceType} ' microsoft.web/sites', {= = resourceName} 'MyWebApp' = =) 합니다.
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: Models.PolicyAssignmentsListForResourceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스를 포함 하는 리소스 그룹의 이름입니다.
        - id: resourceProviderNamespace
          type:
            - string
          description: 리소스 공급자의 네임 스페이스입니다. 예를 들어 가상 컴퓨터의 네임 스페이스는 Microsoft.Compute (microsoft.compute/virtualmachines)에서
        - id: parentResourcePath
          type:
            - string
          description: 부모 리소스 경로입니다. 없는 경우 빈 문자열을 사용 합니다.
        - id: resourceType
          type:
            - string
          description: 리소스 형식 이름입니다. 예를 들어 웹 앱의 형식 이름 '사이트' microsoft.web/sites) (의 경우
        - id: resourceName
          type:
            - string
          description: 리소스의 이름입니다.
        - id: options
          type:
            - Models.PolicyAssignmentsListForResourceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource_2'
    name: 'listForResource(string, string, string, string, string, PolicyAssignmentsListForResourceOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options: PolicyAssignmentsListForResourceOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스를 포함 하는 리소스 그룹의 이름입니다.
        - id: resourceProviderNamespace
          type:
            - string
          description: 리소스 공급자의 네임 스페이스입니다. 예를 들어 가상 컴퓨터의 네임 스페이스는 Microsoft.Compute (microsoft.compute/virtualmachines)에서
        - id: parentResourcePath
          type:
            - string
          description: 부모 리소스 경로입니다. 없는 경우 빈 문자열을 사용 합니다.
        - id: resourceType
          type:
            - string
          description: 리소스 형식 이름입니다. 예를 들어 웹 앱의 형식 이름 '사이트' microsoft.web/sites) (의 경우
        - id: resourceName
          type:
            - string
          description: 리소스의 이름입니다.
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource_1'
    name: 'listForResource(string, string, string, string, string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스를 포함 하는 리소스 그룹의 이름입니다.
        - id: resourceProviderNamespace
          type:
            - string
          description: 리소스 공급자의 네임 스페이스입니다. 예를 들어 가상 컴퓨터의 네임 스페이스는 Microsoft.Compute (microsoft.compute/virtualmachines)에서
        - id: parentResourcePath
          type:
            - string
          description: 부모 리소스 경로입니다. 없는 경우 빈 문자열을 사용 합니다.
        - id: resourceType
          type:
            - string
          description: 리소스 형식 이름입니다. 예를 들어 웹 앱의 형식 이름 '사이트' microsoft.web/sites) (의 경우
        - id: resourceName
          type:
            - string
          description: 리소스의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup'
    name: 'listForResourceGroup(string, Models.PolicyAssignmentsListForResourceGroupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 작업에는 모든 정책 할당의 지정된 된 구독에서 지정 된 리소스 그룹과 연결 된 선택적 $filter 지정 된 일치 하는 목록을 검색 합니다. $Filter에 대 한 유효한 값은: ''atscope ()'' 또는 '' policyDefinitionId eq '' {value} ''입니다. $Filter 제공 하지 않으면 필터링 되지 않은 목록에 직접 적용 하거나 포함 하는 리소스 그룹 내에 포함 된 리소스에도 마찬가지로 적용으로 범위에서 적용을 포함 하는 리소스 그룹과 관련 된 모든 정책 할당 포함 됩니다. $Filter=atScope()를 제공 하는 경우 반환된 된 목록에는 리소스 그룹을 제외 하 고 리소스 그룹에 포함 된 리소스에 적용 된 필터링 되지 않은 목록의 모든 항목에 적용 되는 모든 정책 할당 포함 됩니다. 경우 $filter = policyDefinitionId eq ''{value}가 제공 하는, 반환 된 목록에 리소스 그룹에 적용 하 고 id가 {value} 정책 정의 할당 하는 정책 할당만 포함 됩니다.'
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, options?: Models.PolicyAssignmentsListForResourceGroupOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 정책 할당을 포함 하는 리소스 그룹의 이름입니다.
        - id: options
          type:
            - Models.PolicyAssignmentsListForResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup_2'
    name: 'listForResourceGroup(string, PolicyAssignmentsListForResourceGroupOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, options: PolicyAssignmentsListForResourceGroupOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 정책 할당을 포함 하는 리소스 그룹의 이름입니다.
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup_1'
    name: 'listForResourceGroup(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 정책 할당을 포함 하는 리소스 그룹의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext'
    name: 'listForResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 작업에는 모든 정책 할당의 지정된 된 구독에서 지정 된 리소스 그룹과 연결 된 선택적 $filter 지정 된 일치 하는 목록을 검색 합니다. $Filter에 대 한 유효한 값은: ''atscope ()'' 또는 '' policyDefinitionId eq '' {value} ''입니다. $Filter 제공 하지 않으면 필터링 되지 않은 목록에 직접 적용 하거나 포함 하는 리소스 그룹 내에 포함 된 리소스에도 마찬가지로 적용으로 범위에서 적용을 포함 하는 리소스 그룹과 관련 된 모든 정책 할당 포함 됩니다. $Filter=atScope()를 제공 하는 경우 반환된 된 목록에는 리소스 그룹을 제외 하 고 리소스 그룹에 포함 된 리소스에 적용 된 필터링 되지 않은 목록의 모든 항목에 적용 되는 모든 정책 할당 포함 됩니다. 경우 $filter = policyDefinitionId eq ''{value}가 제공 하는, 반환 된 목록에 리소스 그룹에 적용 하 고 id가 {value} 정책 정의 할당 하는 정책 할당만 포함 됩니다.'
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_2'
    name: 'listForResourceGroupNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_1'
    name: 'listForResourceGroupNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext'
    name: 'listForResourceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 작업에는 모든 정책 할당의 지정 된 리소스 그룹 및 구독에 지정된 된 리소스와 연결 된 선택적 $filter 지정 된 일치 하는 목록을 검색 합니다.
      $Filter에 대 한 유효한 값은: 'atscope ()' 또는 ' policyDefinitionId eq ' {value} '입니다. $Filter 제공 하지 않으면 리소스 내에 포함 된 리소스에도 마찬가지로 적용으로 모든 포함 하는 범위 또는 직접 적용 되는 포함 리소스와 연결 된 모든 정책 할당 필터링 되지 않은 목록에 포함 됩니다. $Filter=atScope() 제공 하는 경우 반환된 된 목록에 있는 리소스에 포함 된 리소스에 적용할 항목을 제외한 필터링 되지 않은 목록의 모든 항목의 리소스에 적용 되는 모든 정책 할당 포함 됩니다. 경우 $filter = policyDefinitionId eq '{value}가 제공 하는, 반환 된 목록에는 리소스에 적용 하 고 id가 {value} 정책 정의 할당 하는 정책 할당만 포함 됩니다.
      리소스 이름과 세 개의 매개 변수는 특정 리소스를 식별 하는 데 사용 됩니다. 부모 리소스 경로 제공 하지 않은 리소스는 부모 리소스 (대부분의 경우)의 일부를 없는 경우 (또는으로 제공 된 '). 웹 앱으로 예를 들어 지정할 수 있습니다 ({resourceProviderNamespace} {parentResourcePath} ' Microsoft.Web' = = = = ', {resourceType} {resourceName} ' 사이트' = = 'MyWebApp' = =) 합니다. 리소스 부모 리소스의 일부 이면 모든 매개 변수가 제공 되어야 합니다. 가상 컴퓨터 DNS 이름으로 예를 들어 지정할 수 있습니다 ({resourceProviderNamespace} {parentResourcePath} ' Microsoft.Compute' = = ' virtualMachines/MyVirtualMachine ', {resourceType} = = {resourceName} ' domainNames' = = 'MyComputerName' = =) 합니다. 개별적으로 네임 스페이스 및 형식 이름을 제공 하는 편리한 대체 방법 모두 {resourceType} 매개 변수를 제공, 서식을 지정 하는 것: ({resourceProviderNamespace} = = ', {parentResourcePath} = = ', {resourceType} ' microsoft.web/sites', {= = resourceName} 'MyWebApp' = =) 합니다.
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext_2'
    name: 'listForResourceNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext_1'
    name: 'listForResourceNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 작업에는 모든 정책 할당의 지정 된 구독과 연결 된 선택적 $filter 지정 된 일치 하는 목록을 검색 합니다. $Filter에 대 한 유효한 값은: ''atscope ()'' 또는 '' policyDefinitionId eq '' {value} ''입니다. 직접 적용 되는 포함 하 여 구독과 연결 된 모든 정책 할당을 포함 하는 필터링 되지 않은 목록 또는에 포함 된 개체에 적용과로 지정된 된 구독을 포함 하는 관리 그룹에서 $filter 제공 되지 않은 경우 구독입니다. $Filter=atScope() 제공 된 경우 반환된 된 목록 필터링 되지 않은 목록의 구독 내에 포함 된 개체에 적용할 항목을 제외한 모든 문자는 구독에 적용 되는 모든 정책 할당을 포함 합니다. 경우 $filter = policyDefinitionId eq ''{value}가 제공 하는, 반환 된 목록에는 구독에 적용 하 고 id가 {value} 정책 정의 할당 하는 정책 할당만 포함 됩니다.'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext_1'
    name: 'listNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.constructor'
    name: PolicyAssignments(PolicyClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: PolicyAssignments를 만듭니다.
    syntax:
      content: 'new PolicyAssignments(client: PolicyClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-policy.PolicyClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/arm-policy'
references:
  - uid: '@azure/arm-policy.PolicyClientContext'
    name: PolicyClientContext
    spec.typeScript:
      - name: PolicyClientContext
        fullName: PolicyClientContext
        uid: '@azure/arm-policy.PolicyClientContext'
  - uid: '@azure/arm-policy.PolicyAssignment'
    name: PolicyAssignment
    spec.typeScript:
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: '@azure/arm-policy.PolicyAssignment'
  - uid: ServiceCallback<@azure/arm-policy.PolicyAssignment>
    name: PolicyAssignment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: '@azure/arm-policy.PolicyAssignment'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
    name: PolicyAssignmentListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyAssignmentListResult
        fullName: PolicyAssignmentListResult
        uid: '@azure/arm-policy.PolicyAssignmentListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
    name: PolicyAssignmentsListOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListOptionalParams
        fullName: PolicyAssignmentsListOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
  - uid: '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
    name: PolicyAssignmentsListForResourceOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListForResourceOptionalParams
        fullName: PolicyAssignmentsListForResourceOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
  - uid: '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'
    name: PolicyAssignmentsListForResourceGroupOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListForResourceGroupOptionalParams
        fullName: PolicyAssignmentsListForResourceGroupOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'