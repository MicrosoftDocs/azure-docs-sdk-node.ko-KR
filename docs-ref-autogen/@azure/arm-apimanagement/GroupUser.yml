### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.GroupUser'
    name: GroupUser
    fullName: GroupUser
    children:
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists'
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists_2'
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists_1'
      - '@azure/arm-apimanagement.GroupUser.create'
      - '@azure/arm-apimanagement.GroupUser.create_2'
      - '@azure/arm-apimanagement.GroupUser.create_1'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod_2'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod_1'
      - '@azure/arm-apimanagement.GroupUser.constructor'
      - '@azure/arm-apimanagement.GroupUser.list_2'
      - '@azure/arm-apimanagement.GroupUser.list'
      - '@azure/arm-apimanagement.GroupUser.list_1'
      - '@azure/arm-apimanagement.GroupUser.listNext'
      - '@azure/arm-apimanagement.GroupUser.listNext_2'
      - '@azure/arm-apimanagement.GroupUser.listNext_1'
    langs:
      - typeScript
    type: class
    summary: GroupUser 나타내는 클래스입니다.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists'
    name: 'checkEntityExists(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 식별자로 지정 하는 사용자 엔터티는 그룹 엔터티에와 연결 되었는지 확인 합니다.
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists_2'
    name: 'checkEntityExists(string, string, string, string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options: RequestOptionsBase, callback: ServiceCallback<boolean>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GroupUserCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists_1'
    name: 'checkEntityExists(string, string, string, string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, groupId: string, userId: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GroupUserCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create'
    name: 'create(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 기존 그룹에 기존 사용자를 추가합니다.
    syntax:
      content: 'function create(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create_2'
    name: 'create(string, string, string, string, RequestOptionsBase, ServiceCallback<UserContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options: RequestOptionsBase, callback: ServiceCallback<UserContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserContract>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GroupUserCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create_1'
    name: 'create(string, string, string, string, ServiceCallback<UserContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(resourceGroupName: string, serviceName: string, groupId: string, userId: string, callback: ServiceCallback<UserContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserContract>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GroupUserCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 기존 그룹에서 기존 사용자를 제거 합니다.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, groupId: string, userId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: userId
          type:
            - string
          description: 사용자 식별자 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.constructor'
    name: GroupUser(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: GroupUser를 만듭니다.
    syntax:
      content: 'new GroupUser(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list_2'
    name: 'list(string, string, string, GroupUserListOptionalParams, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, serviceName: string, groupId: string, options: GroupUserListOptionalParams, callback: ServiceCallback<UserCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - '@azure/arm-apimanagement.GroupUserListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GroupUserListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list'
    name: 'list(string, string, string, Models.GroupUserListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 그룹과 연결 된 사용자 엔터티 컬렉션을 나열 합니다.
    syntax:
      content: 'function list(resourceGroupName: string, serviceName: string, groupId: string, options?: Models.GroupUserListOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - Models.GroupUserListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list_1'
    name: 'list(string, string, string, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, serviceName: string, groupId: string, callback: ServiceCallback<UserCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: groupId
          type:
            - string
          description: 그룹 식별자입니다. 현재 API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GroupUserListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 그룹과 연결 된 사용자 엔터티 컬렉션을 나열 합니다.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserListNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<UserCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GroupUserListNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext_1'
    name: 'listNext(string, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<UserCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GroupUserListNextResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.UserContract>
    name: UserContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserContract
        fullName: UserContract
        uid: '@azure/arm-apimanagement.UserContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.UserCollection>
    name: UserCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserCollection
        fullName: UserCollection
        uid: '@azure/arm-apimanagement.UserCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.GroupUserListOptionalParams'
    name: GroupUserListOptionalParams
    spec.typeScript:
      - name: GroupUserListOptionalParams
        fullName: GroupUserListOptionalParams
        uid: '@azure/arm-apimanagement.GroupUserListOptionalParams'