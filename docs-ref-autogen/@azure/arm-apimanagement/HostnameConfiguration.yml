### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.HostnameConfiguration'
    name: HostnameConfiguration
    fullName: HostnameConfiguration
    children:
      - '@azure/arm-apimanagement.HostnameConfiguration.certificate'
      - '@azure/arm-apimanagement.HostnameConfiguration.certificatePassword'
      - '@azure/arm-apimanagement.HostnameConfiguration.defaultSslBinding'
      - '@azure/arm-apimanagement.HostnameConfiguration.encodedCertificate'
      - '@azure/arm-apimanagement.HostnameConfiguration.hostName'
      - '@azure/arm-apimanagement.HostnameConfiguration.keyVaultId'
      - '@azure/arm-apimanagement.HostnameConfiguration.negotiateClientCertificate'
      - '@azure/arm-apimanagement.HostnameConfiguration.type'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="dad1d-101">사용자 지정 호스트 이름 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-101">Custom hostname configuration.</span></span>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.HostnameConfiguration.certificate'
    name: certificate
    fullName: certificate
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="dad1d-102">인증서 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-102">Certificate information.</span></span>
    optional: true
    syntax:
      content: 'certificate?: CertificateInformation'
      return:
        type:
          - '@azure/arm-apimanagement.CertificateInformation'
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.HostnameConfiguration.certificatePassword'
    name: certificatePassword
    fullName: certificatePassword
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="dad1d-103">인증서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-103">Certificate Password.</span></span>
    optional: true
    syntax:
      content: 'certificatePassword?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.HostnameConfiguration.defaultSslBinding'
    name: defaultSslBinding
    fullName: defaultSslBinding
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="dad1d-104">기본 SSL 인증서로이 호스트와 연결 된 인증서를 설치 하려면 true를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-104">Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate.</span></span> <span data-ttu-id="dad1d-105">클라이언트에서 SNI 헤더를 보내지 않으면, 다음 됩니다는 문제가 발생할 수 있는 인증서.</span><span class="sxs-lookup"><span data-stu-id="dad1d-105">If a client does not send the SNI header, then this will be the certificate that will be challenged.</span></span> <span data-ttu-id="dad1d-106">속성은 서비스에 사용 하도록 설정 하는 여러 사용자 지정 호스트 이름 및 기본 ssl 인증서를 결정 해야 하는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-106">The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate.</span></span> <span data-ttu-id="dad1d-107">프록시 호스트 이름 형식에만 적용 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-107">The setting only applied to Proxy Hostname Type.</span></span> <span data-ttu-id="dad1d-108">기본값: false.</span><span class="sxs-lookup"><span data-stu-id="dad1d-108">Default value: false.</span></span>'
    optional: true
    syntax:
      content: 'defaultSslBinding?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.HostnameConfiguration.encodedCertificate'
    name: encodedCertificate
    fullName: encodedCertificate
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="dad1d-109">Base64로 인코딩된 인증서입니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-109">Base64 Encoded certificate.</span></span>
    optional: true
    syntax:
      content: 'encodedCertificate?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.HostnameConfiguration.hostName'
    name: hostName
    fullName: hostName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="dad1d-110">Api Management 서비스에서 구성 하는 호스트 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-110">Hostname to configure on the Api Management service.</span></span>
    syntax:
      content: 'hostName: string'
      return:
        type:
          - string
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.HostnameConfiguration.keyVaultId'
    name: keyVaultId
    fullName: keyVaultId
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="dad1d-111">Ssl 인증서가 포함 된 KeyVault 비밀 Url입니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-111">Url to the KeyVault Secret containing the Ssl Certificate.</span></span> <span data-ttu-id="dad1d-112">절대 Url 포함 된 버전을 제공 하는 경우에 ssl 인증서의 자동 업데이트 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-112">If absolute Url containing version is provided, auto-update of ssl certificate will not work.</span></span> <span data-ttu-id="dad1d-113">이렇게 하려면 Api Management 서비스를 MSI를 사용 하 여 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-113">This requires Api Management service to be configured with MSI.</span></span> <span data-ttu-id="dad1d-114">암호 형식 이어야 *application/x-pkcs12*</span><span class="sxs-lookup"><span data-stu-id="dad1d-114">The secret should be of type *application/x-pkcs12*</span></span>'
    optional: true
    syntax:
      content: 'keyVaultId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.HostnameConfiguration.negotiateClientCertificate'
    name: negotiateClientCertificate
    fullName: negotiateClientCertificate
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="dad1d-115">항상 호스트에서 클라이언트 인증서를 협상 하려면 true를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-115">Specify true to always negotiate client certificate on the hostname.</span></span> <span data-ttu-id="dad1d-116">기본값은 false입니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-116">Default Value is false.</span></span>
      <span data-ttu-id="dad1d-117">기본값: false.</span><span class="sxs-lookup"><span data-stu-id="dad1d-117">Default value: false.</span></span>
    optional: true
    syntax:
      content: 'negotiateClientCertificate?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.HostnameConfiguration.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="dad1d-118">호스트 이름 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="dad1d-118">Hostname type.</span></span> <span data-ttu-id="dad1d-119">가능한 값은 다음과 같습니다. ''Proxy'', ''Portal'', ''Management'', ''Scm'', ''DeveloperPortal''</span><span class="sxs-lookup"><span data-stu-id="dad1d-119">Possible values include: ''Proxy'', ''Portal'', ''Management'', ''Scm'', ''DeveloperPortal''</span></span>'
    syntax:
      content: 'type: HostnameType'
      return:
        type:
          - '@azure/arm-apimanagement.HostnameType'
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.CertificateInformation'
    name: CertificateInformation
    spec.typeScript:
      - name: CertificateInformation
        fullName: CertificateInformation
        uid: '@azure/arm-apimanagement.CertificateInformation'
  - uid: '@azure/arm-apimanagement.HostnameType'
    name: HostnameType
    spec.typeScript:
      - name: HostnameType
        fullName: HostnameType
        uid: '@azure/arm-apimanagement.HostnameType'