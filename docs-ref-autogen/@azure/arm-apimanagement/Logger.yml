### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Logger'
    name: Logger
    fullName: Logger
    children:
      - '@azure/arm-apimanagement.Logger.createOrUpdate_2'
      - '@azure/arm-apimanagement.Logger.createOrUpdate'
      - '@azure/arm-apimanagement.Logger.createOrUpdate_1'
      - '@azure/arm-apimanagement.Logger.deleteMethod_2'
      - '@azure/arm-apimanagement.Logger.deleteMethod'
      - '@azure/arm-apimanagement.Logger.deleteMethod_1'
      - '@azure/arm-apimanagement.Logger.get'
      - '@azure/arm-apimanagement.Logger.get_2'
      - '@azure/arm-apimanagement.Logger.get_1'
      - '@azure/arm-apimanagement.Logger.getEntityTag'
      - '@azure/arm-apimanagement.Logger.getEntityTag_2'
      - '@azure/arm-apimanagement.Logger.getEntityTag_1'
      - '@azure/arm-apimanagement.Logger.listByService_2'
      - '@azure/arm-apimanagement.Logger.listByService'
      - '@azure/arm-apimanagement.Logger.listByService_1'
      - '@azure/arm-apimanagement.Logger.listByServiceNext'
      - '@azure/arm-apimanagement.Logger.listByServiceNext_2'
      - '@azure/arm-apimanagement.Logger.listByServiceNext_1'
      - '@azure/arm-apimanagement.Logger.constructor'
      - '@azure/arm-apimanagement.Logger.update'
      - '@azure/arm-apimanagement.Logger.update_2'
      - '@azure/arm-apimanagement.Logger.update_1'
    langs:
      - typeScript
    type: class
    summary: 로 거를 나타내는 클래스입니다.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate_2'
    name: 'createOrUpdate(string, string, string, LoggerContract, LoggerCreateOrUpdateOptionalParams, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, options: LoggerCreateOrUpdateOptionalParams, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: 매개 변수를 만듭니다.
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate'
    name: 'createOrUpdate(string, string, string, LoggerContract, Models.LoggerCreateOrUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 만들거나로 거를 업데이트 합니다.
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, options?: Models.LoggerCreateOrUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: 매개 변수를 만듭니다.
        - id: options
          type:
            - Models.LoggerCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate_1'
    name: 'createOrUpdate(string, string, string, LoggerContract, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: 매개 변수를 만듭니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, LoggerDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, options: LoggerDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: ifMatch
          type:
            - string
          description: 엔터티의 ETag입니다. ETag에는 GET 요청의 헤더 응답에서 현재 엔터티 상태와 일치 해야 합니다 또는 해야 * 무조건 업데이트에 대 한 합니다.
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod'
    name: 'deleteMethod(string, string, string, string, Models.LoggerDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된로 거를 삭제합니다.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, options?: Models.LoggerDeleteMethodOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: ifMatch
          type:
            - string
          description: 엔터티의 ETag입니다. ETag에는 GET 요청의 헤더 응답에서 현재 엔터티 상태와 일치 해야 합니다 또는 해야 * 무조건 업데이트에 대 한 합니다.
        - id: options
          type:
            - Models.LoggerDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: ifMatch
          type:
            - string
          description: 엔터티의 ETag입니다. ETag에는 GET 요청의 헤더 응답에서 현재 엔터티 상태와 일치 해야 합니다 또는 해야 * 무조건 업데이트에 대 한 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 해당 id에서 지정한로 거 대 한 정보를 가져옵니다.
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, options: RequestOptionsBase, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get_1'
    name: 'get(string, string, string, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag'
    name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 해당 id에서 지정한로 거 엔터티 상태 (Etag) 버전을 가져옵니다.
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag_2'
    name: 'getEntityTag(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag_1'
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService_2'
    name: 'listByService(string, string, LoggerListByServiceOptionalParams, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options: LoggerListByServiceOptionalParams, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService'
    name: 'listByService(string, string, Models.LoggerListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 서비스 인스턴스의 거 컬렉션을 나열합니다.
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Models.LoggerListByServiceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: options
          type:
            - Models.LoggerListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService_1'
    name: 'listByService(string, string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 서비스 인스턴스의 거 컬렉션을 나열합니다.
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext_2'
    name: 'listByServiceNext(string, RequestOptionsBase, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.constructor'
    name: Logger(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 로 거를 만듭니다.
    syntax:
      content: 'new Logger(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update'
    name: 'update(string, string, string, LoggerUpdateContract, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 기존로 거를 업데이트합니다.
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: 매개 변수를 업데이트 합니다.
        - id: ifMatch
          type:
            - string
          description: 엔터티의 ETag입니다. ETag에는 GET 요청의 헤더 응답에서 현재 엔터티 상태와 일치 해야 합니다 또는 해야 * 무조건 업데이트에 대 한 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update_2'
    name: 'update(string, string, string, LoggerUpdateContract, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: 매개 변수를 업데이트 합니다.
        - id: ifMatch
          type:
            - string
          description: 엔터티의 ETag입니다. ETag에는 GET 요청의 헤더 응답에서 현재 엔터티 상태와 일치 해야 합니다 또는 해야 * 무조건 업데이트에 대 한 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update_1'
    name: 'update(string, string, string, LoggerUpdateContract, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: serviceName
          type:
            - string
          description: API Management 서비스의 이름입니다.
        - id: loggerId
          type:
            - string
          description: 로 거 식별자입니다. API Management 서비스 인스턴스에서 고유 해야 합니다.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: 매개 변수를 업데이트 합니다.
        - id: ifMatch
          type:
            - string
          description: 엔터티의 ETag입니다. ETag에는 GET 요청의 헤더 응답에서 현재 엔터티 상태와 일치 해야 합니다 또는 해야 * 무조건 업데이트에 대 한 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.LoggerContract'
    name: LoggerContract
    spec.typeScript:
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerContract>
    name: LoggerContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
    name: LoggerCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: LoggerCreateOrUpdateOptionalParams
        fullName: LoggerCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
  - uid: '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
    name: LoggerDeleteMethodOptionalParams
    spec.typeScript:
      - name: LoggerDeleteMethodOptionalParams
        fullName: LoggerDeleteMethodOptionalParams
        uid: '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
    name: LoggerCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerCollection
        fullName: LoggerCollection
        uid: '@azure/arm-apimanagement.LoggerCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
    name: LoggerListByServiceOptionalParams
    spec.typeScript:
      - name: LoggerListByServiceOptionalParams
        fullName: LoggerListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
  - uid: '@azure/arm-apimanagement.LoggerUpdateContract'
    name: LoggerUpdateContract
    spec.typeScript:
      - name: LoggerUpdateContract
        fullName: LoggerUpdateContract
        uid: '@azure/arm-apimanagement.LoggerUpdateContract'