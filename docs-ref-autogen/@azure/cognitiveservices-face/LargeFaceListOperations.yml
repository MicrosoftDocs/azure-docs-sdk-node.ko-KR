### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations'
    name: LargeFaceListOperations
    fullName: LargeFaceListOperations
    children:
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.constructor'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: LargeFaceListOperations 나타내는 클래스입니다.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, LargeFaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, options: LargeFaceListAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 이미지 스트림입니다.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, Models.LargeFaceListAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정 된 큰 얼굴 목록에 최대 1,000,000 얼굴을 얼굴을 추가 합니다.
      <br /> 이미지를 사용 하 여 처리 하기 위해 여러 명의 얼굴이 포함, 입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정할 수 있습니다. 추가 글꼴을 나타내는 persistedFaceId를 반환 합니다. 이미지가 저장 됩니다. 추출 된 얼굴 기능만 될 때까지 서버에 저장 됩니다 [LargeFaceList 얼굴-삭제](/docs/services/563879b61984550e40cbbe8d/operations/5a158c8ad2de3616c086f2d4) 하거나 [LargeFaceList-삭제](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) 라고 합니다.
      <br /> 생성 된 faceId 참고 persistedFaceId 다릅니다 [얼굴 감지-](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236)합니다.
      * 고품질 얼굴 이미지 인식 정밀도 향상 시키려면을 의미합니다. 고품질 얼굴을 고려 하십시오: 정면, clear, 및 얼굴 크기는 200 또는 큰 x 200 픽셀 (눈 사이의 100 픽셀)입니다.
      * JPEG, PNG, GIF (첫 번째 프레임) 및 BMP 형식이 지원 됩니다. 허용 된 이미지 파일 크기가 1KB에서 6mb 합니다.
      * "targetFace" 사각형 한 면을 포함 해야 합니다. 0 개 이상의 얼굴 오류로 간주 됩니다. 제공 된 "targetFace" 사각형에서 반환 되지 않으면 [얼굴 감지-](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), 보장이 감지 하 여 얼굴을 성공적으로 추가 합니다.
      * 검색 가능한 얼굴 크기 (36 4096 x 4096 픽셀 x 36)에서 큰 머리 포즈 또는 대규모 occlusions 오류를 발생 합니다.
      * 동일한 얼굴 목록에서 추가/삭제 얼굴 순차적으로 처리 됩니다 있으며 다양 한 표면에서 목록이 병렬로 됩니다.
      * 최소 검색 가능한 얼굴 크기 36 x 36 1920x1080 픽셀 이하의 이미지 픽셀입니다.
      1920x1080 픽셀 보다 큰 치수를 사용 하 여 이미지 크기를 비례적으로 더 큰 최소 글꼴 크기를 해야 합니다.
      * 다른 'detectionModel' 값을 제공할 수 있습니다. 사용 하 고 다른 검색 모델을 비교 하려면을 참조 하십시오 [감지 모델을 지정 하는 방법](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | 모델 | 권장 사용법-case(s) |
      | ---------- | -------- |
      | 'detection_01': | 에 대 한 기본 검색 모델 [LargeFaceList-추가
      Face](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3). 거의 정면 얼굴 감지에 대 한 권장 합니다. 매우 큰 각도 (머리 포즈) 얼굴을 얼굴 폐색 또는 잘못 된 이미지 방향 시나리오의 경우 이러한 경우 얼굴 검색 되지 않을 수 있습니다. | | 'detection_02': | 감지 모델 2019에 릴리스된 작고 쪽 흐리게 얼굴에 특히 향상 된 정확도 사용 하 여 될 수 있습니다. | 할당량:
      * 무료 계층 구독 할당량: 1,000 큰 얼굴 목록 별로 직면합니다.
      * S0 계층 구독 할당량: 1,000,000 큰 얼굴 목록 별로 직면합니다.
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, options?: Models.LargeFaceListAddFaceFromStreamOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 이미지 스트림입니다.
        - id: options
          type:
            - Models.LargeFaceListAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 이미지 스트림입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, LargeFaceListAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options: LargeFaceListAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: url
          type:
            - string
          description: 이미지의 공개적으로 도달 가능한 URL
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, Models.LargeFaceListAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정 된 큰 얼굴 목록에 최대 1,000,000 얼굴을 얼굴을 추가 합니다.
      <br /> 이미지를 사용 하 여 처리 하기 위해 여러 명의 얼굴이 포함, 입력된 얼굴 targetFace 사각형이 이미지 형식으로 지정할 수 있습니다. 추가 글꼴을 나타내는 persistedFaceId를 반환 합니다. 이미지가 저장 됩니다. 추출 된 얼굴 기능만 될 때까지 서버에 저장 됩니다 [LargeFaceList 얼굴-삭제](/docs/services/563879b61984550e40cbbe8d/operations/5a158c8ad2de3616c086f2d4) 하거나 [LargeFaceList-삭제](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) 라고 합니다.
      <br /> 생성 된 faceId 참고 persistedFaceId 다릅니다 [얼굴 감지-](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236)합니다.
      * 고품질 얼굴 이미지 인식 정밀도 향상 시키려면을 의미합니다. 고품질 얼굴을 고려 하십시오: 정면, clear, 및 얼굴 크기는 200 또는 큰 x 200 픽셀 (눈 사이의 100 픽셀)입니다.
      * JPEG, PNG, GIF (첫 번째 프레임) 및 BMP 형식이 지원 됩니다. 허용 된 이미지 파일 크기가 1KB에서 6mb 합니다.
      * "targetFace" 사각형 한 면을 포함 해야 합니다. 0 개 이상의 얼굴 오류로 간주 됩니다. 제공 된 "targetFace" 사각형에서 반환 되지 않으면 [얼굴 감지-](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), 보장이 감지 하 여 얼굴을 성공적으로 추가 합니다.
      * 검색 가능한 얼굴 크기 (36 4096 x 4096 픽셀 x 36)에서 큰 머리 포즈 또는 대규모 occlusions 오류를 발생 합니다.
      * 동일한 얼굴 목록에서 추가/삭제 얼굴 순차적으로 처리 됩니다 있으며 다양 한 표면에서 목록이 병렬로 됩니다.
      * 최소 검색 가능한 얼굴 크기 36 x 36 1920x1080 픽셀 이하의 이미지 픽셀입니다.
      1920x1080 픽셀 보다 큰 치수를 사용 하 여 이미지 크기를 비례적으로 더 큰 최소 글꼴 크기를 해야 합니다.
      * 다른 'detectionModel' 값을 제공할 수 있습니다. 사용 하 고 다른 검색 모델을 비교 하려면을 참조 하십시오 [감지 모델을 지정 하는 방법](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | 모델 | 권장 사용법-case(s) |
      | ---------- | -------- |
      | 'detection_01': | 에 대 한 기본 검색 모델 [LargeFaceList-추가
      Face](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3). 거의 정면 얼굴 감지에 대 한 권장 합니다. 매우 큰 각도 (머리 포즈) 얼굴을 얼굴 폐색 또는 잘못 된 이미지 방향 시나리오의 경우 이러한 경우 얼굴 검색 되지 않을 수 있습니다. | | 'detection_02': | 감지 모델 2019에 릴리스된 작고 쪽 흐리게 얼굴에 특히 향상 된 정확도 사용 하 여 될 수 있습니다. | 할당량:
      * 무료 계층 구독 할당량: 1,000 큰 얼굴 목록 별로 직면합니다.
      * S0 계층 구독 할당량: 1,000,000 큰 얼굴 목록 별로 직면합니다.
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options?: Models.LargeFaceListAddFaceFromUrlOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: url
          type:
            - string
          description: 이미지의 공개적으로 도달 가능한 URL
        - id: options
          type:
            - Models.LargeFaceListAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: url
          type:
            - string
          description: 이미지의 공개적으로 도달 가능한 URL
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create_2'
    name: 'create(string, LargeFaceListCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largeFaceListId: string, options: LargeFaceListCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create'
    name: 'create(string, Models.LargeFaceListCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      사용자 지정 largeFaceListId, 이름, 선택적 userData 및 recognitionModel 큰 얼굴 빈 목록을 만듭니다.
      <br /> 큰 얼굴 목록 목록이 아니라 최대 1,000,000 얼굴을 얼굴 및 사용한 [얼굴-비슷한 찾을](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237)합니다.
      <br /> 를 만든 후 사용자가 사용 해야 [LargeFaceList 얼굴-추가](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3) 얼굴을 가져오려는 및 [LargeFaceList-학습](/docs/services/563879b61984550e40cbbe8d/operations/5a158422d2de3616c086f2d1) 준비가 되도록 [얼굴-비슷한 찾을](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237)합니다. 이미지가 저장 됩니다. 추출 된 얼굴 기능만 될 때까지 서버에 저장 된 [LargeFaceList-삭제](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) 라고 합니다.
      <br /> 마찬가지로 유명인 유사한 얼굴을 필터링 하는 유사한 얼굴 찾기 같은 시나리오에 사용 됩니다 찾거나 식별 조명으로 방식으로 직면 하 합니다. 사용자를 식별 하는 실제 사용 하 여가 있는 경우 사용 하 여 하지만 [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) 하 고 [직면-식별](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239)합니다.
      <br/>'recognitionModel' 큰 얼굴 목록을 사용 하 여 연결을 지정 해야 합니다. 'RecognitionModel'에 대 한 기본값 'recognition_01' 경우 최신 모델로 해야 모델이 매개이 변수에서 명시적으로 지정 하세요 필요 합니다. 기존 큰 얼굴 목록에 추가 된 새 얼굴 인식 모델에 이미 연결 된 컬렉션을 사용 합니다. 인식 모델의 다른 버전으로 추출 하는 기능에 큰 얼굴 목록에서 기존 얼굴 기능을 업데이트할 수 없습니다.
      * 'recognition_01': 에 대 한 기본 인식 모델 [LargeFaceList-만들기](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc)합니다. 이러한 모든 큰 얼굴 목록은 2019 년 3 월 이전에 만든이 인식 모델을 사용 하 여 결합 된입니다.
      * 'recognition_02': 2019 년 3 월에 릴리스된 인식 모델입니다. 전체 정확도 'recognition_01'에 비해 향상 되어 있으므로 'recognition_02' 것이 좋습니다.
      큰 얼굴 목록 할당량:
      * 무료 계층 구독 할당량: 64 많은 얼굴을 나열 합니다.
      * S0 계층 구독 할당량: 1,000,000 큰 얼굴 나열 합니다.
    syntax:
      content: 'function create(largeFaceListId: string, options?: Models.LargeFaceListCreateOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - Models.LargeFaceListCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace'
    name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정한 largeFaceListId persistedFaceId로 큰 얼굴 목록에서 얼굴을 삭제 합니다.
      <br /> 동일한 큰 얼굴 목록에서 추가/삭제 얼굴 목록을 동시에 서로 다른 큰 얼굴에서 순차적으로 처리 됩니다.
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_2'
    name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_1'
    name: 'deleteFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 큰 얼굴 목록을 삭제 합니다.
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get_2'
    name: 'get(string, LargeFaceListGetOptionalParams, ServiceCallback<LargeFaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largeFaceListId: string, options: LargeFaceListGetOptionalParams, callback: ServiceCallback<LargeFaceList>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get'
    name: 'get(string, Models.LargeFaceListGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '큰 얼굴 목록을 largeFaceListId, 이름, 사용자 데이터 및 recognitionModel를 검색 합니다.'
    syntax:
      content: 'function get(largeFaceListId: string, options?: Models.LargeFaceListGetOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - Models.LargeFaceListGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get_1'
    name: 'get(string, ServiceCallback<LargeFaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largeFaceListId: string, callback: ServiceCallback<LargeFaceList>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace'
    name: 'getFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: (해당 속하는 largeFaceListId persistedFaceId로 지정 됨) 지속 된 얼굴에 대 한 정보를 검색 합니다.
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_2'
    name: 'getFace(string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_1'
    name: 'getFace(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 큰 얼굴 목록 (완료 됨 또는 진행 중)의 교육 상태를 검색 합니다.
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2'
    name: 'getTrainingStatus(string, RequestOptionsBase, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1'
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.constructor'
    name: LargeFaceListOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: LargeFaceListOperations를 만듭니다.
    syntax:
      content: 'new LargeFaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list_2'
    name: 'list(LargeFaceListListOptionalParams, ServiceCallback<LargeFaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: LargeFaceListListOptionalParams, callback: ServiceCallback<LargeFaceList[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list'
    name: list(Models.LargeFaceListListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      LargeFaceListId "," 이름 "," userData "및" recognitionModel 큰 얼굴 목록 정보를 나열 합니다. <br
      />
      LargeFaceList 사용 하 여 내에서 얼굴 정보를 가져오려면 [LargeFaceList 얼굴-가져오기](/docs/services/563879b61984550e40cbbe8d/operations/5a158cf2d2de3616c086f2d5)<br />
      * 큰 얼굴 목록 largeFaceListId의 알파벳 순서로 저장 됩니다.
      * "start" 매개 변수 (문자열, 선택 사항)에 항목 문자열 비교 하 여 더 큰 id가 반환 되는 사용자가 제공한 largeFaceListId 값입니다. "start"를 첫 번째 항목에서 반환을 나타내는 빈로 설정 합니다.
      * "top" 매개 변수 (int, 선택 사항) 반환할 항목 수를 지정 합니다. 항목이 1000 최대 한 번의 호출에서 반환할 수 있습니다. 더를 페치 하려면 현재 호출의 마지막 반환 된 항목의 Id를 사용 하 여 "start"를 지정할 수 있습니다.
      <br />
      예를 들어 5 개의 대형 사람 목록 총: "list1",..., "list5"입니다.
      <br /> "시작 = & 상위 =" 모든 5 목록을 반환 합니다.
      <br /> "시작 = & 상위 2 =" "list1", "목록형 2"를 반환 합니다.
      <br /> "시작 위쪽 목록형 2 = 3 =" "list3", "list4", "list5"를 반환 합니다.
    syntax:
      content: 'function list(options?: Models.LargeFaceListListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.LargeFaceListListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list_1'
    name: 'list(ServiceCallback<LargeFaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<LargeFaceList[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_2'
    name: 'listFaces(string, LargeFaceListListFacesOptionalParams, ServiceCallback<PersistedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFaces(largeFaceListId: string, options: LargeFaceListListFacesOptionalParams, callback: ServiceCallback<PersistedFace[]>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces'
    name: 'listFaces(string, Models.LargeFaceListListFacesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 글꼴 정보 (userData 및 글꼴의 등록 된 얼굴 persistedFaceIds 포함)를 검색 및 많은 얼굴 목록에서 모든 얼굴을 나열 합니다.
    syntax:
      content: 'function listFaces(largeFaceListId: string, options?: Models.LargeFaceListListFacesOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - Models.LargeFaceListListFacesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_1'
    name: 'listFaces(string, ServiceCallback<PersistedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFaces(largeFaceListId: string, callback: ServiceCallback<PersistedFace[]>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 큰 얼굴 목록 교육 작업을 큐의 경우 학습 태스크를 즉시 시작할 수 있습니다.
    syntax:
      content: 'function train(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update_2'
    name: 'update(string, LargeFaceListUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largeFaceListId: string, options: LargeFaceListUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update'
    name: 'update(string, Models.LargeFaceListUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 큰 얼굴 목록의 정보를 업데이트 합니다.
    syntax:
      content: 'function update(largeFaceListId: string, options?: Models.LargeFaceListUpdateOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: options
          type:
            - Models.LargeFaceListUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_2'
    name: 'updateFace(string, string, LargeFaceListUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options: LargeFaceListUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace'
    name: 'updateFace(string, string, Models.LargeFaceListUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지속형된 얼굴을 userData 필드를 업데이트 합니다.
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options?: Models.LargeFaceListUpdateFaceOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: options
          type:
            - Models.LargeFaceListUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_1'
    name: 'updateFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: 특정 큰 얼굴 목록을 참조 하는 id입니다.
        - id: persistedFaceId
          type:
            - string
          description: Id를 기존 얼굴의 특정 persistedFaceId 참조입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
    name: LargeFaceListAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: LargeFaceListAddFaceFromStreamOptionalParams
        fullName: LargeFaceListAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
    name: LargeFaceListAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: LargeFaceListAddFaceFromUrlOptionalParams
        fullName: LargeFaceListAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
    name: LargeFaceListCreateOptionalParams
    spec.typeScript:
      - name: LargeFaceListCreateOptionalParams
        fullName: LargeFaceListCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
    name: LargeFaceList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargeFaceList
        fullName: LargeFaceList
        uid: '@azure/cognitiveservices-face.LargeFaceList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
    name: LargeFaceListGetOptionalParams
    spec.typeScript:
      - name: LargeFaceListGetOptionalParams
        fullName: LargeFaceListGetOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
    name: 'LargeFaceList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargeFaceList
        fullName: LargeFaceList
        uid: '@azure/cognitiveservices-face.LargeFaceList'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
    name: LargeFaceListListOptionalParams
    spec.typeScript:
      - name: LargeFaceListListOptionalParams
        fullName: LargeFaceListListOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
    name: 'PersistedFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
    name: LargeFaceListListFacesOptionalParams
    spec.typeScript:
      - name: LargeFaceListListFacesOptionalParams
        fullName: LargeFaceListListFacesOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
    name: LargeFaceListUpdateOptionalParams
    spec.typeScript:
      - name: LargeFaceListUpdateOptionalParams
        fullName: LargeFaceListUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'
    name: LargeFaceListUpdateFaceOptionalParams
    spec.typeScript:
      - name: LargeFaceListUpdateFaceOptionalParams
        fullName: LargeFaceListUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'