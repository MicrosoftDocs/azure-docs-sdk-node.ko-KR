### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
    name: SnapshotApplyOptionalParams
    fullName: SnapshotApplyOptionalParams
    children:
      - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.mode'
      - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="17fae-101">선택적 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="17fae-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="17fae-102">중단 요청에 사용할 수 있는 신호입니다.</span><span class="sxs-lookup"><span data-stu-id="17fae-102">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="17fae-103">{object} [customHeaders] 사용자 요청을 보내기 전에 적용 되는 사용자 지정 요청 헤더를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="17fae-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.mode'
    name: mode
    fullName: mode
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="17fae-104">스냅숏 적용 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="17fae-104">Snapshot applying mode.</span></span> <span data-ttu-id="17fae-105">즉, 대상 구독에 이미 동일한 형식과 동일한의 objectId를 사용 하 여 개체를 포함 하는 경우 적용 작업이 실패 현재 CreateNew 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="17fae-105">Currently only CreateNew is supported, which means the apply operation will fail if target subscription already contains an object of same type and using the same objectId.</span></span> <span data-ttu-id="17fae-106">사용자는 이러한 충돌을 피하기 위해 요청 본문에 "objectId"을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="17fae-106">Users can specify the "objectId" in request body to avoid such conflicts.</span></span> <span data-ttu-id="17fae-107">가능한 값은 다음과 같습니다. ''CreateNew''.</span><span class="sxs-lookup"><span data-stu-id="17fae-107">Possible values include: ''CreateNew''.</span></span> <span data-ttu-id="17fae-108">기본값: ''CreateNew''.</span><span class="sxs-lookup"><span data-stu-id="17fae-108">Default value: ''CreateNew''.</span></span>'
    optional: true
    syntax:
      content: 'mode?: SnapshotApplyMode'
      return:
        type:
          - '@azure/cognitiveservices-face.SnapshotApplyMode'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="17fae-109">다운로드 진행률 시 발생 하는 콜백.</span><span class="sxs-lookup"><span data-stu-id="17fae-109">Callback which fires upon download progress.</span></span>
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="17fae-110">업로드 진행 상태 시 발생 하는 콜백.</span><span class="sxs-lookup"><span data-stu-id="17fae-110">Callback which fires upon upload progress.</span></span>
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="17fae-111">요청 시간을 밀리초로 자동으로 종료 하기 전까지 걸릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="17fae-111">The number of milliseconds a request can take before automatically being terminated.</span></span>
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.SnapshotApplyMode'
    name: SnapshotApplyMode
    spec.typeScript:
      - name: SnapshotApplyMode
        fullName: SnapshotApplyMode
        uid: '@azure/cognitiveservices-face.SnapshotApplyMode'