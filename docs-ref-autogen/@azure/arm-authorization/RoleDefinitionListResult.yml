### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-authorization.RoleDefinitionListResult'
    name: RoleDefinitionListResult
    fullName: RoleDefinitionListResult
    children:
      - '@azure/arm-authorization.RoleDefinitionListResult.Array'
      - '@azure/arm-authorization.RoleDefinitionListResult.concat'
      - '@azure/arm-authorization.RoleDefinitionListResult.concat_1'
      - '@azure/arm-authorization.RoleDefinitionListResult.copyWithin'
      - '@azure/arm-authorization.RoleDefinitionListResult.entries'
      - '@azure/arm-authorization.RoleDefinitionListResult.every'
      - '@azure/arm-authorization.RoleDefinitionListResult.fill'
      - '@azure/arm-authorization.RoleDefinitionListResult.filter_1'
      - '@azure/arm-authorization.RoleDefinitionListResult.filter'
      - '@azure/arm-authorization.RoleDefinitionListResult.find'
      - '@azure/arm-authorization.RoleDefinitionListResult.find_1'
      - '@azure/arm-authorization.RoleDefinitionListResult.findIndex'
      - '@azure/arm-authorization.RoleDefinitionListResult.forEach'
      - '@azure/arm-authorization.RoleDefinitionListResult.indexOf'
      - '@azure/arm-authorization.RoleDefinitionListResult.join'
      - '@azure/arm-authorization.RoleDefinitionListResult.keys'
      - '@azure/arm-authorization.RoleDefinitionListResult.lastIndexOf'
      - '@azure/arm-authorization.RoleDefinitionListResult.length'
      - '@azure/arm-authorization.RoleDefinitionListResult.map'
      - '@azure/arm-authorization.RoleDefinitionListResult.nextLink'
      - '@azure/arm-authorization.RoleDefinitionListResult.pop'
      - '@azure/arm-authorization.RoleDefinitionListResult.push'
      - '@azure/arm-authorization.RoleDefinitionListResult.reduce'
      - '@azure/arm-authorization.RoleDefinitionListResult.reduce_1'
      - '@azure/arm-authorization.RoleDefinitionListResult.reduce_2'
      - '@azure/arm-authorization.RoleDefinitionListResult.reduceRight'
      - '@azure/arm-authorization.RoleDefinitionListResult.reduceRight_1'
      - '@azure/arm-authorization.RoleDefinitionListResult.reduceRight_2'
      - '@azure/arm-authorization.RoleDefinitionListResult.reverse'
      - '@azure/arm-authorization.RoleDefinitionListResult.shift'
      - '@azure/arm-authorization.RoleDefinitionListResult.slice'
      - '@azure/arm-authorization.RoleDefinitionListResult.some'
      - '@azure/arm-authorization.RoleDefinitionListResult.sort'
      - '@azure/arm-authorization.RoleDefinitionListResult.splice_1'
      - '@azure/arm-authorization.RoleDefinitionListResult.splice'
      - '@azure/arm-authorization.RoleDefinitionListResult.toLocaleString'
      - '@azure/arm-authorization.RoleDefinitionListResult.toString'
      - '@azure/arm-authorization.RoleDefinitionListResult.unshift'
      - '@azure/arm-authorization.RoleDefinitionListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-authorization.RoleDefinition>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.concat'
    name: 'concat(ConcatArray<RoleDefinition>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-101">두 개 이상의 배열을 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<RoleDefinition>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-authorization.RoleDefinition>[]'
          description: |
            <span data-ttu-id="1e82c-102">Array1의 끝에 추가할 추가 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-103">두 개 이상의 배열을 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="1e82c-104">Array1의 끝에 추가할 추가 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-105">로 식별 되는 배열 섹션을 복사한 후이 개체는 반환 시작 및 대상 위치에서 시작 하 여 동일한 배열 간</span><span class="sxs-lookup"><span data-stu-id="1e82c-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="1e82c-106">대상 음수 이면 길이 + 길이 배열의 길이 대상으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="1e82c-107">시작이 음수 이면 길이 + 시작으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="1e82c-108">끝이 음수 이면 길이 + 끝으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="1e82c-109">지정 하지 않으면이 길이 개체의 기본 값으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-110">배열의 모든 항목에 대 한 키, 값 쌍의는 반복 가능한 반환</span><span class="sxs-lookup"><span data-stu-id="1e82c-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.every'
    name: 'every((value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-111">배열의 모든 구성원은 지정 된 테스트를 만족 하는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-111">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean'
          description: '<span data-ttu-id="1e82c-112">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="1e82c-113">모든 메서드는 배열의 끝까지 또는 callbackfn를 false로 반환 될 때까지 array1에서 각 요소에 대 한 callbackfn 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="1e82c-114">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="1e82c-115">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.fill'
    name: 'fill(RoleDefinition, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-116">로 식별 되는 섹션을 입력 한 후이 개체는 반환 시작 하 고 값을 사용 하 여 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: RoleDefinition, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-authorization.RoleDefinition'
          description: <span data-ttu-id="1e82c-117">값을 사용 하 여 배열 섹션 채우기</span><span class="sxs-lookup"><span data-stu-id="1e82c-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="1e82c-118">입력 배열의 시작 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-118">index to start filling the array at.</span></span> <span data-ttu-id="1e82c-119">시작이 음수 이면 길이 + 길이 배열의 길이 시작으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="1e82c-120">배열 채우기 중지 하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-120">index to stop filling the array at.</span></span> <span data-ttu-id="1e82c-121">끝이 음수 이면 길이 + 끝으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.filter_1'
    name: 'filter((value: RoleDefinition, index: number, array: RoleDefinition[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-122">콜백 함수에 지정 된 조건을 충족 하는 배열의 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: RoleDefinition, index: number, array: RoleDefinition[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RoleDefinition, index: number, array: RoleDefinition[]) => any'
          description: <span data-ttu-id="1e82c-123">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="1e82c-124">필터 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="1e82c-125">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="1e82c-126">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.filter'
    name: 'filter((value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-127">콜백 함수에 지정 된 조건을 충족 하는 배열의 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean'
          description: <span data-ttu-id="1e82c-128">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="1e82c-129">필터 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="1e82c-130">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="1e82c-131">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.find'
    name: 'find((this: void, value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-132">위치 조건자가 true 이면 정의 되지 않은 그렇지 않으면 배열의 첫 번째 요소의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean'
          description: '<span data-ttu-id="1e82c-133">오름차순으로 찾으면 조건자 true 반환 될 때까지 배열의 각 요소에 대해 한 번 호출 조건자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="1e82c-134">이러한 요소가 없으면 찾기는 즉시 해당 요소 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="1e82c-135">그렇지 않으면 찾기 undefined를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="1e82c-136">제공 된 경우이으로 사용할 수는 조건자의 각 호출에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="1e82c-137">제공 하지 않으면 정의 되지 않은 대신 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.find_1'
    name: 'find((value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-138">위치 조건자가 true 이면 정의 되지 않은 그렇지 않으면 배열의 첫 번째 요소의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition | undefined'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.findIndex'
    name: 'findIndex((value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-139">위치 조건자가 true, 그렇지 않으면-1 배열의 첫 번째 요소의 인덱스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: RoleDefinition, index: number, obj: RoleDefinition[]) => boolean'
          description: '<span data-ttu-id="1e82c-140">오름차순으로 찾으면 조건자 true 반환 될 때까지 배열의 각 요소에 대해 한 번 호출 조건자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="1e82c-141">이러한 요소가 없으면 findIndex 요소 인덱스를 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="1e82c-142">FindIndex,-1 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="1e82c-143">제공 된 경우이으로 사용할 수는 조건자의 각 호출에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="1e82c-144">제공 하지 않으면 정의 되지 않은 대신 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.forEach'
    name: 'forEach((value: RoleDefinition, index: number, array: RoleDefinition[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-145">배열의 각 요소에 대해 지정된 된 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: RoleDefinition, index: number, array: RoleDefinition[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RoleDefinition, index: number, array: RoleDefinition[]) => void'
          description: <span data-ttu-id="1e82c-146">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="1e82c-147">forEach 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-147">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="1e82c-148">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="1e82c-149">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.indexOf'
    name: 'indexOf(RoleDefinition, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-150">배열에서 맨 처음 발견 되는 값의 인덱스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: RoleDefinition, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-authorization.RoleDefinition'
          description: <span data-ttu-id="1e82c-151">배열에서 찾을 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-151">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="1e82c-152">검색을 시작 하는 배열 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-152">The array index at which to begin the search.</span></span> <span data-ttu-id="1e82c-153">FromIndex가 생략 되 면 하는 경우 인덱스 0에 검색을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-154">지정 된 구분 기호 문자열로 구분 된 배열의 모든 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-154">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="1e82c-155">결과 문자열에 다음에서 배열의 한 요소를 구분 하는 데는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="1e82c-156">생략 하면 배열 요소를 쉼표로 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-157">배열에서 키를 반복 가능한 반환</span><span class="sxs-lookup"><span data-stu-id="1e82c-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.lastIndexOf'
    name: 'lastIndexOf(RoleDefinition, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-158">배열에 지정된 된 값 중 마지막 요소의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: RoleDefinition, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-authorization.RoleDefinition'
          description: <span data-ttu-id="1e82c-159">배열에서 찾을 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-159">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="1e82c-160">검색을 시작 하는 배열 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-160">The array index at which to begin the search.</span></span> <span data-ttu-id="1e82c-161">FromIndex가 생략 되 면 경우 배열의 마지막 인덱스 검색을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="1e82c-162">배열의 길이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="1e82c-163">배열에 정의 된 요소의 최고값 보다 더 높은 수 단일입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-163">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.map'
    name: 'map((value: RoleDefinition, index: number, array: RoleDefinition[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-164">배열의 각 요소에 대해 정의 된 콜백 함수를 호출 하 고 결과 포함 하는 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: RoleDefinition, index: number, array: RoleDefinition[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RoleDefinition, index: number, array: RoleDefinition[]) => U'
          description: <span data-ttu-id="1e82c-165">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="1e82c-166">Map 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-166">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="1e82c-167">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="1e82c-168">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-169">배열에서 마지막 요소를 제거 하 고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-169">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition | undefined'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.push'
    name: 'push(RoleDefinition[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-170">배열에 새 요소를 추가 하 고 배열의 새 길이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-170">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: RoleDefinition[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-authorization.RoleDefinition[]'
          description: |
            <span data-ttu-id="1e82c-171">배열의 새 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-171">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.reduce'
    name: 'reduce((previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-172">배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-172">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="1e82c-173">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-173">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition'
          description: <span data-ttu-id="1e82c-174">최대 4 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-174">A function that accepts up to four arguments.</span></span> <span data-ttu-id="1e82c-175">Reduce 메서드를 사용 하는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-175">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.reduce_1'
    name: 'reduce((previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition, RoleDefinition)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-176">배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-176">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="1e82c-177">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-177">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition, initialValue: RoleDefinition)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-authorization.RoleDefinition'
          description: ''
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-178">배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-178">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="1e82c-179">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-179">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => U'
          description: <span data-ttu-id="1e82c-180">최대 4 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-180">A function that accepts up to four arguments.</span></span> <span data-ttu-id="1e82c-181">Reduce 메서드를 사용 하는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-181">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="1e82c-182">InitialValue를 지정 하는 경우 초기 값으로 누적 시작에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-182">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="1e82c-183">첫 번째 호출은 callbackfn 함수에 인수로 배열 값 대신이 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-183">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.reduceRight'
    name: 'reduceRight((previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-184">내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-184">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="1e82c-185">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-185">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition'
          description: <span data-ttu-id="1e82c-186">최대 4 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-186">A function that accepts up to four arguments.</span></span> <span data-ttu-id="1e82c-187">ReduceRight 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-187">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.reduceRight_1'
    name: 'reduceRight((previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition, RoleDefinition)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-188">내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-188">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="1e82c-189">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-189">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition, initialValue: RoleDefinition)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: RoleDefinition, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => RoleDefinition'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-authorization.RoleDefinition'
          description: ''
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-190">내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-190">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="1e82c-191">콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-191">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: RoleDefinition, currentIndex: number, array: RoleDefinition[]) => U'
          description: <span data-ttu-id="1e82c-192">최대 4 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-192">A function that accepts up to four arguments.</span></span> <span data-ttu-id="1e82c-193">ReduceRight 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-193">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="1e82c-194">InitialValue를 지정 하는 경우 초기 값으로 누적 시작에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-194">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="1e82c-195">첫 번째 호출은 callbackfn 함수에 인수로 배열 값 대신이 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-195">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-196">배열에서 요소를 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-196">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-197">배열에서 첫 번째 요소를 제거 하 고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-197">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition | undefined'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-198">배열의 일정 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-198">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="1e82c-199">시작 배열의 지정된 된 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-199">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="1e82c-200">끝 배열의 지정된 된 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-200">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.some'
    name: 'some((value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-201">지정 된 콜백 함수를 배열의 모든 요소에 대해 true를 반환 하는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-201">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RoleDefinition, index: number, array: RoleDefinition[]) => boolean'
          description: '<span data-ttu-id="1e82c-202">최대 3 개의 인수를 받아들이는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-202">A function that accepts up to three arguments.</span></span> <span data-ttu-id="1e82c-203">일부 메서드는 배열의 끝까지 또는 callbackfn를 true로 반환 될 때까지 array1에서 각 요소에 대해 callbackfn 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-203">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="1e82c-204">개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-204">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="1e82c-205">ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-205">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.sort'
    name: 'sort(undefined | (a: RoleDefinition, b: RoleDefinition) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-206">배열을 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-206">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: RoleDefinition, b: RoleDefinition) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: RoleDefinition, b: RoleDefinition) => number'
          description: |
            <span data-ttu-id="1e82c-207">요소의 순서를 결정 하는 데 사용 되는 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-207">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="1e82c-208">생략 하면 요소가 오름차순, ASCII 문자 순서로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-208">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.splice_1'
    name: 'splice(number, number, RoleDefinition[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-209">배열에서 요소를 제거 하 고 필요한 경우 새 요소를 삽입 그 자리에 삭제 된 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-209">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: RoleDefinition[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="1e82c-210">시작 요소를 제거 하는 배열의 0부터 시작 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-210">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="1e82c-211">제거할 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-211">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-authorization.RoleDefinition[]'
          description: |
            <span data-ttu-id="1e82c-212">삭제 된 요소 대신 배열에 삽입할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-212">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1e82c-213">배열에서 요소를 제거 하 고 필요한 경우 새 요소를 삽입 그 자리에 삭제 된 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-213">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="1e82c-214">시작 요소를 제거 하는 배열의 0부터 시작 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-214">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="1e82c-215">제거할 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-215">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-authorization.RoleDefinition[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-216">배열의 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-216">Returns a string representation of an array.</span></span> <span data-ttu-id="1e82c-217">요소는 해당 toLocalString 메서드를 사용 하 여 문자열로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-217">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-218">배열의 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-218">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.unshift'
    name: 'unshift(RoleDefinition[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-219">배열의 시작에 새 요소를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-219">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: RoleDefinition[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-authorization.RoleDefinition[]'
          description: |
            <span data-ttu-id="1e82c-220">배열의 시작에 삽입할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-220">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleDefinitionListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1e82c-221">배열에는 반복 가능한 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e82c-221">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-authorization.RoleDefinition>
    package: '@azure/arm-authorization'
references:
  - uid: Array<@azure/arm-authorization.RoleDefinition>
    name: RoleDefinition>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: RoleDefinition
        fullName: RoleDefinition
        uid: '@azure/arm-authorization.RoleDefinition'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-authorization.RoleDefinition>[]'
    name: 'RoleDefinition>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: RoleDefinition
        fullName: RoleDefinition
        uid: '@azure/arm-authorization.RoleDefinition'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-authorization.RoleDefinition[]'
    name: 'RoleDefinition[]'
    spec.typeScript:
      - name: RoleDefinition
        fullName: RoleDefinition
        uid: '@azure/arm-authorization.RoleDefinition'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-authorization.RoleDefinition'
    name: RoleDefinition
    spec.typeScript:
      - name: RoleDefinition
        fullName: RoleDefinition
        uid: '@azure/arm-authorization.RoleDefinition'
  - uid: '@azure/arm-authorization.RoleDefinition | undefined'
    name: RoleDefinition | undefined
    spec.typeScript:
      - name: RoleDefinition
        fullName: RoleDefinition
        uid: '@azure/arm-authorization.RoleDefinition'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-authorization.RoleDefinition>
    name: RoleDefinition>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: RoleDefinition
        fullName: RoleDefinition
        uid: '@azure/arm-authorization.RoleDefinition'
      - name: '>'
        fullName: '>'