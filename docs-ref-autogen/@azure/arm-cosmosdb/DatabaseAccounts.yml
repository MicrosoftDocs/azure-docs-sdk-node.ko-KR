### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts'
    name: DatabaseAccounts
    fullName: DatabaseAccounts
    children:
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginPatch'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.patch'
      - '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateTableThroughput'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="80fdb-101">DatabaseAccounts 나타내는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-101">Class representing a DatabaseAccounts.</span></span>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, DatabaseAccountCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-102">만들거나 Azure Cosmos DB 데이터베이스 계정을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-102">Creates or updates an Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, accountName: string, createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-103">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-103">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-104">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-104">Cosmos DB database account name.</span></span>
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-105">현재 데이터베이스 계정에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-105">The parameters to provide for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraKeyspace'
    name: 'beginCreateUpdateCassandraKeyspace(string, string, string, CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-106">만들기 또는 업데이트는 Azure Cosmos DB Cassandra keyspace</span><span class="sxs-lookup"><span data-stu-id="80fdb-106">Create or update an Azure Cosmos DB Cassandra keyspace</span></span>
    syntax:
      content: 'function beginCreateUpdateCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, createUpdateCassandraKeyspaceParameters: CassandraKeyspaceCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-107">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-107">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-108">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-108">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-109">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-109">Cosmos DB keyspace name.</span></span>
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-110">현재 Cassandra keyspace를 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-110">The parameters to provide for the current Cassandra keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraTable'
    name: 'beginCreateUpdateCassandraTable(string, string, string, string, CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-111">만들거나 Azure Cosmos DB Cassandra 테이블을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-111">Create or update an Azure Cosmos DB Cassandra Table</span></span>
    syntax:
      content: 'function beginCreateUpdateCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, createUpdateCassandraTableParameters: CassandraTableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-112">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-112">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-113">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-113">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-114">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-114">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-115">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-115">Cosmos DB table name.</span></span>
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-116">현재 Cassandra 테이블에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-116">The parameters to provide for the current Cassandra Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinDatabase'
    name: 'beginCreateUpdateGremlinDatabase(string, string, string, GremlinDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-117">Azure Cosmos DB Gremlin 데이터베이스 생성 또는 업데이트</span><span class="sxs-lookup"><span data-stu-id="80fdb-117">Create or update an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function beginCreateUpdateGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateGremlinDatabaseParameters: GremlinDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-118">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-118">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-119">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-119">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-120">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-120">Cosmos DB database name.</span></span>
        - id: createUpdateGremlinDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-121">현재 Gremlin 데이터베이스에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-121">The parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinGraph'
    name: 'beginCreateUpdateGremlinGraph(string, string, string, string, GremlinGraphCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-122">만들거나 Azure Cosmos DB Gremlin 그래프를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-122">Create or update an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function beginCreateUpdateGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-123">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-123">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-124">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-124">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-125">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-125">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-126">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-126">Cosmos DB graph name.</span></span>
        - id: createUpdateGremlinGraphParameters
          type:
            - '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-127">현재 Gremlin 그래프를 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-127">The parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBCollection'
    name: 'beginCreateUpdateMongoDBCollection(string, string, string, string, MongoDBCollectionCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-128">만들거나 Azure Cosmos DB MongoDB 컬렉션을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-128">Create or update an Azure Cosmos DB MongoDB Collection</span></span>
    syntax:
      content: 'function beginCreateUpdateMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, createUpdateMongoDBCollectionParameters: MongoDBCollectionCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-129">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-129">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-130">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-130">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-131">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-131">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-132">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-132">Cosmos DB collection name.</span></span>
        - id: createUpdateMongoDBCollectionParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-133">현재 MongoDB 컬렉션에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-133">The parameters to provide for the current MongoDB Collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBDatabase'
    name: 'beginCreateUpdateMongoDBDatabase(string, string, string, MongoDBDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-134">만들거나 Azure Cosmos DB MongoDB 데이터베이스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-134">Create or updates Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function beginCreateUpdateMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateMongoDBDatabaseParameters: MongoDBDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-135">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-135">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-136">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-136">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-137">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-137">Cosmos DB database name.</span></span>
        - id: createUpdateMongoDBDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-138">현재 MongoDB 데이터베이스에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-138">The parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlContainer'
    name: 'beginCreateUpdateSqlContainer(string, string, string, string, SqlContainerCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-139">만들거나 Azure Cosmos DB SQL 컨테이너를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-139">Create or update an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function beginCreateUpdateSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, createUpdateSqlContainerParameters: SqlContainerCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-140">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-140">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-141">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-141">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-142">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-142">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-143">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-143">Cosmos DB container name.</span></span>
        - id: createUpdateSqlContainerParameters
          type:
            - '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-144">현재 SQL 컨테이너를 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-144">The parameters to provide for the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlDatabase'
    name: 'beginCreateUpdateSqlDatabase(string, string, string, SqlDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-145">Azure Cosmos DB SQL 데이터베이스를 생성 또는 업데이트</span><span class="sxs-lookup"><span data-stu-id="80fdb-145">Create or update an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function beginCreateUpdateSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateSqlDatabaseParameters: SqlDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-146">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-146">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-147">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-147">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-148">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-148">Cosmos DB database name.</span></span>
        - id: createUpdateSqlDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-149">현재 SQL 데이터베이스에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-149">The parameters to provide for the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateTable'
    name: 'beginCreateUpdateTable(string, string, string, TableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-150">만들거나 Azure Cosmos DB 테이블을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-150">Create or update an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function beginCreateUpdateTable(resourceGroupName: string, accountName: string, tableName: string, createUpdateTableParameters: TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-151">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-151">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-152">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-152">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-153">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-153">Cosmos DB table name.</span></span>
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-154">현재 테이블에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-154">The parameters to provide for the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraKeyspace'
    name: 'beginDeleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-155">기존 Azure Cosmos DB Cassandra keyspace를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-155">Deletes an existing Azure Cosmos DB Cassandra keyspace.</span></span>
    syntax:
      content: 'function beginDeleteCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-156">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-156">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-157">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-157">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-158">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-158">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraTable'
    name: 'beginDeleteCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-159">기존 Azure Cosmos DB Cassandra 테이블을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-159">Deletes an existing Azure Cosmos DB Cassandra table.</span></span>
    syntax:
      content: 'function beginDeleteCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-160">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-160">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-161">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-161">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-162">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-162">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-163">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-163">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinDatabase'
    name: 'beginDeleteGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-164">기존 Azure Cosmos DB Gremlin 데이터베이스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-164">Deletes an existing Azure Cosmos DB Gremlin database.</span></span>
    syntax:
      content: 'function beginDeleteGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-165">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-165">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-166">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-166">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-167">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-167">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinGraph'
    name: 'beginDeleteGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-168">기존 Azure Cosmos DB Gremlin 그래프를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-168">Deletes an existing Azure Cosmos DB Gremlin graph.</span></span>
    syntax:
      content: 'function beginDeleteGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-169">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-169">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-170">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-170">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-171">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-171">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-172">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-172">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-173">기존 Azure Cosmos DB 데이터베이스 계정을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-173">Deletes an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-174">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-174">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-175">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-175">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBCollection'
    name: 'beginDeleteMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-176">기존 Azure Cosmos DB MongoDB 컬렉션을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-176">Deletes an existing Azure Cosmos DB MongoDB Collection.</span></span>
    syntax:
      content: 'function beginDeleteMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-177">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-177">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-178">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-178">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-179">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-179">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-180">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-180">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBDatabase'
    name: 'beginDeleteMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-181">기존 Azure Cosmos DB MongoDB 데이터베이스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-181">Deletes an existing Azure Cosmos DB MongoDB database.</span></span>
    syntax:
      content: 'function beginDeleteMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-182">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-182">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-183">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-183">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-184">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-184">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlContainer'
    name: 'beginDeleteSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-185">기존 Azure Cosmos DB SQL 컨테이너를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-185">Deletes an existing Azure Cosmos DB SQL container.</span></span>
    syntax:
      content: 'function beginDeleteSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-186">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-186">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-187">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-187">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-188">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-188">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-189">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-189">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlDatabase'
    name: 'beginDeleteSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-190">기존 Azure Cosmos DB SQL 데이터베이스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-190">Deletes an existing Azure Cosmos DB SQL database.</span></span>
    syntax:
      content: 'function beginDeleteSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-191">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-191">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-192">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-192">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-193">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-193">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteTable'
    name: 'beginDeleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-194">기존 Azure Cosmos DB 테이블을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-194">Deletes an existing Azure Cosmos DB Table.</span></span>
    syntax:
      content: 'function beginDeleteTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-195">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-195">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-196">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-196">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-197">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-197">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
    name: 'beginFailoverPriorityChange(string, string, FailoverPolicies, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-198">Azure Cosmos DB 데이터베이스 계정의 장애 조치 우선 순위를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-198">Changes the failover priority for the Azure Cosmos DB database account.</span></span> <span data-ttu-id="80fdb-199">장애 조치 우선 순위 0 쓰기 영역을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-199">A failover priority of 0 indicates a write region.</span></span> <span data-ttu-id="80fdb-200">장애 조치 우선 순위 최대값 (총 지역-1) =.</span><span class="sxs-lookup"><span data-stu-id="80fdb-200">The maximum value for a failover priority = (total number of regions - 1).</span></span> <span data-ttu-id="80fdb-201">장애 조치 우선 순위 값은 데이터베이스 계정이 존재 하는 지역 각각에 대해 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-201">Failover priority values must be unique for each of the regions in which the database account exists.</span></span>
    syntax:
      content: 'function beginFailoverPriorityChange(resourceGroupName: string, accountName: string, failoverParameters: FailoverPolicies, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-202">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-202">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-203">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-203">Cosmos DB database account name.</span></span>
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: <span data-ttu-id="80fdb-204">데이터베이스 계정에 대 한 새 장애 조치 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-204">The new failover policies for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
    name: 'beginOfflineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-205">오프 라인으로 지정 된 Azure Cosmos DB에 대 한 지정된 된 지역 데이터베이스 계정.</span><span class="sxs-lookup"><span data-stu-id="80fdb-205">Offline the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginOfflineRegion(resourceGroupName: string, accountName: string, regionParameterForOffline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-206">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-206">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-207">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-207">Cosmos DB database account name.</span></span>
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="80fdb-208">Cosmos DB 지역 데이터베이스 계정에 대 한 오프 라인입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-208">Cosmos DB region to offline for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
    name: 'beginOnlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-209">온라인 지정 된 Azure Cosmos DB에 대 한 지정된 된 지역 데이터베이스 계정.</span><span class="sxs-lookup"><span data-stu-id="80fdb-209">Online the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginOnlineRegion(resourceGroupName: string, accountName: string, regionParameterForOnline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-210">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-210">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-211">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-211">Cosmos DB database account name.</span></span>
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="80fdb-212">Cosmos DB 지역 데이터베이스 계정에 대 한 온라인입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-212">Cosmos DB region to online for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginPatch'
    name: 'beginPatch(string, string, DatabaseAccountPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-213">기존 Azure Cosmos DB 데이터베이스 계정의 속성을 패치합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-213">Patches the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginPatch(resourceGroupName: string, accountName: string, updateParameters: DatabaseAccountPatchParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-214">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-214">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-215">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-215">Cosmos DB database account name.</span></span>
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
          description: <span data-ttu-id="80fdb-216">현재 데이터베이스 계정에 대 한 패치를 태그 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-216">The tags parameter to patch for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
    name: 'beginRegenerateKey(string, string, DatabaseAccountRegenerateKeyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-217">지정된 된 Azure Cosmos DB 데이터베이스 계정에 대 한 액세스 키 다시 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-217">Regenerates an access key for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginRegenerateKey(resourceGroupName: string, accountName: string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-218">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-218">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-219">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-219">Cosmos DB database account name.</span></span>
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: <span data-ttu-id="80fdb-220">다시 생성할 키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-220">The name of the key to regenerate.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraKeyspaceThroughput'
    name: 'beginUpdateCassandraKeyspaceThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-221">Azure Cosmos DB Cassandra Keyspace 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-221">Update RUs per second of an Azure Cosmos DB Cassandra Keyspace</span></span>
    syntax:
      content: 'function beginUpdateCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-222">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-222">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-223">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-223">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-224">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-224">Cosmos DB keyspace name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-225">매개 변수는 현재 Cassandra Keyspace 수 있도록 초당 Ru입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-225">The RUs per second of the parameters to provide for the current Cassandra Keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraTableThroughput'
    name: 'beginUpdateCassandraTableThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-226">Azure Cosmos DB Cassandra 테이블의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-226">Update RUs per second of an Azure Cosmos DB Cassandra table</span></span>
    syntax:
      content: 'function beginUpdateCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-227">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-227">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-228">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-228">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-229">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-229">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-230">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-230">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-231">매개 변수는 현재 Cassandra 테이블에 대 한 제공 초당 Ru 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-231">The RUs per second of the parameters to provide for the current Cassandra table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinDatabaseThroughput'
    name: 'beginUpdateGremlinDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-232">Azure Cosmos DB Gremlin 데이터베이스의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-232">Update RUs per second of an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function beginUpdateGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-233">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-233">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-234">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-234">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-235">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-235">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-236">매개 변수를 현재 Gremlin 데이터베이스 수 있도록 초당 Ru 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-236">The RUs per second of the parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinGraphThroughput'
    name: 'beginUpdateGremlinGraphThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-237">Azure Cosmos DB Gremlin 그래프의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-237">Update RUs per second of an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function beginUpdateGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-238">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-238">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-239">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-239">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-240">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-240">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-241">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-241">Cosmos DB graph name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-242">매개 변수를 현재 Gremlin 그래프 수 있도록 초당 Ru입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-242">The RUs per second of the parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBCollectionThroughput'
    name: 'beginUpdateMongoDBCollectionThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-243">Azure Cosmos DB MongoDB 컬렉션의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-243">Update the RUs per second of an Azure Cosmos DB MongoDB collection</span></span>
    syntax:
      content: 'function beginUpdateMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-244">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-244">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-245">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-245">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-246">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-246">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-247">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-247">Cosmos DB collection name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-248">매개 변수를 현재 MongoDB 컬렉션 수 있도록 초당 Ru입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-248">The RUs per second of the parameters to provide for the current MongoDB collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBDatabaseThroughput'
    name: 'beginUpdateMongoDBDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-249">초당 Ru 업데이트는 Azure Cosmos DB MongoDB 데이터베이스를</span><span class="sxs-lookup"><span data-stu-id="80fdb-249">Update RUs per second of the an Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function beginUpdateMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-250">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-250">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-251">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-251">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-252">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-252">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-253">현재 MongoDB 데이터베이스에 대해 제공 하는 매개 변수의 초당 Ru입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-253">The RUs per second of the parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlContainerThroughput'
    name: 'beginUpdateSqlContainerThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-254">Azure Cosmos DB SQL 컨테이너의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-254">Update RUs per second of an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function beginUpdateSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-255">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-255">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-256">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-256">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-257">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-257">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-258">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-258">Cosmos DB container name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-259">현재 SQL 컨테이너의 초당 Ru 수 있도록 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-259">The parameters to provide for the RUs per second of the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlDatabaseThroughput'
    name: 'beginUpdateSqlDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-260">Azure Cosmos DB SQL database의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-260">Update RUs per second of an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function beginUpdateSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-261">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-261">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-262">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-262">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-263">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-263">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-264">현재 SQL database의 초당 Ru 수 있도록 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-264">The parameters to provide for the RUs per second of the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateTableThroughput'
    name: 'beginUpdateTableThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-265">Azure Cosmos DB 테이블의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-265">Update RUs per second of an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function beginUpdateTableThroughput(resourceGroupName: string, accountName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-266">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-266">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-267">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-267">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-268">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-268">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-269">현재 테이블의 초당 Ru 수 있도록 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-269">The parameters to provide for the RUs per second of the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
    name: 'checkNameExists(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="80fdb-270">Azure Cosmos DB 계정 이름이 이미 존재 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-270">Checks that the Azure Cosmos DB account name already exists.</span></span> <span data-ttu-id="80fdb-271">올바른 계정 이름을 영문 소문자, 숫자를 포함할 수 있습니다 및 ''-'' 문자 및 3 자에서 50 자 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-271">A valid account name may contain only lowercase letters, numbers, and the ''-'' character, and must be between 3 and 50 characters.</span></span>'
    syntax:
      content: 'function checkNameExists(accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-272">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-272">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
    name: 'checkNameExists(string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameExists(accountName: string, options: RequestOptionsBase, callback: ServiceCallback<boolean>)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-273">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-273">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-274">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-274">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            <span data-ttu-id="80fdb-275">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-275">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
    name: 'checkNameExists(string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameExists(accountName: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-276">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-276">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            <span data-ttu-id="80fdb-277">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-277">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
    name: 'createOrUpdate(string, string, DatabaseAccountCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-278">만들거나 Azure Cosmos DB 데이터베이스 계정을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-278">Creates or updates an Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, accountName: string, createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-279">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-279">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-280">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-280">Cosmos DB database account name.</span></span>
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-281">현재 데이터베이스 계정에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-281">The parameters to provide for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateOrUpdateResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraKeyspace'
    name: 'createUpdateCassandraKeyspace(string, string, string, CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-282">만들기 또는 업데이트는 Azure Cosmos DB Cassandra keyspace</span><span class="sxs-lookup"><span data-stu-id="80fdb-282">Create or update an Azure Cosmos DB Cassandra keyspace</span></span>
    syntax:
      content: 'function createUpdateCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, createUpdateCassandraKeyspaceParameters: CassandraKeyspaceCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-283">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-283">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-284">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-284">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-285">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-285">Cosmos DB keyspace name.</span></span>
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-286">현재 Cassandra keyspace를 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-286">The parameters to provide for the current Cassandra keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraTable'
    name: 'createUpdateCassandraTable(string, string, string, string, CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-287">만들거나 Azure Cosmos DB Cassandra 테이블을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-287">Create or update an Azure Cosmos DB Cassandra Table</span></span>
    syntax:
      content: 'function createUpdateCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, createUpdateCassandraTableParameters: CassandraTableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-288">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-288">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-289">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-289">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-290">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-290">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-291">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-291">Cosmos DB table name.</span></span>
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-292">현재 Cassandra 테이블에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-292">The parameters to provide for the current Cassandra Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinDatabase'
    name: 'createUpdateGremlinDatabase(string, string, string, GremlinDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-293">Azure Cosmos DB Gremlin 데이터베이스 생성 또는 업데이트</span><span class="sxs-lookup"><span data-stu-id="80fdb-293">Create or update an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function createUpdateGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateGremlinDatabaseParameters: GremlinDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-294">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-294">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-295">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-295">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-296">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-296">Cosmos DB database name.</span></span>
        - id: createUpdateGremlinDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-297">현재 Gremlin 데이터베이스에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-297">The parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinGraph'
    name: 'createUpdateGremlinGraph(string, string, string, string, GremlinGraphCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-298">만들거나 Azure Cosmos DB Gremlin 그래프를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-298">Create or update an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function createUpdateGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-299">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-299">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-300">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-300">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-301">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-301">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-302">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-302">Cosmos DB graph name.</span></span>
        - id: createUpdateGremlinGraphParameters
          type:
            - '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-303">현재 Gremlin 그래프를 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-303">The parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBCollection'
    name: 'createUpdateMongoDBCollection(string, string, string, string, MongoDBCollectionCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-304">만들거나 Azure Cosmos DB MongoDB 컬렉션을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-304">Create or update an Azure Cosmos DB MongoDB Collection</span></span>
    syntax:
      content: 'function createUpdateMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, createUpdateMongoDBCollectionParameters: MongoDBCollectionCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-305">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-305">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-306">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-306">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-307">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-307">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-308">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-308">Cosmos DB collection name.</span></span>
        - id: createUpdateMongoDBCollectionParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-309">현재 MongoDB 컬렉션에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-309">The parameters to provide for the current MongoDB Collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBDatabase'
    name: 'createUpdateMongoDBDatabase(string, string, string, MongoDBDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-310">만들거나 Azure Cosmos DB MongoDB 데이터베이스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-310">Create or updates Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function createUpdateMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateMongoDBDatabaseParameters: MongoDBDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-311">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-311">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-312">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-312">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-313">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-313">Cosmos DB database name.</span></span>
        - id: createUpdateMongoDBDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-314">현재 MongoDB 데이터베이스에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-314">The parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlContainer'
    name: 'createUpdateSqlContainer(string, string, string, string, SqlContainerCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-315">만들거나 Azure Cosmos DB SQL 컨테이너를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-315">Create or update an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function createUpdateSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, createUpdateSqlContainerParameters: SqlContainerCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-316">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-316">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-317">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-317">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-318">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-318">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-319">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-319">Cosmos DB container name.</span></span>
        - id: createUpdateSqlContainerParameters
          type:
            - '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-320">현재 SQL 컨테이너를 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-320">The parameters to provide for the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlDatabase'
    name: 'createUpdateSqlDatabase(string, string, string, SqlDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-321">Azure Cosmos DB SQL 데이터베이스를 생성 또는 업데이트</span><span class="sxs-lookup"><span data-stu-id="80fdb-321">Create or update an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function createUpdateSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateSqlDatabaseParameters: SqlDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-322">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-322">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-323">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-323">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-324">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-324">Cosmos DB database name.</span></span>
        - id: createUpdateSqlDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-325">현재 SQL 데이터베이스에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-325">The parameters to provide for the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateTable'
    name: 'createUpdateTable(string, string, string, TableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-326">만들거나 Azure Cosmos DB 테이블을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-326">Create or update an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function createUpdateTable(resourceGroupName: string, accountName: string, tableName: string, createUpdateTableParameters: TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-327">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-327">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-328">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-328">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-329">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-329">Cosmos DB table name.</span></span>
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: <span data-ttu-id="80fdb-330">현재 테이블에 대해 제공 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-330">The parameters to provide for the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
    name: DatabaseAccounts(CosmosDBManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-331">DatabaseAccounts를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-331">Create a DatabaseAccounts.</span></span>
    syntax:
      content: 'new DatabaseAccounts(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
          description: |
            <span data-ttu-id="80fdb-332">서비스 클라이언트에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-332">Reference to the service client.</span></span>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraKeyspace'
    name: 'deleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-333">기존 Azure Cosmos DB Cassandra keyspace를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-333">Deletes an existing Azure Cosmos DB Cassandra keyspace.</span></span>
    syntax:
      content: 'function deleteCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-334">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-334">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-335">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-335">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-336">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-336">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraTable'
    name: 'deleteCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-337">기존 Azure Cosmos DB Cassandra 테이블을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-337">Deletes an existing Azure Cosmos DB Cassandra table.</span></span>
    syntax:
      content: 'function deleteCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-338">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-338">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-339">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-339">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-340">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-340">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-341">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-341">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinDatabase'
    name: 'deleteGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-342">기존 Azure Cosmos DB Gremlin 데이터베이스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-342">Deletes an existing Azure Cosmos DB Gremlin database.</span></span>
    syntax:
      content: 'function deleteGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-343">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-343">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-344">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-344">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-345">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-345">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinGraph'
    name: 'deleteGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-346">기존 Azure Cosmos DB Gremlin 그래프를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-346">Deletes an existing Azure Cosmos DB Gremlin graph.</span></span>
    syntax:
      content: 'function deleteGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-347">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-347">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-348">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-348">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-349">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-349">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-350">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-350">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-351">기존 Azure Cosmos DB 데이터베이스 계정을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-351">Deletes an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-352">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-352">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-353">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-353">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBCollection'
    name: 'deleteMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-354">기존 Azure Cosmos DB MongoDB 컬렉션을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-354">Deletes an existing Azure Cosmos DB MongoDB Collection.</span></span>
    syntax:
      content: 'function deleteMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-355">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-355">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-356">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-356">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-357">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-357">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-358">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-358">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBDatabase'
    name: 'deleteMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-359">기존 Azure Cosmos DB MongoDB 데이터베이스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-359">Deletes an existing Azure Cosmos DB MongoDB database.</span></span>
    syntax:
      content: 'function deleteMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-360">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-360">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-361">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-361">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-362">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-362">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlContainer'
    name: 'deleteSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-363">기존 Azure Cosmos DB SQL 컨테이너를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-363">Deletes an existing Azure Cosmos DB SQL container.</span></span>
    syntax:
      content: 'function deleteSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-364">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-364">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-365">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-365">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-366">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-366">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-367">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-367">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlDatabase'
    name: 'deleteSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-368">기존 Azure Cosmos DB SQL 데이터베이스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-368">Deletes an existing Azure Cosmos DB SQL database.</span></span>
    syntax:
      content: 'function deleteSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-369">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-369">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-370">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-370">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-371">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-371">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteTable'
    name: 'deleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-372">기존 Azure Cosmos DB 테이블을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-372">Deletes an existing Azure Cosmos DB Table.</span></span>
    syntax:
      content: 'function deleteTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-373">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-373">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-374">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-374">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-375">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-375">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
    name: 'failoverPriorityChange(string, string, FailoverPolicies, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-376">Azure Cosmos DB 데이터베이스 계정의 장애 조치 우선 순위를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-376">Changes the failover priority for the Azure Cosmos DB database account.</span></span> <span data-ttu-id="80fdb-377">장애 조치 우선 순위 0 쓰기 영역을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-377">A failover priority of 0 indicates a write region.</span></span> <span data-ttu-id="80fdb-378">장애 조치 우선 순위 최대값 (총 지역-1) =.</span><span class="sxs-lookup"><span data-stu-id="80fdb-378">The maximum value for a failover priority = (total number of regions - 1).</span></span> <span data-ttu-id="80fdb-379">장애 조치 우선 순위 값은 데이터베이스 계정이 존재 하는 지역 각각에 대해 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-379">Failover priority values must be unique for each of the regions in which the database account exists.</span></span>
    syntax:
      content: 'function failoverPriorityChange(resourceGroupName: string, accountName: string, failoverParameters: FailoverPolicies, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-380">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-380">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-381">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-381">Cosmos DB database account name.</span></span>
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: <span data-ttu-id="80fdb-382">데이터베이스 계정에 대 한 새 장애 조치 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-382">The new failover policies for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-383">기존 Azure Cosmos DB 데이터베이스 계정의 속성을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-383">Retrieves the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-384">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-384">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-385">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-385">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-386">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-386">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-387">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-387">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-388">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-388">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
          description: |
            <span data-ttu-id="80fdb-389">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-389">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
    name: 'get(string, string, ServiceCallback<DatabaseAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-390">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-390">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-391">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-391">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
          description: |
            <span data-ttu-id="80fdb-392">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-392">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace'
    name: 'getCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-393">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 Cassandra 보내주세요를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-393">Gets the Cassandra keyspaces under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-394">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-394">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-395">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-395">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-396">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-396">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_2'
    name: 'getCassandraKeyspace(string, string, string, RequestOptionsBase, ServiceCallback<CassandraKeyspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraKeyspace>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-397">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-397">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-398">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-398">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-399">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-399">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-400">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-400">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
          description: |
            <span data-ttu-id="80fdb-401">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-401">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_1'
    name: 'getCassandraKeyspace(string, string, string, ServiceCallback<CassandraKeyspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<CassandraKeyspace>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-402">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-402">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-403">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-403">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-404">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-404">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
          description: |
            <span data-ttu-id="80fdb-405">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-405">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput'
    name: 'getCassandraKeyspaceThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-406">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 Cassandra Keyspace 초당 Ru를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-406">Gets the RUs per second of the Cassandra Keyspace under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-407">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-407">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-408">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-408">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-409">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-409">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_2'
    name: 'getCassandraKeyspaceThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-410">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-410">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-411">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-411">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-412">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-412">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-413">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-413">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-414">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-414">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_1'
    name: 'getCassandraKeyspaceThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-415">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-415">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-416">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-416">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-417">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-417">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-418">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-418">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable'
    name: 'getCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-419">기존 Azure Cosmos DB 데이터베이스 계정에서 Cassandra 테이블을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-419">Gets the Cassandra table under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-420">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-420">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-421">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-421">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-422">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-422">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-423">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-423">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_2'
    name: 'getCassandraTable(string, string, string, string, RequestOptionsBase, ServiceCallback<CassandraTable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraTable>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-424">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-424">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-425">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-425">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-426">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-426">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-427">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-427">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-428">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-428">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
          description: |
            <span data-ttu-id="80fdb-429">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-429">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_1'
    name: 'getCassandraTable(string, string, string, string, ServiceCallback<CassandraTable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, callback: ServiceCallback<CassandraTable>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-430">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-430">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-431">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-431">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-432">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-432">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-433">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-433">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
          description: |
            <span data-ttu-id="80fdb-434">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-434">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput'
    name: 'getCassandraTableThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-435">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 Cassandra 테이블의 초당 Ru를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-435">Gets the RUs per second of the Cassandra table under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-436">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-436">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-437">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-437">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-438">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-438">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-439">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-439">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_2'
    name: 'getCassandraTableThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-440">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-440">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-441">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-441">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-442">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-442">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-443">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-443">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-444">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-444">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-445">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-445">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_1'
    name: 'getCassandraTableThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-446">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-446">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-447">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-447">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-448">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-448">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-449">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-449">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-450">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-450">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase'
    name: 'getGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-451">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 Gremlin 데이터베이스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-451">Gets the Gremlin databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-452">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-452">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-453">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-453">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-454">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-454">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_2'
    name: 'getGremlinDatabase(string, string, string, RequestOptionsBase, ServiceCallback<GremlinDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-455">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-455">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-456">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-456">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-457">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-457">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-458">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-458">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
          description: |
            <span data-ttu-id="80fdb-459">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-459">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_1'
    name: 'getGremlinDatabase(string, string, string, ServiceCallback<GremlinDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<GremlinDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-460">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-460">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-461">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-461">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-462">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-462">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
          description: |
            <span data-ttu-id="80fdb-463">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-463">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput'
    name: 'getGremlinDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-464">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 Gremlin 데이터베이스의 초당 Ru를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-464">Gets the RUs per second of the Gremlin database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-465">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-465">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-466">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-466">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-467">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-467">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_2'
    name: 'getGremlinDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-468">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-468">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-469">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-469">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-470">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-470">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-471">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-471">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-472">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-472">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_1'
    name: 'getGremlinDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-473">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-473">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-474">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-474">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-475">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-475">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-476">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-476">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph'
    name: 'getGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-477">기존 Azure Cosmos DB 데이터베이스 계정에서 Gremlin 그래프를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-477">Gets the Gremlin graph under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-478">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-478">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-479">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-479">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-480">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-480">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-481">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-481">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_2'
    name: 'getGremlinGraph(string, string, string, string, RequestOptionsBase, ServiceCallback<GremlinGraph>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinGraph>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-482">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-482">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-483">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-483">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-484">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-484">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-485">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-485">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-486">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-486">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
          description: |
            <span data-ttu-id="80fdb-487">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-487">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_1'
    name: 'getGremlinGraph(string, string, string, string, ServiceCallback<GremlinGraph>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, callback: ServiceCallback<GremlinGraph>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-488">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-488">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-489">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-489">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-490">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-490">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-491">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-491">Cosmos DB graph name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
          description: |
            <span data-ttu-id="80fdb-492">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-492">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput'
    name: 'getGremlinGraphThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-493">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 Gremlin 그래프 처리량을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-493">Gets the Gremlin graph throughput under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-494">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-494">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-495">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-495">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-496">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-496">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-497">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-497">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_2'
    name: 'getGremlinGraphThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-498">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-498">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-499">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-499">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-500">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-500">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-501">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-501">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-502">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-502">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-503">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-503">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_1'
    name: 'getGremlinGraphThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-504">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-504">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-505">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-505">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-506">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-506">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-507">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-507">Cosmos DB graph name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-508">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-508">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection'
    name: 'getMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-509">기존 Azure Cosmos DB 데이터베이스 계정에서 MongoDB 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-509">Gets the MongoDB collection under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-510">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-510">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-511">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-511">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-512">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-512">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-513">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-513">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_2'
    name: 'getMongoDBCollection(string, string, string, string, RequestOptionsBase, ServiceCallback<MongoDBCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-514">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-514">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-515">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-515">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-516">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-516">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-517">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-517">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-518">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-518">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
          description: |
            <span data-ttu-id="80fdb-519">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-519">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_1'
    name: 'getMongoDBCollection(string, string, string, string, ServiceCallback<MongoDBCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, callback: ServiceCallback<MongoDBCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-520">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-520">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-521">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-521">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-522">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-522">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-523">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-523">Cosmos DB collection name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
          description: |
            <span data-ttu-id="80fdb-524">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-524">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-525">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 MongoDB 컬렉션의 초당 Ru를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-525">Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-526">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-526">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-527">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-527">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-528">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-528">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-529">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-529">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_2'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-530">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-530">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-531">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-531">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-532">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-532">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-533">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-533">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-534">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-534">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-535">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-535">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_1'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-536">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-536">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-537">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-537">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-538">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-538">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-539">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-539">Cosmos DB collection name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-540">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-540">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase'
    name: 'getMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-541">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 MongoDB 데이터베이스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-541">Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-542">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-542">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-543">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-543">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-544">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-544">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_2'
    name: 'getMongoDBDatabase(string, string, string, RequestOptionsBase, ServiceCallback<MongoDBDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-545">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-545">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-546">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-546">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-547">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-547">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-548">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-548">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
          description: |
            <span data-ttu-id="80fdb-549">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-549">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_1'
    name: 'getMongoDBDatabase(string, string, string, ServiceCallback<MongoDBDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<MongoDBDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-550">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-550">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-551">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-551">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-552">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-552">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
          description: |
            <span data-ttu-id="80fdb-553">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-553">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput'
    name: 'getMongoDBDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-554">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 MongoDB 데이터베이스의 초당 Ru를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-554">Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-555">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-555">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-556">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-556">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-557">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-557">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_2'
    name: 'getMongoDBDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-558">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-558">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-559">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-559">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-560">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-560">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-561">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-561">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-562">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-562">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_1'
    name: 'getMongoDBDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-563">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-563">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-564">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-564">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-565">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-565">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-566">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-566">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
    name: 'getReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-567">지정된 된 Azure Cosmos DB 데이터베이스 계정에 대 한 읽기 전용 액세스 키를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-567">Lists the read-only access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-568">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-568">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-569">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-569">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
    name: 'getReadOnlyKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-570">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-570">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-571">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-571">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-572">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-572">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="80fdb-573">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-573">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
    name: 'getReadOnlyKeys(string, string, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-574">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-574">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-575">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-575">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="80fdb-576">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-576">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer'
    name: 'getSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-577">기존 Azure Cosmos DB 데이터베이스 계정에서 SQL 컨테이너를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-577">Gets the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-578">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-578">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-579">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-579">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-580">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-580">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-581">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-581">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_2'
    name: 'getSqlContainer(string, string, string, string, RequestOptionsBase, ServiceCallback<SqlContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-582">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-582">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-583">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-583">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-584">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-584">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-585">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-585">Cosmos DB container name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-586">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-586">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
          description: |
            <span data-ttu-id="80fdb-587">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-587">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_1'
    name: 'getSqlContainer(string, string, string, string, ServiceCallback<SqlContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, callback: ServiceCallback<SqlContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-588">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-588">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-589">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-589">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-590">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-590">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-591">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-591">Cosmos DB container name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
          description: |
            <span data-ttu-id="80fdb-592">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-592">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput'
    name: 'getSqlContainerThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-593">기존 Azure Cosmos DB 데이터베이스 계정에서 SQL 컨테이너의 초당 Ru를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-593">Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-594">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-594">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-595">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-595">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-596">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-596">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-597">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-597">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_2'
    name: 'getSqlContainerThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-598">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-598">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-599">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-599">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-600">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-600">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-601">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-601">Cosmos DB container name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-602">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-602">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-603">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-603">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_1'
    name: 'getSqlContainerThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-604">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-604">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-605">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-605">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-606">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-606">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-607">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-607">Cosmos DB container name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-608">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-608">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase'
    name: 'getSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-609">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 SQL 데이터베이스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-609">Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-610">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-610">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-611">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-611">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-612">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-612">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_2'
    name: 'getSqlDatabase(string, string, string, RequestOptionsBase, ServiceCallback<SqlDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-613">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-613">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-614">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-614">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-615">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-615">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-616">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-616">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
          description: |
            <span data-ttu-id="80fdb-617">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-617">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_1'
    name: 'getSqlDatabase(string, string, string, ServiceCallback<SqlDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<SqlDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-618">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-618">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-619">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-619">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-620">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-620">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
          description: |
            <span data-ttu-id="80fdb-621">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-621">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput'
    name: 'getSqlDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-622">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 SQL database의 초당 Ru를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-622">Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-623">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-623">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-624">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-624">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-625">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-625">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_2'
    name: 'getSqlDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-626">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-626">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-627">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-627">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-628">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-628">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-629">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-629">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-630">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-630">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_1'
    name: 'getSqlDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-631">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-631">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-632">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-632">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-633">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-633">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-634">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-634">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable'
    name: 'getTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-635">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 테이블을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-635">Gets the Tables under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-636">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-636">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-637">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-637">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-638">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-638">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable_2'
    name: 'getTable(string, string, string, RequestOptionsBase, ServiceCallback<Table>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Table>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-639">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-639">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-640">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-640">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-641">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-641">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-642">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-642">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Table>
          description: |
            <span data-ttu-id="80fdb-643">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-643">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable_1'
    name: 'getTable(string, string, string, ServiceCallback<Table>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, callback: ServiceCallback<Table>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-644">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-644">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-645">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-645">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-646">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-646">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Table>
          description: |
            <span data-ttu-id="80fdb-647">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-647">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput'
    name: 'getTableThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-648">제공된 된 이름 가진 기존 Azure Cosmos DB 데이터베이스 계정에서 테이블의 초당 Ru를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-648">Gets the RUs per second of the Table under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-649">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-649">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-650">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-650">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-651">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-651">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_2'
    name: 'getTableThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-652">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-652">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-653">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-653">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-654">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-654">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-655">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-655">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-656">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-656">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_1'
    name: 'getTableThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-657">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-657">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-658">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-658">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-659">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-659">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="80fdb-660">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-660">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-661">구독에서 사용 가능한 모든 Azure Cosmos DB 데이터베이스 계정을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-661">Lists all the Azure Cosmos DB database accounts available under the subscription.</span></span>
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-662">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-662">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="80fdb-663">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-663">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
    name: list(ServiceCallback<DatabaseAccountsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="80fdb-664">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-664">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-665">지정된 된 리소스 그룹에서 사용 가능한 모든 Azure Cosmos DB 데이터베이스 계정을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-665">Lists all the Azure Cosmos DB database accounts available under the given resource group.</span></span>
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-666">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-666">Name of an Azure resource group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
    name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-667">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-667">Name of an Azure resource group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-668">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-668">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="80fdb-669">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-669">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-670">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-670">Name of an Azure resource group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="80fdb-671">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-671">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces'
    name: 'listCassandraKeyspaces(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-672">기존 Azure Cosmos DB 데이터베이스 계정에서 Cassandra 보내주세요를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-672">Lists the Cassandra keyspaces under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-673">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-673">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-674">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-674">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_2'
    name: 'listCassandraKeyspaces(string, string, RequestOptionsBase, ServiceCallback<CassandraKeyspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraKeyspaceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-675">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-675">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-676">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-676">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-677">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-677">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            <span data-ttu-id="80fdb-678">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-678">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_1'
    name: 'listCassandraKeyspaces(string, string, ServiceCallback<CassandraKeyspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, callback: ServiceCallback<CassandraKeyspaceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-679">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-679">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-680">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-680">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            <span data-ttu-id="80fdb-681">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-681">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables'
    name: 'listCassandraTables(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-682">기존 Azure Cosmos DB 데이터베이스 계정에서 Cassandra 테이블을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-682">Lists the Cassandra table under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-683">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-683">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-684">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-684">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-685">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-685">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_2'
    name: 'listCassandraTables(string, string, string, RequestOptionsBase, ServiceCallback<CassandraTableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraTableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-686">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-686">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-687">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-687">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-688">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-688">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-689">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-689">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            <span data-ttu-id="80fdb-690">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-690">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_1'
    name: 'listCassandraTables(string, string, string, ServiceCallback<CassandraTableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<CassandraTableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-691">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-691">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-692">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-692">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-693">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-693">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            <span data-ttu-id="80fdb-694">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-694">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
    name: 'listConnectionStrings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-695">지정된 된 Azure Cosmos DB 데이터베이스 계정에 대 한 연결 문자열을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-695">Lists the connection strings for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-696">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-696">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-697">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-697">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
    name: 'listConnectionStrings(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-698">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-698">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-699">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-699">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-700">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-700">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            <span data-ttu-id="80fdb-701">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-701">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
    name: 'listConnectionStrings(string, string, ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-702">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-702">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-703">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-703">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            <span data-ttu-id="80fdb-704">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-704">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases'
    name: 'listGremlinDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-705">기존 Azure Cosmos DB 데이터베이스 계정에서 Gremlin 데이터베이스를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-705">Lists the Gremlin databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-706">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-706">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-707">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-707">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_2'
    name: 'listGremlinDatabases(string, string, RequestOptionsBase, ServiceCallback<GremlinDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-708">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-708">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-709">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-709">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-710">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-710">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
          description: |
            <span data-ttu-id="80fdb-711">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-711">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_1'
    name: 'listGremlinDatabases(string, string, ServiceCallback<GremlinDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<GremlinDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-712">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-712">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-713">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-713">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
          description: |
            <span data-ttu-id="80fdb-714">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-714">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs'
    name: 'listGremlinGraphs(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-715">기존 Azure Cosmos DB 데이터베이스 계정에서 Gremlin 그래프를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-715">Lists the Gremlin graph under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-716">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-716">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-717">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-717">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-718">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-718">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_2'
    name: 'listGremlinGraphs(string, string, string, RequestOptionsBase, ServiceCallback<GremlinGraphListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinGraphListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-719">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-719">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-720">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-720">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-721">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-721">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-722">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-722">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
          description: |
            <span data-ttu-id="80fdb-723">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-723">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_1'
    name: 'listGremlinGraphs(string, string, string, ServiceCallback<GremlinGraphListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<GremlinGraphListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-724">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-724">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-725">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-725">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-726">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-726">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
          description: |
            <span data-ttu-id="80fdb-727">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-727">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
    name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-728">지정된 된 Azure Cosmos DB 데이터베이스 계정에 대 한 액세스 키를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-728">Lists the access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-729">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-729">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-730">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-730">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
    name: 'listKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-731">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-731">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-732">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-732">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-733">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-733">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            <span data-ttu-id="80fdb-734">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-734">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
    name: 'listKeys(string, string, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-735">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-735">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-736">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-736">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            <span data-ttu-id="80fdb-737">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-737">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
    name: 'listMetricDefinitions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-738">지정 된 데이터베이스 계정에 대 한 메트릭 정의 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-738">Retrieves metric definitions for the given database account.</span></span>
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-739">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-739">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-740">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-740">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
    name: 'listMetricDefinitions(string, string, RequestOptionsBase, ServiceCallback<MetricDefinitionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<MetricDefinitionsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-741">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-741">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-742">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-742">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-743">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-743">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            <span data-ttu-id="80fdb-744">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-744">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
    name: 'listMetricDefinitions(string, string, ServiceCallback<MetricDefinitionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, callback: ServiceCallback<MetricDefinitionsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-745">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-745">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-746">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-746">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            <span data-ttu-id="80fdb-747">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-747">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
    name: 'listMetrics(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-748">지정 된 데이터베이스 계정에 대해 지정 된 필터에 의해 결정 메트릭을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-748">Retrieves the metrics determined by the given filter for the given database account.</span></span>
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-749">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-749">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-750">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-750">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="80fdb-751">반환할 메트릭의 하위 집합을 설명 하는 OData 필터 식입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-751">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="80fdb-752">필터링 할 수 있는 매개 변수는 name.value (메트릭 이름를 또는 여러 이름을 가질 수 있습니다), startTime, endTime 및 timeGrain입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-752">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="80fdb-753">지원 되는 연산자가 게인에서</span><span class="sxs-lookup"><span data-stu-id="80fdb-753">The supported operator is eq.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
    name: 'listMetrics(string, string, string, RequestOptionsBase, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, options: RequestOptionsBase, callback: ServiceCallback<MetricListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-754">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-754">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-755">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-755">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="80fdb-756">반환할 메트릭의 하위 집합을 설명 하는 OData 필터 식입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-756">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="80fdb-757">필터링 할 수 있는 매개 변수는 name.value (메트릭 이름를 또는 여러 이름을 가질 수 있습니다), startTime, endTime 및 timeGrain입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-757">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="80fdb-758">지원 되는 연산자가 게인에서</span><span class="sxs-lookup"><span data-stu-id="80fdb-758">The supported operator is eq.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-759">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-759">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            <span data-ttu-id="80fdb-760">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-760">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
    name: 'listMetrics(string, string, string, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, callback: ServiceCallback<MetricListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-761">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-761">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-762">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-762">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="80fdb-763">반환할 메트릭의 하위 집합을 설명 하는 OData 필터 식입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-763">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="80fdb-764">필터링 할 수 있는 매개 변수는 name.value (메트릭 이름를 또는 여러 이름을 가질 수 있습니다), startTime, endTime 및 timeGrain입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-764">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="80fdb-765">지원 되는 연산자가 게인에서</span><span class="sxs-lookup"><span data-stu-id="80fdb-765">The supported operator is eq.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            <span data-ttu-id="80fdb-766">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-766">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections'
    name: 'listMongoDBCollections(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-767">기존 Azure Cosmos DB 데이터베이스 계정에서 MongoDB 컬렉션을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-767">Lists the MongoDB collection under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-768">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-768">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-769">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-769">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-770">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-770">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_2'
    name: 'listMongoDBCollections(string, string, string, RequestOptionsBase, ServiceCallback<MongoDBCollectionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBCollectionListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-771">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-771">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-772">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-772">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-773">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-773">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-774">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-774">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
          description: |
            <span data-ttu-id="80fdb-775">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-775">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_1'
    name: 'listMongoDBCollections(string, string, string, ServiceCallback<MongoDBCollectionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<MongoDBCollectionListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-776">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-776">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-777">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-777">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-778">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-778">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
          description: |
            <span data-ttu-id="80fdb-779">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-779">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases'
    name: 'listMongoDBDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-780">기존 Azure Cosmos DB 데이터베이스 계정에서 MongoDB 데이터베이스를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-780">Lists the MongoDB databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-781">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-781">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-782">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-782">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_2'
    name: 'listMongoDBDatabases(string, string, RequestOptionsBase, ServiceCallback<MongoDBDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-783">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-783">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-784">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-784">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-785">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-785">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
          description: |
            <span data-ttu-id="80fdb-786">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-786">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_1'
    name: 'listMongoDBDatabases(string, string, ServiceCallback<MongoDBDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<MongoDBDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-787">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-787">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-788">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-788">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
          description: |
            <span data-ttu-id="80fdb-789">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-789">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
    name: 'listReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-790">지정된 된 Azure Cosmos DB 데이터베이스 계정에 대 한 읽기 전용 액세스 키를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-790">Lists the read-only access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-791">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-791">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-792">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-792">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
    name: 'listReadOnlyKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-793">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-793">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-794">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-794">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-795">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-795">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="80fdb-796">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-796">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
    name: 'listReadOnlyKeys(string, string, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-797">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-797">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-798">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-798">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="80fdb-799">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-799">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers'
    name: 'listSqlContainers(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-800">기존 Azure Cosmos DB 데이터베이스 계정에서 SQL 컨테이너를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-800">Lists the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-801">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-801">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-802">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-802">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-803">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-803">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_2'
    name: 'listSqlContainers(string, string, string, RequestOptionsBase, ServiceCallback<SqlContainerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlContainerListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-804">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-804">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-805">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-805">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-806">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-806">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-807">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-807">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
          description: |
            <span data-ttu-id="80fdb-808">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-808">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_1'
    name: 'listSqlContainers(string, string, string, ServiceCallback<SqlContainerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<SqlContainerListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-809">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-809">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-810">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-810">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-811">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-811">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
          description: |
            <span data-ttu-id="80fdb-812">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-812">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases'
    name: 'listSqlDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-813">SQL database는 기존 Azure Cosmos DB 데이터베이스 계정 아래에 나열 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-813">Lists the SQL databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-814">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-814">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-815">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-815">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_2'
    name: 'listSqlDatabases(string, string, RequestOptionsBase, ServiceCallback<SqlDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-816">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-816">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-817">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-817">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-818">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-818">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
          description: |
            <span data-ttu-id="80fdb-819">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-819">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_1'
    name: 'listSqlDatabases(string, string, ServiceCallback<SqlDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<SqlDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-820">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-820">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-821">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-821">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
          description: |
            <span data-ttu-id="80fdb-822">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-822">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables'
    name: 'listTables(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-823">기존 Azure Cosmos DB 데이터베이스 계정에서 테이블을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-823">Lists the Tables under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-824">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-824">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-825">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-825">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables_2'
    name: 'listTables(string, string, RequestOptionsBase, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<TableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-826">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-826">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-827">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-827">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="80fdb-828">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-828">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            <span data-ttu-id="80fdb-829">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-829">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables_1'
    name: 'listTables(string, string, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, callback: ServiceCallback<TableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-830">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-830">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-831">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-831">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            <span data-ttu-id="80fdb-832">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-832">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
    name: 'listUsages(string, string, DatabaseAccountsListUsagesOptionalParams, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, options: DatabaseAccountsListUsagesOptionalParams, callback: ServiceCallback<UsagesResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-833">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-833">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-834">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-834">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
          description: <span data-ttu-id="80fdb-835">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="80fdb-835">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            <span data-ttu-id="80fdb-836">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-836">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
    name: 'listUsages(string, string, Models.DatabaseAccountsListUsagesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-837">지정 된 데이터베이스 계정 사용 (가장 최근 데이터)를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-837">Retrieves the usages (most recent data) for the given database account.</span></span>
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, options?: Models.DatabaseAccountsListUsagesOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-838">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-838">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-839">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-839">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - Models.DatabaseAccountsListUsagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
    name: 'listUsages(string, string, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, callback: ServiceCallback<UsagesResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-840">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-840">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-841">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-841">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            <span data-ttu-id="80fdb-842">콜백</span><span class="sxs-lookup"><span data-stu-id="80fdb-842">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
    name: 'offlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-843">오프 라인으로 지정 된 Azure Cosmos DB에 대 한 지정된 된 지역 데이터베이스 계정.</span><span class="sxs-lookup"><span data-stu-id="80fdb-843">Offline the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function offlineRegion(resourceGroupName: string, accountName: string, regionParameterForOffline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-844">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-844">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-845">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-845">Cosmos DB database account name.</span></span>
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="80fdb-846">Cosmos DB 지역 데이터베이스 계정에 대 한 오프 라인입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-846">Cosmos DB region to offline for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
    name: 'onlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-847">온라인 지정 된 Azure Cosmos DB에 대 한 지정된 된 지역 데이터베이스 계정.</span><span class="sxs-lookup"><span data-stu-id="80fdb-847">Online the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function onlineRegion(resourceGroupName: string, accountName: string, regionParameterForOnline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-848">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-848">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-849">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-849">Cosmos DB database account name.</span></span>
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="80fdb-850">Cosmos DB 지역 데이터베이스 계정에 대 한 온라인입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-850">Cosmos DB region to online for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.patch'
    name: 'patch(string, string, DatabaseAccountPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-851">기존 Azure Cosmos DB 데이터베이스 계정의 속성을 패치합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-851">Patches the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function patch(resourceGroupName: string, accountName: string, updateParameters: DatabaseAccountPatchParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-852">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-852">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-853">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-853">Cosmos DB database account name.</span></span>
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
          description: <span data-ttu-id="80fdb-854">현재 데이터베이스 계정에 대 한 패치를 태그 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-854">The tags parameter to patch for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsPatchResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
    name: 'regenerateKey(string, string, DatabaseAccountRegenerateKeyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-855">지정된 된 Azure Cosmos DB 데이터베이스 계정에 대 한 액세스 키 다시 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-855">Regenerates an access key for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-856">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-856">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-857">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-857">Cosmos DB database account name.</span></span>
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: <span data-ttu-id="80fdb-858">다시 생성할 키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-858">The name of the key to regenerate.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraKeyspaceThroughput'
    name: 'updateCassandraKeyspaceThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-859">Azure Cosmos DB Cassandra Keyspace 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-859">Update RUs per second of an Azure Cosmos DB Cassandra Keyspace</span></span>
    syntax:
      content: 'function updateCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-860">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-860">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-861">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-861">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-862">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-862">Cosmos DB keyspace name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-863">매개 변수는 현재 Cassandra Keyspace 수 있도록 초당 Ru입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-863">The RUs per second of the parameters to provide for the current Cassandra Keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraTableThroughput'
    name: 'updateCassandraTableThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-864">Azure Cosmos DB Cassandra 테이블의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-864">Update RUs per second of an Azure Cosmos DB Cassandra table</span></span>
    syntax:
      content: 'function updateCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-865">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-865">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-866">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-866">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="80fdb-867">Cosmos DB 키 스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-867">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-868">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-868">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-869">매개 변수는 현재 Cassandra 테이블에 대 한 제공 초당 Ru 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-869">The RUs per second of the parameters to provide for the current Cassandra table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinDatabaseThroughput'
    name: 'updateGremlinDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-870">Azure Cosmos DB Gremlin 데이터베이스의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-870">Update RUs per second of an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function updateGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-871">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-871">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-872">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-872">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-873">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-873">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-874">매개 변수를 현재 Gremlin 데이터베이스 수 있도록 초당 Ru 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-874">The RUs per second of the parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinGraphThroughput'
    name: 'updateGremlinGraphThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-875">Azure Cosmos DB Gremlin 그래프의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-875">Update RUs per second of an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function updateGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-876">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-876">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-877">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-877">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-878">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-878">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="80fdb-879">Cosmos DB 그래프 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-879">Cosmos DB graph name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-880">매개 변수를 현재 Gremlin 그래프 수 있도록 초당 Ru입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-880">The RUs per second of the parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBCollectionThroughput'
    name: 'updateMongoDBCollectionThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-881">Azure Cosmos DB MongoDB 컬렉션의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-881">Update the RUs per second of an Azure Cosmos DB MongoDB collection</span></span>
    syntax:
      content: 'function updateMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-882">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-882">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-883">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-883">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-884">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-884">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="80fdb-885">Cosmos DB 컬렉션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-885">Cosmos DB collection name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-886">매개 변수를 현재 MongoDB 컬렉션 수 있도록 초당 Ru입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-886">The RUs per second of the parameters to provide for the current MongoDB collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBDatabaseThroughput'
    name: 'updateMongoDBDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-887">초당 Ru 업데이트는 Azure Cosmos DB MongoDB 데이터베이스를</span><span class="sxs-lookup"><span data-stu-id="80fdb-887">Update RUs per second of the an Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function updateMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-888">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-888">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-889">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-889">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-890">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-890">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-891">현재 MongoDB 데이터베이스에 대해 제공 하는 매개 변수의 초당 Ru입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-891">The RUs per second of the parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlContainerThroughput'
    name: 'updateSqlContainerThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-892">Azure Cosmos DB SQL 컨테이너의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-892">Update RUs per second of an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function updateSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-893">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-893">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-894">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-894">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-895">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-895">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="80fdb-896">Cosmos DB 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-896">Cosmos DB container name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-897">현재 SQL 컨테이너의 초당 Ru 수 있도록 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-897">The parameters to provide for the RUs per second of the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlDatabaseThroughput'
    name: 'updateSqlDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-898">Azure Cosmos DB SQL database의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-898">Update RUs per second of an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function updateSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-899">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-899">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-900">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-900">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="80fdb-901">Cosmos DB 데이터베이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-901">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-902">현재 SQL database의 초당 Ru 수 있도록 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-902">The parameters to provide for the RUs per second of the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateTableThroughput'
    name: 'updateTableThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80fdb-903">Azure Cosmos DB 테이블의 초당 Ru를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-903">Update RUs per second of an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function updateTableThroughput(resourceGroupName: string, accountName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="80fdb-904">Azure 리소스 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-904">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="80fdb-905">Cosmos DB 데이터베이스 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-905">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="80fdb-906">Cosmos DB 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-906">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="80fdb-907">현재 테이블의 초당 Ru 수 있도록 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="80fdb-907">The parameters to provide for the RUs per second of the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
references:
  - uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
    name: CosmosDBManagementClientContext
    spec.typeScript:
      - name: CosmosDBManagementClientContext
        fullName: CosmosDBManagementClientContext
        uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
    name: DatabaseAccountCreateUpdateParameters
    spec.typeScript:
      - name: DatabaseAccountCreateUpdateParameters
        fullName: DatabaseAccountCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
    name: CassandraKeyspaceCreateUpdateParameters
    spec.typeScript:
      - name: CassandraKeyspaceCreateUpdateParameters
        fullName: CassandraKeyspaceCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
    name: CassandraTableCreateUpdateParameters
    spec.typeScript:
      - name: CassandraTableCreateUpdateParameters
        fullName: CassandraTableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
    name: GremlinDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: GremlinDatabaseCreateUpdateParameters
        fullName: GremlinDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
    name: GremlinGraphCreateUpdateParameters
    spec.typeScript:
      - name: GremlinGraphCreateUpdateParameters
        fullName: GremlinGraphCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
    name: MongoDBCollectionCreateUpdateParameters
    spec.typeScript:
      - name: MongoDBCollectionCreateUpdateParameters
        fullName: MongoDBCollectionCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
    name: MongoDBDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: MongoDBDatabaseCreateUpdateParameters
        fullName: MongoDBDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
    name: SqlContainerCreateUpdateParameters
    spec.typeScript:
      - name: SqlContainerCreateUpdateParameters
        fullName: SqlContainerCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
    name: SqlDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: SqlDatabaseCreateUpdateParameters
        fullName: SqlDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
    name: TableCreateUpdateParameters
    spec.typeScript:
      - name: TableCreateUpdateParameters
        fullName: TableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.FailoverPolicies'
    name: FailoverPolicies
    spec.typeScript:
      - name: FailoverPolicies
        fullName: FailoverPolicies
        uid: '@azure/arm-cosmosdb.FailoverPolicies'
  - uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
    name: RegionForOnlineOffline
    spec.typeScript:
      - name: RegionForOnlineOffline
        fullName: RegionForOnlineOffline
        uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
    name: DatabaseAccountPatchParameters
    spec.typeScript:
      - name: DatabaseAccountPatchParameters
        fullName: DatabaseAccountPatchParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
    name: DatabaseAccountRegenerateKeyParameters
    spec.typeScript:
      - name: DatabaseAccountRegenerateKeyParameters
        fullName: DatabaseAccountRegenerateKeyParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
  - uid: '@azure/arm-cosmosdb.ThroughputUpdateParameters'
    name: ThroughputUpdateParameters
    spec.typeScript:
      - name: ThroughputUpdateParameters
        fullName: ThroughputUpdateParameters
        uid: '@azure/arm-cosmosdb.ThroughputUpdateParameters'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
    name: DatabaseAccount>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccount
        fullName: DatabaseAccount
        uid: '@azure/arm-cosmosdb.DatabaseAccount'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
    name: CassandraKeyspace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspace
        fullName: CassandraKeyspace
        uid: '@azure/arm-cosmosdb.CassandraKeyspace'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.Throughput>
    name: Throughput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Throughput
        fullName: Throughput
        uid: '@azure/arm-cosmosdb.Throughput'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
    name: CassandraTable>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTable
        fullName: CassandraTable
        uid: '@azure/arm-cosmosdb.CassandraTable'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
    name: GremlinDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinDatabase
        fullName: GremlinDatabase
        uid: '@azure/arm-cosmosdb.GremlinDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
    name: GremlinGraph>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinGraph
        fullName: GremlinGraph
        uid: '@azure/arm-cosmosdb.GremlinGraph'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
    name: MongoDBCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBCollection
        fullName: MongoDBCollection
        uid: '@azure/arm-cosmosdb.MongoDBCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
    name: MongoDBDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBDatabase
        fullName: MongoDBDatabase
        uid: '@azure/arm-cosmosdb.MongoDBDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
    name: DatabaseAccountListReadOnlyKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListReadOnlyKeysResult
        fullName: DatabaseAccountListReadOnlyKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
    name: SqlContainer>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlContainer
        fullName: SqlContainer
        uid: '@azure/arm-cosmosdb.SqlContainer'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
    name: SqlDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlDatabase
        fullName: SqlDatabase
        uid: '@azure/arm-cosmosdb.SqlDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.Table>
    name: Table>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Table
        fullName: Table
        uid: '@azure/arm-cosmosdb.Table'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
    name: DatabaseAccountsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountsListResult
        fullName: DatabaseAccountsListResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
    name: CassandraKeyspaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspaceListResult
        fullName: CassandraKeyspaceListResult
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
    name: CassandraTableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTableListResult
        fullName: CassandraTableListResult
        uid: '@azure/arm-cosmosdb.CassandraTableListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
    name: DatabaseAccountListConnectionStringsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListConnectionStringsResult
        fullName: DatabaseAccountListConnectionStringsResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
    name: GremlinDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinDatabaseListResult
        fullName: GremlinDatabaseListResult
        uid: '@azure/arm-cosmosdb.GremlinDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
    name: GremlinGraphListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinGraphListResult
        fullName: GremlinGraphListResult
        uid: '@azure/arm-cosmosdb.GremlinGraphListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
    name: DatabaseAccountListKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListKeysResult
        fullName: DatabaseAccountListKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
    name: MetricDefinitionsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricDefinitionsListResult
        fullName: MetricDefinitionsListResult
        uid: '@azure/arm-cosmosdb.MetricDefinitionsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
    name: MetricListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricListResult
        fullName: MetricListResult
        uid: '@azure/arm-cosmosdb.MetricListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
    name: MongoDBCollectionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBCollectionListResult
        fullName: MongoDBCollectionListResult
        uid: '@azure/arm-cosmosdb.MongoDBCollectionListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
    name: MongoDBDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBDatabaseListResult
        fullName: MongoDBDatabaseListResult
        uid: '@azure/arm-cosmosdb.MongoDBDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
    name: SqlContainerListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlContainerListResult
        fullName: SqlContainerListResult
        uid: '@azure/arm-cosmosdb.SqlContainerListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
    name: SqlDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlDatabaseListResult
        fullName: SqlDatabaseListResult
        uid: '@azure/arm-cosmosdb.SqlDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.TableListResult>
    name: TableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TableListResult
        fullName: TableListResult
        uid: '@azure/arm-cosmosdb.TableListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
    name: UsagesResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UsagesResult
        fullName: UsagesResult
        uid: '@azure/arm-cosmosdb.UsagesResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
    name: DatabaseAccountsListUsagesOptionalParams
    spec.typeScript:
      - name: DatabaseAccountsListUsagesOptionalParams
        fullName: DatabaseAccountsListUsagesOptionalParams
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'