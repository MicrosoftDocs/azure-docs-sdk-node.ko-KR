### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-datalake.PathOperations'
    name: PathOperations
    fullName: PathOperations
    children:
      - '@azure/storage-datalake.PathOperations.create'
      - '@azure/storage-datalake.PathOperations.create_2'
      - '@azure/storage-datalake.PathOperations.create_1'
      - '@azure/storage-datalake.PathOperations.deleteMethod'
      - '@azure/storage-datalake.PathOperations.deleteMethod_2'
      - '@azure/storage-datalake.PathOperations.deleteMethod_1'
      - '@azure/storage-datalake.PathOperations.getProperties'
      - '@azure/storage-datalake.PathOperations.getProperties_2'
      - '@azure/storage-datalake.PathOperations.getProperties_1'
      - '@azure/storage-datalake.PathOperations.lease'
      - '@azure/storage-datalake.PathOperations.lease_2'
      - '@azure/storage-datalake.PathOperations.lease_1'
      - '@azure/storage-datalake.PathOperations.list'
      - '@azure/storage-datalake.PathOperations.list_2'
      - '@azure/storage-datalake.PathOperations.list_1'
      - '@azure/storage-datalake.PathOperations.constructor'
      - '@azure/storage-datalake.PathOperations.read'
      - '@azure/storage-datalake.PathOperations.read_2'
      - '@azure/storage-datalake.PathOperations.read_1'
      - '@azure/storage-datalake.PathOperations.update'
      - '@azure/storage-datalake.PathOperations.update_2'
      - '@azure/storage-datalake.PathOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: PathOperations 나타내는 클래스입니다.
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create'
    name: 'create(string, string, Models.PathCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      페이지를 만들거나 파일 또는 디렉터리의 이름을 바꿉니다.    기본적으로 대상은 덮어쓰여지 며 대상에서 이미 존재 하 고 임대의 임대가 중단 됩니다.  이 작업은 조건부 HTTP 요청을 지원 합니다.  자세한 내용은 [Blob 서비스 작업의 조건부 헤더 지정](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)합니다.
      대상이 이미 있으면 실패 경우-없음-일치를 사용 하 여 조건부 요청을 사용 합니다. "*"입니다.
    syntax:
      content: 'function create(filesystem: string, path: string, options?: Models.PathCreateOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - Models.PathCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create_2'
    name: 'create(string, string, PathCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, path: string, options: PathCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - '@azure/storage-datalake.PathCreateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create_1'
    name: 'create(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod'
    name: 'deleteMethod(string, string, Models.PathDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '파일 또는 디렉터리를 삭제 합니다. 이 작업은 조건부 HTTP 요청을 지원 합니다.  자세한 내용은 [Blob 서비스 작업의 조건부 헤더 지정](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)합니다.'
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, options?: Models.PathDeleteMethodOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - Models.PathDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod_2'
    name: 'deleteMethod(string, string, PathDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, options: PathDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - '@azure/storage-datalake.PathDeleteMethodOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties'
    name: 'getProperties(string, string, Models.PathGetPropertiesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      파일 또는 디렉터리에 대 한 속성을 얻고 필요에 따라 액세스 제어 목록을 포함 합니다.
      이 작업은 조건부 HTTP 요청을 지원 합니다.  자세한 내용은 [Blob 서비스 작업의 조건부 헤더 지정](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)합니다.
    syntax:
      content: 'function getProperties(filesystem: string, path: string, options?: Models.PathGetPropertiesOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - Models.PathGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties_2'
    name: 'getProperties(string, string, PathGetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, path: string, options: PathGetPropertiesOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - '@azure/storage-datalake.PathGetPropertiesOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties_1'
    name: 'getProperties(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease'
    name: 'lease(Models.PathLeaseAction, string, string, Models.PathLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '쓰기를 제한 하 고 경로에 대 한 액세스를 삭제 하는 임대를 만들고 설정 합니다. 이 작업은 조건부 HTTP 요청을 지원 합니다.  자세한 내용은 [Blob 서비스 작업의 조건부 헤더 지정](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)합니다.'
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, options?: Models.PathLeaseOptionalParams)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            작업을 임대 5 가지: "acquire", "중단", "변경", "갱신" 및 "릴리스"입니다. "Acquire"를 사용 하 고 "x-ms-제안-임대-id" 및 "x-ms-임대-기간" 새 임대를 획득 하를 지정 합니다. 기존 임대를 중단 하려면 "중단"를 사용 합니다. 임대가 중단 되 면 임대 중단 기간이 임대가 중단 되,이 시간 동안 중단 및 릴리스를 제외한 임대 작업도 파일에 수행할 수 있습니다. 임대가 성공적으로 중단 되 면 응답 새로운 임대를 획득 될 때까지 시간 (초) 간격을 나타냅니다. 사용 하 여 "변경" 및 "x-ms-임대-id"에서 현재 임대 ID를 및 "x-ms-제안-임대-id"에서 새 임대 ID를 활성 임대의 임대 ID를 변경 하려면 지정 합니다. "갱신"를 사용 하 고 "x-ms-임대-id" 기존 임대를 갱신 하려면를 지정 합니다.
            "릴리스"를 사용 하 고 "x-ms-임대-id"를 임대 해제를 지정 합니다. 가능한 값: '획득', '중단', '변경', '갱신', '릴리스'
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - Models.PathLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease_2'
    name: 'lease(Models.PathLeaseAction, string, string, PathLeaseOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, options: PathLeaseOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            작업을 임대 5 가지: "acquire", "중단", "변경", "갱신" 및 "릴리스"입니다. "Acquire"를 사용 하 고 "x-ms-제안-임대-id" 및 "x-ms-임대-기간" 새 임대를 획득 하를 지정 합니다. 기존 임대를 중단 하려면 "중단"를 사용 합니다. 임대가 중단 되 면 임대 중단 기간이 임대가 중단 되,이 시간 동안 중단 및 릴리스를 제외한 임대 작업도 파일에 수행할 수 있습니다. 임대가 성공적으로 중단 되 면 응답 새로운 임대를 획득 될 때까지 시간 (초) 간격을 나타냅니다. 사용 하 여 "변경" 및 "x-ms-임대-id"에서 현재 임대 ID를 및 "x-ms-제안-임대-id"에서 새 임대 ID를 활성 임대의 임대 ID를 변경 하려면 지정 합니다. "갱신"를 사용 하 고 "x-ms-임대-id" 기존 임대를 갱신 하려면를 지정 합니다.
            "릴리스"를 사용 하 고 "x-ms-임대-id"를 임대 해제를 지정 합니다. 가능한 값: '획득', '중단', '변경', '갱신', '릴리스'
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - '@azure/storage-datalake.PathLeaseOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease_1'
    name: 'lease(Models.PathLeaseAction, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            작업을 임대 5 가지: "acquire", "중단", "변경", "갱신" 및 "릴리스"입니다. "Acquire"를 사용 하 고 "x-ms-제안-임대-id" 및 "x-ms-임대-기간" 새 임대를 획득 하를 지정 합니다. 기존 임대를 중단 하려면 "중단"를 사용 합니다. 임대가 중단 되 면 임대 중단 기간이 임대가 중단 되,이 시간 동안 중단 및 릴리스를 제외한 임대 작업도 파일에 수행할 수 있습니다. 임대가 성공적으로 중단 되 면 응답 새로운 임대를 획득 될 때까지 시간 (초) 간격을 나타냅니다. 사용 하 여 "변경" 및 "x-ms-임대-id"에서 현재 임대 ID를 및 "x-ms-제안-임대-id"에서 새 임대 ID를 활성 임대의 임대 ID를 변경 하려면 지정 합니다. "갱신"를 사용 하 고 "x-ms-임대-id" 기존 임대를 갱신 하려면를 지정 합니다.
            "릴리스"를 사용 하 고 "x-ms-임대-id"를 임대 해제를 지정 합니다. 가능한 값: '획득', '중단', '변경', '갱신', '릴리스'
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list'
    name: 'list(boolean, string, Models.PathListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 파일 시스템 경로 및 해당 속성을 나열 합니다.
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, options?: Models.PathListOptionalParams)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '"True" 일 경우 모든 경로가 나열 됩니다. 그렇지 않은 경우 파일 시스템의 루트에 대 한 경로만 나열 됩니다.  "디렉터리"를 지정 하는 경우 목록에는 동일한 루트를 공유 하는 경로가 포함 됩니다.'
        - id: filesystem
          type:
            - string
          description: '파일 시스템 식별자입니다.  값을 시작 하 고 끝나야 번호 및 문자, 숫자 및 대시 (-) 문자만 포함 해야 합니다.  연속 대시는 허용 되지 않습니다.  모든 문자는 소문자 여야 합니다.  값 3 ~ 63 자 사이 여야 합니다.'
        - id: options
          type:
            - Models.PathListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list_2'
    name: 'list(boolean, string, PathListOptionalParams, ServiceCallback<PathList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, options: PathListOptionalParams, callback: ServiceCallback<PathList>)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '"True" 일 경우 모든 경로가 나열 됩니다. 그렇지 않은 경우 파일 시스템의 루트에 대 한 경로만 나열 됩니다.  "디렉터리"를 지정 하는 경우 목록에는 동일한 루트를 공유 하는 경로가 포함 됩니다.'
        - id: filesystem
          type:
            - string
          description: '파일 시스템 식별자입니다.  값을 시작 하 고 끝나야 번호 및 문자, 숫자 및 대시 (-) 문자만 포함 해야 합니다.  연속 대시는 허용 되지 않습니다.  모든 문자는 소문자 여야 합니다.  값 3 ~ 63 자 사이 여야 합니다.'
        - id: options
          type:
            - '@azure/storage-datalake.PathListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.PathList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list_1'
    name: 'list(boolean, string, ServiceCallback<PathList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, callback: ServiceCallback<PathList>)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '"True" 일 경우 모든 경로가 나열 됩니다. 그렇지 않은 경우 파일 시스템의 루트에 대 한 경로만 나열 됩니다.  "디렉터리"를 지정 하는 경우 목록에는 동일한 루트를 공유 하는 경로가 포함 됩니다.'
        - id: filesystem
          type:
            - string
          description: '파일 시스템 식별자입니다.  값을 시작 하 고 끝나야 번호 및 문자, 숫자 및 대시 (-) 문자만 포함 해야 합니다.  연속 대시는 허용 되지 않습니다.  모든 문자는 소문자 여야 합니다.  값 3 ~ 63 자 사이 여야 합니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.PathList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.constructor'
    name: PathOperations(DataLakeStorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: PathOperations를 만듭니다.
    syntax:
      content: 'new PathOperations(client: DataLakeStorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-datalake.DataLakeStorageClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read'
    name: 'read(string, string, Models.PathReadOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '파일의 내용을 읽습니다.  읽기 작업에 대해 범위 요청은 지원 됩니다. 이 작업은 조건부 HTTP 요청을 지원 합니다.  자세한 내용은 [Blob 서비스 작업의 조건부 헤더 지정](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)합니다.'
    syntax:
      content: 'function read(filesystem: string, path: string, options?: Models.PathReadOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - Models.PathReadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read_2'
    name: 'read(string, string, PathReadOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(filesystem: string, path: string, options: PathReadOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - '@azure/storage-datalake.PathReadOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read_1'
    name: 'read(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update'
    name: 'update(Models.PathUpdateAction, string, string, Models.PathUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '파일에 추가할 데이터 업로드, 파일 (쓰기) 이전에 업로드 된 데이터를 플러시합니다, 그리고 파일 또는 디렉터리에 대 한 속성을 설정 하거나 파일 또는 디렉터리에 대 한 액세스 제어를 설정 합니다. 데이터 파일에만 추가할 수 있습니다. 이 작업은 조건부 HTTP 요청을 지원 합니다. 자세한 내용은 [Blob 서비스 작업의 조건부 헤더 지정](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)합니다.'
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, options?: Models.PathUpdateOptionalParams)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '작업에 추가할 파일을 "플러시" "setProperties" 파일의 속성을 설정 하려면 파일을 이전에 업로드 된 데이터를 플러시하지 데이터 업로드에 "추가" 이거나 디렉터리 또는 소유자를 설정 하려면 "가집니다" 그룹 사용 권한 또는 액세스 제어 목록에 대 한 파일 또는 디렉터리입니다.  참고 액세스 제어를 사용 하기 위해 계층적 Namespace 계정에 대해 사용할 수 있어야 합니다.  액세스 제어 목록 (ACL) 소유자, 소유 그룹에 대 한 권한을 포함 하 고 x-ms-사용 권한 및 x-ms-acl에 대 한 요청 헤더 하므로 다른 상호 배타적인 note도 합니다. 가능한 값: ''추가'', ''플러시'', ''setProperties'', ''가집니다'''
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - Models.PathUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update_2'
    name: 'update(Models.PathUpdateAction, string, string, PathUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, options: PathUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '작업에 추가할 파일을 "플러시" "setProperties" 파일의 속성을 설정 하려면 파일을 이전에 업로드 된 데이터를 플러시하지 데이터 업로드에 "추가" 이거나 디렉터리 또는 소유자를 설정 하려면 "가집니다" 그룹 사용 권한 또는 액세스 제어 목록에 대 한 파일 또는 디렉터리입니다.  참고 액세스 제어를 사용 하기 위해 계층적 Namespace 계정에 대해 사용할 수 있어야 합니다.  액세스 제어 목록 (ACL) 소유자, 소유 그룹에 대 한 권한을 포함 하 고 x-ms-사용 권한 및 x-ms-acl에 대 한 요청 헤더 하므로 다른 상호 배타적인 note도 합니다. 가능한 값: ''추가'', ''플러시'', ''setProperties'', ''가집니다'''
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: options
          type:
            - '@azure/storage-datalake.PathUpdateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update_1'
    name: 'update(Models.PathUpdateAction, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '작업에 추가할 파일을 "플러시" "setProperties" 파일의 속성을 설정 하려면 파일을 이전에 업로드 된 데이터를 플러시하지 데이터 업로드에 "추가" 이거나 디렉터리 또는 소유자를 설정 하려면 "가집니다" 그룹 사용 권한 또는 액세스 제어 목록에 대 한 파일 또는 디렉터리입니다.  참고 액세스 제어를 사용 하기 위해 계층적 Namespace 계정에 대해 사용할 수 있어야 합니다.  액세스 제어 목록 (ACL) 소유자, 소유 그룹에 대 한 권한을 포함 하 고 x-ms-사용 권한 및 x-ms-acl에 대 한 요청 헤더 하므로 다른 상호 배타적인 note도 합니다. 가능한 값: ''추가'', ''플러시'', ''setProperties'', ''가집니다'''
        - id: filesystem
          type:
            - string
          description: 파일 시스템 식별자입니다.
        - id: path
          type:
            - string
          description: 파일 또는 디렉터리 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
references:
  - uid: '@azure/storage-datalake.DataLakeStorageClientContext'
    name: DataLakeStorageClientContext
    spec.typeScript:
      - name: DataLakeStorageClientContext
        fullName: DataLakeStorageClientContext
        uid: '@azure/storage-datalake.DataLakeStorageClientContext'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams'
    name: PathCreateOptionalParams
    spec.typeScript:
      - name: PathCreateOptionalParams
        fullName: PathCreateOptionalParams
        uid: '@azure/storage-datalake.PathCreateOptionalParams'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams'
    name: PathDeleteMethodOptionalParams
    spec.typeScript:
      - name: PathDeleteMethodOptionalParams
        fullName: PathDeleteMethodOptionalParams
        uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams'
  - uid: '@azure/storage-datalake.PathGetPropertiesOptionalParams'
    name: PathGetPropertiesOptionalParams
    spec.typeScript:
      - name: PathGetPropertiesOptionalParams
        fullName: PathGetPropertiesOptionalParams
        uid: '@azure/storage-datalake.PathGetPropertiesOptionalParams'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams'
    name: PathLeaseOptionalParams
    spec.typeScript:
      - name: PathLeaseOptionalParams
        fullName: PathLeaseOptionalParams
        uid: '@azure/storage-datalake.PathLeaseOptionalParams'
  - uid: ServiceCallback<@azure/storage-datalake.PathList>
    name: PathList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PathList
        fullName: PathList
        uid: '@azure/storage-datalake.PathList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-datalake.PathListOptionalParams'
    name: PathListOptionalParams
    spec.typeScript:
      - name: PathListOptionalParams
        fullName: PathListOptionalParams
        uid: '@azure/storage-datalake.PathListOptionalParams'
  - uid: '@azure/storage-datalake.PathReadOptionalParams'
    name: PathReadOptionalParams
    spec.typeScript:
      - name: PathReadOptionalParams
        fullName: PathReadOptionalParams
        uid: '@azure/storage-datalake.PathReadOptionalParams'
  - uid: '@azure/storage-datalake.PathUpdateOptionalParams'
    name: PathUpdateOptionalParams
    spec.typeScript:
      - name: PathUpdateOptionalParams
        fullName: PathUpdateOptionalParams
        uid: '@azure/storage-datalake.PathUpdateOptionalParams'