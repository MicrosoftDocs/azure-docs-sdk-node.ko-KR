### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult'
    name: ServerVulnerabilityAssessmentListResult
    fullName: ServerVulnerabilityAssessmentListResult
    children:
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.Array'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.concat'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.concat_1'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.copyWithin'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.entries'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.every'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.fill'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.filter_1'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.filter'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.find'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.find_1'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.findIndex'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.forEach'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.indexOf'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.join'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.keys'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.lastIndexOf'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.length'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.map'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.nextLink'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.pop'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.push'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduce'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduce_1'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduce_2'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduceRight'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduceRight_1'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduceRight_2'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reverse'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.shift'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.slice'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.some'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.sort'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.splice_1'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.splice'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.toLocaleString'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.toString'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.unshift'
      - '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-sql.ServerVulnerabilityAssessment>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.concat'
    name: 'concat(ConcatArray<ServerVulnerabilityAssessment>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 두 개 이상의 배열을 결합합니다.
    syntax:
      content: 'function concat(items: ConcatArray<ServerVulnerabilityAssessment>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-sql.ServerVulnerabilityAssessment>[]'
          description: |
            Array1의 끝에 추가할 추가 항목입니다.
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 두 개 이상의 배열을 결합합니다.
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            Array1의 끝에 추가할 추가 항목입니다.
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 로 식별 되는 배열 섹션을 복사한 후이 개체는 반환 시작 및 대상 위치에서 시작 하 여 동일한 배열 간
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: 대상 음수 이면 길이 + 길이 배열의 길이 대상으로 처리 됩니다.
        - id: start
          type:
            - number
          description: 시작이 음수 이면 길이 + 시작으로 처리 됩니다. 끝이 음수 이면 길이 + 끝으로 처리 됩니다.
        - id: end
          type:
            - undefined | number
          description: |
            지정 하지 않으면이 길이 개체의 기본 값으로 사용 됩니다.
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '배열의 모든 항목에 대 한 키, 값 쌍의는 반복 가능한 반환'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.every'
    name: 'every((value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 모든 구성원은 지정 된 테스트를 만족 하는지 여부를 결정 합니다.
    syntax:
      content: 'function every(callbackfn: (value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. 모든 메서드는 배열의 끝까지 또는 callbackfn를 false로 반환 될 때까지 array1에서 각 요소에 대 한 callbackfn 함수를 호출 합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.fill'
    name: 'fill(ServerVulnerabilityAssessment, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 로 식별 되는 섹션을 입력 한 후이 개체는 반환 시작 하 고 값을 사용 하 여 종료 합니다.
    syntax:
      content: 'function fill(value: ServerVulnerabilityAssessment, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-sql.ServerVulnerabilityAssessment'
          description: 값을 사용 하 여 배열 섹션 채우기
        - id: start
          type:
            - undefined | number
          description: 입력 배열의 시작 인덱스입니다. 시작이 음수 이면 길이 + 길이 배열의 길이 시작으로 처리 됩니다.
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            배열 채우기 중지 하는 인덱스입니다. 끝이 음수 이면 길이 + 끝으로 처리 됩니다.
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.filter_1'
    name: 'filter((value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 콜백 함수에 지정 된 조건을 충족 하는 배열의 요소를 반환 합니다.
    syntax:
      content: 'function filter(callbackfn: (value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => any'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. 필터 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.filter'
    name: 'filter((value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 콜백 함수에 지정 된 조건을 충족 하는 배열의 요소를 반환 합니다.
    syntax:
      content: 'function filter<S>(callbackfn: (value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. 필터 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.find'
    name: 'find((this: void, value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 위치 조건자가 true 이면 정의 되지 않은 그렇지 않으면 배열의 첫 번째 요소의 값을 반환 합니다.
    syntax:
      content: 'function find<S>(predicate: (this: void, value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean'
          description: 오름차순으로 찾으면 조건자 true 반환 될 때까지 배열의 각 요소에 대해 한 번 호출 조건자를 찾습니다. 이러한 요소가 없으면 찾기는 즉시 해당 요소 값을 반환 합니다. 그렇지 않으면 찾기 undefined를 반환합니다.
        - id: thisArg
          type:
            - any
          description: |
            제공 된 경우이으로 사용할 수는 조건자의 각 호출에 대 한 값입니다. 제공 하지 않으면 정의 되지 않은 대신 사용 됩니다.
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.find_1'
    name: 'find((value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 위치 조건자가 true 이면 정의 되지 않은 그렇지 않으면 배열의 첫 번째 요소의 값을 반환 합니다.
    syntax:
      content: 'function find(predicate: (value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment | undefined'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.findIndex'
    name: 'findIndex((value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '위치 조건자가 true, 그렇지 않으면-1 배열의 첫 번째 요소의 인덱스를 반환 합니다.'
    syntax:
      content: 'function findIndex(predicate: (value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: ServerVulnerabilityAssessment, index: number, obj: ServerVulnerabilityAssessment[]) => boolean'
          description: '오름차순으로 찾으면 조건자 true 반환 될 때까지 배열의 각 요소에 대해 한 번 호출 조건자를 찾습니다. 이러한 요소가 없으면 findIndex 요소 인덱스를 즉시 반환 합니다. FindIndex,-1 반환합니다.'
        - id: thisArg
          type:
            - any
          description: |
            제공 된 경우이으로 사용할 수는 조건자의 각 호출에 대 한 값입니다. 제공 하지 않으면 정의 되지 않은 대신 사용 됩니다.
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.forEach'
    name: 'forEach((value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 각 요소에 대해 지정된 된 작업을 수행합니다.
    syntax:
      content: 'function forEach(callbackfn: (value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => void'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. forEach 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.indexOf'
    name: 'indexOf(ServerVulnerabilityAssessment, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 맨 처음 발견 되는 값의 인덱스를 반환 합니다.
    syntax:
      content: 'function indexOf(searchElement: ServerVulnerabilityAssessment, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-sql.ServerVulnerabilityAssessment'
          description: 배열에서 찾을 값입니다.
        - id: fromIndex
          type:
            - undefined | number
          description: |
            검색을 시작 하는 배열 인덱스입니다. FromIndex가 생략 되 면 하는 경우 인덱스 0에 검색을 시작 합니다.
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 구분 기호 문자열로 구분 된 배열의 모든 요소를 추가 합니다.
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            결과 문자열에 다음에서 배열의 한 요소를 구분 하는 데는 문자열입니다. 생략 하면 배열 요소를 쉼표로 구분 됩니다.
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 키를 반복 가능한 반환
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.lastIndexOf'
    name: 'lastIndexOf(ServerVulnerabilityAssessment, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 지정된 된 값 중 마지막 요소의 인덱스를 반환합니다.
    syntax:
      content: 'function lastIndexOf(searchElement: ServerVulnerabilityAssessment, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-sql.ServerVulnerabilityAssessment'
          description: 배열에서 찾을 값입니다.
        - id: fromIndex
          type:
            - undefined | number
          description: |
            검색을 시작 하는 배열 인덱스입니다. FromIndex가 생략 되 면 경우 배열의 마지막 인덱스 검색을 시작 합니다.
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: 배열의 길이를 가져오거나 설정합니다. 배열에 정의 된 요소의 최고값 보다 더 높은 수 단일입니다.
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.map'
    name: 'map((value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 각 요소에 대해 정의 된 콜백 함수를 호출 하 고 결과 포함 하는 배열을 반환 합니다.
    syntax:
      content: 'function map<U>(callbackfn: (value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => U'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. Map 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      결과의 다음 페이지를 검색 하는 링크입니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 마지막 요소를 제거 하 고 반환 합니다.
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment | undefined'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.push'
    name: 'push(ServerVulnerabilityAssessment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 새 요소를 추가 하 고 배열의 새 길이 반환 합니다.
    syntax:
      content: 'function push(items: ServerVulnerabilityAssessment[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
          description: |
            배열의 새 요소입니다.
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduce'
    name: 'reduce((previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduce(callbackfn: (previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment'
          description: 최대 4 개의 인수를 받아들이는 함수입니다. Reduce 메서드를 사용 하는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduce_1'
    name: 'reduce((previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment, ServerVulnerabilityAssessment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduce(callbackfn: (previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment, initialValue: ServerVulnerabilityAssessment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-sql.ServerVulnerabilityAssessment'
          description: ''
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => U'
          description: 최대 4 개의 인수를 받아들이는 함수입니다. Reduce 메서드를 사용 하는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: initialValue
          type:
            - U
          description: |
            InitialValue를 지정 하는 경우 초기 값으로 누적 시작에 사용 됩니다. 첫 번째 호출은 callbackfn 함수에 인수로 배열 값 대신이 값을 제공합니다.
      return:
        type:
          - U
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduceRight'
    name: 'reduceRight((previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment'
          description: 최대 4 개의 인수를 받아들이는 함수입니다. ReduceRight 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduceRight_1'
    name: 'reduceRight((previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment, ServerVulnerabilityAssessment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment, initialValue: ServerVulnerabilityAssessment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: ServerVulnerabilityAssessment, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => ServerVulnerabilityAssessment'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-sql.ServerVulnerabilityAssessment'
          description: ''
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: ServerVulnerabilityAssessment, currentIndex: number, array: ServerVulnerabilityAssessment[]) => U'
          description: 최대 4 개의 인수를 받아들이는 함수입니다. ReduceRight 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: initialValue
          type:
            - U
          description: |
            InitialValue를 지정 하는 경우 초기 값으로 누적 시작에 사용 됩니다. 첫 번째 호출은 callbackfn 함수에 인수로 배열 값 대신이 값을 제공합니다.
      return:
        type:
          - U
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 요소를 반대로 바꿉니다.
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 첫 번째 요소를 제거 하 고 반환 합니다.
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment | undefined'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 일정 부분을 반환 합니다.
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: 시작 배열의 지정된 된 부분입니다.
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            끝 배열의 지정된 된 부분입니다.
          optional: true
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.some'
    name: 'some((value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 콜백 함수를 배열의 모든 요소에 대해 true를 반환 하는지 여부를 결정 합니다.
    syntax:
      content: 'function some(callbackfn: (value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ServerVulnerabilityAssessment, index: number, array: ServerVulnerabilityAssessment[]) => boolean'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. 일부 메서드는 배열의 끝까지 또는 callbackfn를 true로 반환 될 때까지 array1에서 각 요소에 대해 callbackfn 함수를 호출 합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.sort'
    name: 'sort(undefined | (a: ServerVulnerabilityAssessment, b: ServerVulnerabilityAssessment) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열을 정렬합니다.
    syntax:
      content: 'function sort(compareFn?: undefined | (a: ServerVulnerabilityAssessment, b: ServerVulnerabilityAssessment) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: ServerVulnerabilityAssessment, b: ServerVulnerabilityAssessment) => number'
          description: |
            요소의 순서를 결정 하는 데 사용 되는 함수의 이름입니다. 생략 하면 요소가 오름차순, ASCII 문자 순서로 정렬 됩니다.
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.splice_1'
    name: 'splice(number, number, ServerVulnerabilityAssessment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 요소를 제거 하 고 필요한 경우 새 요소를 삽입 그 자리에 삭제 된 요소를 반환 합니다.
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: ServerVulnerabilityAssessment[])'
      parameters:
        - id: start
          type:
            - number
          description: 시작 요소를 제거 하는 배열의 0부터 시작 하는 위치입니다.
        - id: deleteCount
          type:
            - number
          description: 제거할 요소의 수입니다.
        - id: items
          type:
            - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
          description: |
            삭제 된 요소 대신 배열에 삽입할 요소입니다.
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 요소를 제거 하 고 필요한 경우 새 요소를 삽입 그 자리에 삭제 된 요소를 반환 합니다.
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: 시작 요소를 제거 하는 배열의 0부터 시작 하는 위치입니다.
        - id: deleteCount
          type:
            - undefined | number
          description: |
            제거할 요소의 수입니다.
          optional: true
      return:
        type:
          - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 문자열 표현을 반환 합니다. 요소는 해당 toLocalString 메서드를 사용 하 여 문자열로 변환 됩니다.
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 문자열 표현을 반환 합니다.
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.unshift'
    name: 'unshift(ServerVulnerabilityAssessment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 시작에 새 요소를 삽입합니다.
    syntax:
      content: 'function unshift(items: ServerVulnerabilityAssessment[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-sql.ServerVulnerabilityAssessment[]'
          description: |
            배열의 시작에 삽입할 요소입니다.
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessmentListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에는 반복 가능한 값을 반환 합니다.
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-sql.ServerVulnerabilityAssessment>
    package: '@azure/arm-sql'
references:
  - uid: Array<@azure/arm-sql.ServerVulnerabilityAssessment>
    name: ServerVulnerabilityAssessment>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: ServerVulnerabilityAssessment
        fullName: ServerVulnerabilityAssessment
        uid: '@azure/arm-sql.ServerVulnerabilityAssessment'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-sql.ServerVulnerabilityAssessment>[]'
    name: 'ServerVulnerabilityAssessment>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: ServerVulnerabilityAssessment
        fullName: ServerVulnerabilityAssessment
        uid: '@azure/arm-sql.ServerVulnerabilityAssessment'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessment[]'
    name: 'ServerVulnerabilityAssessment[]'
    spec.typeScript:
      - name: ServerVulnerabilityAssessment
        fullName: ServerVulnerabilityAssessment
        uid: '@azure/arm-sql.ServerVulnerabilityAssessment'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessment'
    name: ServerVulnerabilityAssessment
    spec.typeScript:
      - name: ServerVulnerabilityAssessment
        fullName: ServerVulnerabilityAssessment
        uid: '@azure/arm-sql.ServerVulnerabilityAssessment'
  - uid: '@azure/arm-sql.ServerVulnerabilityAssessment | undefined'
    name: ServerVulnerabilityAssessment | undefined
    spec.typeScript:
      - name: ServerVulnerabilityAssessment
        fullName: ServerVulnerabilityAssessment
        uid: '@azure/arm-sql.ServerVulnerabilityAssessment'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-sql.ServerVulnerabilityAssessment>
    name: ServerVulnerabilityAssessment>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: ServerVulnerabilityAssessment
        fullName: ServerVulnerabilityAssessment
        uid: '@azure/arm-sql.ServerVulnerabilityAssessment'
      - name: '>'
        fullName: '>'