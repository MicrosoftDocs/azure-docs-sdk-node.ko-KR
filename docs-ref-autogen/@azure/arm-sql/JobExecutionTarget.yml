### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.JobExecutionTarget'
    name: JobExecutionTarget
    fullName: JobExecutionTarget
    children:
      - '@azure/arm-sql.JobExecutionTarget.databaseName'
      - '@azure/arm-sql.JobExecutionTarget.serverName'
      - '@azure/arm-sql.JobExecutionTarget.type'
    langs:
      - typeScript
    type: interface
    summary: 작업 실행에서 실행 되는 대상입니다.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.JobExecutionTarget.databaseName'
    name: databaseName
    fullName: databaseName
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      데이터베이스 이름입니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'databaseName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.JobExecutionTarget.serverName'
    name: serverName
    fullName: serverName
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      서버 이름입니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'serverName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.JobExecutionTarget.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: '대상의 형식입니다. 가능한 값은 다음과 같습니다. ''TargetGroup'', ''SqlDatabase'', ''SqlElasticPool'', ''SqlShardMap'', ''SqlServer'' **참고 합니다. 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**'
    optional: true
    syntax:
      content: 'type?: JobTargetType'
      return:
        type:
          - '@azure/arm-sql.JobTargetType'
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.JobTargetType'
    name: JobTargetType
    spec.typeScript:
      - name: JobTargetType
        fullName: JobTargetType
        uid: '@azure/arm-sql.JobTargetType'