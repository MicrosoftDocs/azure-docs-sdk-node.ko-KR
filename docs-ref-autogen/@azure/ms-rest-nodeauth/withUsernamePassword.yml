### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-nodeauth.withUsernamePassword'
    name: 'withUsernamePassword(string, string)'
    children: []
    type: function
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a1a90-101">UserTokenCredentials 개체 및 모든 해당 테 넌 트에서 해당 사용자 Id와 연결 된 구독 목록을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1a90-101">Provides a UserTokenCredentials object and the list of subscriptions associated with that userId across all the applicable tenants.</span></span>
      <span data-ttu-id="a1a90-102">이 방법은 사용 그렇지 않은 경우 2FA 하세요 사용 하 여 대화형 로그인 하지 않은 조직 id에만 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1a90-102">This method is applicable only for organizational ids that are not 2FA enabled otherwise please use interactive login.</span></span>
    syntax:
      content: 'function withUsernamePassword(username: string, password: string)'
      parameters:
        - id: username
          type:
            - string
          description: <span data-ttu-id="a1a90-103">조직 Id 계정에 대 한 사용자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a90-103">The user name for the Organization Id account.</span></span>
        - id: password
          type:
            - string
          description: <span data-ttu-id="a1a90-104">조직 Id 계정에 대 한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a90-104">The password for the Organization Id account.</span></span>
      return:
        type:
          - Promise<@azure/ms-rest-nodeauth.UserTokenCredentials>
    package: '@azure/ms-rest-nodeauth'
references:
  - uid: Promise<@azure/ms-rest-nodeauth.UserTokenCredentials>
    name: UserTokenCredentials>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UserTokenCredentials
        fullName: UserTokenCredentials
        uid: '@azure/ms-rest-nodeauth.UserTokenCredentials'
      - name: '>'
        fullName: '>'