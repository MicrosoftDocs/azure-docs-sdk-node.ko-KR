### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.SecretsClient'
    name: SecretsClient
    fullName: SecretsClient
    children:
      - '@azure/keyvault-secrets.SecretsClient.backupSecret'
      - '@azure/keyvault-secrets.SecretsClient.deleteSecret'
      - '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
      - '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.getSecret'
      - '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
      - '@azure/keyvault-secrets.SecretsClient.pipeline'
      - '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.restoreSecret'
      - '@azure/keyvault-secrets.SecretsClient.constructor'
      - '@azure/keyvault-secrets.SecretsClient.setSecret'
      - '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
      - '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="2e909-101">KeyVault 비밀 기능 상호 작용 하는 클라이언트</span><span class="sxs-lookup"><span data-stu-id="2e909-101">The client to interact with the KeyVault secrets functionality</span></span>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.backupSecret'
    name: 'backupSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-102">지정 된 암호의 백업을 클라이언트로 다운로드 하도록 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-102">Requests that a backup of the specified secret be downloaded to the client.</span></span> <span data-ttu-id="2e909-103">암호의 모든 버전 다운로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-103">All versions of the secret will be downloaded.</span></span> <span data-ttu-id="2e909-104">이 작업에는 비밀/백업 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-104">This operation requires the secrets/backup permission.</span></span>
      <span data-ttu-id="2e909-105">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-105">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let backupResult = await client.backupSecret("MySecretName");
      ```
    syntax:
      content: 'function backupSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-106">비밀의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-106">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.deleteSecret'
    name: 'deleteSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-107">삭제 작업이 Azure Key Vault에 저장 된 모든 암호에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-107">The DELETE operation applies to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="2e909-108">삭제는 암호의 개별 버전에 적용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-108">DELETE cannot be applied to an individual version of a secret.</span></span> <span data-ttu-id="2e909-109">이 작업에는 암호/삭제 권한이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-109">This operation requires the secrets/delete permission.</span></span>
      <span data-ttu-id="2e909-110">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-110">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      ```
    syntax:
      content: 'function deleteSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-111">비밀의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-111">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2e909-112">제공 된 자격 증명을 사용 하 여 새 파이프라인 개체를 만드는 데 사용 하는 정적 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e909-112">A static method used to create a new Pipeline object with the provided Credential.</span></span>
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-secrets.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
    name: 'getDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-113">삭제 비밀 가져오기 작업에는 특성과 함께 지정 된 삭제 된 비밀 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-113">The Get Deleted Secret operation returns the specified deleted secret along with its attributes.</span></span>
      <span data-ttu-id="2e909-114">이 작업에는 암호/가져오기 권한이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-114">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="2e909-115">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-115">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.getDeletedSecret("MyDeletedSecret");
      ```
    syntax:
      content: 'function getDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-116">비밀의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-116">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getSecret'
    name: 'getSecret(string, GetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-117">GET 작업은 Azure Key Vault에 저장 된 모든 암호에 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-117">The GET operation is applicable to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="2e909-118">이 작업에는 암호/가져오기 권한이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-118">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="2e909-119">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-119">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret("MySecretName");
      ```
    syntax:
      content: 'function getSecret(secretName: string, options?: GetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-120">비밀의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-120">The name of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
    name: listDeletedSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-121">자격 증명 모음에서 삭제 된 비밀을 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-121">Iterates the deleted secrets in the vault.</span></span>  <span data-ttu-id="2e909-122">응답에는 전체 암호 식별자 및 특성만 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-122">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="2e909-123">값이 없는 암호에 대해 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-123">No values are returned for the secrets.</span></span> <span data-ttu-id="2e909-124">이 작업에는 암호/나열 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-124">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="2e909-125">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-125">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listDeletedSecrets()) {
        const deletedSecret = await client.getSecret(secretAttr.name);
        console.log("deleted secret: ", deletedSecret);
      }
      ```
    syntax:
      content: 'function listDeletedSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecrets'
    name: listSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-126">자격 증명 모음에 모든 암호의 최신 버전을 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-126">Iterates the latest version of all secrets in the vault.</span></span>  <span data-ttu-id="2e909-127">응답에는 전체 암호 식별자 및 특성만 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-127">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="2e909-128">값이 없는 암호에 대해 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-128">No values are returned for the secrets.</span></span> <span data-ttu-id="2e909-129">이 작업에는 암호/나열 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-129">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="2e909-130">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-130">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecrets()) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret: ", secret);
      }
      ```
    syntax:
      content: 'function listSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
    name: 'listSecretVersions(string, GetSecretsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-131">자격 증명 모음에 지정 된 암호의 모든 버전을 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-131">Iterates all versions of the given secret in the vault.</span></span> <span data-ttu-id="2e909-132">응답에는 전체 암호 식별자 및 특성만 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-132">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="2e909-133">값이 없는 암호에 대해 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-133">No values are returned for the secrets.</span></span> <span data-ttu-id="2e909-134">이 작업에는 암호/나열 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-134">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="2e909-135">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-135">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecretVersions("MySecretName")) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret version: ", secret);
      }
      ```
    syntax:
      content: 'function listSecretVersions(secretName: string, options?: GetSecretsOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-136">에 대 한 버전을 가져올 암호의 이름</span><span class="sxs-lookup"><span data-stu-id="2e909-136">Name of the secret to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="2e909-137">서비스에 대 한 연결을 만드는 옵션</span><span class="sxs-lookup"><span data-stu-id="2e909-137">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
    name: 'purgeDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-138">삭제 제거 비밀 작업 복구 가능성이 없이 암호를 영구적으로 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-138">The purge deleted secret operation removes the secret permanently, without the possibility of recovery.</span></span> <span data-ttu-id="2e909-139">이 작업은 일시 삭제가 설정 된 자격 증명 모음에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-139">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id="2e909-140">이 작업에 암호/삭제 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-140">This operation requires the secrets/purge permission.</span></span>
      <span data-ttu-id="2e909-141">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-141">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.purgeDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function purgeDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-142">비밀의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-142">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
    name: 'recoverDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-143">지정 된 자격 증명 모음에서 삭제 된 비밀을 복구합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-143">Recovers the deleted secret in the specified vault.</span></span> <span data-ttu-id="2e909-144">일시 삭제가 설정 된 자격 증명 모음에이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-144">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id="2e909-145">이 작업에는 비밀/복구 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-145">This operation requires the secrets/recover permission.</span></span>
      <span data-ttu-id="2e909-146">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-146">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.recoverDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function recoverDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-147">삭제 된 비밀의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-147">The name of the deleted secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.restoreSecret'
    name: 'restoreSecret(Uint8Array, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-148">자격 증명 모음 백업된 비밀 및 해당 모든 버전을 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-148">Restores a backed up secret, and all its versions, to a vault.</span></span> <span data-ttu-id="2e909-149">이 작업에는 비밀/복원 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-149">This operation requires the secrets/restore permission.</span></span>
      <span data-ttu-id="2e909-150">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-150">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let mySecretBundle = await client.backupSecret("MySecretName");
      // ...
      await client.restoreSecret(mySecretBundle);
      ```
    syntax:
      content: 'function restoreSecret(secretBundleBackup: Uint8Array, options?: RequestOptionsBase)'
      parameters:
        - id: secretBundleBackup
          type:
            - Uint8Array
          description: <span data-ttu-id="2e909-151">백업 blob 비밀 번들을 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-151">The backup blob associated with a secret bundle.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.constructor'
    name: 'SecretsClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-152">SecretsClient의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-152">Creates an instance of SecretsClient.</span></span>
      <span data-ttu-id="2e909-153">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-153">Example usage:</span></span>
      ```ts
      import { SecretsClient } from "@azure/keyvault-secrets";
      import { EnvironmentCredential } from "@azure/identity";

      let url = `https://<MY KEYVAULT HERE>.vault.azure.net`;
      let credentials = new EnvironmentCredential();

      let client = new SecretsClient(url, credentials);
      ```
    syntax:
      content: 'new SecretsClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2e909-154">key vault에 대 한 기본 url입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-154">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.setSecret'
    name: 'setSecret(string, string, SetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-155">설정 작업의 Azure Key Vault에 비밀을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-155">The SET operation adds a secret to the Azure Key Vault.</span></span> <span data-ttu-id="2e909-156">명명된 된 암호가 이미 있는 경우 Azure Key Vault 암호의 새 버전을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-156">If the named secret already exists, Azure Key Vault creates a new version of that secret.</span></span> <span data-ttu-id="2e909-157">이 작업에는 암호/설정 권한이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-157">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="2e909-158">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-158">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.setSecret("MySecretName", "ABC123");
      ```
    syntax:
      content: 'function setSecret(secretName: string, value: string, options?: SetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-159">비밀의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-159">The name of the secret.</span></span>
        - id: value
          type:
            - string
          description: <span data-ttu-id="2e909-160">비밀의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-160">The value of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.SetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
    name: 'updateSecretAttributes(string, string, UpdateSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2e909-161">업데이트 작업의 저장 된 기존 암호를 지정 된 특성을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-161">The UPDATE operation changes specified attributes of an existing stored secret.</span></span> <span data-ttu-id="2e909-162">요청에 지정 되지 않은 특성은 남아 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-162">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id="2e909-163">암호 자체의 값을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-163">The value of a secret itself cannot be changed.</span></span> <span data-ttu-id="2e909-164">이 작업에는 암호/설정 권한이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-164">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="2e909-165">사용 예제:</span><span class="sxs-lookup"><span data-stu-id="2e909-165">Example usage:</span></span>
      ```ts
      let secretName = "MySecretName";
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret(secretName);
      await client.updateSecret(secretName, secret.version, { enabled: false });
      ```
    syntax:
      content: 'function updateSecretAttributes(secretName: string, secretVersion: string, options?: UpdateSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="2e909-166">비밀의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-166">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: <span data-ttu-id="2e909-167">비밀의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="2e909-167">The version of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.UpdateSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="2e909-168">기본 자격 증명 모음 URL</span><span class="sxs-lookup"><span data-stu-id="2e909-168">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
references:
  - uid: ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'
  - uid: Promise<@azure/keyvault-secrets.DeletedSecret>
    name: DeletedSecret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecret
        fullName: DeletedSecret
        uid: '@azure/keyvault-secrets.DeletedSecret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretOptions'
    name: GetSecretOptions
    spec.typeScript:
      - name: GetSecretOptions
        fullName: GetSecretOptions
        uid: '@azure/keyvault-secrets.GetSecretOptions'
  - uid: Promise<@azure/keyvault-secrets.Secret>
    name: Secret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Secret
        fullName: Secret
        uid: '@azure/keyvault-secrets.Secret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretsOptions'
    name: GetSecretsOptions
    spec.typeScript:
      - name: GetSecretsOptions
        fullName: GetSecretsOptions
        uid: '@azure/keyvault-secrets.GetSecretsOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    name: 'SecretAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: ', '
        fullName: ', '
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-secrets.SetSecretOptions'
    name: SetSecretOptions
    spec.typeScript:
      - name: SetSecretOptions
        fullName: SetSecretOptions
        uid: '@azure/keyvault-secrets.SetSecretOptions'
  - uid: '@azure/keyvault-secrets.UpdateSecretOptions'
    name: UpdateSecretOptions
    spec.typeScript:
      - name: UpdateSecretOptions
        fullName: UpdateSecretOptions
        uid: '@azure/keyvault-secrets.UpdateSecretOptions'
  - uid: '@azure/keyvault-secrets.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'