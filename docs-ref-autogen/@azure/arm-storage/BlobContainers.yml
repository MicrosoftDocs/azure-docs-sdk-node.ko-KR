### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.BlobContainers'
    name: BlobContainers
    fullName: BlobContainers
    children:
      - '@azure/arm-storage.BlobContainers.constructor'
      - '@azure/arm-storage.BlobContainers.clearLegalHold'
      - '@azure/arm-storage.BlobContainers.clearLegalHold_2'
      - '@azure/arm-storage.BlobContainers.clearLegalHold_1'
      - '@azure/arm-storage.BlobContainers.create_2'
      - '@azure/arm-storage.BlobContainers.create'
      - '@azure/arm-storage.BlobContainers.create_1'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.deleteMethod'
      - '@azure/arm-storage.BlobContainers.deleteMethod_2'
      - '@azure/arm-storage.BlobContainers.deleteMethod_1'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.get'
      - '@azure/arm-storage.BlobContainers.get_2'
      - '@azure/arm-storage.BlobContainers.get_1'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.lease_2'
      - '@azure/arm-storage.BlobContainers.lease'
      - '@azure/arm-storage.BlobContainers.lease_1'
      - '@azure/arm-storage.BlobContainers.list'
      - '@azure/arm-storage.BlobContainers.list_2'
      - '@azure/arm-storage.BlobContainers.list_1'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.setLegalHold'
      - '@azure/arm-storage.BlobContainers.setLegalHold_2'
      - '@azure/arm-storage.BlobContainers.setLegalHold_1'
      - '@azure/arm-storage.BlobContainers.update_2'
      - '@azure/arm-storage.BlobContainers.update'
      - '@azure/arm-storage.BlobContainers.update_1'
    langs:
      - typeScript
    type: class
    summary: BlobContainers 나타내는 클래스입니다.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.constructor'
    name: BlobContainers(StorageManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: BlobContainers를 만듭니다.
    syntax:
      content: 'new BlobContainers(client: StorageManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-storage.StorageManagementClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold'
    name: 'clearLegalHold(string, string, string, string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 태그를 보유 하는 법적 지웁니다. 동일 하거나 존재 하지 않는 태그를 지우면 멱 등 원 작업에서 발생 합니다. ClearLegalHold만 요청에 지정 된 태그를 지웁니다.
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: tags
          type:
            - 'string[]'
          description: 각 태그 영숫자 3 ~ 23이 고 SRP에서 소문자로 정규화 됩니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersClearLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold_2'
    name: 'clearLegalHold(string, string, string, string[], RequestOptionsBase, ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: RequestOptionsBase, callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: tags
          type:
            - 'string[]'
          description: 각 태그 영숫자 3 ~ 23이 고 SRP에서 소문자로 정규화 됩니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersClearLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold_1'
    name: 'clearLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: tags
          type:
            - 'string[]'
          description: 각 태그 영숫자 3 ~ 23이 고 SRP에서 소문자로 정규화 됩니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersClearLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create_2'
    name: 'create(string, string, string, BlobContainersCreateOptionalParams, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options: BlobContainersCreateOptionalParams, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersCreateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersCreateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create'
    name: 'create(string, string, string, Models.BlobContainersCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 요청 본문에 설명 된 대로 지정 된 계정의 새 컨테이너를 만듭니다. 컨테이너 리소스 메타 데이터 및 해당 컨테이너에 대 한 속성을 포함합니다. 컨테이너에 포함 된 blob 목록을 포함 하지 않습니다.
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options?: Models.BlobContainersCreateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - Models.BlobContainersCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersCreateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create_1'
    name: 'create(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersCreateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2'
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 불변성 정책 생성 (일)에서 이후 컨테이너의 blob에 대 한 기간입니다.
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy'
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 만들거나를 잠금 해제 된 불변성 정책 업데이트 합니다. If-match ETag는 지정 되어 있지만이 작업에 필요 하지 하는 경우에 적용 됩니다.
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 불변성 정책 생성 (일)에서 이후 컨테이너의 blob에 대 한 기간입니다.
        - id: options
          type:
            - Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1'
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 불변성 정책 생성 (일)에서 이후 컨테이너의 blob에 대 한 기간입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy'
    name: 'deleteImmutabilityPolicy(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      잠금이 해제 된 불변성 정책을 중단합니다. 삭제의 응답에 immutabilityPeriodSinceCreationInDays 0으로 설정 합니다. If-match ETag가이 작업에 필요 합니다.
      잠긴된 불변성 정책 삭제에 허용 되지 않습니다는 유일한 방법은 컨테이너 내에서 모든 blob을 삭제 한 후 컨테이너를 삭제 하는 것입니다.
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersDeleteImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_2'
    name: 'deleteImmutabilityPolicy(string, string, string, string, RequestOptionsBase, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersDeleteImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_1'
    name: 'deleteImmutabilityPolicy(string, string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersDeleteImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 해당 계정에서 컨테이너를 삭제 합니다.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod_2'
    name: 'deleteMethod(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod_1'
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy'
    name: 'extendImmutabilityPolicy(string, string, string, string, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 잠긴된 immutabilityPolicy의 immutabilityPeriodSinceCreationInDays를 확장합니다. 잠금 정책에서 허용 되는 유일한 작업은이 작업이 됩니다. If-match ETag가이 작업에 필요 합니다.
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 불변성 정책 생성 (일)에서 이후 컨테이너의 blob에 대 한 기간입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersExtendImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_2'
    name: 'extendImmutabilityPolicy(string, string, string, string, number, RequestOptionsBase, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: RequestOptionsBase, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 불변성 정책 생성 (일)에서 이후 컨테이너의 blob에 대 한 기간입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersExtendImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_1'
    name: 'extendImmutabilityPolicy(string, string, string, string, number, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 불변성 정책 생성 (일)에서 이후 컨테이너의 blob에 대 한 기간입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersExtendImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 컨테이너의 속성을 가져옵니다.
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersGetResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersGetResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get_1'
    name: 'get(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersGetResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_2'
    name: 'getImmutabilityPolicy(string, string, string, BlobContainersGetImmutabilityPolicyOptionalParams, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: BlobContainersGetImmutabilityPolicyOptionalParams, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersGetImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy'
    name: 'getImmutabilityPolicy(string, string, string, Models.BlobContainersGetImmutabilityPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 해당 ETag 응답 헤더 및 본문와 함께 기존 불변성 정책을 가져옵니다.
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: Models.BlobContainersGetImmutabilityPolicyOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - Models.BlobContainersGetImmutabilityPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersGetImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_1'
    name: 'getImmutabilityPolicy(string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersGetImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease_2'
    name: 'lease(string, string, string, BlobContainersLeaseOptionalParams, ServiceCallback<LeaseContainerResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, options: BlobContainersLeaseOptionalParams, callback: ServiceCallback<LeaseContainerResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersLeaseOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersLeaseResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease'
    name: 'lease(string, string, string, Models.BlobContainersLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 컨테이너 임대 작업을 설정 하 고 삭제 작업에 대 한 컨테이너에 대 한 잠금을 관리 합니다. 잠금 기간은 15~60초 또는 무한할 수 있습니다.
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, options?: Models.BlobContainersLeaseOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - Models.BlobContainersLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersLeaseResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease_1'
    name: 'lease(string, string, string, ServiceCallback<LeaseContainerResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<LeaseContainerResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersLeaseResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 모든 컨테이너를 나열 하 고 데이터 평면 같은 접두사를 지원 하지 않습니다. 또한 SRP 지금 반환 하지 않는 연속 토큰입니다.
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersListResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list_2'
    name: 'list(string, string, RequestOptionsBase, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<ListContainerItems>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersListResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list_1'
    name: 'list(string, string, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, callback: ServiceCallback<ListContainerItems>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersListResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy'
    name: 'lockImmutabilityPolicy(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ImmutabilityPolicy 잠금 상태로 설정합니다. 잠금 정책에서 허용 되는 유일한 동작은 ExtendImmutabilityPolicy 동작이입니다. If-match ETag가이 작업에 필요 합니다.
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersLockImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_2'
    name: 'lockImmutabilityPolicy(string, string, string, string, RequestOptionsBase, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersLockImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_1'
    name: 'lockImmutabilityPolicy(string, string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: ifMatch
          type:
            - string
          description: 엔터티 상태 (ETag) 버전 업데이트 불변성 정책입니다. 값 "*" 불변성 정책이 이미 존재 하는 경우에 작업을 적용할 수 있습니다. 생략 하면이 작업이 항상 적용 됩니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersLockImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold'
    name: 'setLegalHold(string, string, string, string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 법적 집합 태그를 보유합니다. 멱 등 원 작업에서 동일한 태그 결과 설정 합니다. SetLegalHold 추가 패턴을 따르고 요청에 지정 되지 않은 기존 태그를 지우기 축소 되지 않습니다.
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: tags
          type:
            - 'string[]'
          description: 각 태그 영숫자 3 ~ 23이 고 SRP에서 소문자로 정규화 됩니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersSetLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold_2'
    name: 'setLegalHold(string, string, string, string[], RequestOptionsBase, ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: RequestOptionsBase, callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: tags
          type:
            - 'string[]'
          description: 각 태그 영숫자 3 ~ 23이 고 SRP에서 소문자로 정규화 됩니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersSetLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold_1'
    name: 'setLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: tags
          type:
            - 'string[]'
          description: 각 태그 영숫자 3 ~ 23이 고 SRP에서 소문자로 정규화 됩니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersSetLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update_2'
    name: 'update(string, string, string, BlobContainersUpdateOptionalParams, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options: BlobContainersUpdateOptionalParams, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersUpdateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersUpdateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update'
    name: 'update(string, string, string, Models.BlobContainersUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 요청 본문에 지정 된 대로 컨테이너 속성을 업데이트합니다. 요청에 언급 되지 않은 속성은 변경할 수 없습니다. 업데이트가 지정된 된 컨테이너 존재 하지 않는 경우 실패 합니다.
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options?: Models.BlobContainersUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: options
          type:
            - Models.BlobContainersUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersUpdateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update_1'
    name: 'update(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: 지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: containerName
          type:
            - string
          description: '지정된 된 저장소 계정 내의 blob 컨테이너의 이름입니다. Blob 컨테이너 이름은 길이가 3 ~ 63 자 사이 여야 하 고 숫자, 소문자 및 대시 (-)만 사용 해야 합니다. 모든 대시 (-) 문자 바로 앞에 하 고 뒤에 문자 또는 숫자로 수 해야 합니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            콜백
      return:
        type:
          - Promise<Models.BlobContainersUpdateResponse>
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.StorageManagementClientContext'
    name: StorageManagementClientContext
    spec.typeScript:
      - name: StorageManagementClientContext
        fullName: StorageManagementClientContext
        uid: '@azure/arm-storage.StorageManagementClientContext'
  - uid: ServiceCallback<@azure/arm-storage.LegalHold>
    name: LegalHold>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LegalHold
        fullName: LegalHold
        uid: '@azure/arm-storage.LegalHold'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-storage.BlobContainer>
    name: BlobContainer>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BlobContainer
        fullName: BlobContainer
        uid: '@azure/arm-storage.BlobContainer'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersCreateOptionalParams'
    name: BlobContainersCreateOptionalParams
    spec.typeScript:
      - name: BlobContainersCreateOptionalParams
        fullName: BlobContainersCreateOptionalParams
        uid: '@azure/arm-storage.BlobContainersCreateOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
    name: ImmutabilityPolicy>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImmutabilityPolicy
        fullName: ImmutabilityPolicy
        uid: '@azure/arm-storage.ImmutabilityPolicy'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams'
    name: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
    spec.typeScript:
      - name: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
        fullName: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
        uid: '@azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams'
  - uid: '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
    name: BlobContainersGetImmutabilityPolicyOptionalParams
    spec.typeScript:
      - name: BlobContainersGetImmutabilityPolicyOptionalParams
        fullName: BlobContainersGetImmutabilityPolicyOptionalParams
        uid: '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
    name: LeaseContainerResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LeaseContainerResponse
        fullName: LeaseContainerResponse
        uid: '@azure/arm-storage.LeaseContainerResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersLeaseOptionalParams'
    name: BlobContainersLeaseOptionalParams
    spec.typeScript:
      - name: BlobContainersLeaseOptionalParams
        fullName: BlobContainersLeaseOptionalParams
        uid: '@azure/arm-storage.BlobContainersLeaseOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.ListContainerItems>
    name: ListContainerItems>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListContainerItems
        fullName: ListContainerItems
        uid: '@azure/arm-storage.ListContainerItems'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersUpdateOptionalParams'
    name: BlobContainersUpdateOptionalParams
    spec.typeScript:
      - name: BlobContainersUpdateOptionalParams
        fullName: BlobContainersUpdateOptionalParams
        uid: '@azure/arm-storage.BlobContainersUpdateOptionalParams'