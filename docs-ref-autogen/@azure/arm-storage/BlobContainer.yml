### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.BlobContainer'
    name: BlobContainer
    fullName: BlobContainer
    children:
      - '@azure/arm-storage.BlobContainer.etag'
      - '@azure/arm-storage.BlobContainer.hasImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainer.hasLegalHold'
      - '@azure/arm-storage.BlobContainer.id'
      - '@azure/arm-storage.BlobContainer.immutabilityPolicy'
      - '@azure/arm-storage.BlobContainer.lastModifiedTime'
      - '@azure/arm-storage.BlobContainer.leaseDuration'
      - '@azure/arm-storage.BlobContainer.leaseState'
      - '@azure/arm-storage.BlobContainer.leaseStatus'
      - '@azure/arm-storage.BlobContainer.legalHold'
      - '@azure/arm-storage.BlobContainer.metadata'
      - '@azure/arm-storage.BlobContainer.name'
      - '@azure/arm-storage.BlobContainer.publicAccess'
      - '@azure/arm-storage.BlobContainer.type'
    langs:
      - typeScript
    type: interface
    summary: '속성 Id를 포함 하 여 blob 컨테이너의 리소스 이름, 리소스 유형, Etag입니다.'
    extends:
      name: '@azure/arm-storage.AzureEntityResource'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      리소스 Etag입니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'etag?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.hasImmutabilityPolicy'
    name: hasImmutabilityPolicy
    fullName: hasImmutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      HasImmutabilityPolicy 공용 속성을이 컨테이너에 대해 만든 ImmutabilityPolicy SRP에서 true로 설정 됩니다. HasImmutabilityPolicy 공용 속성 ImmutabilityPolicy이이 컨테이너에 대 한 만들지 않은 경우 SRP에서 false로 설정 됩니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'hasImmutabilityPolicy?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.hasLegalHold'
    name: hasLegalHold
    fullName: hasLegalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      HasLegalHold 공용 속성을 하나 이상의 기존 태그는 SRP에서 true로 설정 됩니다.
      HasLegalHold 공용 속성 태그 삭제는 모든 법적 기존 있으면 SRP에서 false로 설정 됩니다. HasLegalHold 사용 하 여 1000 blob 컨테이너의 최대 수 = true를 지정 된 계정에 대 한 합니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'hasLegalHold?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: '리소스에 대 한 정규화 된 리소스 Id입니다. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName} **NOTE: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**'
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.immutabilityPolicy'
    name: immutabilityPolicy
    fullName: immutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      컨테이너 ImmutabilityPolicy 속성입니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'immutabilityPolicy?: ImmutabilityPolicyProperties'
      return:
        type:
          - '@azure/arm-storage.ImmutabilityPolicyProperties'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.lastModifiedTime'
    name: lastModifiedTime
    fullName: lastModifiedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      컨테이너에서 마지막으로 수정 된 시간과 날짜를 반환 합니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'lastModifiedTime?: Date'
      return:
        type:
          - Date
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.leaseDuration'
    name: leaseDuration
    fullName: leaseDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: '컨테이너에 임대가 무한 또는 고정 기간 인지 여부를 지정 된 컨테이너가 임대 된 경우에 합니다. 가능한 값은 다음과 같습니다. '''', ''Fixed'' **참고 합니다. 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**'
    optional: true
    syntax:
      content: 'leaseDuration?: LeaseDuration'
      return:
        type:
          - '@azure/arm-storage.LeaseDuration'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.leaseState'
    name: leaseState
    fullName: leaseState
    children: []
    langs:
      - typeScript
    type: property
    summary: '임대 컨테이너의 상태입니다. 가능한 값은 다음과 같습니다. ''사용 가능'', ''임대'', ''만료 된'', ''중단'', ''중단'' **참고 합니다. 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**'
    optional: true
    syntax:
      content: 'leaseState?: LeaseState'
      return:
        type:
          - '@azure/arm-storage.LeaseState'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.leaseStatus'
    name: leaseStatus
    fullName: leaseStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: 컨테이너의 임대 상태입니다. 가능한 값은 다음과 같습니다. '잠금 해제'을 '잠그는' **참고 합니다. 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'leaseStatus?: LeaseStatus'
      return:
        type:
          - '@azure/arm-storage.LeaseStatus'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.legalHold'
    name: legalHold
    fullName: legalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      컨테이너의 LegalHold 속성입니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'legalHold?: LegalHoldProperties'
      return:
        type:
          - '@azure/arm-storage.LegalHoldProperties'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: 메타 데이터 컨테이너를 사용 하 여 연결 하기 위한 이름-값 쌍입니다.
    optional: true
    syntax:
      content: 'metadata?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: 리소스의 이름을 **참고 합니다. 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.publicAccess'
    name: publicAccess
    fullName: publicAccess
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      컨테이너의 데이터를 공개적으로 액세스할 수 수 있는지 여부 및 액세스 수준을 지정 합니다.
      가능한 값은 다음과 같습니다. 'Container', 'Blob', 'None'
    optional: true
    syntax:
      content: 'publicAccess?: PublicAccess'
      return:
        type:
          - '@azure/arm-storage.PublicAccess'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      리소스의 형식입니다. 예:-microsoft.compute/virtualmachines 또는 microsoft.storage/storageaccounts 합니다.
      **참고: 이 속성이 serialize 되지 않습니다. 또한 서버에서 채울 수만 있습니다.**
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.AzureEntityResource'
    name: AzureEntityResource
    spec.typeScript:
      - name: AzureEntityResource
        fullName: AzureEntityResource
        uid: '@azure/arm-storage.AzureEntityResource'
  - uid: '@azure/arm-storage.ImmutabilityPolicyProperties'
    name: ImmutabilityPolicyProperties
    spec.typeScript:
      - name: ImmutabilityPolicyProperties
        fullName: ImmutabilityPolicyProperties
        uid: '@azure/arm-storage.ImmutabilityPolicyProperties'
  - uid: '@azure/arm-storage.LeaseDuration'
    name: LeaseDuration
    spec.typeScript:
      - name: LeaseDuration
        fullName: LeaseDuration
        uid: '@azure/arm-storage.LeaseDuration'
  - uid: '@azure/arm-storage.LeaseState'
    name: LeaseState
    spec.typeScript:
      - name: LeaseState
        fullName: LeaseState
        uid: '@azure/arm-storage.LeaseState'
  - uid: '@azure/arm-storage.LeaseStatus'
    name: LeaseStatus
    spec.typeScript:
      - name: LeaseStatus
        fullName: LeaseStatus
        uid: '@azure/arm-storage.LeaseStatus'
  - uid: '@azure/arm-storage.LegalHoldProperties'
    name: LegalHoldProperties
    spec.typeScript:
      - name: LegalHoldProperties
        fullName: LegalHoldProperties
        uid: '@azure/arm-storage.LegalHoldProperties'
  - uid: '@azure/arm-storage.PublicAccess'
    name: PublicAccess
    spec.typeScript:
      - name: PublicAccess
        fullName: PublicAccess
        uid: '@azure/arm-storage.PublicAccess'