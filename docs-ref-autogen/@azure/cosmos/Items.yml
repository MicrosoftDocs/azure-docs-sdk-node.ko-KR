### YamlMime:UniversalReference
ms.openlocfilehash: 2876488272ab5530a8f62a28492adf26a053dd0b
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/20/2018
ms.locfileid: "53674047"
items:
- uid: '@azure/cosmos.Items'
  name: Items
  fullName: Items
  children:
  - '@azure/cosmos.Items.container'
  - '@azure/cosmos.Items.create'
  - '@azure/cosmos.Items.create_1'
  - '@azure/cosmos.Items.query'
  - '@azure/cosmos.Items.query_1'
  - '@azure/cosmos.Items.readAll'
  - '@azure/cosmos.Items.readAll_1'
  - '@azure/cosmos.Items.readChangeFeed_1'
  - '@azure/cosmos.Items.readChangeFeed_3'
  - '@azure/cosmos.Items.readChangeFeed'
  - '@azure/cosmos.Items.readChangeFeed_2'
  - '@azure/cosmos.Items.upsert'
  - '@azure/cosmos.Items.upsert_1'
  langs:
  - typeScript
  type: class
  summary: 새 항목 만들기 및 읽기/쿼리는 모든 항목에 대 한 작업
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.create'
  name: create(any, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    항목을 만듭니다.

    스키마가 없으므로 집합 JSON 항목에 대 한 합니다. 사용자 지정 속성을 개수에 관계 없이 포함 될 수 있습니다...
  syntax:
    content: 'function create(body: any, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - any
      description: 항목의 본문을 나타냅니다. 임의 개수의 사용자 정의 속성을 포함할 수 있습니다.
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        요청을 수정 하는 데 (예를 들어 파티션 키를 지정 하 고 있음).
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.create_1'
  name: create(T, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    항목을 만듭니다.

    모든 제공 T 형식 SDK에서 반드시 적용 되지 않습니다.

    표시 될 수 있습니다 더 많거나 적은 속성 및 강제 적용 하기 위한 논리입니다.


    스키마가 없으므로 집합 JSON 항목에 대 한 합니다. 사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.
  syntax:
    content: 'function create<T>(body: T, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - T
      description: 항목의 본문을 나타냅니다. 임의 개수의 사용자 정의 속성을 포함할 수 있습니다.
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        요청을 수정 하는 데 (예를 들어 파티션 키를 지정 하 고 있음).
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.query'
  name: query(string | SqlQuerySpec, FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 모든 항목을 쿼리합니다.
  syntax:
    content: 'function query(query: string | SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - string | @azure/cosmos.SqlQuerySpec
      description: 작업에 대 한 쿼리 구성 합니다. 참조 <xref:SqlQuerySpec> 쿼리를 구성 하는 방법에 대 한 자세한 내용은 합니다.
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: 요청을 수정 하는 데 (예를 들어 파티션 키를 지정 하 고 있음).
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<any>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.query_1'
  name: query(string | SqlQuerySpec, FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 모든 항목을 쿼리합니다.
  syntax:
    content: 'function query<T>(query: string | SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - string | @azure/cosmos.SqlQuerySpec
      description: 작업에 대 한 쿼리 구성 합니다. 참조 <xref:SqlQuerySpec> 쿼리를 구성 하는 방법에 대 한 자세한 내용은 합니다.
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: 요청을 수정 하는 데 (예를 들어 파티션 키를 지정 하 고 있음).
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<T>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.readAll'
  name: readAll(FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    모든 항목을 읽습니다.

    스키마가 없으므로 집합 JSON 항목에 대 한 합니다. 사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.
  syntax:
    content: 'function readAll(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: 요청을 수정 하는 데 (예를 들어 파티션 키를 지정 하 고 있음).
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.ItemDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.readAll_1'
  name: readAll(FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    모든 항목을 읽습니다.

    모든 제공 T 형식 SDK에서 반드시 적용 되지 않습니다.

    표시 될 수 있습니다 더 많거나 적은 속성 및 강제 적용 하기 위한 논리입니다.


    스키마가 없으므로 집합 JSON 항목에 대 한 합니다. 사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.
  syntax:
    content: 'function readAll<T>(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: 요청을 수정 하는 데 (예를 들어 파티션 키를 지정 하 고 있음).
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<T>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.readChangeFeed_1'
  name: readChangeFeed(ChangeFeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 만들기는 `ChangeFeedIterator` 변경 내용 페이지에 대해 반복
  syntax:
    content: 'function readChangeFeed(changeFeedOptions?: ChangeFeedOptions)'
    parameters:
    - id: changeFeedOptions
      type:
      - '@azure/cosmos.ChangeFeedOptions'
      description: "\n"
      optional: true
    return:
      type:
      - '@azure/cosmos.ChangeFeedIterator<any>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.readChangeFeed_3'
  name: readChangeFeed(ChangeFeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 만들기는 `ChangeFeedIterator` 변경 내용 페이지에 대해 반복
  syntax:
    content: 'function readChangeFeed<T>(changeFeedOptions?: ChangeFeedOptions)'
    parameters:
    - id: changeFeedOptions
      type:
      - '@azure/cosmos.ChangeFeedOptions'
      description: "\n"
      optional: true
    return:
      type:
      - '@azure/cosmos.ChangeFeedIterator<T>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.readChangeFeed'
  name: readChangeFeed(string | number | boolean, ChangeFeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 만들기는 `ChangeFeedIterator` 변경 내용 페이지에 대해 반복
  syntax:
    content: 'function readChangeFeed(partitionKey: string | number | boolean, changeFeedOptions: ChangeFeedOptions)'
    parameters:
    - id: partitionKey
      type:
      - string | number | boolean
      description: ''
    - id: changeFeedOptions
      type:
      - '@azure/cosmos.ChangeFeedOptions'
      description: "\n"
    return:
      type:
      - '@azure/cosmos.ChangeFeedIterator<any>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.readChangeFeed_2'
  name: readChangeFeed(string | number | boolean, ChangeFeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 만들기는 `ChangeFeedIterator` 변경 내용 페이지에 대해 반복
  syntax:
    content: 'function readChangeFeed<T>(partitionKey: string | number | boolean, changeFeedOptions: ChangeFeedOptions)'
    parameters:
    - id: partitionKey
      type:
      - string | number | boolean
      description: ''
    - id: changeFeedOptions
      type:
      - '@azure/cosmos.ChangeFeedOptions'
      description: "\n"
    return:
      type:
      - '@azure/cosmos.ChangeFeedIterator<T>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.upsert'
  name: upsert(any, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Upsert 항목입니다.

    스키마가 없으므로 집합 JSON 항목에 대 한 합니다. 사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.
  syntax:
    content: 'function upsert(body: any, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - any
      description: 항목의 본문을 나타냅니다. 임의 개수의 사용자 정의 속성을 포함할 수 있습니다.
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        요청을 수정 하는 데 (예를 들어 파티션 키를 지정 하 고 있음).
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.upsert_1'
  name: upsert(T, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Upsert 항목입니다.

    모든 제공 T 형식 SDK에서 반드시 적용 되지 않습니다.

    표시 될 수 있습니다 더 많거나 적은 속성 및 강제 적용 하기 위한 논리입니다.


    스키마가 없으므로 집합 JSON 항목에 대 한 합니다. 사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.
  syntax:
    content: 'function upsert<T>(body: T, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - T
      description: 항목의 본문을 나타냅니다. 임의 개수의 사용자 정의 속성을 포함할 수 있습니다.
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        요청을 수정 하는 데 (예를 들어 파티션 키를 지정 하 고 있음).
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  name: Container
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  name: ItemDefinition>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <
    fullName: <
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
  - name: '>>'
    fullName: '>>'
- uid: Promise<@azure/cosmos.ItemResponse<T>>
  name: ItemResponse<T>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <T>>
    fullName: <T>>
- uid: string | @azure/cosmos.SqlQuerySpec
  name: SqlQuerySpec
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
    uid: '@azure/cosmos.SqlQuerySpec'
- uid: '@azure/cosmos.FeedOptions'
  name: FeedOptions
  spec.typeScript:
  - name: FeedOptions
    fullName: FeedOptions
    uid: '@azure/cosmos.FeedOptions'
- uid: '@azure/cosmos.QueryIterator<any>'
  name: QueryIterator<any>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <any>
    fullName: <any>
- uid: '@azure/cosmos.QueryIterator<T>'
  name: QueryIterator<T>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <T>
    fullName: <T>
- uid: '@azure/cosmos.QueryIterator<@azure/cosmos.ItemDefinition>'
  name: ItemDefinition>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <
    fullName: <
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.ChangeFeedOptions'
  name: ChangeFeedOptions
  spec.typeScript:
  - name: ChangeFeedOptions
    fullName: ChangeFeedOptions
    uid: '@azure/cosmos.ChangeFeedOptions'
- uid: '@azure/cosmos.ChangeFeedIterator<any>'
  name: ChangeFeedIterator<any>
  spec.typeScript:
  - name: ChangeFeedIterator
    fullName: ChangeFeedIterator
    uid: '@azure/cosmos.ChangeFeedIterator'
  - name: <any>
    fullName: <any>
- uid: '@azure/cosmos.ChangeFeedIterator<T>'
  name: ChangeFeedIterator<T>
  spec.typeScript:
  - name: ChangeFeedIterator
    fullName: ChangeFeedIterator
    uid: '@azure/cosmos.ChangeFeedIterator'
  - name: <T>
    fullName: <T>
