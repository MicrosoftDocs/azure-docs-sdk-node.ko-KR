### YamlMime:UniversalReference
ms.openlocfilehash: fd9659c6d754a551c1196d82e6d7d47fe353e207
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40070557"
items:
- uid: '@azure/cosmos.Item'
  name: Item
  fullName: Item
  children:
  - '@azure/cosmos.Item.container'
  - '@azure/cosmos.Item.delete'
  - '@azure/cosmos.Item.delete_1'
  - '@azure/cosmos.Item.id'
  - '@azure/cosmos.Item.primaryKey'
  - '@azure/cosmos.Item.read'
  - '@azure/cosmos.Item.read_1'
  - '@azure/cosmos.Item.replace'
  - '@azure/cosmos.Item.replace_1'
  - '@azure/cosmos.Item.url'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="3e9b5-101">특정 항목에 대 한 작업을 수행 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-101">Used to perform operations on a specific item.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3e9b5-102">항목을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-102">Delete the item.</span></span>
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        <span data-ttu-id="3e9b5-103">파티션 키와 같은 요청에 대 한 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-103">Additional options for the request, such as the partition key.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.delete_1'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="3e9b5-104">항목을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-104">Delete the item.</span></span>

    <span data-ttu-id="3e9b5-105">모든 제공 T 형식 SDK에서 반드시 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-105">Any provided type, T, is not necessarily enforced by the SDK.</span></span>

    <span data-ttu-id="3e9b5-106">표시 될 수 있습니다 더 많거나 적은 속성 및 강제 적용 하기 위한 논리입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-106">You may get more or less properties and it's up to your logic to enforce it.</span></span>
  syntax:
    content: 'function delete<T>(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        <span data-ttu-id="3e9b5-107">파티션 키와 같은 요청에 대 한 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-107">Additional options for the request, such as the partition key.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.primaryKey'
  name: primaryKey
  fullName: primaryKey
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'primaryKey: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="3e9b5-108">항목의 정을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-108">Read the item's definition.</span></span>

    <span data-ttu-id="3e9b5-109">스키마가 없으므로 집합 JSON 항목에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-109">There is no set schema for JSON items.</span></span> <span data-ttu-id="3e9b5-110">사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-110">They may contain any number of custom properties.</span></span>
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        <span data-ttu-id="3e9b5-111">파티션 키와 같은 요청에 대 한 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-111">Additional options for the request, such as the partition key.</span></span>

        <span data-ttu-id="3e9b5-112">참고에서 기본 키 재정의 옵션 개체의 파티션 키를 제공 하는 경우 `this.primaryKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-112">Note, if you provide a partition key on the options object, it will override the primary key on `this.primaryKey`.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.read_1'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="3e9b5-113">항목의 정을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-113">Read the item's definition.</span></span>

    <span data-ttu-id="3e9b5-114">모든 제공 T 형식 SDK에서 반드시 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-114">Any provided type, T, is not necessarily enforced by the SDK.</span></span>

    <span data-ttu-id="3e9b5-115">표시 될 수 있습니다 더 많거나 적은 속성 및 강제 적용 하기 위한 논리입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-115">You may get more or less properties and it's up to your logic to enforce it.</span></span>

    <span data-ttu-id="3e9b5-116">전달 하지 않습니다 T 형식의 클래스 이면 `typeof` 비교를 일치 프로토타입을 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-116">If the type, T, is a class, it won't pass `typeof` comparisons, because it won't have a match prototype.</span></span>

    <span data-ttu-id="3e9b5-117">것이 좋습니다만 인터페이스를 사용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-117">It's recommended to only use interfaces.</span></span>


    <span data-ttu-id="3e9b5-118">스키마가 없으므로 집합 JSON 항목에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-118">There is no set schema for JSON items.</span></span> <span data-ttu-id="3e9b5-119">사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-119">They may contain any number of custom properties.</span></span>
  syntax:
    content: 'function read<T>(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        <span data-ttu-id="3e9b5-120">파티션 키와 같은 요청에 대 한 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-120">Additional options for the request, such as the partition key.</span></span>

        <span data-ttu-id="3e9b5-121">참고에서 기본 키 재정의 옵션 개체의 파티션 키를 제공 하는 경우 `this.primaryKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-121">Note, if you provide a partition key on the options object, it will override the primary key on `this.primaryKey`.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.replace'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="3e9b5-122">항목의 정의 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-122">Replace the item's definition.</span></span>

    <span data-ttu-id="3e9b5-123">스키마가 없으므로 집합 JSON 항목에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-123">There is no set schema for JSON items.</span></span> <span data-ttu-id="3e9b5-124">사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-124">They may contain any number of custom properties.</span></span>
  syntax:
    content: 'function replace(body: ItemDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.ItemDefinition'
      description: <span data-ttu-id="3e9b5-125">기존 바꾸려면 정의 <xref:Item>의 사용 하 여 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-125">The definition to replace the existing <xref:Item>'s defintion with.</span></span>
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        <span data-ttu-id="3e9b5-126">파티션 키와 같은 요청에 대 한 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-126">Additional options for the request, such as the partition key.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.replace_1'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="3e9b5-127">항목의 정의 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-127">Replace the item's definition.</span></span>

    <span data-ttu-id="3e9b5-128">모든 제공 T 형식 SDK에서 반드시 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-128">Any provided type, T, is not necessarily enforced by the SDK.</span></span>

    <span data-ttu-id="3e9b5-129">표시 될 수 있습니다 더 많거나 적은 속성 및 강제 적용 하기 위한 논리입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-129">You may get more or less properties and it's up to your logic to enforce it.</span></span>


    <span data-ttu-id="3e9b5-130">스키마가 없으므로 집합 JSON 항목에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-130">There is no set schema for JSON items.</span></span> <span data-ttu-id="3e9b5-131">사용자 지정 속성을 개수에 관계 없이 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-131">They may contain any number of custom properties.</span></span>
  syntax:
    content: 'function replace<T>(body: T, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - T
      description: <span data-ttu-id="3e9b5-132">기존 바꾸려면 정의 <xref:Item>의 사용 하 여 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-132">The definition to replace the existing <xref:Item>'s defintion with.</span></span>
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        <span data-ttu-id="3e9b5-133">파티션 키와 같은 요청에 대 한 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-133">Additional options for the request, such as the partition key.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="3e9b5-134">리소스 참조 URL을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-134">Returns a reference URL to the resource.</span></span> <span data-ttu-id="3e9b5-135">사용 권한에서 연결에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e9b5-135">Used for linking in Permissions.</span></span>
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <
    fullName: <
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
  - name: '>>'
    fullName: '>>'
- uid: Promise<@azure/cosmos.ItemResponse<T>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <T>>
    fullName: <T>>
- uid: '@azure/cosmos.ItemDefinition'
  spec.typeScript:
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
