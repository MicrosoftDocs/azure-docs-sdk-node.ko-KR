### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions'
    name: StorageImportExportManagementClientOptions
    fullName: StorageImportExportManagementClientOptions
    children:
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.acceptLanguage'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.baseUri'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.clientRequestIdHeaderName'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.deserializationContentTypes'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.generateClientRequestIdHeader'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.httpClient'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.httpPipelineLogger'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.longRunningOperationRetryTimeout'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.noRetryPolicy'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.proxySettings'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.requestPolicyFactories'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.rpRegistrationRetryTimeout'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.userAgent'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.userAgentHeaderName'
      - '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.withCredentials'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: AzureServiceClientOptions
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="52542-101">{문자열} [options.acceptLanguage]-응답에 대 한 기본 언어를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="52542-101">{string} [options.acceptLanguage] - Gets or sets the preferred language for the response.</span></span> <span data-ttu-id="52542-102">기본값은: "EN-US"입니다.</span><span class="sxs-lookup"><span data-stu-id="52542-102">Default value is: "en-US".</span></span>'
    optional: true
    syntax:
      content: 'acceptLanguage?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.baseUri'
    name: baseUri
    fullName: baseUri
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'baseUri?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.clientRequestIdHeaderName'
    name: clientRequestIdHeaderName
    fullName: clientRequestIdHeaderName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="52542-103">GenerateRequestIdPolicy이 헤더 이름 및 요청 ID로 임의 UUID를 사용 하 여 모든 보내는 요청에 헤더를 추가 하는 HTTP 파이프라인에 추가할 지정 하는 경우</span><span class="sxs-lookup"><span data-stu-id="52542-103">If specified, a GenerateRequestIdPolicy will be added to the HTTP pipeline that will add a header to all outgoing requests with this header name and a random UUID as the request ID.</span></span>'
    optional: true
    syntax:
      content: 'clientRequestIdHeaderName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.deserializationContentTypes'
    name: deserializationContentTypes
    fullName: deserializationContentTypes
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="52542-104">콘텐츠 형식을 JSON 또는 XML serialization에 연관 될 것입니다.</span><span class="sxs-lookup"><span data-stu-id="52542-104">The content-types that will be associated with JSON or XML serialization.</span></span>
    optional: true
    syntax:
      content: 'deserializationContentTypes?: DeserializationContentTypes'
      return:
        type:
          - DeserializationContentTypes
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.generateClientRequestIdHeader'
    name: generateClientRequestIdHeader
    fullName: generateClientRequestIdHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="52542-105">각 HTTP에 대 한 클라이언트 요청 ID 헤더를 생성할 것인지 여부를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="52542-105">Whether or not to generate a client request ID header for each HTTP request.</span></span>
    optional: true
    syntax:
      content: 'generateClientRequestIdHeader?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.httpClient'
    name: httpClient
    fullName: httpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="52542-106">HTTP 요청을 전송 하는 데 사용할는 HttpClient 합니다.</span><span class="sxs-lookup"><span data-stu-id="52542-106">The HttpClient that will be used to send HTTP requests.</span></span>
    optional: true
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        type:
          - HttpClient
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.httpPipelineLogger'
    name: httpPipelineLogger
    fullName: httpPipelineLogger
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="52542-107">RequestPolicies HTTP 파이프라인 내에서 디버깅을 사용할 수 있는 HttpPipelineLogger 합니다.</span><span class="sxs-lookup"><span data-stu-id="52542-107">The HttpPipelineLogger that can be used to debug RequestPolicies within the HTTP pipeline.</span></span>
    optional: true
    syntax:
      content: 'httpPipelineLogger?: HttpPipelineLogger'
      return:
        type:
          - HttpPipelineLogger
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="52542-108">{number} 개 [options.longRunningOperationRetryTimeout]-장기 실행 작업에 대 한 시간 (초)에서 재시도 제한 시간을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="52542-108">{number} [options.longRunningOperationRetryTimeout] - Gets or sets the retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="52542-109">기본값은 30입니다.</span><span class="sxs-lookup"><span data-stu-id="52542-109">Default value is 30.</span></span>'
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.noRetryPolicy'
    name: noRetryPolicy
    fullName: noRetryPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="52542-110">경우 true, 기본 재시도 정책을 해제로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="52542-110">If set to true, turn off the default retry policy.</span></span>'
    optional: true
    syntax:
      content: 'noRetryPolicy?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.proxySettings'
    name: proxySettings
    fullName: proxySettings
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="52542-111">모든 HTTP 요청 (Node.js에만 해당)에 대해 사용 되는 프록시 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="52542-111">Proxy settings which will be used for every HTTP request (Node.js only).</span></span>
    optional: true
    syntax:
      content: 'proxySettings?: ProxySettings'
      return:
        type:
          - ProxySettings
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.requestPolicyFactories'
    name: requestPolicyFactories
    fullName: requestPolicyFactories
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="52542-112">배열, 통신 중에 HTTP 요청을 보내는 데 RequestPolicy 파이프라인을 만드는 호출 하는 팩터리 또는 defaultRequestPolicyFactories에 사용 되는 requestPolicyFactories 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="52542-112">An array of factories which get called to create the RequestPolicy pipeline used to send a HTTP request on the wire, or a function that takes in the defaultRequestPolicyFactories and returns the requestPolicyFactories that will be used.</span></span>'
    optional: true
    syntax:
      content: 'requestPolicyFactories?: RequestPolicyFactory[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
      return:
        type:
          - 'RequestPolicyFactory[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.rpRegistrationRetryTimeout'
    name: rpRegistrationRetryTimeout
    fullName: rpRegistrationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="52542-113">AutomaticRPRegistration 초 단위로 재시도 제한 시간을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="52542-113">Gets or sets the retry timeout in seconds for AutomaticRPRegistration.</span></span> <span data-ttu-id="52542-114">기본값은 30입니다.</span><span class="sxs-lookup"><span data-stu-id="52542-114">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'rpRegistrationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.userAgent'
    name: userAgent
    fullName: userAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="52542-115">요청 또는 기본 사용자 에이전트 문자열에 사용할 사용자 에이전트 문자열을 반환 하는 함수를 전송 하는 동안 원격 분석 헤더에 설정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="52542-115">The string to be set to the telemetry header while sending the request, or a function that takes in the default user-agent string and returns the user-agent string that will be used.</span></span>'
    optional: true
    syntax:
      content: 'userAgent?: string | (defaultUserAgent: string) => string'
      return:
        type:
          - 'string | (defaultUserAgent: string) => string'
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.userAgentHeaderName'
    name: userAgentHeaderName
    fullName: userAgentHeaderName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="52542-116">요청을 전송 하는 동안 원격 분석 헤더에 사용할 헤더 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="52542-116">The header name to use for the telemetry header while sending the request.</span></span> <span data-ttu-id="52542-117">지정 하지 않으면 다음 Node.js를 실행 하는 경우 "사용자-에이전트"을 사용 하 고 "x-ms-명령-name" 브라우저에서 실행할 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52542-117">If this is not specified, then "User-Agent" will be used when running on Node.js and "x-ms-command-name" will be used when running in a browser.</span></span>'
    optional: true
    syntax:
      content: 'userAgentHeaderName?: string | (defaultUserAgentHeaderName: string) => string'
      return:
        type:
          - 'string | (defaultUserAgentHeaderName: string) => string'
    package: '@azure/arm-storageimportexport'
  - uid: '@azure/arm-storageimportexport.StorageImportExportManagementClientOptions.withCredentials'
    name: withCredentials
    fullName: withCredentials
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="52542-118">브라우저에서 CORS 요청에 자격 증명을 포함할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="52542-118">Whether to include credentials in CORS requests in the browser.</span></span>
      <span data-ttu-id="52542-119">자세한 내용은 https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="52542-119">See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials for more information.</span></span>
    optional: true
    syntax:
      content: 'withCredentials?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storageimportexport'