### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-compute.VaultCertificate'
    name: VaultCertificate
    fullName: VaultCertificate
    children:
      - '@azure/arm-compute.VaultCertificate.certificateStore'
      - '@azure/arm-compute.VaultCertificate.certificateUrl'
    langs:
      - typeScript
    type: interface
    summary: '<span data-ttu-id="bb14e-101">키 자격 증명 모음에 대 한 단일 인증서 참조에 설명 합니다. VM에서 인증서 상주할 및 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb14e-101">Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.</span></span>'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VaultCertificate.certificateStore'
    name: certificateStore
    fullName: certificateStore
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="bb14e-102">Windows Vm에 대 한 인증서를 추가할 가상 컴퓨터에 인증서 저장소를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb14e-102">For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added.</span></span> <span data-ttu-id="bb14e-103">지정된 된 인증서 저장소는 LocalMachine 계정에 암시적으로.</span><span class="sxs-lookup"><span data-stu-id="bb14e-103">The specified certificate store is implicitly in the LocalMachine account.</span></span> <br><br><span data-ttu-id="bb14e-104">Linux Vm에 대 한 인증서 파일 아래에 배치 됩니다 /var/lib/waagent 디렉터리에 파일 이름의 &lt;UppercaseThumbprint&gt;.crt는 x509 인증서 파일 및 &lt;UppercaseThumbprint&gt;.prv에 대 한 개인 키입니다.</span><span class="sxs-lookup"><span data-stu-id="bb14e-104">For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key.</span></span> <span data-ttu-id="bb14e-105">이러한 파일 모두.pem 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb14e-105">Both of these files are .pem formatted.</span></span>'
    optional: true
    syntax:
      content: 'certificateStore?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VaultCertificate.certificateUrl'
    name: certificateUrl
    fullName: certificateUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="bb14e-106">비밀을 Key Vault에 업로드 된 인증서의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="bb14e-106">This is the URL of a certificate that has been uploaded to Key Vault as a secret.</span></span> <span data-ttu-id="bb14e-107">Key Vault에 비밀을 추가, 참조 [키나 비밀을 key vault에 추가할](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb14e-107">For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).</span></span> <span data-ttu-id="bb14e-108">이 경우 인증서 해야 하는 개체는 다음 JSON의 Base64 인코딩을 u t F-8이 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb14e-108">In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8:</span></span> <br><br> <span data-ttu-id="bb14e-109">{</span><span class="sxs-lookup"><span data-stu-id="bb14e-109">{</span></span><br>  <span data-ttu-id="bb14e-110">"data":"<Base64-encoded-certificate>",</span><span class="sxs-lookup"><span data-stu-id="bb14e-110">"data":"<Base64-encoded-certificate>",</span></span><br>
      <span data-ttu-id="bb14e-111">"dataType":"pfx",</span><span class="sxs-lookup"><span data-stu-id="bb14e-111">"dataType":"pfx",</span></span><br>  <span data-ttu-id="bb14e-112">"password":"<pfx-file-password>"</span><span class="sxs-lookup"><span data-stu-id="bb14e-112">"password":"<pfx-file-password>"</span></span><br><span data-ttu-id="bb14e-113">}</span><span class="sxs-lookup"><span data-stu-id="bb14e-113">}</span></span>
    optional: true
    syntax:
      content: 'certificateUrl?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-compute'