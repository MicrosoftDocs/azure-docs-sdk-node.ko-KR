### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-compute.ContainerServices'
    name: ContainerServices
    fullName: ContainerServices
    children:
      - '@azure/arm-compute.ContainerServices.beginCreateOrUpdate'
      - '@azure/arm-compute.ContainerServices.beginDeleteMethod'
      - '@azure/arm-compute.ContainerServices.constructor'
      - '@azure/arm-compute.ContainerServices.createOrUpdate'
      - '@azure/arm-compute.ContainerServices.deleteMethod'
      - '@azure/arm-compute.ContainerServices.get'
      - '@azure/arm-compute.ContainerServices.get_2'
      - '@azure/arm-compute.ContainerServices.get_1'
      - '@azure/arm-compute.ContainerServices.list'
      - '@azure/arm-compute.ContainerServices.list_2'
      - '@azure/arm-compute.ContainerServices.list_1'
      - '@azure/arm-compute.ContainerServices.listByResourceGroup'
      - '@azure/arm-compute.ContainerServices.listByResourceGroup_2'
      - '@azure/arm-compute.ContainerServices.listByResourceGroup_1'
      - '@azure/arm-compute.ContainerServices.listByResourceGroupNext'
      - '@azure/arm-compute.ContainerServices.listByResourceGroupNext_2'
      - '@azure/arm-compute.ContainerServices.listByResourceGroupNext_1'
      - '@azure/arm-compute.ContainerServices.listNext'
      - '@azure/arm-compute.ContainerServices.listNext_2'
      - '@azure/arm-compute.ContainerServices.listNext_1'
    langs:
      - typeScript
    type: class
    summary: ContainerServices 나타내는 클래스입니다.
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, ContainerService, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '만들거나 오 케 스트레이 터, 마스터 및 에이전트의 지정 된 구성을 사용 하 여 컨테이너 서비스를 업데이트 합니다.'
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, containerServiceName: string, parameters: ContainerService, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: containerServiceName
          type:
            - string
          description: 지정된 된 구독 및 리소스 그룹에 있는 컨테이너 서비스의 이름입니다.
        - id: parameters
          type:
            - '@azure/arm-compute.ContainerService'
          description: 만들기 또는 업데이트 된 컨테이너 서비스 작업에 제공 된 매개 변수입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 구독 및 리소스 그룹에서 지정 된 컨테이너 서비스를 삭제합니다. 작업 저장소 계정, Vm을 포함 하 여 컨테이너 서비스를 만들기의 일환으로 만든 다른 리소스를 삭제 하지 않습니다 및 가용성 집합. 컨테이너 서비스를 사용 하 여 생성 된 다른 모든 리소스는 동일한 리소스 그룹의 일부 이며 개별적으로 삭제할 수 있습니다.'
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: containerServiceName
          type:
            - string
          description: 지정된 된 구독 및 리소스 그룹에 있는 컨테이너 서비스의 이름입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.constructor'
    name: ContainerServices(ComputeManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ContainerServices를 만듭니다.
    syntax:
      content: 'new ContainerServices(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-compute.ComputeManagementClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.createOrUpdate'
    name: 'createOrUpdate(string, string, ContainerService, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '만들거나 오 케 스트레이 터, 마스터 및 에이전트의 지정 된 구성을 사용 하 여 컨테이너 서비스를 업데이트 합니다.'
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, containerServiceName: string, parameters: ContainerService, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: containerServiceName
          type:
            - string
          description: 지정된 된 구독 및 리소스 그룹에 있는 컨테이너 서비스의 이름입니다.
        - id: parameters
          type:
            - '@azure/arm-compute.ContainerService'
          description: 만들기 또는 업데이트 된 컨테이너 서비스 작업에 제공 된 매개 변수입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesCreateOrUpdateResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 구독 및 리소스 그룹에서 지정 된 컨테이너 서비스를 삭제합니다. 작업 저장소 계정, Vm을 포함 하 여 컨테이너 서비스를 만들기의 일환으로 만든 다른 리소스를 삭제 하지 않습니다 및 가용성 집합. 컨테이너 서비스를 사용 하 여 생성 된 다른 모든 리소스는 동일한 리소스 그룹의 일부 이며 개별적으로 삭제할 수 있습니다.'
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: containerServiceName
          type:
            - string
          description: 지정된 된 구독 및 리소스 그룹에 있는 컨테이너 서비스의 이름입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정 된 구독 및 리소스 그룹에 지정 된 컨테이너 서비스의 속성을 가져옵니다. 작업 상태, 오 케 스트레이 터, 마스터 및 에이전트 수를 포함 하 여 속성을 반환 하 고 마스터 및 에이전트의 Fqdn입니다.'
    syntax:
      content: 'function get(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: containerServiceName
          type:
            - string
          description: 지정된 된 구독 및 리소스 그룹에 있는 컨테이너 서비스의 이름입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesGetResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<ContainerService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, containerServiceName: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerService>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: containerServiceName
          type:
            - string
          description: 지정된 된 구독 및 리소스 그룹에 있는 컨테이너 서비스의 이름입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerService>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesGetResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.get_1'
    name: 'get(string, string, ServiceCallback<ContainerService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, containerServiceName: string, callback: ServiceCallback<ContainerService>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: containerServiceName
          type:
            - string
          description: 지정된 된 구독 및 리소스 그룹에 있는 컨테이너 서비스의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerService>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesGetResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 구독에서 컨테이너 서비스의 목록을 가져옵니다. 작업 상태, 오 케 스트레이 터, 마스터 및 에이전트 수를 포함 하 여 각 컨테이너 서비스의 속성을 반환 하 고 마스터 및 에이전트의 Fqdn입니다.'
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesListResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.list_1'
    name: list(ServiceCallback<ContainerServiceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesListResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 구독 및 리소스 그룹의 컨테이너 서비스의 목록을 가져옵니다. 작업 상태, 오 케 스트레이 터, 마스터 및 에이전트 수를 포함 하 여 각 컨테이너 서비스의 속성을 반환 하 고 마스터 및 에이전트의 Fqdn입니다.'
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listByResourceGroup_2'
    name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 리소스 그룹의 이름.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 구독 및 리소스 그룹의 컨테이너 서비스의 목록을 가져옵니다. 작업 상태, 오 케 스트레이 터, 마스터 및 에이전트 수를 포함 하 여 각 컨테이너 서비스의 속성을 반환 하 고 마스터 및 에이전트의 Fqdn입니다.'
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listByResourceGroupNext_2'
    name: 'listByResourceGroupNext(string, RequestOptionsBase, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 구독에서 컨테이너 서비스의 목록을 가져옵니다. 작업 상태, 오 케 스트레이 터, 마스터 및 에이전트 수를 포함 하 여 각 컨테이너 서비스의 속성을 반환 하 고 마스터 및 에이전트의 Fqdn입니다.'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesListNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.ContainerServices.listNext_1'
    name: 'listNext(string, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 목록 작업에 성공적으로 이전 호출의 NextLink입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ContainerServicesListNextResponse>
    package: '@azure/arm-compute'
references:
  - uid: '@azure/arm-compute.ComputeManagementClientContext'
    name: ComputeManagementClientContext
    spec.typeScript:
      - name: ComputeManagementClientContext
        fullName: ComputeManagementClientContext
        uid: '@azure/arm-compute.ComputeManagementClientContext'
  - uid: '@azure/arm-compute.ContainerService'
    name: ContainerService
    spec.typeScript:
      - name: ContainerService
        fullName: ContainerService
        uid: '@azure/arm-compute.ContainerService'
  - uid: ServiceCallback<@azure/arm-compute.ContainerService>
    name: ContainerService>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerService
        fullName: ContainerService
        uid: '@azure/arm-compute.ContainerService'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-compute.ContainerServiceListResult>
    name: ContainerServiceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerServiceListResult
        fullName: ContainerServiceListResult
        uid: '@azure/arm-compute.ContainerServiceListResult'
      - name: '>'
        fullName: '>'