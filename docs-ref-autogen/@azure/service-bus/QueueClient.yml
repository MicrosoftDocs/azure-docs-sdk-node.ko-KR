### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.QueueClient'
    name: QueueClient
    fullName: QueueClient
    children:
      - '@azure/service-bus.QueueClient.close'
      - '@azure/service-bus.QueueClient.createReceiver'
      - '@azure/service-bus.QueueClient.createReceiver_1'
      - '@azure/service-bus.QueueClient.createSender'
      - '@azure/service-bus.QueueClient.entityPath'
      - '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
      - '@azure/service-bus.QueueClient.id'
      - '@azure/service-bus.QueueClient.peek'
      - '@azure/service-bus.QueueClient.peekBySequenceNumber'
    langs:
      - typeScript
    type: class
    summary: |-
      Service Bus 큐와 상호 작용을 허용 하는 클라이언트를 설명 합니다.
      사용 된 `createQueueClient` ServiceBusClient 개체를 인스턴스화하는 QueueClient 함수
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 클라이언트에서 만든 발신자/수신자에 대 한 모든 AMQP 링크를 닫습니다.
      닫히면 추가 작업에는 QueueClient 아니고 해당 발신자/수신자를 사용할 수 있습니다.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      세션이 설정 되지 않은 큐에서 메시지를 수신 하는 것에 대 한 수신기를 만듭니다.
      - 수신기를 열고이 QueueClient에 대해 이미 존재 하는 경우 오류를 throw 합니다.
      - Throw `InvalidOperationError` 큐에 세션을 활성화 하는 경우 (이 경우에 사용 하는이 메서드의 오버 로드를 사용 하 여 `sessionOptions` 인수)
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            메시지를 수신 해야 하는 모드를 나타내는 열거형입니다. 가능한 값은 다음과 같습니다.
            - `ReceiveMode.peekLock`: 이 모드에서는 메시지가 수신 되 면 수신기에 대 한 잠금이 메시지는 특정 기간에 대 한 합니다. 다시 다음 가져올 Service Bus에 도착 하는이 시간을 기준으로 메시지 모양이 되지 경우 수신 작업입니다.
            - `ReceiveMode.receiveAndDelete`: 이 모드에서는 수신 된 메시지 가져오기 Service Bus에서 자동으로 제거 됩니다.
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      큐를 사용 하는 세션에서 메시지를 수신에 대 한 수신기를 만듭니다. 없는 세션 Id를 지정 하는 경우 사용 가능한 세션 간에 임의 세션 사용 됩니다.
      - 수신기를 열고 이미 있는 경우에 대 한 세션 Id를 지정 된 오류를 throw 합니다.
      - Throw `SessionCannotBeLockedError` 큐에서 세션을 사용 하도록 설정 되지 않은 경우 (이 경우에 전달 하지 마십시오는 `sessionOptions` 인수) Service Bus 세션 (잠시 후 다시 시도 사례)에 대 한 잠금을 설정할 수 없는 경우 또는
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            메시지를 수신 해야 하는 모드를 나타내는 열거형입니다. 가능한 값은 다음과 같습니다.
            - `ReceiveMode.peekLock`: 이 모드에서는 메시지가 수신 되 면 수신기에 대 한 잠금이 메시지는 특정 기간에 대 한 합니다. 다시 다음 가져올 Service Bus에 도착 하는이 시간을 기준으로 메시지 모양이 되지 경우 수신 작업입니다.
            - `ReceiveMode.receiveAndDelete`: 이 모드에서는 수신 된 메시지 가져오기 Service Bus에서 자동으로 제거 됩니다.
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            세션 수신자에 대 한 세션 Id와 자동 잠금 갱신 기간을 제공 하는 옵션입니다.
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createSender'
    name: createSender()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      메시지 보내기, 나중에 전송 될 메시지를 예약 및 이러한 예약 된 메시지 취소에 사용할 보낸 사람을 만듭니다.
      - 열기 발신자는이 QueueClient에 대해 이미 존재 하는 경우 오류를 throw 합니다.
    syntax:
      content: function createSender()
      parameters: []
      return:
        type:
          - '@azure/service-bus.Sender'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: 이 클라이언트 만들어질 Service Bus 큐에 대 한 경로입니다.
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
    name: getDeadLetterQueuePath(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정 된 이름으로 나타내는 큐의 해당 배달 못 한 편지 큐 이름을 반환 합니다.
      이 사용 하 여 합니다 `createQueueClient` 함수를 실행 하는 `ServiceBusClient` 배달 못 한 편지 큐에서 메시지를 수신 하는 인스턴스.
    syntax:
      content: 'static function getDeadLetterQueuePath(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |
            해당 배달 못 한 편지 해당 사용자의 이름을 인출 하는 큐의 이름
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: 이 클라이언트에 대 한 고유 식별자입니다.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      활성 메시지의 다음 일괄 처리를 가져옵니다 (deadlettered 메시지가 없는 하지만 지연 등).
      - 첫 번째 호출은 `peek()` 첫 번째 활성화 메시지를 인출 합니다. 각 후속 호출에서 후속 메시지를 페치합니다.
      - 와 달리를 `received` 메시지를 `peeked` 메시지는 메시지의 읽기 전용 버전입니다.
      `Completed/Abandoned/Deferred/Deadlettered`일 수 없습니다. 이 대 한 잠금을 갱신할 수 없습니다.
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      원하는 수의 활성 메시지를 관찰 합니다. (메시지를 전달 실패 하지 않도록 하지만 지연 등)에서 지정 된 시퀀스 번호입니다.
      - 와 달리를 `received` 메시지를 `peeked` 메시지는 메시지의 읽기 전용 버전입니다.
      `Completed/Abandoned/Deferred/Deadlettered`일 수 없습니다. 이 대 한 잠금을 갱신할 수 없습니다.
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: 메시지를 읽을 수 있는 위치에서 시퀀스 번호입니다.
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: '@azure/service-bus.Sender'
    name: Sender
    spec.typeScript:
      - name: Sender
        fullName: Sender
        uid: '@azure/service-bus.Sender'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'