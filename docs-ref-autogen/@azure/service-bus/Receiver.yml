### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    fullName: Receiver
    children:
      - '@azure/service-bus.Receiver.close'
      - '@azure/service-bus.Receiver.getMessageIterator'
      - '@azure/service-bus.Receiver.isClosed'
      - '@azure/service-bus.Receiver.isReceivingMessages'
      - '@azure/service-bus.Receiver.receiveDeferredMessage'
      - '@azure/service-bus.Receiver.receiveDeferredMessages'
      - '@azure/service-bus.Receiver.receiveMessages'
      - '@azure/service-bus.Receiver.receiveMode'
      - '@azure/service-bus.Receiver.registerMessageHandler'
      - '@azure/service-bus.Receiver.renewMessageLock'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="b95df-101">일괄 처리에서 또는 처리기를 등록 하 여 메시지를 수신 하도록 수신기 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-101">The Receiver class can be used to receive messages in a batch or by registering handlers.</span></span>
      <span data-ttu-id="b95df-102">사용 된 `createReceiver` QueueClient 또는 SubscriptionClient 수신기를 인스턴스화하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-102">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a Receiver.</span></span>
      <span data-ttu-id="b95df-103">수신기 클래스는 기본 AMQP 수신기 연결을 통해 추상적입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-103">The Receiver class is an abstraction over the underlying AMQP receiver link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="b95df-104">기본 AMQP 수신자가 링크를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-104">Closes the underlying AMQP receiver link.</span></span>
      <span data-ttu-id="b95df-105">종료 되 면 추가 작업에 대 한 수신기를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-105">Once closed, the receiver cannot be used for any further operations.</span></span>
      <span data-ttu-id="b95df-106">사용 된 `createReceiver` QueueClient 또는 SubscriptionClient 새 수신기를 인스턴스화하는 함수</span><span class="sxs-lookup"><span data-stu-id="b95df-106">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a new Receiver</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.getMessageIterator'
    name: getMessageIterator()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="b95df-107">수신기에서 메시지를 통한 비동기 반복기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-107">Gets an async iterator over messages from the receiver.</span></span>
      <span data-ttu-id="b95df-108">다른 수신 작업을 동일한 수신기에서 진행 중인 경우 오류를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-108">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="b95df-109">확실 하지 않은 경우가 다른 작업 실행을 수신 하는지 여부를 확인 합니다 `isReceivingMessages` 수신기의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-109">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>

      <span data-ttu-id="b95df-110">반복기는 분별로 새 메시지를 가져올 수 없는 경우 `undefined` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-110">If the iterator is not able to fetch a new message in over a minute, `undefined` will be returned.</span></span>
    syntax:
      content: function getMessageIterator()
      parameters: []
      return:
        type:
          - AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b95df-111">반환 `true` 수신기가 닫힌 경우.</span><span class="sxs-lookup"><span data-stu-id="b95df-111">Returns `true` if the receiver is closed.</span></span> <span data-ttu-id="b95df-112">하거나 생성 하는 클라이언트 또는 자체 수신기가 닫혀 있으므로 닫힌 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-112">This can happen either because the receiver itself has been closed or the client that created it has been closed.</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.isReceivingMessages'
    name: isReceivingMessages()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="b95df-113">수신기가 있는지 여부를 메시지 수신 현재 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-113">Indicates whether the receiver is currently receiving messages or not.</span></span>
      <span data-ttu-id="b95df-114">반환 될 때이 true 이면 새 `registerMessageHandler()` 또는 `receiveMessages()` 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-114">When this returns true, new `registerMessageHandler()` or `receiveMessages()` calls cannot be made.</span></span>
    syntax:
      content: function isReceivingMessages()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveDeferredMessage'
    name: receiveDeferredMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b95df-115">로 식별 되는 지연 된 메시지를 확인 하는 약속을 반환 합니다 지정 `sequenceNumber`합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-115">Returns a promise that resolves to a deferred message identified by the given `sequenceNumber`.</span></span>
    syntax:
      content: 'function receiveDeferredMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="b95df-116">수신 해야 하는 메시지의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-116">The sequence number of the message that needs to be received.</span></span>
      return:
        type:
          - Promise<@azure/service-bus.ServiceBusMessage | undefined>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveDeferredMessages'
    name: 'receiveDeferredMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b95df-117">식별 하는 지연 된 메시지 배열에 확인 되는 프라미스를 반환 하 여 지정 된 `sequenceNumbers`합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-117">Returns a promise that resolves to an array of deferred messages identified by given `sequenceNumbers`.</span></span>
    syntax:
      content: 'function receiveDeferredMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="b95df-118">배열 수신 해야 하는 메시지 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-118">An array of sequence numbers for the messages that need to be received.</span></span>
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveMessages'
    name: 'receiveMessages(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="b95df-119">큐/구독에서 메시지의 배열을 확인 되는 약속을 기반으로 반환 수 및 시간 제한 지정 된 AMQP 수신기를 통해 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-119">Returns a promise that resolves to an array of messages based on given count and timeout over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="b95df-120">다른 수신 작업을 동일한 수신기에서 진행 중인 경우 오류를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-120">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="b95df-121">확실 하지 않은 경우가 다른 작업 실행을 수신 하는지 여부를 확인 합니다 `isReceivingMessages` 수신기의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-121">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function receiveMessages(maxMessageCount: number, idleTimeoutInSeconds?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - number
          description: <span data-ttu-id="b95df-122">큐/구독에서 수신 하는 메시지의 최대 수입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-122">The maximum number of messages to receive from Queue/Subscription.</span></span>
        - id: idleTimeoutInSeconds
          type:
            - undefined | number
          description: |-
            <span data-ttu-id="b95df-123">최대 대기 시간 (초)는 첫 번째 메시지를 받는 수신기 기다려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-123">The maximum wait time in seconds for which the Receiver should wait to receive the first message.</span></span> <span data-ttu-id="b95df-124">이 시간을 기준으로 메시지가 수신 되 면 반환 된 프라미스를 빈 배열을 확인을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-124">If no message is received by this time, the returned promise gets resolved to an empty array.</span></span>
            - <span data-ttu-id="b95df-125">**기본**: `60` 시간 (초)입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-125">**Default**: `60` seconds.</span></span>
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveMode'
    name: receiveMode
    fullName: receiveMode
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b95df-126">이 수신기의 receiveMode를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-126">Denotes receiveMode of this receiver.</span></span>
    syntax:
      content: 'receiveMode: ReceiveMode'
      return:
        type:
          - '@azure/service-bus.ReceiveMode'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.registerMessageHandler'
    name: 'registerMessageHandler(OnMessage, OnError, MessageHandlerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="b95df-127">큐/구독에서 AMQP 수신기 연결을 통해 들어오는 메시지 스트림을 처리 하는 처리기를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-127">Registers handlers to deal with the incoming stream of messages over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="b95df-128">메시지 수신을 중지 하려면 호출 `close()` 수신자입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-128">To stop receiving messages, call `close()` on the Receiver.</span></span>
      <span data-ttu-id="b95df-129">다른 수신 작업을 동일한 수신기에서 진행 중인 경우 오류를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-129">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="b95df-130">확실 하지 않은 경우가 다른 작업 실행을 수신 하는지 여부를 확인 합니다 `isReceivingMessages` 수신기의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-130">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function registerMessageHandler(onMessage: OnMessage, onError: OnError, options?: MessageHandlerOptions)'
      parameters:
        - id: onMessage
          type:
            - '@azure/service-bus.OnMessage'
          description: <span data-ttu-id="b95df-131">들어오는 각 메시지를 처리 하는 것에 대 한 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-131">Handler for processing each incoming message.</span></span>
        - id: onError
          type:
            - '@azure/service-bus.OnError'
          description: <span data-ttu-id="b95df-132">수신 하거나 메시지를 처리 하는 동안 발생 하는 모든 오류에 대 한 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-132">Handler for any error that occurs while receiving or processing messages.</span></span>
        - id: options
          type:
            - '@azure/service-bus.MessageHandlerOptions'
          description: |
            <span data-ttu-id="b95df-133">메시지를 자동으로 완료 해야, 및/또는 해당 잠금을 자동으로 갱신 해야 하는 경우 컨트롤에 대 한 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-133">Options to control if messages should be automatically completed, and/or have their locks automatically renewed.</span></span> <span data-ttu-id="b95df-134">동시에 처리 되어야 하는 메시지의 최대 수를 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-134">You can control the maximum number of messages that should be concurrently processed.</span></span> <span data-ttu-id="b95df-135">새 메시지에 대 한 수신기를 닫기 전에 대기 하는 시간을 나타내는 시간 (초)의 제한 시간을 제공할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-135">You can also provide a timeout in seconds to denote the amount of time to wait for a new message before closing the receiver.</span></span>
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.renewMessageLock'
    name: renewMessageLock(string | ServiceBusMessage)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="b95df-136">큐/구독을 만드는 동안 지정 된 기간에 대 한 메시지에 대 한 잠금을 갱신합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-136">Renews the lock on the message for the duration as specified during the Queue/Subscription creation.</span></span>
      - <span data-ttu-id="b95df-137">확인 된 `lockedUntilUtc` 잠금이 만료 될 때 시간에 대 한 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-137">Check the `lockedUntilUtc` property on the message for the time when the lock expires.</span></span>
      - <span data-ttu-id="b95df-138">메시지를 확인 하지는 경우 (중 하나를 사용 하 여 `complete()`, `defer()` 또는 `deadletter()`수신 작업을 다시 다음 큐/구독에서에서 메시지 땅을 잠금이 만료 되기 전에, 합니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-138">If a message is not settled (using either `complete()`, `defer()` or `deadletter()`, before its lock expires, then the message lands back in the Queue/Subscription for the next receive operation.</span></span>
    syntax:
      content: 'function renewMessageLock(lockTokenOrMessage: string | ServiceBusMessage)'
      parameters:
        - id: lockTokenOrMessage
          type:
            - string | @azure/service-bus.ServiceBusMessage
          description: <span data-ttu-id="b95df-139">`lockToken` 메시지 또는 메시지 자체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b95df-139">The `lockToken` property of the message or the message itself.</span></span>
      return:
        type:
          - Promise<Date>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    name: ServiceBusMessage>
    spec.typeScript:
      - name: AsyncIterableIterator<
        fullName: AsyncIterableIterator<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.ServiceBusMessage | undefined>
    name: ServiceBusMessage | undefined>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: ' | undefined>'
        fullName: ' | undefined>'
  - uid: 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    name: 'ServiceBusMessage[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/service-bus.OnMessage'
    name: OnMessage
    spec.typeScript:
      - name: OnMessage
        fullName: OnMessage
        uid: '@azure/service-bus.OnMessage'
  - uid: '@azure/service-bus.OnError'
    name: OnError
    spec.typeScript:
      - name: OnError
        fullName: OnError
        uid: '@azure/service-bus.OnError'
  - uid: '@azure/service-bus.MessageHandlerOptions'
    name: MessageHandlerOptions
    spec.typeScript:
      - name: MessageHandlerOptions
        fullName: MessageHandlerOptions
        uid: '@azure/service-bus.MessageHandlerOptions'
  - uid: string | @azure/service-bus.ServiceBusMessage
    name: ServiceBusMessage
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'