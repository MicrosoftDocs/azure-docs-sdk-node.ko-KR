### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Sender'
    name: Sender
    fullName: Sender
    children:
      - '@azure/service-bus.Sender.cancelScheduledMessage'
      - '@azure/service-bus.Sender.cancelScheduledMessages'
      - '@azure/service-bus.Sender.close'
      - '@azure/service-bus.Sender.isClosed'
      - '@azure/service-bus.Sender.scheduleMessage'
      - '@azure/service-bus.Sender.scheduleMessages'
      - '@azure/service-bus.Sender.send'
      - '@azure/service-bus.Sender.sendBatch'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="753e7-101">메시지를 보내고, 메시지는 나중에 전송 되 고 이러한 예약 된 메시지 취소를 예약 발신자 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-101">The Sender class can be used to send messages, schedule messages to be sent at a later time and cancel such scheduled messages.</span></span>
      <span data-ttu-id="753e7-102">사용 된 `createSender` QueueClient 또는 TopicClient 발신자를 인스턴스화하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-102">Use the `createSender` function on the QueueClient or TopicClient to instantiate a Sender.</span></span>
      <span data-ttu-id="753e7-103">보낸 사람 클래스는 기본 AMQP 발신자 연결을 통해 추상적입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-103">The Sender class is an abstraction over the underlying AMQP sender link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessage'
    name: cancelScheduledMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="753e7-104">ServiceBus 큐/구독에 표시 되도록 예약 된 메시지를 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-104">Cancels a message that was scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="753e7-105">취소 메시지의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-105">The sequence number of the message to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessages'
    name: 'cancelScheduledMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="753e7-106">ServiceBus 큐/구독에 표시 되도록 예약 된 여러 메시지를 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-106">Cancels multiple messages that were scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="753e7-107">배열 취소할 메시지의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-107">An Array of sequence numbers of the messages to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="753e7-108">기본 AMQP 보낸 사람 링크를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-108">Closes the underlying AMQP sender link.</span></span>
      <span data-ttu-id="753e7-109">종료 되 면 추가 작업에 대 한 발신자를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-109">Once closed, the sender cannot be used for any further operations.</span></span>
      <span data-ttu-id="753e7-110">사용 된 `createSender` QueueClient 또는 TopicClient 새 발신자를 인스턴스화하는 함수</span><span class="sxs-lookup"><span data-stu-id="753e7-110">Use the `createSender` function on the QueueClient or TopicClient to instantiate a new Sender</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="753e7-111">반환 `true` 보낸 사람 또는 만든 클라이언트 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="753e7-111">Returns `true` if either the sender or the client that created it has been closed</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessage'
    name: 'scheduleMessage(Date, SendableMessageInfo)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="753e7-112">일정을 나중에 Service Bus 큐/구독에 표시할 메시지를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-112">Schedules given message to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessage(scheduledEnqueueTimeUtc: Date, message: SendableMessageInfo)'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="753e7-113">메시지는 큐에 넣을 수는 UTC 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-113">The UTC time at which the message should be enqueued.</span></span>
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="753e7-114">예약 해야 하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-114">The message that needs to be scheduled.</span></span>
      return:
        type:
          - Promise<Long>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessages'
    name: 'scheduleMessages(Date, SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="753e7-115">일정을 나중에 Service Bus 큐/구독에 표시할 메시지를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-115">Schedules given messages to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessages(scheduledEnqueueTimeUtc: Date, messages: SendableMessageInfo[])'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="753e7-116">메시지는 큐에 넣을 수는 UTC 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-116">The UTC time at which the messages should be enqueued.</span></span>
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="753e7-117">예약 해야 하는 메시지의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-117">Array of Messages that need to be scheduled.</span></span>
      return:
        type:
          - 'Promise<Long[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.send'
    name: send(SendableMessageInfo)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="753e7-118">이 아직 없으면 AMQP 보낸 사람 링크를 만드는 한 후 지정된 된 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-118">Sends the given message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      <span data-ttu-id="753e7-119">메시지를 보낼를 `session` 및/또는 `partition` 설정 된 큐/토픽에 설정 합니다 `sessionId` 및/또는 `partitionKey` 메시지 각각의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-119">To send a message to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the message.</span></span>
    syntax:
      content: 'function send(message: SendableMessageInfo)'
      parameters:
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="753e7-120">보낼 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-120">Message to send.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.sendBatch'
    name: 'sendBatch(SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="753e7-121">있으면 이미 없으면 AMQP 보낸 사람 링크를 만드는 단일 일괄 처리 즉, 단일 AMQP 메시지에에서 지정 된 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-121">Sends the given messages in a single batch i.e. in a single AMQP message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      - <span data-ttu-id="753e7-122">메시지를 보낼를 `session` 및/또는 `partition` 설정 된 큐/토픽에 설정 된 `sessionId` 및/또는 `partitionKey` 메시지 각각에 대 한 속성.</span><span class="sxs-lookup"><span data-stu-id="753e7-122">To send messages to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the messages.</span></span>
      - <span data-ttu-id="753e7-123">일괄 처리의 모든 메시지가 동일한 있어야이 작업을 수행 하는 경우 `sessionId` (세션을 사용 하 여) 하는 경우와 동일한 `parititionKey` (파티션 사용) 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="753e7-123">When doing so, all messages in the batch should have the same `sessionId` (if using sessions) and the same `parititionKey` (if using paritions).</span></span>
    syntax:
      content: 'function sendBatch(messages: SendableMessageInfo[])'
      parameters:
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="753e7-124">일괄 처리 메시지를 보낼 SendableMessageInfo 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="753e7-124">An array of SendableMessageInfo objects to be sent in a Batch message.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SendableMessageInfo'
    name: SendableMessageInfo
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
  - uid: '@azure/service-bus.SendableMessageInfo[]'
    name: 'SendableMessageInfo[]'
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
      - name: '[]'
        fullName: '[]'