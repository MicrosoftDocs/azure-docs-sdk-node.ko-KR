### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient'
    name: PowerBIEmbeddedManagementClient
    fullName: PowerBIEmbeddedManagementClient
    children:
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.acceptLanguage'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.apiVersion'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.beginLongRunningRequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.credentials'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations_2'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations_1'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.longRunningOperationRetryTimeout'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.constructor'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.restoreLROPoller'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendLongRunningRequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendLRORequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendOperationRequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendRequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.subscriptionId'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.workspaceCollections'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.workspaces'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClientContext'
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: (장기 실행 작업)는 LRO의 초기 요청을 보내고 메서드는 LRO 폴링 및는 LRO 완료 된 경우 검사를 제공 하는 HttpLongRunningOperationResponse 돌아갑니다.
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: 요청 개체
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations'
    name: getAvailableOperations(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Power BI 리소스 공급자가 어떤 작업을 수행할 수를 나타냅니다.
    syntax:
      content: 'function getAvailableOperations(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAvailableOperationsResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations_2'
    name: 'getAvailableOperations(RequestOptionsBase, ServiceCallback<OperationList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAvailableOperations(options: RequestOptionsBase, callback: ServiceCallback<OperationList>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/arm-powerbiembedded.OperationList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetAvailableOperationsResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations_1'
    name: getAvailableOperations(ServiceCallback<OperationList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAvailableOperations(callback: ServiceCallback<OperationList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-powerbiembedded.OperationList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetAvailableOperationsResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 장기 실행 작업에 대 한 시간 (초) 다시 시도 제한 시간입니다. 기본값은 30입니다.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.constructor'
    name: 'PowerBIEmbeddedManagementClient(ServiceClientCredentials, string, Models.PowerBIEmbeddedManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: PowerBIEmbeddedManagementClient 클래스의 새 인스턴스를 초기화합니다.
    syntax:
      content: 'new PowerBIEmbeddedManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.PowerBIEmbeddedManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Azure에 연결 하는 클라이언트에 필요한 자격 증명입니다.
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure 구독을 고유 하 게 식별 하는 구독 자격 증명을 가져옵니다. 구독 ID는 모든 서비스 호출에 대한 URI의 파트를 형성합니다.
        - id: options
          type:
            - Models.PowerBIEmbeddedManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공 된 LROPollState에서는 LROPoller를 복원 합니다. 이 메서드는 LROPoller 다른 프로세스 또는 컴퓨터에 다시 사용할 수 있습니다.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 폴링 되며 최종 결과 제공 하는 요청을 수행 하는 메커니즘을 제공 합니다.
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: 요청 개체
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: (장기 실행 작업)는 LRO의 초기 요청을 보내고 메서드는 LRO 폴링 및는 LRO 완료 된 경우 검사를 제공 하는 LROPoller 돌아갑니다.
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 작업에 대 한 인수입니다.
        - id: operationSpec
          type:
            - OperationSpec
          description: 작업에 대 한 사양입니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 요청을 수행 하는 동안 보낼 추가 옵션입니다.
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공 된 OperationSpec를 사용 하 여 채워지는 HTTP 요청을 보냅니다.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: HTTP 요청의 템플릿 값에서 채워집니다는 인수입니다.
        - id: operationSpec
          type:
            - OperationSpec
          description: Http 요청을 채우는 데 사용할 OperationSpec 합니다.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            응답을 받을 때 호출할 콜백.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공 된 http 요청을 보냅니다.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.workspaceCollections'
    name: workspaceCollections
    fullName: workspaceCollections
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'workspaceCollections: WorkspaceCollections'
      return:
        type:
          - '@azure/arm-powerbiembedded.WorkspaceCollections'
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.workspaces'
    name: workspaces
    fullName: workspaces
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'workspaces: Workspaces'
      return:
        type:
          - '@azure/arm-powerbiembedded.Workspaces'
    package: '@azure/arm-powerbiembedded'
references:
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClientContext'
    name: PowerBIEmbeddedManagementClientContext
    spec.typeScript:
      - name: PowerBIEmbeddedManagementClientContext
        fullName: PowerBIEmbeddedManagementClientContext
        uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClientContext'
  - uid: '@azure/arm-powerbiembedded.WorkspaceCollections'
    name: WorkspaceCollections
    spec.typeScript:
      - name: WorkspaceCollections
        fullName: WorkspaceCollections
        uid: '@azure/arm-powerbiembedded.WorkspaceCollections'
  - uid: '@azure/arm-powerbiembedded.Workspaces'
    name: Workspaces
    spec.typeScript:
      - name: Workspaces
        fullName: Workspaces
        uid: '@azure/arm-powerbiembedded.Workspaces'
  - uid: ServiceCallback<@azure/arm-powerbiembedded.OperationList>
    name: OperationList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationList
        fullName: OperationList
        uid: '@azure/arm-powerbiembedded.OperationList'
      - name: '>'
        fullName: '>'