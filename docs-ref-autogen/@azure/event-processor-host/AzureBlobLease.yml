### YamlMime:UniversalReference
items:
  - uid: '@azure/event-processor-host.AzureBlobLease'
    name: AzureBlobLease
    fullName: AzureBlobLease
    children:
      - '@azure/event-processor-host.AzureBlobLease.constructor'
      - '@azure/event-processor-host.AzureBlobLease.blob'
      - '@azure/event-processor-host.AzureBlobLease.createFromPartitionId'
      - '@azure/event-processor-host.AzureBlobLease.epoch'
      - '@azure/event-processor-host.AzureBlobLease.getInfo'
      - '@azure/event-processor-host.AzureBlobLease.incrementEpoch'
      - '@azure/event-processor-host.AzureBlobLease.isOwned'
      - '@azure/event-processor-host.AzureBlobLease.isOwnedBy'
      - '@azure/event-processor-host.AzureBlobLease.offset'
      - '@azure/event-processor-host.AzureBlobLease.owner'
      - '@azure/event-processor-host.AzureBlobLease.partitionId'
      - '@azure/event-processor-host.AzureBlobLease.sequenceNumber'
      - '@azure/event-processor-host.AzureBlobLease.serialize'
      - '@azure/event-processor-host.AzureBlobLease.token'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="11741-101">Azure Blob을 사용 하 여 검사점 정보를 저장 하는 데 사용 되는 임대를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="11741-101">Describes the lease used with an Azure Blob for storing the checkpoint information.</span></span>
    extends:
      name: '@azure/event-processor-host.CompleteLease'
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.constructor'
    name: AzureBlobLease(AzureBlobLeaseInfo)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new AzureBlobLease(info: AzureBlobLeaseInfo)'
      parameters:
        - id: info
          type:
            - '@azure/event-processor-host.AzureBlobLeaseInfo'
          description: ''
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.blob'
    name: blob
    fullName: blob
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="11741-102">{AzureBlob} blob azure blob에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="11741-102">{AzureBlob} blob Reference to the azure blob.</span></span>'
    syntax:
      content: 'blob: AzureBlob'
      return:
        type:
          - AzureBlob
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.createFromPartitionId'
    name: 'createFromPartitionId(string, AzureBlob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="11741-103">지정 된 partitionId에 대 한 임대를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="11741-103">Creates a Lease for the given partitionId.</span></span>
    syntax:
      content: 'static function createFromPartitionId(id: string, blob: AzureBlob)'
      parameters:
        - id: id
          type:
            - string
          description: <span data-ttu-id="11741-104">PartitionId는 임대를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="11741-104">The partitionId for which the lease needs to be created.</span></span>
        - id: blob
          type:
            - AzureBlob
          description: <span data-ttu-id="11741-105">Azure blob 파일에 대 한 참조</span><span class="sxs-lookup"><span data-stu-id="11741-105">The azure blob reference</span></span>
      return:
        type:
          - '@azure/event-processor-host.AzureBlobLease'
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.epoch'
    name: epoch
    fullName: epoch
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="11741-106">{number 개} epoch epoch(time) 임대 값인 경쟁 노드 간에 파티션의 최신 소유자를 결정 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11741-106">{number} epoch The epoch(time) of the lease, which is a value you can use to determine the most recent owner of a partition between competing nodes.</span></span>'
    syntax:
      content: 'epoch: number'
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.getInfo'
    name: getInfo()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="11741-107">임대 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="11741-107">Gets the lease information.</span></span>
    syntax:
      content: function getInfo()
      parameters: []
      return:
        type:
          - '@azure/event-processor-host.LeaseInfo'
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.incrementEpoch'
    name: incrementEpoch()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="11741-108">Epoch의 값을 1 씩 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="11741-108">Increments the value of epoch by 1.</span></span>
    syntax:
      content: function incrementEpoch()
      parameters: []
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.isOwned'
    name: isOwned
    fullName: isOwned
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="11741-109">{부울} isOwned 나타냅니다 여부 임대를 소유 합니다.</span><span class="sxs-lookup"><span data-stu-id="11741-109">{boolean} isOwned Indicates wether the lease is owned.</span></span> <span data-ttu-id="11741-110">`true` 사용자가 소유 하는 경우 `false` 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="11741-110">`true` if it is owned by someone; `false` otherwise.</span></span>'
    syntax:
      content: 'isOwned: boolean'
      return:
        type:
          - boolean
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.isOwnedBy'
    name: isOwnedBy(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="11741-111">PossibleOwner this.owner에 대해 비교</span><span class="sxs-lookup"><span data-stu-id="11741-111">Compares possibleOwner against this.owner</span></span>
    syntax:
      content: 'function isOwnedBy(possibleOwner: string)'
      parameters:
        - id: possibleOwner
          type:
            - string
          description: <span data-ttu-id="11741-112">검사할 소유자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="11741-112">The owner name to check.</span></span>
      return:
        type:
          - boolean
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="11741-113">{문자열} 오프셋 체크 인 이벤트의 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="11741-113">{string} offset The offset of the event to be checked in.</span></span>'
    optional: true
    syntax:
      content: 'offset?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.owner'
    name: owner
    fullName: owner
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="11741-114">{문자열} 소유자 파티션에 대 한 호스트 소유자입니다.</span><span class="sxs-lookup"><span data-stu-id="11741-114">{string} owner The host owner for the partition.</span></span>'
    syntax:
      content: 'owner: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.partitionId'
    name: partitionId
    fullName: partitionId
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="11741-115">{문자열} partitionId 연결된 partitionId에 임대가 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="11741-115">{string} partitionId The associated partitionId for which the lease is held.</span></span>'
    syntax:
      content: 'partitionId: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="11741-116">{문자열} sequenceNumber 체크 인 이벤트의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="11741-116">{string} sequenceNumber The sequence number of the event to be checked in.</span></span>'
    syntax:
      content: 'sequenceNumber: number'
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.serialize'
    name: serialize()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="11741-117">임대 정보를 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="11741-117">Serializes the lease information.</span></span>
    syntax:
      content: function serialize()
      parameters: []
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.token'
    name: token
    fullName: token
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="11741-118">{문자열} 토큰 호스트 간의 동시성을 관리 하는 임대 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="11741-118">{string} token The lease token that manages concurrency between hosts.</span></span> <span data-ttu-id="11741-119">EPH.에 필요한 모든 리소스에 대 한 단일 액세스를 보장 하기 위해이 토큰을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11741-119">You can use this token to guarantee single access to any resource needed by the EPH.</span></span>'
    syntax:
      content: 'token: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
references:
  - uid: '@azure/event-processor-host.CompleteLease'
    name: CompleteLease
    spec.typeScript:
      - name: CompleteLease
        fullName: CompleteLease
        uid: '@azure/event-processor-host.CompleteLease'
  - uid: '@azure/event-processor-host.AzureBlobLeaseInfo'
    name: AzureBlobLeaseInfo
    spec.typeScript:
      - name: AzureBlobLeaseInfo
        fullName: AzureBlobLeaseInfo
        uid: '@azure/event-processor-host.AzureBlobLeaseInfo'
  - uid: '@azure/event-processor-host.LeaseInfo'
    name: LeaseInfo
    spec.typeScript:
      - name: LeaseInfo
        fullName: LeaseInfo
        uid: '@azure/event-processor-host.LeaseInfo'
  - uid: '@azure/event-processor-host.AzureBlobLease'
    name: AzureBlobLease
    spec.typeScript:
      - name: AzureBlobLease
        fullName: AzureBlobLease
        uid: '@azure/event-processor-host.AzureBlobLease'