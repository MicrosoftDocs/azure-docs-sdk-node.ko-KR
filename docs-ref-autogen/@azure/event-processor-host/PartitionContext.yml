### YamlMime:UniversalReference
ms.openlocfilehash: 21f210c813372698536df44230040a4089b09700
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52169468"
items:
- uid: '@azure/event-processor-host.PartitionContext'
  name: PartitionContext
  fullName: PartitionContext
  children:
  - '@azure/event-processor-host.PartitionContext.checkpoint'
  - '@azure/event-processor-host.PartitionContext.checkpointFromEventData'
  - '@azure/event-processor-host.PartitionContext.consumerGroup'
  - '@azure/event-processor-host.PartitionContext.eventhubPath'
  - '@azure/event-processor-host.PartitionContext.lease'
  - '@azure/event-processor-host.PartitionContext.owner'
  - '@azure/event-processor-host.PartitionContext.constructor'
  - '@azure/event-processor-host.PartitionContext.partitionId'
  - '@azure/event-processor-host.PartitionContext.setOffsetAndSequenceNumber'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="09e8e-101">파티션 컨텍스트를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-101">Describes the Partition Context.</span></span>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.checkpoint'
  name: checkpoint()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="09e8e-102">검사점 관리자를 통해 검사점 저장소에 현재 오프셋 및 시퀀스 번호를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-102">Writes the current offset and sequenceNumber to the checkpoint store via the checkpoint manager.</span></span>

    <span data-ttu-id="09e8e-103">검사점 데이터는 JSON 페이로드 (예:)으로 구성 됩니다. `{ "partitionId":"0","owner":"ephtest","token":"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a",

    "epoch":1,"offset":"","SequenceNumber":0 }`합니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-103">The checkpoint data is structured as a JSON payload (example): `{ "partitionId":"0","owner":"ephtest","token":"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a",

    "epoch":1,"offset":"","SequenceNumber":0 }`.</span></span>
  syntax:
    content: function checkpoint()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.checkpointFromEventData'
  name: checkpointFromEventData(EventData)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="09e8e-104">검사점 관리자를 통해 검사점 저장소에 현재 오프셋 및 시퀀스 번호를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-104">Writes the current offset and sequenceNumber to the checkpoint store via the checkpoint manager.</span></span>

    <span data-ttu-id="09e8e-105">검사점 데이터는 JSON 페이로드 (예:)으로 구성 됩니다. `{ "partitionId":"0","owner":"ephtest","token":"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a",

    "epoch":1,"offset":"","SequenceNumber":0 }`합니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-105">The checkpoint data is structured as a JSON payload (example): `{ "partitionId":"0","owner":"ephtest","token":"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a",

    "epoch":1,"offset":"","SequenceNumber":0 }`.</span></span>
  syntax:
    content: 'function checkpointFromEventData(eventData: EventData)'
    parameters:
    - id: eventData
      type:
      - EventData
      description: <span data-ttu-id="09e8e-106">EventHubReceiver에서 받은 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-106">The event data received from the EventHubReceiver.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.consumerGroup'
  name: consumerGroup
  fullName: consumerGroup
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="09e8e-107">{문자열} consumerGroup 소비자 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-107">{string} consumerGroup The name of the consumer group.</span></span>
  syntax:
    content: 'consumerGroup: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.eventhubPath'
  name: eventhubPath
  fullName: eventhubPath
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="09e8e-108">{문자열} eventhubPath eventhub의 경로</span><span class="sxs-lookup"><span data-stu-id="09e8e-108">{string} eventhubPath The path of the eventhub</span></span>
  syntax:
    content: 'eventhubPath: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.lease'
  name: lease
  fullName: lease
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="09e8e-109">{임대} 임대 partitionId 사용 하 여 대부분의 recdent 검사점 임대입니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-109">{Lease} lease The most recdent checkpointed lease with the partitionId.</span></span>
  syntax:
    content: 'lease: CompleteLease'
    return:
      type:
      - '@azure/event-processor-host.CompleteLease'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.owner'
  name: owner
  fullName: owner
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="09e8e-110">{문자열} 소유자 파티션의 호스트/소유자입니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-110">{string} owner The host/owner of the partition.</span></span>
  syntax:
    content: 'owner: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.constructor'
  name: PartitionContext(HostContextWithCheckpointLeaseManager, string, CompleteLease)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="09e8e-111">새 PartitionContext를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-111">Creates a new PartitionContext.</span></span>
  syntax:
    content: 'new PartitionContext(context: HostContextWithCheckpointLeaseManager, partitionId: string, lease: CompleteLease)'
    parameters:
    - id: context
      type:
      - HostContextWithCheckpointLeaseManager
      description: ''
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="09e8e-112">이벤트 허브 파티션 id입니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-112">The eventhub partition id.</span></span>
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: >
        <span data-ttu-id="09e8e-113">임대 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-113">The lease object.</span></span>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.partitionId'
  name: partitionId
  fullName: partitionId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="09e8e-114">{문자열} partitionId eventhub 파티션 id입니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-114">{string} partitionId The eventhub partition id.</span></span>
  syntax:
    content: 'partitionId: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.PartitionContext.setOffsetAndSequenceNumber'
  name: setOffsetAndSequenceNumber(EventData)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="09e8e-115">제공 된 EventData에서 파티션 컨텍스트의 오프셋 및 시퀀스 번호를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="09e8e-115">Sets the offset and sequence number of the partition context from the provided EventData.</span></span>
  syntax:
    content: 'function setOffsetAndSequenceNumber(eventData: EventData)'
    parameters:
    - id: eventData
      type:
      - EventData
      description: >
        <span data-ttu-id="09e8e-116">이벤트 데이터를 `received` 는 EventHubReceiver에서.</span><span class="sxs-lookup"><span data-stu-id="09e8e-116">The event data `received` from the EventHubReceiver.</span></span>
  package: '@azure/event-processor-host'
references:
- uid: '@azure/event-processor-host.CompleteLease'
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
