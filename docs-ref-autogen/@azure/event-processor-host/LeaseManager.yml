### YamlMime:UniversalReference
ms.openlocfilehash: ed7f92526f273477e153fad3fe0ab03db0704f34
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52104228"
items:
- uid: '@azure/event-processor-host.LeaseManager'
  name: LeaseManager
  fullName: LeaseManager
  children:
  - '@azure/event-processor-host.LeaseManager.acquireLease'
  - '@azure/event-processor-host.LeaseManager.createAllLeasesIfNotExists'
  - '@azure/event-processor-host.LeaseManager.createLeaseStoreIfNotExists'
  - '@azure/event-processor-host.LeaseManager.deleteLease'
  - '@azure/event-processor-host.LeaseManager.deleteLeaseStore'
  - '@azure/event-processor-host.LeaseManager.getAllLeases'
  - '@azure/event-processor-host.LeaseManager.getLease'
  - '@azure/event-processor-host.LeaseManager.leaseDuration'
  - '@azure/event-processor-host.LeaseManager.leaseRenewInterval'
  - '@azure/event-processor-host.LeaseManager.leaseStoreExists'
  - '@azure/event-processor-host.LeaseManager.releaseLease'
  - '@azure/event-processor-host.LeaseManager.renewLease'
  - '@azure/event-processor-host.LeaseManager.updateLease'
  langs:
  - typeScript
  type: interface
  summary: ''
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.acquireLease'
  name: acquireLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    이 EventProcessorHost에 대 한 원하는 파티션에서 임대를 획득 합니다.

    다른 호스트에 의해 이미 소유한 임대를 획득 하는 것이 유효 하는 참고 합니다.

    임대 가로채기는 추가 호스트를 시작 하면 파티션을 재배포 하는 방법입니다.


    기존 Azure Storage 구현을 획득 하거나 동시에 임대를 도용 하려고 하는 두 호스트 인스턴스 간에 경합이 발생할 수 있습니다. 인스턴스를 호스팅할 두 상황을 방지 하려면 둘 다 생각 임대를 소유, 획득 false를 반환 하 여 오류 없이 실패할 수 있으며 이렇게 확실 하지는-는 발생할 수 있는 최악의 경우 호스트 인스턴스가 없는 짧은 시간에 대 한 임대를 소유 해야 합니다. 이것이 질적 다른 예를 들어 오류가 발생 하는 액세스 예외를 throw 하는 기본 저장소입니다.
  syntax:
    content: 'function acquireLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: 앞에서 얻은 원하는 파티션에 대 한 정보를 임대 `getLease()`합니다.
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.createAllLeasesIfNotExists'
  name: createAllLeasesIfNotExists(string[])
  children: []
  type: method
  langs:
  - typeScript
  summary: 만들 저장소에 지정 된 파티션에 대 한 임대 정보를 존재 하지 않는 경우. 저장소에 이미 존재 않으면 아무 작업도 수행 합니다.
  syntax:
    content: 'function createAllLeasesIfNotExists(partitionIds: string[])'
    parameters:
    - id: partitionIds
      type:
      - string[]
      description: 에 대 한 임대 정보를 만들려는 파티션 id
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.createLeaseStoreIfNotExists'
  name: createLeaseStoreIfNotExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: 존재 하지 않는 경우에 임대 저장소를 만듭니다. 없는 경우 아무 작업도 수행 합니다.
  syntax:
    content: function createLeaseStoreIfNotExists()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.deleteLease'
  name: deleteLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소에서 지정 된 파티션에 대 한 임대 정보를 삭제 합니다. 성공으로 처리 되는 지정 된 파티션에 대 한 저장된 임대가 되지 않음 인 경우
  syntax:
    content: 'function deleteLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: 앞에서 얻은 원하는 파티션에 대 한 정보를 임대 `getLease()`합니다.
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.deleteLeaseStore'
  name: deleteLeaseStore()
  children: []
  type: method
  langs:
  - typeScript
  summary: 임대 저장소를 삭제 합니다.
  syntax:
    content: function deleteLeaseStore()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.getAllLeases'
  name: getAllLeases()
  children: []
  type: method
  langs:
  - typeScript
  summary: 소유 하 고 임대 기간이 만료 된 여부 및 호스트의 이름을 포함 하는 모든 임대에 대 한 간단한 BaseLease를 반환 합니다. 구현을 반환 될 CompleteLease 또는 CompleteLease에서 파생 된 고유한 클래스 이지만 중요 getAllLeases 최대한 빠른 속도로 실행 되도록 합니다. 인 경우 더 빠르게는 BaseLease에 필요한 정보만 가져오려면 많이 것이 좋습니다 그렇게 합니다.
  syntax:
    content: function getAllLeases()
    parameters: []
    return:
      type:
      - Promise<@azure/event-processor-host.BaseLease[]>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.getLease'
  name: getLease(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 파티션에 대 한 임대 정보를 가져옵니다. 반환할 수 있습니다 `undefined` 없는 임대는 지정 된 파티션에 대 한 저장소에 생성 된 경우.
  syntax:
    content: 'function getLease(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: 에 대 한 임대를 가져올 파티션 id입니다.
    return:
      type:
      - Promise<@azure/event-processor-host.CompleteLease | undefined>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseDuration'
  name: leaseDuration
  fullName: leaseDuration
  children: []
  langs:
  - typeScript
  type: property
  summary: '{number 개} leaseDuration 기간을 임대 **초에서** 갱신 하지 않으면 만료 되기 전에 합니다.'
  syntax:
    content: 'leaseDuration: number'
    return:
      type:
      - number
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseRenewInterval'
  name: leaseRenewInterval
  fullName: leaseRenewInterval
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    {number 개} leaseRenewInterval 절전 간격 **초에서** 검사 합니다.


    얼마나 자주 임대를 검색 하 고 갱신할 PartitionManager을 지정 하는 임대 관리자 구현을 허용 합니다. 호스트 운영 중단 되 면 임대를 적시에 재배포 하려면 비교적 짧은 간격을 10 초 같은 것이 좋습니다. 물론 실수로 인 한 만료를 방지 하기 위해 임대 길이의 절반 미만 이어야 합니다.
  syntax:
    content: 'leaseRenewInterval: number'
    return:
      type:
      - number
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseStoreExists'
  name: leaseStoreExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: 임대 저장소 유무
  syntax:
    content: function leaseStoreExists()
    parameters: []
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.releaseLease'
  name: releaseLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    이 호스트에서 현재 보유 하는 임대를 포기 합니다.

    임대 도난 되었거나 만료 된 경우 해제 하지 필요 하며, 시도 실패 합니다.
  syntax:
    content: 'function releaseLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: 앞에서 얻은 원하는 파티션에 대 한 정보를 임대 `getLease()`합니다.
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.renewLease'
  name: renewLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    이 호스트에서 현재 보유 하는 임대를 갱신 합니다.

    임대 (도난 또는 만료 된 후) 다른 호스트 인스턴스에 의해 수행 되거나 명시적으로 해제 된 경우 renewLease false를 반환 해야 합니다. Azure 저장소 기반 구현에서는 수행 되지 않았습니다. 다른 호스트에 의해 구현 여부는 허용할 수 있도록 하는 만료 된 임대를 갱신할 수는 더 편리 합니다. 그렇지 않은 경우 renewLease false를 반환 합니다.
  syntax:
    content: 'function renewLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: 임대를 갱신할 수입니다.
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.updateLease'
  name: updateLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    제공 된 임대의 정보를 사용 하 여 저장소를 업데이트 합니다.

    현재 업데이트 하기 위해 임대를 보유 하는 것이 반드시 합니다. 임대 도난 또는 만료 되거나 해제, 경우에 업데이트할 수 없습니다. 임대 관리자 구현 프로세스 중 임대가 만료 되지 않게 하려면 업데이트를 수행 하기 전에 임대를 갱신 해야 합니다.
  syntax:
    content: 'function updateLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: 새 임대 정보를 저장 합니다.
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
references:
- uid: '@azure/event-processor-host.CompleteLease'
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
- uid: Promise<@azure/event-processor-host.BaseLease[]>
  name: BaseLease[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BaseLease
    fullName: BaseLease
    uid: '@azure/event-processor-host.BaseLease'
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<@azure/event-processor-host.CompleteLease | undefined>
  name: CompleteLease | undefined>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
  - name: " | undefined>"
    fullName: " | undefined>"
