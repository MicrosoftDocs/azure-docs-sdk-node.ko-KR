### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ApplicationHealth'
    name: ApplicationHealth
    fullName: ApplicationHealth
    children:
      - '@azure/servicefabric.ApplicationHealth.aggregatedHealthState'
      - '@azure/servicefabric.ApplicationHealth.deployedApplicationHealthStates'
      - '@azure/servicefabric.ApplicationHealth.healthEvents'
      - '@azure/servicefabric.ApplicationHealth.healthStatistics'
      - '@azure/servicefabric.ApplicationHealth.name'
      - '@azure/servicefabric.ApplicationHealth.serviceHealthStates'
      - '@azure/servicefabric.ApplicationHealth.unhealthyEvaluations'
    langs:
      - typeScript
    type: interface
    summary: 응용 프로그램의 상태를 나타냅니다. 상태를 집계 하는 응용 프로그램 및 서비스 및 배포 된 응용 프로그램 상태를 포함합니다.
    extends:
      name: '@azure/servicefabric.EntityHealth'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationHealth.aggregatedHealthState'
    name: aggregatedHealthState
    fullName: aggregatedHealthState
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      상태 관리자에 의해 계산 된 엔터티의 집계 된 상태를 나타내는 HealthState 합니다.
      엔터티 상태 평가 엔터티 및 해당 자식 (있는 경우)에 보고 된 모든 이벤트를 반영 합니다.
      집계 된 원하는 상태 정책을 적용 하 여 수행 됩니다. 가능한 값은 다음과 같습니다. 'Invalid', '확인', 'Warning', 'Error', '알 수 없는'
    optional: true
    syntax:
      content: 'aggregatedHealthState?: HealthState'
      return:
        type:
          - '@azure/servicefabric.HealthState'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationHealth.deployedApplicationHealthStates'
    name: deployedApplicationHealthStates
    fullName: deployedApplicationHealthStates
    children: []
    langs:
      - typeScript
    type: property
    summary: Health 스토어에 있는 응용 프로그램 성능 상태를 배포 합니다.
    optional: true
    syntax:
      content: 'deployedApplicationHealthStates?: DeployedApplicationHealthState[]'
      return:
        type:
          - '@azure/servicefabric.DeployedApplicationHealthState[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationHealth.healthEvents'
    name: healthEvents
    fullName: healthEvents
    children: []
    langs:
      - typeScript
    type: property
    summary: 엔터티에 대해 보고 된 상태 이벤트의 목록입니다.
    optional: true
    syntax:
      content: 'healthEvents?: HealthEvent[]'
      return:
        type:
          - '@azure/servicefabric.HealthEvent[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationHealth.healthStatistics'
    name: healthStatistics
    fullName: healthStatistics
    children: []
    langs:
      - typeScript
    type: property
    summary: 쿼리할 엔터티의 모든 자식 유형에 대 한 상태 통계를 보여 줍니다.
    optional: true
    syntax:
      content: 'healthStatistics?: HealthStatistics'
      return:
        type:
          - '@azure/servicefabric.HealthStatistics'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationHealth.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: '응용 프로그램의 이름을 포함 하는 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationHealth.serviceHealthStates'
    name: serviceHealthStates
    fullName: serviceHealthStates
    children: []
    langs:
      - typeScript
    type: property
    summary: 서비스 상태 검색으로 health 스토어에서.
    optional: true
    syntax:
      content: 'serviceHealthStates?: ServiceHealthState[]'
      return:
        type:
          - '@azure/servicefabric.ServiceHealthState[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationHealth.unhealthyEvaluations'
    name: unhealthyEvaluations
    fullName: unhealthyEvaluations
    children: []
    langs:
      - typeScript
    type: property
    summary: 현재 상태를 집계 하는 이유를 보여 주는 비정상 평가 상태 관리자가 반환 되었습니다.
    optional: true
    syntax:
      content: 'unhealthyEvaluations?: HealthEvaluationWrapper[]'
      return:
        type:
          - '@azure/servicefabric.HealthEvaluationWrapper[]'
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.EntityHealth'
    name: EntityHealth
    spec.typeScript:
      - name: EntityHealth
        fullName: EntityHealth
        uid: '@azure/servicefabric.EntityHealth'
  - uid: '@azure/servicefabric.HealthState'
    name: HealthState
    spec.typeScript:
      - name: HealthState
        fullName: HealthState
        uid: '@azure/servicefabric.HealthState'
  - uid: '@azure/servicefabric.DeployedApplicationHealthState[]'
    name: 'DeployedApplicationHealthState[]'
    spec.typeScript:
      - name: DeployedApplicationHealthState
        fullName: DeployedApplicationHealthState
        uid: '@azure/servicefabric.DeployedApplicationHealthState'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.HealthEvent[]'
    name: 'HealthEvent[]'
    spec.typeScript:
      - name: HealthEvent
        fullName: HealthEvent
        uid: '@azure/servicefabric.HealthEvent'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.HealthStatistics'
    name: HealthStatistics
    spec.typeScript:
      - name: HealthStatistics
        fullName: HealthStatistics
        uid: '@azure/servicefabric.HealthStatistics'
  - uid: '@azure/servicefabric.ServiceHealthState[]'
    name: 'ServiceHealthState[]'
    spec.typeScript:
      - name: ServiceHealthState
        fullName: ServiceHealthState
        uid: '@azure/servicefabric.ServiceHealthState'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.HealthEvaluationWrapper[]'
    name: 'HealthEvaluationWrapper[]'
    spec.typeScript:
      - name: HealthEvaluationWrapper
        fullName: HealthEvaluationWrapper
        uid: '@azure/servicefabric.HealthEvaluationWrapper'
      - name: '[]'
        fullName: '[]'