### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.MeshCodePackage'
    name: MeshCodePackage
    fullName: MeshCodePackage
    children:
      - '@azure/servicefabric.MeshCodePackage.getContainerLogs_2'
      - '@azure/servicefabric.MeshCodePackage.getContainerLogs'
      - '@azure/servicefabric.MeshCodePackage.getContainerLogs_1'
      - '@azure/servicefabric.MeshCodePackage.constructor'
    langs:
      - typeScript
    type: class
    summary: MeshCodePackage 나타내는 클래스입니다.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshCodePackage.getContainerLogs_2'
    name: 'getContainerLogs(string, string, string, string, MeshCodePackageGetContainerLogsOptionalParams, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogs(applicationResourceName: string, serviceResourceName: string, replicaName: string, codePackageName: string, options: MeshCodePackageGetContainerLogsOptionalParams, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: 애플리케이션 ID입니다.
        - id: serviceResourceName
          type:
            - string
          description: 서비스 id입니다.
        - id: replicaName
          type:
            - string
          description: Service Fabric 복제본 이름입니다.
        - id: codePackageName
          type:
            - string
          description: 서비스의 코드 패키지 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.MeshCodePackageGetContainerLogsOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerLogs>
          description: |
            콜백
      return:
        type:
          - Promise<Models.MeshCodePackageGetContainerLogsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshCodePackage.getContainerLogs'
    name: 'getContainerLogs(string, string, string, string, Models.MeshCodePackageGetContainerLogsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 서비스 복제본의 지정된 코드 패키지에서 컨테이너 관련 로그를 가져옵니다.
    syntax:
      content: 'function getContainerLogs(applicationResourceName: string, serviceResourceName: string, replicaName: string, codePackageName: string, options?: Models.MeshCodePackageGetContainerLogsOptionalParams)'
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: 애플리케이션 ID입니다.
        - id: serviceResourceName
          type:
            - string
          description: 서비스 id입니다.
        - id: replicaName
          type:
            - string
          description: Service Fabric 복제본 이름입니다.
        - id: codePackageName
          type:
            - string
          description: 서비스의 코드 패키지 이름입니다.
        - id: options
          type:
            - Models.MeshCodePackageGetContainerLogsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MeshCodePackageGetContainerLogsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshCodePackage.getContainerLogs_1'
    name: 'getContainerLogs(string, string, string, string, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogs(applicationResourceName: string, serviceResourceName: string, replicaName: string, codePackageName: string, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: 애플리케이션 ID입니다.
        - id: serviceResourceName
          type:
            - string
          description: 서비스 id입니다.
        - id: replicaName
          type:
            - string
          description: Service Fabric 복제본 이름입니다.
        - id: codePackageName
          type:
            - string
          description: 서비스의 코드 패키지 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerLogs>
          description: |
            콜백
      return:
        type:
          - Promise<Models.MeshCodePackageGetContainerLogsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshCodePackage.constructor'
    name: MeshCodePackage(ServiceFabricClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: MeshCodePackage를 만듭니다.
    syntax:
      content: 'new MeshCodePackage(client: ServiceFabricClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/servicefabric.ServiceFabricClientContext'
          description: |
            서비스 클라이언트에 대 한 참조입니다.
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceFabricClientContext'
    name: ServiceFabricClientContext
    spec.typeScript:
      - name: ServiceFabricClientContext
        fullName: ServiceFabricClientContext
        uid: '@azure/servicefabric.ServiceFabricClientContext'
  - uid: ServiceCallback<@azure/servicefabric.ContainerLogs>
    name: ContainerLogs>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerLogs
        fullName: ContainerLogs
        uid: '@azure/servicefabric.ContainerLogs'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.MeshCodePackageGetContainerLogsOptionalParams'
    name: MeshCodePackageGetContainerLogsOptionalParams
    spec.typeScript:
      - name: MeshCodePackageGetContainerLogsOptionalParams
        fullName: MeshCodePackageGetContainerLogsOptionalParams
        uid: '@azure/servicefabric.MeshCodePackageGetContainerLogsOptionalParams'