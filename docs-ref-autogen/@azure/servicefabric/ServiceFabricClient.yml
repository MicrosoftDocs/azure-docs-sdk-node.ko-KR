### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClient'
    name: ServiceFabricClient
    fullName: ServiceFabricClient
    children:
      - '@azure/servicefabric.ServiceFabricClient.backupPartition'
      - '@azure/servicefabric.ServiceFabricClient.backupPartition_1'
      - '@azure/servicefabric.ServiceFabricClient.backupPartition_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation_1'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_1'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_2'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.createApplication'
      - '@azure/servicefabric.ServiceFabricClient.createApplication_1'
      - '@azure/servicefabric.ServiceFabricClient.createApplication_2'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_1'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_2'
      - '@azure/servicefabric.ServiceFabricClient.createName'
      - '@azure/servicefabric.ServiceFabricClient.createName_1'
      - '@azure/servicefabric.ServiceFabricClient.createName_2'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.createService'
      - '@azure/servicefabric.ServiceFabricClient.createService_1'
      - '@azure/servicefabric.ServiceFabricClient.createService_2'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_1'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteName'
      - '@azure/servicefabric.ServiceFabricClient.deleteName_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteName_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteService'
      - '@azure/servicefabric.ServiceFabricClient.deleteService_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteService_2'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_1'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_2'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.disableNode'
      - '@azure/servicefabric.ServiceFabricClient.disableNode_1'
      - '@azure/servicefabric.ServiceFabricClient.disableNode_2'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableNode'
      - '@azure/servicefabric.ServiceFabricClient.enableNode_1'
      - '@azure/servicefabric.ServiceFabricClient.enableNode_2'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata_1'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata_2'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaos'
      - '@azure/servicefabric.ServiceFabricClient.getChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_1'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_2'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_1'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_2'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_1'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_1'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2'
      - '@azure/servicefabric.ServiceFabricClient.meshApplication'
      - '@azure/servicefabric.ServiceFabricClient.meshCodePackage'
      - '@azure/servicefabric.ServiceFabricClient.meshGateway'
      - '@azure/servicefabric.ServiceFabricClient.meshNetwork'
      - '@azure/servicefabric.ServiceFabricClient.meshSecret'
      - '@azure/servicefabric.ServiceFabricClient.meshSecretValue'
      - '@azure/servicefabric.ServiceFabricClient.meshService'
      - '@azure/servicefabric.ServiceFabricClient.meshServiceReplica'
      - '@azure/servicefabric.ServiceFabricClient.meshVolume'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_1'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_2'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_1'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_2'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster_1'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster_2'
      - '@azure/servicefabric.ServiceFabricClient.putProperty'
      - '@azure/servicefabric.ServiceFabricClient.putProperty_1'
      - '@azure/servicefabric.ServiceFabricClient.putProperty_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_1'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_2'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState_1'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState_2'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica_1'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica_2'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_1'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_2'
      - '@azure/servicefabric.ServiceFabricClient.resolveService'
      - '@azure/servicefabric.ServiceFabricClient.resolveService_1'
      - '@azure/servicefabric.ServiceFabricClient.resolveService_2'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_1'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_2'
      - '@azure/servicefabric.ServiceFabricClient.restartNode'
      - '@azure/servicefabric.ServiceFabricClient.restartNode_1'
      - '@azure/servicefabric.ServiceFabricClient.restartNode_2'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica_1'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica_2'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition_1'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.sendOperationRequest'
      - '@azure/servicefabric.ServiceFabricClient.sendRequest'
      - '@azure/servicefabric.ServiceFabricClient.constructor'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_1'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_2'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startChaos'
      - '@azure/servicefabric.ServiceFabricClient.startChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.startChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss_1'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss_2'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition_1'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition_2'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_1'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_2'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_1'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_2'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_1'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_1'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_2'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_1'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_2'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_1'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.updateService'
      - '@azure/servicefabric.ServiceFabricClient.updateService_1'
      - '@azure/servicefabric.ServiceFabricClient.updateService_2'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile_1'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile_2'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_1'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_2'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/servicefabric.ServiceFabricClientContext'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition'
    name: 'backupPartition(string, Models.ServiceFabricClientBackupPartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      상태 저장 지속형된 파티션 상태의 백업을 만듭니다. 파티션을 이미 사용 하는 경우 동일한 백업 저장소에 생성 됩니다 정기적으로 백업 되 기본적으로 다음, 새 백업. 요청 본문의 일부로 백업 저장소 세부 정보를 지정 하 여 동일한 재정의할 수도 수 있습니다. 백업이 시작 된 후에 GetBackupProgress 작업을 사용 하 여 해당 진행률을 추적할 수 있습니다.
      이 경우 작업 시간이 초과 쿼리 매개 변수에서 큰 백업 시간 제한 값을 지정 합니다.
    syntax:
      content: 'function backupPartition(partitionId: string, options?: Models.ServiceFabricClientBackupPartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientBackupPartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition_1'
    name: 'backupPartition(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition_2'
    name: 'backupPartition(string, ServiceFabricClientBackupPartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, options: ServiceFabricClientBackupPartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation'
    name: 'cancelOperation(string, boolean, Models.ServiceFabricClientCancelOperationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      다음 Api CancelOperation를 사용 하 여 취소 될 수 있습니다는 오류 작업을 시작 합니다. StartDataLoss, StartQuorumLoss, StartPartitionRestart, StartNodeTransition.
      force가 false인 경우 지정된 사용자로 인한 작업이 정상적으로 중지되며 정리됩니다.  force가 true인 경우 명령이 중단되며, 일부 내부 상태가 남아 있을 수 있습니다.  force를 true로 지정하는 것은 주의해서 사용해야 합니다.  force가 true로 설정된 이 API를 호출하는 것은 이 API가 force가 false로 먼저 설정된 동일한 테스트 명령에서 호출될 때까지 또는 테스트 명령에 이미 OperationState.RollingBack의 OperationState가 있는 한 허용되지 않습니다.
      설명: OperationState.RollingBack 시스템은 수/임을 의미 명령을 실행 하 여 발생 하는 내부 시스템 상태를 정리 합니다.  테스트 명령이 데이터 손실을 발생시킨 경우 데이터를 복원하지 않습니다.  예를 들어 StartDataLoss를 호출한 다음, 이 API를 호출하는 경우 시스템은 명령 실행에서의 내부 상태만을 정리합니다.
      명령이 데이터 손실을 충분히 진행시킨 경우 대상 파티션의 데이터를 복원하지 않습니다.

      중요 참고: force를 사용 하 여이 API를 호출할 경우 = = true이 고, 내부 상태로 남아 있을 수 있습니다.
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, options?: Models.ServiceFabricClientCancelOperationOptionalParams)'
      parameters:
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: force
          type:
            - boolean
          description: 사용자로 인한 작업을 실행하여 수정된 내부 시스템 상태를 정상적으로 롤백 및 정리할지 여부를 나타냅니다.
        - id: options
          type:
            - Models.ServiceFabricClientCancelOperationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation_1'
    name: 'cancelOperation(string, boolean, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, callback: ServiceCallback<void>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: force
          type:
            - boolean
          description: 사용자로 인한 작업을 실행하여 수정된 내부 시스템 상태를 정상적으로 롤백 및 정리할지 여부를 나타냅니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation_2'
    name: 'cancelOperation(string, boolean, ServiceFabricClientCancelOperationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, options: ServiceFabricClientCancelOperationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: force
          type:
            - boolean
          description: 사용자로 인한 작업을 실행하여 수정된 내부 시스템 상태를 정상적으로 롤백 및 정리할지 여부를 나타냅니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask'
    name: 'cancelRepairTask(RepairTaskCancelDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: 복구 작업을을 취소할 수에 대해 설명 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_2'
    name: 'cancelRepairTask(RepairTaskCancelDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: 복구 작업을을 취소할 수에 대해 설명 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_1'
    name: 'cancelRepairTask(RepairTaskCancelDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: 복구 작업을을 취소할 수에 대해 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession'
    name: 'commitImageStoreUploadSession(string, Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 모든 파일 청크 업로드 되었지만 업로드 세션에서 업로드를 완료 하려면 명시적으로 커밋할 수 해야 합니다. 이미지 저장소에 업로드 세션은 30 분 후 받은 마지막 청크는 만료 시간이 될 때까지 유지 됩니다.
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, options?: Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_1'
    name: 'commitImageStoreUploadSession(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_2'
    name: 'commitImageStoreUploadSession(string, ServiceFabricClientCommitImageStoreUploadSessionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, options: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, Models.ServiceFabricClientCopyImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 원본 이미지 저장소 상대 경로에서 대상 이미지 저장소 상대 경로에 이미지 저장소 콘텐츠를 복사합니다.
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options?: Models.ServiceFabricClientCopyImageStoreContentOptionalParams)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: 이미지 저장소에 대 한 복사 설명을 설명합니다.
        - id: options
          type:
            - Models.ServiceFabricClientCopyImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_1'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: 이미지 저장소에 대 한 복사 설명을 설명합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_2'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, ServiceFabricClientCopyImageStoreContentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options: ServiceFabricClientCopyImageStoreContentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: 이미지 저장소에 대 한 복사 설명을 설명합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication'
    name: 'createApplication(ApplicationDescription, Models.ServiceFabricClientCreateApplicationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정한 설명을 사용하여 Microsoft Azure Service Fabric 애플리케이션을 만듭니다.
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, options?: Models.ServiceFabricClientCreateApplicationOptionalParams)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: 응용 프로그램 만들기에 대 한 설명입니다.
        - id: options
          type:
            - Models.ServiceFabricClientCreateApplicationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication_1'
    name: 'createApplication(ApplicationDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: 응용 프로그램 만들기에 대 한 설명입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication_2'
    name: 'createApplication(ApplicationDescription, ServiceFabricClientCreateApplicationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, options: ServiceFabricClientCreateApplicationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: 응용 프로그램 만들기에 대 한 설명입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy'
    name: 'createBackupPolicy(BackupPolicyDescription, Models.ServiceFabricClientCreateBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 응용 프로그램, 서비스 또는 정기적인 백업에 대 한 파티션을 사용 하 여 나중에 연결 될 수 있는 백업 정책을 만듭니다.'
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, options?: Models.ServiceFabricClientCreateBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: 백업 정책을 설명합니다.
        - id: options
          type:
            - Models.ServiceFabricClientCreateBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_1'
    name: 'createBackupPolicy(BackupPolicyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: 백업 정책을 설명합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_2'
    name: 'createBackupPolicy(BackupPolicyDescription, ServiceFabricClientCreateBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, options: ServiceFabricClientCreateBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: 백업 정책을 설명합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, Models.ServiceFabricClientCreateComposeDeploymentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Compose는 다중 컨테이너 응용 프로그램을 설명 하는 파일 형식입니다. 이 API를 통해 컨테이너 기반 응용 프로그램 배포에 정의 된 Service Fabric 클러스터에 형식으로 작성 합니다. 배포가 만들어지면를 통해 해당 상태를 추적할 수 있습니다는 `GetComposeDeploymentStatus` API.
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options?: Models.ServiceFabricClientCreateComposeDeploymentOptionalParams)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: 만들어야 하는 작성 배포를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientCreateComposeDeploymentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_1'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: 만들어야 하는 작성 배포를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_2'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, ServiceFabricClientCreateComposeDeploymentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options: ServiceFabricClientCreateComposeDeploymentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: 만들어야 하는 작성 배포를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName'
    name: 'createName(NameDescription, Models.ServiceFabricClientCreateNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 Service Fabric 이름을 만듭니다.
    syntax:
      content: 'function createName(nameDescription: NameDescription, options?: Models.ServiceFabricClientCreateNameOptionalParams)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: 만들려는 Service Fabric 이름을 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientCreateNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName_1'
    name: 'createName(NameDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: 만들려는 Service Fabric 이름을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName_2'
    name: 'createName(NameDescription, ServiceFabricClientCreateNameOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, options: ServiceFabricClientCreateNameOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: 만들려는 Service Fabric 이름을 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask'
    name: 'createRepairTask(RepairTask, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      복구 관리자 서비스를 구성 하는 클러스터에 대 한이 API는 자동 또는 수동으로 실행 하는 복구 작업을 만드는 방법을 제공 합니다.
      자동으로 실행 되는 복구 작업에 대 한 적절 한 복구 실행 기를 자동으로 실행 하려면 각 복구 작업에 대 한 실행 되어야 합니다.
      이들은 현재만 특별히 구성 된 Azure Cloud Services에서 사용할 수 있습니다.
      수동 복구 작업을 만들려면 영향을 받는 노드 이름 및 예상 되는 영향의 집합을 제공 합니다. 만든된 복구 상태의 변경 내용을 승인 작업을 하는 경우에 해당 노드에서 복구 작업을 안전 하 게 수행할 수 있습니다.

      이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: 생성 또는 업데이트 하려면 복구 작업을 설명 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask_2'
    name: 'createRepairTask(RepairTask, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: 생성 또는 업데이트 하려면 복구 작업을 설명 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask_1'
    name: 'createRepairTask(RepairTask, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: 생성 또는 업데이트 하려면 복구 작업을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService'
    name: 'createService(string, Models.ServiceDescriptionUnion, Models.ServiceFabricClientCreateServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 api는 지정된 된 Service Fabric 응용 프로그램에서 새 Service Fabric 상태 비저장 또는 상태 저장 서비스를 만들 수 있습니다. 서비스 만들기에 대 한 설명을 파티션 정보와 배치 및 부하 분산에 대 한 선택적 속성을 포함 합니다. 속성 중 일부를 나중에 수정할 수 있습니다 사용 하 여 `UpdateService` API.
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, options?: Models.ServiceFabricClientCreateServiceOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: 서비스를 만드는 데 필요한 정보입니다.
        - id: options
          type:
            - Models.ServiceFabricClientCreateServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService_1'
    name: 'createService(string, Models.ServiceDescriptionUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: 서비스를 만드는 데 필요한 정보입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService_2'
    name: 'createService(string, Models.ServiceDescriptionUnion, ServiceFabricClientCreateServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, options: ServiceFabricClientCreateServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: 서비스를 만드는 데 필요한 정보입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      응용 프로그램 매니페스트에 정의 된 서비스 템플릿에서 서비스 패브릭 서비스를 만듭니다.
      서비스 템플릿을 동일한 형식의 서비스 인스턴스에 대 한 동일한 될 속성을 포함 합니다. API를 통해 동일한 서비스 유형의 다른 서비스에 대 한 일반적으로 다른 속성을 재정의 합니다.
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options?: Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: 응용 프로그램 매니페스트에 정의 된 서식 파일에서 만들어야 하는 서비스를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_1'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: 응용 프로그램 매니페스트에 정의 된 서식 파일에서 만들어야 하는 서비스를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_2'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, ServiceFabricClientCreateServiceFromTemplateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options: ServiceFabricClientCreateServiceFromTemplateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: 응용 프로그램 매니페스트에 정의 된 서식 파일에서 만들어야 하는 서비스를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication'
    name: 'deleteApplication(string, Models.ServiceFabricClientDeleteApplicationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      애플리케이션을 삭제하려면 먼저 만들어야 합니다. 애플리케이션을 삭제하면 해당 애플리케이션의 일부인 모든 서비스가 삭제됩니다. 기본적으로 Service Fabric은 서비스 복제를 정상적으로 닫은 후 다음 서비스를 삭제합니다. 하지만 서비스에서 복제본을 정상적으로 닫는 데 문제가 있으면 삭제 작업이 오래 걸리거나 중단될 수 있습니다.
      선택적인 ForceRemove 플래그를 사용하여 정상적인 닫기 시퀀스를 건너 뛰고 애플리케이션 및 모든 서비스를 강제로 삭제합니다.
    syntax:
      content: 'function deleteApplication(applicationId: string, options?: Models.ServiceFabricClientDeleteApplicationOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientDeleteApplicationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication_1'
    name: 'deleteApplication(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication_2'
    name: 'deleteApplication(string, ServiceFabricClientDeleteApplicationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, options: ServiceFabricClientDeleteApplicationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy'
    name: 'deleteBackupPolicy(string, Models.ServiceFabricClientDeleteBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '기존 백업 정책을 삭제합니다. 백업 정책은 삭제 하려면 먼저 만들어야 합니다. 첫 번째 매핑을 삭제 하지 않고 Service Fabric 응용 프로그램, 서비스 또는 파티션에 연결 된 현재 백업 정책을 삭제할 수 없습니다.'
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, options?: Models.ServiceFabricClientDeleteBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientDeleteBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_1'
    name: 'deleteBackupPolicy(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_2'
    name: 'deleteBackupPolicy(string, ServiceFabricClientDeleteBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, options: ServiceFabricClientDeleteBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent'
    name: 'deleteImageStoreContent(string, Models.ServiceFabricClientDeleteImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 이미지 저장소 상대 경로 내에서 발견되는 기존 이미지 저장소 콘텐츠를 삭제합니다.
      이 명령은 업로드된 애플리케이션 패키지가 프로비저닝된 후에 이를 삭제하는 데 사용할 수 있습니다.
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, options?: Models.ServiceFabricClientDeleteImageStoreContentOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: options
          type:
            - Models.ServiceFabricClientDeleteImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_1'
    name: 'deleteImageStoreContent(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_2'
    name: 'deleteImageStoreContent(string, ServiceFabricClientDeleteImageStoreContentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, options: ServiceFabricClientDeleteImageStoreContentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession'
    name: 'deleteImageStoreUploadSession(string, Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 삭제 요청에 만료 되 고 모든 이전에 업로드 된 파일 청크를 제거 하려면 기존 업로드 세션이 종료 됩니다.
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, options?: Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_1'
    name: 'deleteImageStoreUploadSession(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_2'
    name: 'deleteImageStoreUploadSession(string, ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, options: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName'
    name: 'deleteName(string, Models.ServiceFabricClientDeleteNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 Service Fabric 이름을 삭제합니다. 이름은 삭제 하려면 먼저 만들어야 합니다.
      자식 속성을 사용 하 여 이름을 삭제 하지 못합니다.
    syntax:
      content: 'function deleteName(nameId: string, options?: Models.ServiceFabricClientDeleteNameOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: options
          type:
            - Models.ServiceFabricClientDeleteNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName_1'
    name: 'deleteName(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName_2'
    name: 'deleteName(string, ServiceFabricClientDeleteNameOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, options: ServiceFabricClientDeleteNameOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty'
    name: 'deleteProperty(string, string, Models.ServiceFabricClientDeletePropertyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 이름에서 지정된 Service Fabric 속성을 삭제합니다. 속성을 삭제하려면 먼저 만들어야 합니다.
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, options?: Models.ServiceFabricClientDeletePropertyOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyName
          type:
            - string
          description: 가져올 속성의 이름을 지정합니다.
        - id: options
          type:
            - Models.ServiceFabricClientDeletePropertyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty_1'
    name: 'deleteProperty(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyName
          type:
            - string
          description: 가져올 속성의 이름을 지정합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty_2'
    name: 'deleteProperty(string, string, ServiceFabricClientDeletePropertyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, options: ServiceFabricClientDeletePropertyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyName
          type:
            - string
          description: 가져올 속성의 이름을 지정합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: 삭제할 복구 작업을 설명 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_2'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: 삭제할 복구 작업을 설명 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_1'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: 삭제할 복구 작업을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService'
    name: 'deleteService(string, Models.ServiceFabricClientDeleteServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 서비스를 삭제하려면 먼저 만들어야 합니다. 기본적으로 Service Fabric은 서비스 복제를 정상적으로 닫은 후 다음 서비스를 삭제합니다. 하지만 서비스에서 복제본을 정상적으로 닫는 데 문제가 있으면 삭제 작업이 오래 걸리거나 중단될 수 있습니다. 선택적인 ForceRemove 플래그를 사용하여 정상적인 닫기 시퀀스를 건너 뛰고 서비스를 강제로 삭제합니다.
    syntax:
      content: 'function deleteService(serviceId: string, options?: Models.ServiceFabricClientDeleteServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientDeleteServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService_1'
    name: 'deleteService(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService_2'
    name: 'deleteService(string, ServiceFabricClientDeleteServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, options: ServiceFabricClientDeleteServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 API는 일반적인 응용 프로그램 배포 외부의 특정 노드의 컨테이너 이미지를 포함 하 여 코드 패키지를 다운로드 하 고 경로 업그레이드 하는 방법을 제공 합니다. 이 대규모 코드 패키지 및 노드의 실제 응용 프로그램 배포 및 업그레이드 하므로 업그레이드를 배포 하는 데 필요한 총 시간을 크게 줄일 앞에 표시 하기 위해 컨테이너 이미지에 대 한 유용 합니다.
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options?: Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: Service Fabric 노드를 서비스 패키지를 배포 하는 것에 대 한 정보를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_1'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: Service Fabric 노드를 서비스 패키지를 배포 하는 것에 대 한 정보를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_2'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, ServiceFabricClientDeployServicePackageToNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options: ServiceFabricClientDeployServicePackageToNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: Service Fabric 노드를 서비스 패키지를 배포 하는 것에 대 한 정보를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup'
    name: 'disableApplicationBackup(string, Models.ServiceFabricClientDisableApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이전에 설정 된 Service Fabric 응용 프로그램의 정기적 백업을 사용 하지 않도록 설정 합니다.
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientDisableApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientDisableApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_1'
    name: 'disableApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_2'
    name: 'disableApplicationBackup(string, ServiceFabricClientDisableApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, options: ServiceFabricClientDisableApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode'
    name: 'disableNode(string, DeactivationIntentDescription, Models.ServiceFabricClientDisableNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정한 비활성화 의도로 Microsoft Azure Service Fabric 클러스터 노드를 비활성화합니다. 비활성화가 진행 중이라면, 비활성화 의도가 증가할 수 있지만, 감소하지는 않습니다.(예를 들어 일시 중지 목적으로 비활성화된 노드는 다시 시작으로 더욱 비활성화되지만, 그 반대로는 되지 않습니다. 노드는 비활성화한 후 언제든지 활성화를 사용하여 노드 작업을 다시 활성화할 수 있습니다. 비활성화가 완료되지 않을 경우 비활성화가 취소됩니다. 비활성화하는 동안에 작동 중지되었다가 다시 작동하는 노드는 여전히 다시 활성화해야 서비스를 해당 노드에 배치할 수 있습니다.'
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options?: Models.ServiceFabricClientDisableNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: 노드를 비활성화하는 의도나 이유를 설명합니다.
        - id: options
          type:
            - Models.ServiceFabricClientDisableNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode_1'
    name: 'disableNode(string, DeactivationIntentDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: 노드를 비활성화하는 의도나 이유를 설명합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode_2'
    name: 'disableNode(string, DeactivationIntentDescription, ServiceFabricClientDisableNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options: ServiceFabricClientDisableNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: 노드를 비활성화하는 의도나 이유를 설명합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup'
    name: 'disablePartitionBackup(string, Models.ServiceFabricClientDisablePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이전에 설정 된 파티션의의 정기적인 백업을 사용 하지 않도록 설정 합니다. 백업은 사용할 수 전에 명시적으로 활성화 되어야 합니다.
      이 파티션에의 일부 이며, 서비스를 Service Fabric 응용 프로그램에 대 한 백업이 활성화 된 경우에 더 높은 수준 엔터티가 매핑된 정책에 따라 주기적으로 백업이 파티션을 계속 합니다.
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, options?: Models.ServiceFabricClientDisablePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientDisablePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_1'
    name: 'disablePartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_2'
    name: 'disablePartitionBackup(string, ServiceFabricClientDisablePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, options: ServiceFabricClientDisablePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup'
    name: 'disableServiceBackup(string, Models.ServiceFabricClientDisableServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이전에 설정 된 Service Fabric 서비스의 정기적 백업을 사용 하지 않도록 설정 합니다. 백업은 사용할 수 전에 명시적으로 활성화 되어야 합니다.
      이 서비스의 일부 이며, Service Fabric 응용 프로그램에 대 한 백업이 활성화 된 경우이 서비스 응용 프로그램 수준에서 매핑된 정책에 따라 주기적으로 백업 계속 합니다.
    syntax:
      content: 'function disableServiceBackup(serviceId: string, options?: Models.ServiceFabricClientDisableServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientDisableServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_1'
    name: 'disableServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_2'
    name: 'disableServiceBackup(string, ServiceFabricClientDisableServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, options: ServiceFabricClientDisableServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup'
    name: 'enableApplicationBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnableApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 Service Fabric 응용 프로그램의 구성 요소인 상태 저장 파티션의 정기적인 백업을 사용 하도록 설정 합니다. 각 파티션에 지정 된 백업 정책 설명에 따라 개별적으로 지원 됩니다.
      만 확인 C# 기반된 Reliable Actor 및 Reliable Stateful 서비스는 현재 정기적인 백업에 지원 됩니다.
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnableApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientEnableApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_1'
    name: 'enableApplicationBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_2'
    name: 'enableApplicationBackup(string, EnableBackupDescription, ServiceFabricClientEnableApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnableApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode'
    name: 'enableNode(string, Models.ServiceFabricClientEnableNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 현재 비활성화되어 있는 Microsoft Azure Service Fabric 클러스터 노드를 활성화합니다. 일단 활성화되면 노드는 다시 새로운 복제본을 배치하는 것이 가능한 대상이 되고 노드에 남아 있는 모든 비활성화된 복제본은 다시 활성화됩니다.
    syntax:
      content: 'function enableNode(nodeName: string, options?: Models.ServiceFabricClientEnableNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientEnableNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode_1'
    name: 'enableNode(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode_2'
    name: 'enableNode(string, ServiceFabricClientEnableNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, options: ServiceFabricClientEnableNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup'
    name: 'enablePartitionBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnablePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지속형 상태 저장 파티션의 정기적인 백업을 사용 하도록 설정 합니다. 각 파티션에 지정 된 백업 정책 설명에 따라 백업 됩니다. 응용 프로그램 또는 파티션이 있는 서비스의 일부인 경우 이미 사용 되 백업에 대 한이 작업에는이 파티션의 정기 백업을 수행 하는 데 사용 되는 정책 재정의 됩니다.
      만 확인 C# 기반된 Reliable Actor 및 Reliable Stateful 서비스는 현재 정기적인 백업에 지원 됩니다.
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnablePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientEnablePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_1'
    name: 'enablePartitionBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_2'
    name: 'enablePartitionBackup(string, EnableBackupDescription, ServiceFabricClientEnablePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnablePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup'
    name: 'enableServiceBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnableServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 Service Fabric 서비스의 구성 요소인 상태 저장 파티션의 정기적인 백업을 사용 하도록 설정 합니다.
      각 파티션에 지정 된 백업 정책 설명에 따라 개별적으로 지원 됩니다. 경우이 작업 (재정의 되지 않는 경우 명시적으로 파티션 수준에서)이이 서비스 및 해당 파티션에 대 한 정기 백업을 수행 하는 데 사용 되는 정책 재정의 한 다음 백업에 대 한 서비스의 일부 이며, 응용 프로그램을 활성화 됩니다.
      만 확인 C# 기반된 Reliable Actor 및 Reliable Stateful 서비스는 현재 정기적인 백업에 지원 됩니다.
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnableServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientEnableServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_1'
    name: 'enableServiceBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_2'
    name: 'enableServiceBackup(string, EnableBackupDescription, ServiceFabricClientEnableServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnableServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: 백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: 승인이 복구 작업을 설명 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_2'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: 승인이 복구 작업을 설명 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_1'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: 승인이 복구 작업을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata'
    name: getAadMetadata(Models.ServiceFabricClientGetAadMetadataOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      클러스터에 보안된 연결에 사용 되는 Azure Active Directory 메타 데이터를 가져옵니다.
      이 API는 별도로 호출할 간주 되지 않습니다. Service Fabric 클러스터를 사용 하 여 연결을 보호 하는 Azure Active Directory를 설정 하는 데 필요한 정보를 제공 합니다.
    syntax:
      content: 'function getAadMetadata(options?: Models.ServiceFabricClientGetAadMetadataOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetAadMetadataOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata_1'
    name: getAadMetadata(ServiceCallback<AadMetadataObject>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(callback: ServiceCallback<AadMetadataObject>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.AadMetadataObject>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata_2'
    name: 'getAadMetadata(ServiceFabricClientGetAadMetadataOptionalParams, ServiceCallback<AadMetadataObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(options: ServiceFabricClientGetAadMetadataOptionalParams, callback: ServiceCallback<AadMetadataObject>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.AadMetadataObject>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy'
    name: 'getAllEntitiesBackedUpByPolicy(string, Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 응용 프로그램, 서비스 또는이 백업 정책과 연관 된 파티션의 목록을 반환 합니다.'
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, options?: Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_1'
    name: 'getAllEntitiesBackedUpByPolicy(string, ServiceCallback<PagedBackupEntityList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, callback: ServiceCallback<PagedBackupEntityList>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_2'
    name: 'getAllEntitiesBackedUpByPolicy(string, ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams, ServiceCallback<PagedBackupEntityList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, options: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams, callback: ServiceCallback<PagedBackupEntityList>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo'
    name: 'getApplicationBackupConfigurationInfo(string, Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '응용 프로그램 및 서비스, 파티션이 응용이 프로그램에 대 한 Service Fabric 백업 구성 정보를 가져옵니다.'
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_1'
    name: 'getApplicationBackupConfigurationInfo(string, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_2'
    name: 'getApplicationBackupConfigurationInfo(string, ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, options: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList'
    name: 'getApplicationBackupList(string, Models.ServiceFabricClientGetApplicationBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 Service Fabric 응용 프로그램의 모든 파티션에 대해 사용 가능한 백업 목록을 반환합니다. 서버 백업 정책에 구성 된 백업 위치에서 사용 가능한 모든 백업을 열거 합니다. 또한 결과 시작 및 종료 날짜/시간에 따라 또는 모든 파티션에 대해 사용 가능한 최신 백업 인출만 필터링 할 수 있습니다.
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, options?: Models.ServiceFabricClientGetApplicationBackupListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_1'
    name: 'getApplicationBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_2'
    name: 'getApplicationBackupList(string, ServiceFabricClientGetApplicationBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, options: ServiceFabricClientGetApplicationBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList'
    name: 'getApplicationEventList(string, string, string, Models.ServiceFabricClientGetApplicationEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 ApplicationEvent 개체의 목록입니다.
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetApplicationEventListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_1'
    name: 'getApplicationEventList(string, string, string, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_2'
    name: 'getApplicationEventList(string, string, string, ServiceFabricClientGetApplicationEventListOptionalParams, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetApplicationEventListOptionalParams, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth'
    name: 'getApplicationHealth(string, Models.ServiceFabricClientGetApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Microsoft Azure Service Fabric 애플리케이션의 상태를 반환합니다. 응답은 확인, 오류 또는 상태 경고를 보고합니다. 엔터티를 Health 스토어에서 찾을 수 없다면 Error를 반환합니다.'
    syntax:
      content: 'function getApplicationHealth(applicationId: string, options?: Models.ServiceFabricClientGetApplicationHealthOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_1'
    name: 'getApplicationHealth(string, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_2'
    name: 'getApplicationHealth(string, ServiceFabricClientGetApplicationHealthOptionalParams, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, options: ServiceFabricClientGetApplicationHealthOptionalParams, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy'
    name: 'getApplicationHealthUsingPolicy(string, Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 응용 프로그램의 상태를 가져옵니다. 상태에 따라 노드에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다. ClusterHealthPolicies를 사용 하 여 상태를 평가 하는 데 상태 정책을 재정의 합니다.
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, options?: Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1'
    name: 'getApplicationHealthUsingPolicy(string, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2'
    name: 'getApplicationHealthUsingPolicy(string, ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, options: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo'
    name: 'getApplicationInfo(string, Models.ServiceFabricClientGetApplicationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Microsoft Azure Service Fabric 클러스터에서 만들어졌거나 만들어지는 과정에 있으며 이름이 매개 변수로 지정된 것과 일치하는 애플리케이션에 대한 정보를 반환합니다.
      응답에는 이름, 유형, 상태, 매개 변수 및 애플리케이션에 관한 기타 세부 정보가 포함됩니다.
    syntax:
      content: 'function getApplicationInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_1'
    name: 'getApplicationInfo(string, ServiceCallback<ApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, callback: ServiceCallback<ApplicationInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_2'
    name: 'getApplicationInfo(string, ServiceFabricClientGetApplicationInfoOptionalParams, ServiceCallback<ApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, options: ServiceFabricClientGetApplicationInfoOptionalParams, callback: ServiceCallback<ApplicationInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList'
    name: getApplicationInfoList(Models.ServiceFabricClientGetApplicationInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Microsoft Azure Service Fabric 클러스터에서 만들어졌거나 만들어지는 과정에 있으며 지정된 필터와 일치하는 애플리케이션에 대한 정보를 가져옵니다. 응답에는 이름, 유형, 상태, 매개 변수 및 애플리케이션에 관한 기타 세부 정보가 포함됩니다. 애플리케이션이 한 페이지에 맞지 않는 경우, 결과 한 페이지가 연속 토큰으로 반환되어 다음 페이지를 가져오는 데 사용될 수 있습니다. 필터 ApplicationTypeName 및 ApplicationDefinitionKindFilter는 동시에 지정할 수 없습니다.'
    syntax:
      content: 'function getApplicationInfoList(options?: Models.ServiceFabricClientGetApplicationInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_1'
    name: getApplicationInfoList(ServiceCallback<PagedApplicationInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(callback: ServiceCallback<PagedApplicationInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_2'
    name: 'getApplicationInfoList(ServiceFabricClientGetApplicationInfoListOptionalParams, ServiceCallback<PagedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(options: ServiceFabricClientGetApplicationInfoListOptionalParams, callback: ServiceCallback<PagedApplicationInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo'
    name: 'getApplicationLoadInfo(string, Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Microsoft Azure Service Fabric 클러스터에서 만들어졌거나 만들어지는 과정에 있으며 이름이 매개 변수로 지정된 것과 일치하는 애플리케이션에 대한 로드 정보를 반환합니다.
      응답에는 이름, 최소 노드, 최대 노드, 애플리케이션이 현재 차지하는 노드 수, 애플리케이션에 대한 애플리케이션 부하 메트릭 정보가 포함됩니다.
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_1'
    name: 'getApplicationLoadInfo(string, ServiceCallback<ApplicationLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, callback: ServiceCallback<ApplicationLoadInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_2'
    name: 'getApplicationLoadInfo(string, ServiceFabricClientGetApplicationLoadInfoOptionalParams, ServiceCallback<ApplicationLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, options: ServiceFabricClientGetApplicationLoadInfoOptionalParams, callback: ServiceCallback<ApplicationLoadInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest'
    name: 'getApplicationManifest(string, string, Models.ServiceFabricClientGetApplicationManifestOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답에 애플리케이션 매니페스트 XML이 문자열로 포함됩니다.
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options?: Models.ServiceFabricClientGetApplicationManifestOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_1'
    name: 'getApplicationManifest(string, string, ServiceCallback<ApplicationTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ApplicationTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_2'
    name: 'getApplicationManifest(string, string, ServiceFabricClientGetApplicationManifestOptionalParams, ServiceCallback<ApplicationTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options: ServiceFabricClientGetApplicationManifestOptionalParams, callback: ServiceCallback<ApplicationTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo'
    name: 'getApplicationNameInfo(string, Models.ServiceFabricClientGetApplicationNameInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 서비스에 대한 애플리케이션의 이름을 가져옵니다. 제공된 서비스 ID가 있는 서비스가 존재하지 않는 경우 404 FABRIC_E_SERVICE_DOES_NOT_EXIST 오류가 반환됩니다.
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, options?: Models.ServiceFabricClientGetApplicationNameInfoOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationNameInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_1'
    name: 'getApplicationNameInfo(string, ServiceCallback<ApplicationNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, callback: ServiceCallback<ApplicationNameInfo>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_2'
    name: 'getApplicationNameInfo(string, ServiceFabricClientGetApplicationNameInfoOptionalParams, ServiceCallback<ApplicationNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, options: ServiceFabricClientGetApplicationNameInfoOptionalParams, callback: ServiceCallback<ApplicationNameInfo>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList'
    name: 'getApplicationsEventList(string, string, Models.ServiceFabricClientGetApplicationsEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 ApplicationEvent 개체의 목록입니다.
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetApplicationsEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationsEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_1'
    name: 'getApplicationsEventList(string, string, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_2'
    name: 'getApplicationsEventList(string, string, ServiceFabricClientGetApplicationsEventListOptionalParams, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetApplicationsEventListOptionalParams, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList'
    name: getApplicationTypeInfoList(Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Microsoft Azure Service Fabric 클러스터에 프로비전된 또는 프로비전되는 프로세스에 있는 애플리케이션 유형에 대한 정보를 반환합니다. 애플리케이션 유형의 각 버전은 하나의 애플리케이션 유형으로 반환됩니다. 응답에는 이름, 버전, 상태 및 애플리케이션에 관한 기타 세부 정보가 포함됩니다. 이것은 페이징된 쿼리로 애플리케이션 유형 모두가 한 페이지에 맞지 않는 경우, 결과 한 페이지가 연속 토큰으로 반환되어 다음 페이지를 가져오는 데 사용될 수 있습니다. 예를 들어 10개의 애플리케이션 형식이 있지만 페이지는 처음 3개 애플리케이션 형식에만 맞거나, 최대 결과가 3으로 설정된다면, 3이 반환됩니다.
      결과의 나머지 부분에 액세스하려면 다음 쿼리에 반환된 연속 토큰을 사용하여 후속 페이지를 검색합니다. 후속 페이지가 없다면 공백인 연속 토큰이 반환됩니다.
    syntax:
      content: 'function getApplicationTypeInfoList(options?: Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1'
    name: getApplicationTypeInfoList(ServiceCallback<PagedApplicationTypeInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2'
    name: 'getApplicationTypeInfoList(ServiceFabricClientGetApplicationTypeInfoListOptionalParams, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(options: ServiceFabricClientGetApplicationTypeInfoListOptionalParams, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName'
    name: 'getApplicationTypeInfoListByName(string, Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Microsoft Azure Service Fabric 클러스터에 프로비전된 또는 프로비전되는 프로세스에 있는 애플리케이션 유형에 대한 정보를 반환합니다. 이러한 결과는 이름이 매개 변수로 지정된 것과 정확히 일치하며 주어진 쿼리 매개 변수를 준수해야 하는 애플리케이션 유형에서 나온 값입니다. 하나의 애플리케이션 형식으로 반환된 각 버전과 함께 애플리케이션 형식 이름과 일치하는 애플리케이션 형식의 모든 버전입니다. 응답에는 이름, 버전, 상태 및 애플리케이션에 관한 기타 세부 정보가 포함됩니다. 이것은 페이징된 쿼리로 애플리케이션 유형 모두가 한 페이지에 맞지 않는 경우, 결과 한 페이지가 연속 토큰으로 반환되어 다음 페이지를 가져오는 데 사용될 수 있습니다. 예를 들어 10개의 애플리케이션 형식이 있지만 페이지는 처음 3개 애플리케이션 형식에만 맞거나, 최대 결과가 3으로 설정된다면, 3이 반환됩니다. 결과의 나머지 부분에 액세스하려면 다음 쿼리에 반환된 연속 토큰을 사용하여 후속 페이지를 검색합니다. 후속 페이지가 없다면 공백인 연속 토큰이 반환됩니다.'
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options?: Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1'
    name: 'getApplicationTypeInfoListByName(string, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2'
    name: 'getApplicationTypeInfoListByName(string, ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade'
    name: 'getApplicationUpgrade(string, Models.ServiceFabricClientGetApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 애플리케이션 상태 문제 디버깅을 지원하기 위한 세부 정보와 함께 최신 애플리케이션 업그레이드의 상태에 대한 정보를 반환합니다.
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, options?: Models.ServiceFabricClientGetApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_1'
    name: 'getApplicationUpgrade(string, ServiceCallback<ApplicationUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_2'
    name: 'getApplicationUpgrade(string, ServiceFabricClientGetApplicationUpgradeOptionalParams, ServiceCallback<ApplicationUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, options: ServiceFabricClientGetApplicationUpgradeOptionalParams, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName'
    name: 'getBackupPolicyByName(string, Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '{BackupPolicyName}로 식별 되는 특정 백업 정책을 가져옵니다.'
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, options?: Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_1'
    name: 'getBackupPolicyByName(string, ServiceCallback<BackupPolicyDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, callback: ServiceCallback<BackupPolicyDescription>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_2'
    name: 'getBackupPolicyByName(string, ServiceFabricClientGetBackupPolicyByNameOptionalParams, ServiceCallback<BackupPolicyDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, options: ServiceFabricClientGetBackupPolicyByNameOptionalParams, callback: ServiceCallback<BackupPolicyDescription>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList'
    name: getBackupPolicyList(Models.ServiceFabricClientGetBackupPolicyListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 구성 된 모든 백업 정책 목록을 가져옵니다.
    syntax:
      content: 'function getBackupPolicyList(options?: Models.ServiceFabricClientGetBackupPolicyListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupPolicyListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_1'
    name: getBackupPolicyList(ServiceCallback<PagedBackupPolicyDescriptionList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(callback: ServiceCallback<PagedBackupPolicyDescriptionList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_2'
    name: 'getBackupPolicyList(ServiceFabricClientGetBackupPolicyListOptionalParams, ServiceCallback<PagedBackupPolicyDescriptionList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(options: ServiceFabricClientGetBackupPolicyListOptionalParams, callback: ServiceCallback<PagedBackupPolicyDescriptionList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정 된 엔터티 (응용 프로그램, 서비스 또는 파티션) 지정된 된 백업 위치 (파일 공유 또는 Azure Blob Storage)에 백업에 대 한 사용 가능한 백업 목록을 가져옵니다.'
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options?: Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: 필터 및 열거 백업에 사용할 백업 저장소 세부 정보를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_1'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: 필터 및 열거 백업에 사용할 백업 저장소 세부 정보를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_2'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, ServiceFabricClientGetBackupsFromBackupLocationOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: 필터 및 열거 백업에 사용할 백업 저장소 세부 정보를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos'
    name: getChaos(Models.ServiceFabricClientGetChaosOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Chaos가 실행 중인지 여부, Chaos 매개 변수가 Chaos 실행에 사용되는지 여부 및 Chaos Schedule의 상태를 나타내는 Chaos의 상태를 가져옵니다.'
    syntax:
      content: 'function getChaos(options?: Models.ServiceFabricClientGetChaosOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos_1'
    name: getChaos(ServiceCallback<Chaos>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(callback: ServiceCallback<Chaos>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.Chaos>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos_2'
    name: 'getChaos(ServiceFabricClientGetChaosOptionalParams, ServiceCallback<Chaos>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(options: ServiceFabricClientGetChaosOptionalParams, callback: ServiceCallback<Chaos>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.Chaos>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents'
    name: getChaosEvents(Models.ServiceFabricClientGetChaosEventsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Chaos 이벤트의 다음 세그먼트를 가져오기 위해 ContinuationToken을 지정할 수 있습니다. Chaos 이벤트의 새 세그먼트의 시작 부분을 가져오기 위해 StartTimeUtc 및 EndTimeUtc를 통해 시간 범위를 지정할 수 있습니다. 동일한 호출에서는 ContinuationToken과 시간 범위를 모두 지정할 수 없습니다.
      100개 이상의 Chaos 이벤트가 있는 경우 Chaos 이벤트는 세그먼트가 100개 이하의 Chaos 이벤트를 포함하는 여러 세그먼트에서 반환되며, 다음 세그먼트를 가져오기 위해 연속 토큰을 사용하여 이 API에 대한 호출을 만듭니다.
    syntax:
      content: 'function getChaosEvents(options?: Models.ServiceFabricClientGetChaosEventsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosEventsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents_1'
    name: getChaosEvents(ServiceCallback<ChaosEventsSegment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(callback: ServiceCallback<ChaosEventsSegment>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents_2'
    name: 'getChaosEvents(ServiceFabricClientGetChaosEventsOptionalParams, ServiceCallback<ChaosEventsSegment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(options: ServiceFabricClientGetChaosEventsOptionalParams, callback: ServiceCallback<ChaosEventsSegment>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule'
    name: getChaosSchedule(Models.ServiceFabricClientGetChaosScheduleOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 사용 중인 Chaos Schedule과 Chaos를 실행하는 시기 및 방법을 정의하는 Chaos Schedule의 버전을 가져옵니다.
    syntax:
      content: 'function getChaosSchedule(options?: Models.ServiceFabricClientGetChaosScheduleOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosScheduleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_1'
    name: getChaosSchedule(ServiceCallback<ChaosScheduleDescription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(callback: ServiceCallback<ChaosScheduleDescription>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_2'
    name: 'getChaosSchedule(ServiceFabricClientGetChaosScheduleOptionalParams, ServiceCallback<ChaosScheduleDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(options: ServiceFabricClientGetChaosScheduleOptionalParams, callback: ServiceCallback<ChaosScheduleDescription>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration'
    name: 'getClusterConfiguration(string, Models.ServiceFabricClientGetClusterConfigurationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '클러스터 구성에는 클러스터, 보안 구성, 오류 및 업그레이드 도메인 토폴로지 등의 다양한 노드 형식을 포함하는 클러스터의 속성이 들어 있습니다.'
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, options?: Models.ServiceFabricClientGetClusterConfigurationOptionalParams)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: 독립 실행형 클러스터 json 구성의 API 버전입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterConfigurationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_1'
    name: 'getClusterConfiguration(string, ServiceCallback<ClusterConfiguration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, callback: ServiceCallback<ClusterConfiguration>)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: 독립 실행형 클러스터 json 구성의 API 버전입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfiguration>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_2'
    name: 'getClusterConfiguration(string, ServiceFabricClientGetClusterConfigurationOptionalParams, ServiceCallback<ClusterConfiguration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, options: ServiceFabricClientGetClusterConfigurationOptionalParams, callback: ServiceCallback<ClusterConfiguration>)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: 독립 실행형 클러스터 json 구성의 API 버전입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfiguration>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus'
    name: getClusterConfigurationUpgradeStatus(Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 독립 실행형 클러스터의 클러스터 구성 업그레이드 상태 정보를 가져옵니다.
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(options?: Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1'
    name: getClusterConfigurationUpgradeStatus(ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2'
    name: 'getClusterConfigurationUpgradeStatus(ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams, ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(options: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams, callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList'
    name: 'getClusterEventList(string, string, Models.ServiceFabricClientGetClusterEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 ClusterEvent 개체의 목록입니다.
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetClusterEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList_1'
    name: 'getClusterEventList(string, string, ServiceCallback<Models.ClusterEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ClusterEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.ClusterEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList_2'
    name: 'getClusterEventList(string, string, ServiceFabricClientGetClusterEventListOptionalParams, ServiceCallback<Models.ClusterEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetClusterEventListOptionalParams, callback: ServiceCallback<Models.ClusterEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.ClusterEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth'
    name: getClusterHealth(Models.ServiceFabricClientGetClusterHealthOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      상태에 따라 클러스터에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.
      마찬가지로, 집계된 상태에 따라 반환된 노드 및 애플리케이션 컬렉션을 필터링할 NodesHealthStateFilter 및 ApplicationsHealthStateFilter를 사용합니다.
    syntax:
      content: 'function getClusterHealth(options?: Models.ServiceFabricClientGetClusterHealthOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth_1'
    name: getClusterHealth(ServiceCallback<ClusterHealth>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth_2'
    name: 'getClusterHealth(ServiceFabricClientGetClusterHealthOptionalParams, ServiceCallback<ClusterHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(options: ServiceFabricClientGetClusterHealthOptionalParams, callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk'
    name: getClusterHealthChunk(Models.ServiceFabricClientGetClusterHealthChunkOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      상태 청크를 사용 하 여 Service Fabric 클러스터의 상태를 가져옵니다. 클러스터의 집계 된 상태를 제외 하 고 클러스터 엔터티를 포함합니다.
      클러스터 상태를 확장 하 고 엔터티를의 전체 또는 일부의 상태를 가져오기, POST URI를 사용 하 고 클러스터 상태 청크 쿼리 설명을 지정 합니다.
    syntax:
      content: 'function getClusterHealthChunk(options?: Models.ServiceFabricClientGetClusterHealthChunkOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthChunkOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_1'
    name: getClusterHealthChunk(ServiceCallback<ClusterHealthChunk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_2'
    name: 'getClusterHealthChunk(ServiceFabricClientGetClusterHealthChunkOptionalParams, ServiceCallback<ClusterHealthChunk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(options: ServiceFabricClientGetClusterHealthChunkOptionalParams, callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters'
    name: getClusterHealthChunkUsingPolicyAndAdvancedFilters(Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      상태 청크를 사용 하 여 Service Fabric 클러스터의 상태를 가져옵니다. 상태 평가 입력된 클러스터 상태 청크 쿼리 설명에 따라 수행 됩니다.
      쿼리 설명을 사용 하면 클러스터 및 해당 자식 평가용 상태 정책을 지정할 수 있습니다.
      사용자 매우 유연한 선택을 위해 필터를 반환 하는 클러스터 엔터티를 지정할 수 있습니다. 선택한은 엔터티 상태에 따라 수행 하 고 계층에 따라 수 있습니다.
      쿼리는 여러 수준의 자식의 지정한 필터를 기반으로 엔터티를 반환할 수 있습니다. 예를 들어,이 응용 프로그램에 대 한 지정 된 이름의 한 응용 프로그램을 반환, 오류 또는 경고 및 모든 파티션 및 이러한 서비스 중 하나에 대 한 복제본에 있는 서비스만 반환할 수 있습니다.
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options?: Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1'
    name: getClusterHealthChunkUsingPolicyAndAdvancedFilters(ServiceCallback<ClusterHealthChunk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2'
    name: 'getClusterHealthChunkUsingPolicyAndAdvancedFilters(ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams, ServiceCallback<ClusterHealthChunk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams, callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy'
    name: getClusterHealthUsingPolicy(Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      상태에 따라 클러스터에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.
      마찬가지로, 집계된 상태에 따라 반환된 노드 및 애플리케이션 컬렉션을 필터링할 NodesHealthStateFilter 및 ApplicationsHealthStateFilter를 사용합니다.
      ClusterHealthPolicies를 사용 하 여 상태를 평가 하는 데 상태 정책을 재정의 합니다.
    syntax:
      content: 'function getClusterHealthUsingPolicy(options?: Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1'
    name: getClusterHealthUsingPolicy(ServiceCallback<ClusterHealth>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2'
    name: 'getClusterHealthUsingPolicy(ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams, ServiceCallback<ClusterHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(options: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams, callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest'
    name: getClusterManifest(Models.ServiceFabricClientGetClusterManifestOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Service Fabric 클러스터 매니페스트를 가져옵니다. 클러스터 매니페스트에는 클러스터, 보안 구성, 오류 및 업그레이드 도메인 토폴로지 등의 다양한 노드 형식을 포함하는 클러스터의 속성이 들어 있습니다. 이러한 속성은 독립 실행형 클러스터를 배포하는 동안 ClusterConfig.JSON 파일의 일부로 지정됩니다. 그러나 클러스터 매니페스트에 있는 대부분 정보는 다른 배포 시나리오(예: Azure Portal 사용 시)에서 클러스터 배포할 경우 서비스 패브릭에서 내부적으로 생성됩니다.

      클러스터 매니페스트의 내용이 단지 정보용일 경우 사용자는 파일 내용 및 해석 형식에 의존하지 않아야 합니다.
    syntax:
      content: 'function getClusterManifest(options?: Models.ServiceFabricClientGetClusterManifestOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest_1'
    name: getClusterManifest(ServiceCallback<ClusterManifest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(callback: ServiceCallback<ClusterManifest>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterManifest>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest_2'
    name: 'getClusterManifest(ServiceFabricClientGetClusterManifestOptionalParams, ServiceCallback<ClusterManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(options: ServiceFabricClientGetClusterManifestOptionalParams, callback: ServiceCallback<ClusterManifest>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterManifest>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress'
    name: getClusterUpgradeProgress(Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 진행 중인 클러스터 업그레이드의 현재 진행률을 가져옵니다. 현재 진행 중인 업그레이드가 없는 경우 이전 클러스터 업그레이드의 마지막 상태를 가져옵니다.
    syntax:
      content: 'function getClusterUpgradeProgress(options?: Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1'
    name: getClusterUpgradeProgress(ServiceCallback<ClusterUpgradeProgressObject>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(callback: ServiceCallback<ClusterUpgradeProgressObject>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2'
    name: 'getClusterUpgradeProgress(ServiceFabricClientGetClusterUpgradeProgressOptionalParams, ServiceCallback<ClusterUpgradeProgressObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(options: ServiceFabricClientGetClusterUpgradeProgressOptionalParams, callback: ServiceCallback<ClusterUpgradeProgressObject>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion'
    name: getClusterVersion(Models.ServiceFabricClientGetClusterVersionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 클러스터 업그레이드는 발생 하는 경우 현재 가장 낮은 (구) 버전 및 대상 클러스터 런타임 버전이이 API 반환 됩니다.
    syntax:
      content: 'function getClusterVersion(options?: Models.ServiceFabricClientGetClusterVersionOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterVersionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion_1'
    name: getClusterVersion(ServiceCallback<ClusterVersion>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(callback: ServiceCallback<ClusterVersion>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterVersion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion_2'
    name: 'getClusterVersion(ServiceFabricClientGetClusterVersionOptionalParams, ServiceCallback<ClusterVersion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(options: ServiceFabricClientGetClusterVersionOptionalParams, callback: ServiceCallback<ClusterVersion>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterVersion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus'
    name: 'getComposeDeploymentStatus(string, Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 클러스터에서 만들어졌거나 만들어지는 과정에 있으며 이름이 매개 변수로 지정된 것과 일치하는 작성 배포의 정보를 반환합니다. 응답에는 이름, 상태 및 배포에 관한 기타 세부 정보가 포함됩니다.'
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, options?: Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1'
    name: 'getComposeDeploymentStatus(string, ServiceCallback<ComposeDeploymentStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2'
    name: 'getComposeDeploymentStatus(string, ServiceFabricClientGetComposeDeploymentStatusOptionalParams, ServiceCallback<ComposeDeploymentStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, options: ServiceFabricClientGetComposeDeploymentStatusOptionalParams, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList'
    name: getComposeDeploymentStatusList(Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 클러스터에 만들어졌거나 만들어지는 프로세스에 있는 작성 배포에 관한 상태를 반환합니다. 응답에는 이름, 상태 및 작성 배포에 관한 기타 세부 정보가 포함됩니다. 배포 목록이 한 페이지에 맞지 않는 경우, 결과의 한 페이지가 연속 토큰으로 반환되어 다음 페이지를 가져오는 데 사용될 수 있습니다.'
    syntax:
      content: 'function getComposeDeploymentStatusList(options?: Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1'
    name: getComposeDeploymentStatusList(ServiceCallback<PagedComposeDeploymentStatusInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2'
    name: 'getComposeDeploymentStatusList(ServiceFabricClientGetComposeDeploymentStatusListOptionalParams, ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(options: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams, callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress'
    name: 'getComposeDeploymentUpgradeProgress(string, Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 애플리케이션 상태 문제 디버깅을 지원하기 위한 세부 정보와 함께 작성 배포 업그레이드의 상태에 대한 정보를 반환합니다.
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options?: Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1'
    name: 'getComposeDeploymentUpgradeProgress(string, ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2'
    name: 'getComposeDeploymentUpgradeProgress(string, ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams, ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 코드 패키지에 대해 Service Fabric 노드에 배포한 컨테이너에 대한 컨테이너 로그를 가져옵니다.
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options?: Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: codePackageName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_1'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: codePackageName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerLogs>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_2'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: codePackageName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerLogs>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList'
    name: 'getContainersEventList(string, string, Models.ServiceFabricClientGetContainersEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 ContainerInstanceEvent 개체의 목록입니다.
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetContainersEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetContainersEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList_1'
    name: 'getContainersEventList(string, string, ServiceCallback<ContainerInstanceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ContainerInstanceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList_2'
    name: 'getContainersEventList(string, string, ServiceFabricClientGetContainersEventListOptionalParams, ServiceCallback<ContainerInstanceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetContainersEventListOptionalParams, callback: ServiceCallback<ContainerInstanceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList'
    name: 'getCorrelatedEventList(string, Models.ServiceFabricClientGetCorrelatedEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 목록 FabricEvents입니다.
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, options?: Models.ServiceFabricClientGetCorrelatedEventListOptionalParams)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: EventInstanceId 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetCorrelatedEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_1'
    name: 'getCorrelatedEventList(string, ServiceCallback<Models.FabricEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, callback: ServiceCallback<Models.FabricEventUnion[]>)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: EventInstanceId 합니다.
        - id: callback
          type:
            - 'ServiceCallback<Models.FabricEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_2'
    name: 'getCorrelatedEventList(string, ServiceFabricClientGetCorrelatedEventListOptionalParams, ServiceCallback<Models.FabricEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, options: ServiceFabricClientGetCorrelatedEventListOptionalParams, callback: ServiceCallback<Models.FabricEventUnion[]>)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: EventInstanceId 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.FabricEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress'
    name: 'getDataLossProgress(string, string, string, Models.ServiceFabricClientGetDataLossProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: OperationId를 사용하여 StartDataLoss로 시작된 데이터 손실 작업의 진행률을 가져옵니다.
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetDataLossProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDataLossProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_1'
    name: 'getDataLossProgress(string, string, string, ServiceCallback<PartitionDataLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionDataLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_2'
    name: 'getDataLossProgress(string, string, string, ServiceFabricClientGetDataLossProgressOptionalParams, ServiceCallback<PartitionDataLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetDataLossProgressOptionalParams, callback: ServiceCallback<PartitionDataLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth'
    name: 'getDeployedApplicationHealth(string, string, Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 노드에 배포된 애플리케이션의 상태에 대한 정보를 가져옵니다. EventsHealthStateFilter를 사용하여 필요에 따라 상태에 따라 배포된 애플리케이션에 보고된 HealthEvent 개체의 컬렉션에 대해 필터링합니다. DeployedServicePackagesHealthStateFilter를 사용하여 필요에 따라 상태를 기반으로 한 DeployedServicePackageHealth 자식에 대해 필터링합니다.
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1'
    name: 'getDeployedApplicationHealth(string, string, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2'
    name: 'getDeployedApplicationHealth(string, string, ServiceFabricClientGetDeployedApplicationHealthOptionalParams, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationHealthOptionalParams, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 정책을 사용 하 여 Service Fabric 노드에 배포 된 응용 프로그램의 상태에 대 한 정보를 가져옵니다. EventsHealthStateFilter를 사용하여 필요에 따라 상태에 따라 배포된 애플리케이션에 보고된 HealthEvent 개체의 컬렉션에 대해 필터링합니다. DeployedServicePackagesHealthStateFilter를 사용하여 필요에 따라 상태를 기반으로 한 DeployedServicePackageHealth 자식에 대해 필터링합니다. 필요에 따라 상태를 평가 하는 데 상태 정책을 재정의 하려면 ApplicationHealthPolicy를 사용 합니다. 이 API는 ApplicationHealthPolicy 'ConsiderWarningAsError' 필드를 사용합니다. 나머지 필드는 배포 된 응용 프로그램의 상태를 평가 하는 동안 무시 됩니다.
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo'
    name: 'getDeployedApplicationInfo(string, string, Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 쿼리는 제공되는 애플리케이션 ID가 시스템 애플리케이션용인 경우 시스템 애플리케이션 정보를 반환합니다. 결과는 활성, 활성화 중 및 상태 다운로드 중인 배포된 애플리케이션을 포함합니다. 이 쿼리에서는 노드 이름이 클러스터의 노드에 해당해야 합니다. 제공된 노드 이름이 클러스터의 활성 Service Fabric 노드를 가리키지 않으면 쿼리가 실패합니다.'
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1'
    name: 'getDeployedApplicationInfo(string, string, ServiceCallback<DeployedApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2'
    name: 'getDeployedApplicationInfo(string, string, ServiceFabricClientGetDeployedApplicationInfoOptionalParams, ServiceCallback<DeployedApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationInfoOptionalParams, callback: ServiceCallback<DeployedApplicationInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList'
    name: 'getDeployedApplicationInfoList(string, Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Microsoft Azure Service Fabric 노드에서 배포된 애플리케이션의 목록을 가져옵니다. 결과는 ID별에 대해 명시적으로 쿼리되지 않는 한 배포된 시스템 애플리케이션에 대한 정보를 포함하지 않습니다. 결과는 활성, 활성화 중 및 상태 다운로드 중인 배포된 애플리케이션을 포함합니다. 이 쿼리에서는 노드 이름이 클러스터의 노드에 해당해야 합니다. 제공된 노드 이름이 클러스터의 활성 Service Fabric 노드를 가리키지 않으면 쿼리가 실패합니다.'
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, options?: Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1'
    name: 'getDeployedApplicationInfoList(string, ServiceCallback<PagedDeployedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, callback: ServiceCallback<PagedDeployedApplicationInfoList>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2'
    name: 'getDeployedApplicationInfoList(string, ServiceFabricClientGetDeployedApplicationInfoListOptionalParams, ServiceCallback<PagedDeployedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, options: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams, callback: ServiceCallback<PagedDeployedApplicationInfoList>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList'
    name: 'getDeployedCodePackageInfoList(string, string, Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 애플리케이션에 대한 Service Fabric 노드에 배포된 코드 패키지 목록을 가져옵니다.
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1'
    name: 'getDeployedCodePackageInfoList(string, string, ServiceCallback<DeployedCodePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2'
    name: 'getDeployedCodePackageInfoList(string, string, ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams, ServiceCallback<DeployedCodePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth'
    name: 'getDeployedServicePackageHealth(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 노드에 배포된 특정 애플리케이션의 서비스 패키지 상태에 대한 정보를 가져옵니다. EventsHealthStateFilter를 사용하여 필요에 따라 상태에 따라 배포된 서비스 패키지에 보고된 HealthEvent 개체의 컬렉션에 대해 필터링합니다.
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1'
    name: 'getDeployedServicePackageHealth(string, string, string, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2'
    name: 'getDeployedServicePackageHealth(string, string, string, ServiceFabricClientGetDeployedServicePackageHealthOptionalParams, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 노드에 배포된 특정 애플리케이션의 서비스 패키지 상태에 대한 정보를 가져옵니다. 지정 된 정책을 사용합니다. EventsHealthStateFilter를 사용하여 필요에 따라 상태에 따라 배포된 서비스 패키지에 보고된 HealthEvent 개체의 컬렉션에 대해 필터링합니다. 필요에 따라 상태를 평가 하는 데 상태 정책을 재정의 하려면 ApplicationHealthPolicy를 사용 합니다. 이 API는 ApplicationHealthPolicy 'ConsiderWarningAsError' 필드를 사용합니다. 나머지 필드는 배포 된 서비스 패키지의 상태를 평가 하는 동안 무시 됩니다.
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList'
    name: 'getDeployedServicePackageInfoList(string, string, Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 애플리케이션에 대한 Service Fabric 노드에 배포된 서비스 패키지에 대한 정보를 반환합니다.
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1'
    name: 'getDeployedServicePackageInfoList(string, string, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2'
    name: 'getDeployedServicePackageInfoList(string, string, ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 애플리케이션에 대한 Service Fabric 노드에 배포된 서비스 패키지에 대한 정보를 반환합니다. 이러한 결과는 해당 이름이 매개 변수로 지정된 서비스 패키지 이름과 정확히 일치하는 서비스 패키지입니다.
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 노드에서 배포된 복제본의 세부 정보를 가져옵니다. 정보로는 서비스 종류, 서비스 이름, 현재 서비스 작업, 현재 서비스 작업 시작 날짜 시간, 파티션 ID, 복제본/인스턴스 ID, 보고된 로드 및 기타 정보가 포함됩니다.'
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 노드에서 배포된 복제본의 세부 정보를 가져옵니다. 정보로는 서비스 종류, 서비스 이름, 현재 서비스 작업, 현재 서비스 작업 시작 날짜 시간, 파티션 ID, 복제본/인스턴스 ID, 보고된 로드 및 기타 정보가 포함됩니다.'
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList'
    name: 'getDeployedServiceReplicaInfoList(string, string, Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 노드에 배포된 복제본에 대한 정보를 포함하는 목록을 가져옵니다. 정보는 파티션 ID, 복제본 ID, 복제본의 상태, 서비스의 이름, 서비스 유형의 이름 및 기타 정보를 포함합니다. PartitionId 또는 ServiceManifestName 쿼리 매개 변수를 사용하여 이러한 매개 변수에 지정된 값과 일치하는 배포된 복제본에 대한 정보를 반환합니다.'
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1'
    name: 'getDeployedServiceReplicaInfoList(string, string, ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - 'ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2'
    name: 'getDeployedServiceReplicaInfoList(string, string, ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams, ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 클러스터의 노드에 배포된 애플리케이션의 특정 서비스 유형에 대한 정보가 포함된 목록을 가져옵니다. 응답은 서비스 유형의 이름, 해당 등록 상태, 등록한 코드 패키지 및 서비스 패키지의 활성화 ID를 포함합니다. 각 항목은 활성화 ID로 구분된 서비스 유형의 하나의 활성화를 나타냅니다.'
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options?: Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceTypeName
          type:
            - string
          description: Service Fabric 서비스 유형의 이름을 지정합니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceTypeName
          type:
            - string
          description: Service Fabric 서비스 유형의 이름을 지정합니다.
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceTypeName
          type:
            - string
          description: Service Fabric 서비스 유형의 이름을 지정합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList'
    name: 'getDeployedServiceTypeInfoList(string, string, Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 클러스터의 노드에 배포된 애플리케이션의 서비스 유형에 대한 정보가 포함된 목록을 가져옵니다. 응답은 서비스 유형의 이름, 해당 등록 상태, 등록한 코드 패키지 및 서비스 패키지의 활성화 ID를 포함합니다.'
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1'
    name: 'getDeployedServiceTypeInfoList(string, string, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2'
    name: 'getDeployedServiceTypeInfoList(string, string, ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList'
    name: 'getFaultOperationList(number, number, Models.ServiceFabricClientGetFaultOperationListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공된 입력으로 필터링한 사용자로 인한 오류 작업 목록을 가져옵니다.
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options?: Models.ServiceFabricClientGetFaultOperationListOptionalParams)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            사용자로 인한 작업에 대한 OperationType을 필터링하는 데 사용됩니다.

            - 65535 - 모두 선택
            - 1-PartitionDataLoss 선택 합니다.
            - 2-PartitionQuorumLoss 선택 합니다.
            - 4 - select PartitionRestart.
            - 8-NodeTransition 선택 합니다.
        - id: stateFilter
          type:
            - number
          description: |-
            OperationState의 사용자로 인한 작업을 필터링하는 데 사용됩니다.

            - 65535 - 모두 선택
            - 1 - Running 선택
            - 2-롤백하는 중 선택
            - 8-완료 됨을 선택 합니다.
            - 16-Faulted를 선택 합니다.
            - 32 비트 취소를 선택 합니다.
            - 64-ForceCancelled를 선택 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetFaultOperationListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_1'
    name: 'getFaultOperationList(number, number, ServiceCallback<OperationStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, callback: ServiceCallback<OperationStatus[]>)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            사용자로 인한 작업에 대한 OperationType을 필터링하는 데 사용됩니다.

            - 65535 - 모두 선택
            - 1-PartitionDataLoss 선택 합니다.
            - 2-PartitionQuorumLoss 선택 합니다.
            - 4 - select PartitionRestart.
            - 8-NodeTransition 선택 합니다.
        - id: stateFilter
          type:
            - number
          description: |-
            OperationState의 사용자로 인한 작업을 필터링하는 데 사용됩니다.

            - 65535 - 모두 선택
            - 1 - Running 선택
            - 2-롤백하는 중 선택
            - 8-완료 됨을 선택 합니다.
            - 16-Faulted를 선택 합니다.
            - 32 비트 취소를 선택 합니다.
            - 64-ForceCancelled를 선택 합니다.
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_2'
    name: 'getFaultOperationList(number, number, ServiceFabricClientGetFaultOperationListOptionalParams, ServiceCallback<OperationStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options: ServiceFabricClientGetFaultOperationListOptionalParams, callback: ServiceCallback<OperationStatus[]>)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            사용자로 인한 작업에 대한 OperationType을 필터링하는 데 사용됩니다.

            - 65535 - 모두 선택
            - 1-PartitionDataLoss 선택 합니다.
            - 2-PartitionQuorumLoss 선택 합니다.
            - 4 - select PartitionRestart.
            - 8-NodeTransition 선택 합니다.
        - id: stateFilter
          type:
            - number
          description: |-
            OperationState의 사용자로 인한 작업을 필터링하는 데 사용됩니다.

            - 65535 - 모두 선택
            - 1 - Running 선택
            - 2-롤백하는 중 선택
            - 8-완료 됨을 선택 합니다.
            - 16-Faulted를 선택 합니다.
            - 32 비트 취소를 선택 합니다.
            - 64-ForceCancelled를 선택 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent'
    name: 'getImageStoreContent(string, Models.ServiceFabricClientGetImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 contentPath에 있는 이미지 저장소 콘텐츠에 대한 정보를 반환합니다. contentPath는 이미지 저장소의 루트를 기준으로 합니다.
    syntax:
      content: 'function getImageStoreContent(contentPath: string, options?: Models.ServiceFabricClientGetImageStoreContentOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_1'
    name: 'getImageStoreContent(string, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_2'
    name: 'getImageStoreContent(string, ServiceFabricClientGetImageStoreContentOptionalParams, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, options: ServiceFabricClientGetImageStoreContentOptionalParams, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent'
    name: getImageStoreRootContent(Models.ServiceFabricClientGetImageStoreRootContentOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 이미지 저장소의 루트에 있는 이미지 저장소 콘텐츠에 대한 정보를 반환합니다.
    syntax:
      content: 'function getImageStoreRootContent(options?: Models.ServiceFabricClientGetImageStoreRootContentOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreRootContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_1'
    name: getImageStoreRootContent(ServiceCallback<ImageStoreContent>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_2'
    name: 'getImageStoreRootContent(ServiceFabricClientGetImageStoreRootContentOptionalParams, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(options: ServiceFabricClientGetImageStoreRootContentOptionalParams, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById'
    name: 'getImageStoreUploadSessionById(string, Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 ID로 식별 되는 이미지 저장소 업로드 세션을 가져옵니다. 사용자는 언제 든 지 업로드 하는 동안 업로드 세션을 쿼리할 수 있습니다.
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, options?: Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_1'
    name: 'getImageStoreUploadSessionById(string, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_2'
    name: 'getImageStoreUploadSessionById(string, ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, options: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath'
    name: 'getImageStoreUploadSessionByPath(string, Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 이미지 저장소 상대 경로와 연결 된 이미지 저장소 업로드 세션을 가져옵니다. 사용자는 언제 든 지 업로드 하는 동안 업로드 세션을 쿼리할 수 있습니다.
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, options?: Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_1'
    name: 'getImageStoreUploadSessionByPath(string, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_2'
    name: 'getImageStoreUploadSessionByPath(string, ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, options: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo'
    name: 'getNameExistsInfo(string, Models.ServiceFabricClientGetNameExistsInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 Service Fabric 이름이 있는지 여부를 반환 합니다.
    syntax:
      content: 'function getNameExistsInfo(nameId: string, options?: Models.ServiceFabricClientGetNameExistsInfoOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetNameExistsInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_1'
    name: 'getNameExistsInfo(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_2'
    name: 'getNameExistsInfo(string, ServiceFabricClientGetNameExistsInfoOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, options: ServiceFabricClientGetNameExistsInfoOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList'
    name: 'getNodeEventList(string, string, string, Models.ServiceFabricClientGetNodeEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 NodeEvent 개체의 목록입니다.
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetNodeEventListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList_1'
    name: 'getNodeEventList(string, string, string, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList_2'
    name: 'getNodeEventList(string, string, string, ServiceFabricClientGetNodeEventListOptionalParams, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetNodeEventListOptionalParams, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth'
    name: 'getNodeHealth(string, Models.ServiceFabricClientGetNodeHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Microsoft Azure Service 패브릭 노드의 상태를 가져옵니다. 상태에 따라 노드에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다. 이름으로 지정한 노드가 상태 저장소에 존재하지 않을 경우 오류가 반환됩니다.
    syntax:
      content: 'function getNodeHealth(nodeName: string, options?: Models.ServiceFabricClientGetNodeHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth_1'
    name: 'getNodeHealth(string, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth_2'
    name: 'getNodeHealth(string, ServiceFabricClientGetNodeHealthOptionalParams, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, options: ServiceFabricClientGetNodeHealthOptionalParams, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy'
    name: 'getNodeHealthUsingPolicy(string, Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Microsoft Azure Service 패브릭 노드의 상태를 가져옵니다. 상태에 따라 노드에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다. 상태를 평가 하는 데 상태 정책을 재정의 하는 POST 본문이 ClusterHealthPolicy를 사용 합니다. 이름으로 지정한 노드가 상태 저장소에 존재하지 않을 경우 오류가 반환됩니다.
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, options?: Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1'
    name: 'getNodeHealthUsingPolicy(string, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2'
    name: 'getNodeHealthUsingPolicy(string, ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, options: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo'
    name: 'getNodeInfo(string, Models.ServiceFabricClientGetNodeInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '응답에는 이름, 상태, ID, 상태, 작동 `시간 및 노드에 대한 기타 세부 정보가 포함됩니다.'
    syntax:
      content: 'function getNodeInfo(nodeName: string, options?: Models.ServiceFabricClientGetNodeInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo_1'
    name: 'getNodeInfo(string, ServiceCallback<NodeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, callback: ServiceCallback<NodeInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo_2'
    name: 'getNodeInfo(string, ServiceFabricClientGetNodeInfoOptionalParams, ServiceCallback<NodeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, options: ServiceFabricClientGetNodeInfoOptionalParams, callback: ServiceCallback<NodeInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList'
    name: getNodeInfoList(Models.ServiceFabricClientGetNodeInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '응답에는 이름, 상태, ID, 상태, 작동 `시간 및 노드에 대한 기타 세부 정보가 포함됩니다.'
    syntax:
      content: 'function getNodeInfoList(options?: Models.ServiceFabricClientGetNodeInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_1'
    name: getNodeInfoList(ServiceCallback<PagedNodeInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(callback: ServiceCallback<PagedNodeInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_2'
    name: 'getNodeInfoList(ServiceFabricClientGetNodeInfoListOptionalParams, ServiceCallback<PagedNodeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(options: ServiceFabricClientGetNodeInfoListOptionalParams, callback: ServiceCallback<PagedNodeInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo'
    name: 'getNodeLoadInfo(string, Models.ServiceFabricClientGetNodeLoadInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 정의된 로드 또는 용량이 있는 모든 메트릭에 대한 Service Fabric 노드의 로드 정보를 검색합니다.
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, options?: Models.ServiceFabricClientGetNodeLoadInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeLoadInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_1'
    name: 'getNodeLoadInfo(string, ServiceCallback<NodeLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, callback: ServiceCallback<NodeLoadInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeLoadInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_2'
    name: 'getNodeLoadInfo(string, ServiceFabricClientGetNodeLoadInfoOptionalParams, ServiceCallback<NodeLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, options: ServiceFabricClientGetNodeLoadInfoOptionalParams, callback: ServiceCallback<NodeLoadInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeLoadInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList'
    name: 'getNodesEventList(string, string, Models.ServiceFabricClientGetNodesEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 NodeEvent 개체의 목록입니다.
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetNodesEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetNodesEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList_1'
    name: 'getNodesEventList(string, string, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList_2'
    name: 'getNodesEventList(string, string, ServiceFabricClientGetNodesEventListOptionalParams, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetNodesEventListOptionalParams, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress'
    name: 'getNodeTransitionProgress(string, string, Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공 된 OperationId를 사용하여 StartNodeTransition으로 시작되는 작업의 진행률을 가져옵니다.
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options?: Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_1'
    name: 'getNodeTransitionProgress(string, string, ServiceCallback<NodeTransitionProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, callback: ServiceCallback<NodeTransitionProgress>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_2'
    name: 'getNodeTransitionProgress(string, string, ServiceFabricClientGetNodeTransitionProgressOptionalParams, ServiceCallback<NodeTransitionProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options: ServiceFabricClientGetNodeTransitionProgressOptionalParams, callback: ServiceCallback<NodeTransitionProgress>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo'
    name: 'getPartitionBackupConfigurationInfo(string, Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 파티션에 대 한 서비스 패브릭 Backup 구성 정보를 가져옵니다.
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_1'
    name: 'getPartitionBackupConfigurationInfo(string, ServiceCallback<PartitionBackupConfigurationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, callback: ServiceCallback<PartitionBackupConfigurationInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_2'
    name: 'getPartitionBackupConfigurationInfo(string, ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams, ServiceCallback<PartitionBackupConfigurationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, options: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PartitionBackupConfigurationInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList'
    name: 'getPartitionBackupList(string, Models.ServiceFabricClientGetPartitionBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 파티션에 사용 가능한 백업 목록을 반환합니다. 서버 백업 정책에 구성 된 백업 저장소에서 사용 가능한 모든 백업을 열거 합니다. 또한 결과 시작 및 종료 날짜/시간에 따라 또는 파티션에 대 한 사용 가능한 최신 백업 인출만 필터링 할 수 있습니다.
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_1'
    name: 'getPartitionBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_2'
    name: 'getPartitionBackupList(string, ServiceFabricClientGetPartitionBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, options: ServiceFabricClientGetPartitionBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress'
    name: 'getPartitionBackupProgress(string, Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 세부 정보 또는 오류 원인 완료의 경우와 함께 최신 백업의 상태에 대 한 정보를 반환합니다.
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_1'
    name: 'getPartitionBackupProgress(string, ServiceCallback<BackupProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, callback: ServiceCallback<BackupProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupProgressInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_2'
    name: 'getPartitionBackupProgress(string, ServiceFabricClientGetPartitionBackupProgressOptionalParams, ServiceCallback<BackupProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, options: ServiceFabricClientGetPartitionBackupProgressOptionalParams, callback: ServiceCallback<BackupProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupProgressInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList'
    name: 'getPartitionEventList(string, string, string, Models.ServiceFabricClientGetPartitionEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 PartitionEvent 개체의 목록입니다.
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_1'
    name: 'getPartitionEventList(string, string, string, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_2'
    name: 'getPartitionEventList(string, string, string, ServiceFabricClientGetPartitionEventListOptionalParams, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionEventListOptionalParams, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth'
    name: 'getPartitionHealth(string, Models.ServiceFabricClientGetPartitionHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      상태에 따라 서비스에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.
      ReplicasHealthStateFilter를 사용하여 파티션에 ReplicaHealthState 개체 컬렉션을 필터링합니다.
      Health store에 존재하지 않는 파티션을 지정하면 이 요청은 오류를 반환합니다.
    syntax:
      content: 'function getPartitionHealth(partitionId: string, options?: Models.ServiceFabricClientGetPartitionHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_1'
    name: 'getPartitionHealth(string, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_2'
    name: 'getPartitionHealth(string, ServiceFabricClientGetPartitionHealthOptionalParams, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, options: ServiceFabricClientGetPartitionHealthOptionalParams, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy'
    name: 'getPartitionHealthUsingPolicy(string, Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 파티션의 상태 정보를 가져옵니다.
      응용 프로그램 상태 정책이 지정 된 상태 평가 집계 된 상태를 가져오려면 사용 됩니다.
      정책을 지정 하지 않으면 상태 평가 정책이 없는 매니페스트에서 정의 된 경우 응용 프로그램 매니페스트 또는 기본 상태 정책을 정의 하는 응용 프로그램 상태 정책을 사용 합니다.
      상태를 기준으로 파티션을 보고 된 상태 이벤트의 컬렉션을 필터링 하려면 EventsHealthStateFilter를 사용 합니다.
      ReplicasHealthStateFilter를 사용하여 파티션에 ReplicaHealthState 개체 컬렉션을 필터링합니다. 상태를 평가 하는 데 상태 정책을 재정의 하는 POST 본문이 ApplicationHealthPolicy를 사용 합니다.
      Health store에 존재하지 않는 파티션을 지정하면 이 요청은 오류를 반환합니다.
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, options?: Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1'
    name: 'getPartitionHealthUsingPolicy(string, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2'
    name: 'getPartitionHealthUsingPolicy(string, ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, options: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo'
    name: 'getPartitionInfo(string, Models.ServiceFabricClientGetPartitionInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 파티션에 대한 정보를 가져옵니다. 응답에는 파티션 ID, 파티셔닝 스키마 정보, 파티션에 의해 지원되는 키, 상태, 상태 및 파티션에 관한 기타 세부 정보가 들어 있습니다.'
    syntax:
      content: 'function getPartitionInfo(partitionId: string, options?: Models.ServiceFabricClientGetPartitionInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_1'
    name: 'getPartitionInfo(string, ServiceCallback<Models.ServicePartitionInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, callback: ServiceCallback<Models.ServicePartitionInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<Models.ServicePartitionInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_2'
    name: 'getPartitionInfo(string, ServiceFabricClientGetPartitionInfoOptionalParams, ServiceCallback<Models.ServicePartitionInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, options: ServiceFabricClientGetPartitionInfoOptionalParams, callback: ServiceCallback<Models.ServicePartitionInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.ServicePartitionInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList'
    name: 'getPartitionInfoList(string, Models.ServiceFabricClientGetPartitionInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '응답에는 파티션 ID, 파티셔닝 스키마 정보, 파티션에 의해 지원되는 키, 상태, 상태 및 파티션에 관한 기타 세부 정보가 들어 있습니다.'
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, options?: Models.ServiceFabricClientGetPartitionInfoListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_1'
    name: 'getPartitionInfoList(string, ServiceCallback<PagedServicePartitionInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, callback: ServiceCallback<PagedServicePartitionInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_2'
    name: 'getPartitionInfoList(string, ServiceFabricClientGetPartitionInfoListOptionalParams, ServiceCallback<PagedServicePartitionInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, options: ServiceFabricClientGetPartitionInfoListOptionalParams, callback: ServiceCallback<PagedServicePartitionInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation'
    name: 'getPartitionLoadInformation(string, Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 파티션의 부하에 대한 정보를 반환합니다.
      응답은 Service Fabric 파티션에 대한 부하 보고서 목록을 포함합니다.
      각 보고서에는 부하 메트릭 이름, 값 및 마지막 보고 시간(UTC)이 포함됩니다.
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, options?: Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_1'
    name: 'getPartitionLoadInformation(string, ServiceCallback<PartitionLoadInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, callback: ServiceCallback<PartitionLoadInformation>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_2'
    name: 'getPartitionLoadInformation(string, ServiceFabricClientGetPartitionLoadInformationOptionalParams, ServiceCallback<PartitionLoadInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, options: ServiceFabricClientGetPartitionLoadInformationOptionalParams, callback: ServiceCallback<PartitionLoadInformation>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList'
    name: 'getPartitionReplicaEventList(string, string, string, string, Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 ReplicaEvent 개체의 목록입니다.
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_1'
    name: 'getPartitionReplicaEventList(string, string, string, string, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_2'
    name: 'getPartitionReplicaEventList(string, string, string, string, ServiceFabricClientGetPartitionReplicaEventListOptionalParams, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionReplicaEventListOptionalParams, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList'
    name: 'getPartitionReplicasEventList(string, string, string, Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 ReplicaEvent 개체의 목록입니다.
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_1'
    name: 'getPartitionReplicasEventList(string, string, string, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_2'
    name: 'getPartitionReplicasEventList(string, string, string, ServiceFabricClientGetPartitionReplicasEventListOptionalParams, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionReplicasEventListOptionalParams, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress'
    name: 'getPartitionRestartProgress(string, string, string, Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공된 OperationId를 사용하여 StartPartitionRestart로 시작된 PartitionRestart의 진행률을 가져옵니다.
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_1'
    name: 'getPartitionRestartProgress(string, string, string, ServiceCallback<PartitionRestartProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionRestartProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_2'
    name: 'getPartitionRestartProgress(string, string, string, ServiceFabricClientGetPartitionRestartProgressOptionalParams, ServiceCallback<PartitionRestartProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetPartitionRestartProgressOptionalParams, callback: ServiceCallback<PartitionRestartProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress'
    name: 'getPartitionRestoreProgress(string, Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 세부 정보 또는 오류 원인 완료의 경우와 함께 최신 복원 작업의 상태에 대 한 정보를 반환합니다.
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, options?: Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_1'
    name: 'getPartitionRestoreProgress(string, ServiceCallback<RestoreProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, callback: ServiceCallback<RestoreProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_2'
    name: 'getPartitionRestoreProgress(string, ServiceFabricClientGetPartitionRestoreProgressOptionalParams, ServiceCallback<RestoreProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, options: ServiceFabricClientGetPartitionRestoreProgressOptionalParams, callback: ServiceCallback<RestoreProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList'
    name: 'getPartitionsEventList(string, string, Models.ServiceFabricClientGetPartitionsEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 PartitionEvent 개체의 목록입니다.
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionsEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionsEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_1'
    name: 'getPartitionsEventList(string, string, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_2'
    name: 'getPartitionsEventList(string, string, ServiceFabricClientGetPartitionsEventListOptionalParams, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionsEventListOptionalParams, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo'
    name: 'getPropertyInfo(string, string, Models.ServiceFabricClientGetPropertyInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 이름에서 지정된 Service Fabric 속성을 가져옵니다. 값 및 메타데이터 모두를 항상 반환합니다.
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, options?: Models.ServiceFabricClientGetPropertyInfoOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyName
          type:
            - string
          description: 가져올 속성의 이름을 지정합니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetPropertyInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_1'
    name: 'getPropertyInfo(string, string, ServiceCallback<PropertyInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, callback: ServiceCallback<PropertyInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyName
          type:
            - string
          description: 가져올 속성의 이름을 지정합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PropertyInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_2'
    name: 'getPropertyInfo(string, string, ServiceFabricClientGetPropertyInfoOptionalParams, ServiceCallback<PropertyInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, options: ServiceFabricClientGetPropertyInfoOptionalParams, callback: ServiceCallback<PropertyInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyName
          type:
            - string
          description: 가져올 속성의 이름을 지정합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PropertyInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList'
    name: 'getPropertyInfoList(string, Models.ServiceFabricClientGetPropertyInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Service Fabric 이름에는 사용자 지정 정보를 저장하는 하나 이상의 명명된 속성이 있을 수 있습니다. 이 작업은 페이지가 지정된 목록에서 이러한 속성에 대한 정보를 가져옵니다. 정보는 각 속성에 대한 이름, 값 및 메타데이터를 포함합니다.'
    syntax:
      content: 'function getPropertyInfoList(nameId: string, options?: Models.ServiceFabricClientGetPropertyInfoListOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetPropertyInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_1'
    name: 'getPropertyInfoList(string, ServiceCallback<PagedPropertyInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, callback: ServiceCallback<PagedPropertyInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_2'
    name: 'getPropertyInfoList(string, ServiceFabricClientGetPropertyInfoListOptionalParams, ServiceCallback<PagedPropertyInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, options: ServiceFabricClientGetPropertyInfoListOptionalParams, callback: ServiceCallback<PagedPropertyInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList'
    name: getProvisionedFabricCodeVersionInfoList(Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 클러스터에 프로비전되는 패브릭 코드 버전에 대한 정보의 목록을 가져옵니다. 매개 변수 CodeVersion은 필요에 따라 해당 특정 버전에만 출력을 필터링하는 데 사용될 수 있습니다.
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(options?: Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1'
    name: 'getProvisionedFabricCodeVersionInfoList(ServiceCallback<FabricCodeVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(callback: ServiceCallback<FabricCodeVersionInfo[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2'
    name: 'getProvisionedFabricCodeVersionInfoList(ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams, ServiceCallback<FabricCodeVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(options: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams, callback: ServiceCallback<FabricCodeVersionInfo[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList'
    name: getProvisionedFabricConfigVersionInfoList(Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 클러스터에 프로비전되는 패브릭 구성 버전에 대한 정보의 목록을 가져옵니다. 매개 변수 ConfigVersion은 필요에 따라 해당 특정 버전에만 출력을 필터링하는 데 사용될 수 있습니다.
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(options?: Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1'
    name: 'getProvisionedFabricConfigVersionInfoList(ServiceCallback<FabricConfigVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(callback: ServiceCallback<FabricConfigVersionInfo[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2'
    name: 'getProvisionedFabricConfigVersionInfoList(ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams, ServiceCallback<FabricConfigVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(options: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams, callback: ServiceCallback<FabricConfigVersionInfo[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress'
    name: 'getQuorumLossProgress(string, string, string, Models.ServiceFabricClientGetQuorumLossProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공된 OperationId를 사용하여 StartQuorumLoss로 시작된 쿼럼 손실 작업의 진행률을 가져옵니다.
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetQuorumLossProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetQuorumLossProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_1'
    name: 'getQuorumLossProgress(string, string, string, ServiceCallback<PartitionQuorumLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionQuorumLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_2'
    name: 'getQuorumLossProgress(string, string, string, ServiceFabricClientGetQuorumLossProgressOptionalParams, ServiceCallback<PartitionQuorumLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetQuorumLossProgressOptionalParams, callback: ServiceCallback<PartitionQuorumLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList'
    name: getRepairTaskList(Models.ServiceFabricClientGetRepairTaskListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function getRepairTaskList(options?: Models.ServiceFabricClientGetRepairTaskListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetRepairTaskListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_1'
    name: 'getRepairTaskList(ServiceCallback<RepairTask[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(callback: ServiceCallback<RepairTask[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_2'
    name: 'getRepairTaskList(ServiceFabricClientGetRepairTaskListOptionalParams, ServiceCallback<RepairTask[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(options: ServiceFabricClientGetRepairTaskListOptionalParams, callback: ServiceCallback<RepairTask[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth'
    name: 'getReplicaHealth(string, string, Models.ServiceFabricClientGetReplicaHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Service Fabric 복제본의 상태를 가져옵니다.
      상태에 따라 복제본에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_1'
    name: 'getReplicaHealth(string, string, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_2'
    name: 'getReplicaHealth(string, string, ServiceFabricClientGetReplicaHealthOptionalParams, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaHealthOptionalParams, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy'
    name: 'getReplicaHealthUsingPolicy(string, string, Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Service Fabric 상태 저장 서비스 복제본 또는 상태 비저장 서비스 인스턴스를 가져옵니다.
      상태에 따라 클러스터에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.
      필요에 따라 상태를 평가 하는 데 상태 정책을 재정의 하려면 ApplicationHealthPolicy를 사용 합니다. 이 API는 ApplicationHealthPolicy 'ConsiderWarningAsError' 필드를 사용합니다. 필드의 나머지 복제본의 상태를 평가 하는 동안 무시 됩니다.
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1'
    name: 'getReplicaHealthUsingPolicy(string, string, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2'
    name: 'getReplicaHealthUsingPolicy(string, string, ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo'
    name: 'getReplicaInfo(string, string, Models.ServiceFabricClientGetReplicaInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '응답에는 ID, 역할, 상태, 상태, 노드 이름, 작동 시간 및 기타 복제본에 관한 세부 정보가 들어 있습니다.'
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_1'
    name: 'getReplicaInfo(string, string, ServiceCallback<Models.ReplicaInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_2'
    name: 'getReplicaInfo(string, string, ServiceFabricClientGetReplicaInfoOptionalParams, ServiceCallback<Models.ReplicaInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaInfoOptionalParams, callback: ServiceCallback<Models.ReplicaInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList'
    name: 'getReplicaInfoList(string, Models.ServiceFabricClientGetReplicaInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'GetReplicas 엔드포인트는 지정된 파티션의 복제본에 관한 정보를 반환합니다. 응답에는 ID, 역할, 상태, 상태, 노드 이름, 작동 시간 및 기타 복제본에 관한 세부 정보가 들어 있습니다.'
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, options?: Models.ServiceFabricClientGetReplicaInfoListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_1'
    name: 'getReplicaInfoList(string, ServiceCallback<PagedReplicaInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, callback: ServiceCallback<PagedReplicaInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_2'
    name: 'getReplicaInfoList(string, ServiceFabricClientGetReplicaInfoListOptionalParams, ServiceCallback<PagedReplicaInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, options: ServiceFabricClientGetReplicaInfoListOptionalParams, callback: ServiceCallback<PagedReplicaInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo'
    name: 'getServiceBackupConfigurationInfo(string, Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 서비스 및이 서비스 파티션에 대 한 Service Fabric 백업 구성 정보를 가져옵니다.
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, options?: Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_1'
    name: 'getServiceBackupConfigurationInfo(string, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_2'
    name: 'getServiceBackupConfigurationInfo(string, ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, options: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList'
    name: 'getServiceBackupList(string, Models.ServiceFabricClientGetServiceBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 Service Fabric 서비스의 모든 파티션에 대해 사용 가능한 백업 목록을 반환합니다. 서버 백업 정책에 구성 된 백업 저장소에서 사용 가능한 모든 백업을 열거 합니다.
      또한 결과 시작 및 종료 날짜/시간에 따라 또는 모든 파티션에 대해 사용 가능한 최신 백업 인출만 필터링 할 수 있습니다.
    syntax:
      content: 'function getServiceBackupList(serviceId: string, options?: Models.ServiceFabricClientGetServiceBackupListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_1'
    name: 'getServiceBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_2'
    name: 'getServiceBackupList(string, ServiceFabricClientGetServiceBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, options: ServiceFabricClientGetServiceBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription'
    name: 'getServiceDescription(string, Models.ServiceFabricClientGetServiceDescriptionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 기존 Service Fabric서비스에 대한 설명을 가져옵니다. 서비스 설명을 가져올 수 있으려면 먼저 서비스를 만들어야 합니다.
    syntax:
      content: 'function getServiceDescription(serviceId: string, options?: Models.ServiceFabricClientGetServiceDescriptionOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceDescriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription_1'
    name: 'getServiceDescription(string, ServiceCallback<Models.ServiceDescriptionUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, callback: ServiceCallback<Models.ServiceDescriptionUnion>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<Models.ServiceDescriptionUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription_2'
    name: 'getServiceDescription(string, ServiceFabricClientGetServiceDescriptionOptionalParams, ServiceCallback<Models.ServiceDescriptionUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, options: ServiceFabricClientGetServiceDescriptionOptionalParams, callback: ServiceCallback<Models.ServiceDescriptionUnion>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.ServiceDescriptionUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList'
    name: 'getServiceEventList(string, string, string, Models.ServiceFabricClientGetServiceEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 ServiceEvent 개체의 목록입니다.
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetServiceEventListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList_1'
    name: 'getServiceEventList(string, string, string, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList_2'
    name: 'getServiceEventList(string, string, string, ServiceFabricClientGetServiceEventListOptionalParams, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetServiceEventListOptionalParams, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth'
    name: 'getServiceHealth(string, Models.ServiceFabricClientGetServiceHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 서비스의 상태 정보를 가져옵니다.
      상태에 따라 서비스에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.
      반환된 파티션 컬렉션을 필터링하려면 PartitionsHealthStateFilter를 사용합니다.
      Health 스토어에 없는 서비스를 지정하면 이 요청이 오류를 반환합니다.
    syntax:
      content: 'function getServiceHealth(serviceId: string, options?: Models.ServiceFabricClientGetServiceHealthOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth_1'
    name: 'getServiceHealth(string, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth_2'
    name: 'getServiceHealth(string, ServiceFabricClientGetServiceHealthOptionalParams, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, options: ServiceFabricClientGetServiceHealthOptionalParams, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy'
    name: 'getServiceHealthUsingPolicy(string, Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 서비스의 상태 정보를 가져옵니다.
      응용 프로그램 상태 정책이 지정 된 상태 평가 집계 된 상태를 가져오려면 사용 됩니다.
      정책을 지정 하지 않으면 상태 평가 정책이 없는 매니페스트에서 정의 된 경우 응용 프로그램 매니페스트 또는 기본 상태 정책을 정의 하는 응용 프로그램 상태 정책을 사용 합니다.
      상태에 따라 서비스에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.
      반환된 파티션 컬렉션을 필터링하려면 PartitionsHealthStateFilter를 사용합니다.
      Health 스토어에 없는 서비스를 지정하면 이 요청이 오류를 반환합니다.
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, options?: Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1'
    name: 'getServiceHealthUsingPolicy(string, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2'
    name: 'getServiceHealthUsingPolicy(string, ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, options: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo'
    name: 'getServiceInfo(string, string, Models.ServiceFabricClientGetServiceInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 Service Fabric 애플리케이션에 속하는 지정된 서비스에 대한 정보를 반환합니다.
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, options?: Models.ServiceFabricClientGetServiceInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo_1'
    name: 'getServiceInfo(string, string, ServiceCallback<Models.ServiceInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, callback: ServiceCallback<Models.ServiceInfoUnion>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<Models.ServiceInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo_2'
    name: 'getServiceInfo(string, string, ServiceFabricClientGetServiceInfoOptionalParams, ServiceCallback<Models.ServiceInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, options: ServiceFabricClientGetServiceInfoOptionalParams, callback: ServiceCallback<Models.ServiceInfoUnion>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.ServiceInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList'
    name: 'getServiceInfoList(string, Models.ServiceFabricClientGetServiceInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 애플리케이션 ID로 지정된 애플리케이션에 속하는 모든 서비스에 대한 정보를 반환합니다.
    syntax:
      content: 'function getServiceInfoList(applicationId: string, options?: Models.ServiceFabricClientGetServiceInfoListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_1'
    name: 'getServiceInfoList(string, ServiceCallback<PagedServiceInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, callback: ServiceCallback<PagedServiceInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_2'
    name: 'getServiceInfoList(string, ServiceFabricClientGetServiceInfoListOptionalParams, ServiceCallback<PagedServiceInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, options: ServiceFabricClientGetServiceInfoListOptionalParams, callback: ServiceCallback<PagedServiceInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest'
    name: 'getServiceManifest(string, string, string, Models.ServiceFabricClientGetServiceManifestOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 서비스 유형을 설명하는 매니페스트를 가져옵니다. 응답에 서비스 매니페스트 XML이 문자열로 포함됩니다.
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options?: Models.ServiceFabricClientGetServiceManifestOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest_1'
    name: 'getServiceManifest(string, string, string, ServiceCallback<ServiceTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, callback: ServiceCallback<ServiceTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest_2'
    name: 'getServiceManifest(string, string, string, ServiceFabricClientGetServiceManifestOptionalParams, ServiceCallback<ServiceTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options: ServiceFabricClientGetServiceManifestOptionalParams, callback: ServiceCallback<ServiceTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo'
    name: 'getServiceNameInfo(string, Models.ServiceFabricClientGetServiceNameInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 파티션에 대한 서비스의 이름을 가져옵니다. 파티션 ID가 클러스터에 없는 경우 404 오류가 반환됩니다.
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, options?: Models.ServiceFabricClientGetServiceNameInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceNameInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_1'
    name: 'getServiceNameInfo(string, ServiceCallback<ServiceNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, callback: ServiceCallback<ServiceNameInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceNameInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_2'
    name: 'getServiceNameInfo(string, ServiceFabricClientGetServiceNameInfoOptionalParams, ServiceCallback<ServiceNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, options: ServiceFabricClientGetServiceNameInfoOptionalParams, callback: ServiceCallback<ServiceNameInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceNameInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList'
    name: 'getServicesEventList(string, string, Models.ServiceFabricClientGetServicesEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 응답은 ServiceEvent 개체의 목록입니다.
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetServicesEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetServicesEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList_1'
    name: 'getServicesEventList(string, string, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList_2'
    name: 'getServicesEventList(string, string, ServiceFabricClientGetServicesEventListOptionalParams, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetServicesEventListOptionalParams, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.'
        - id: endTimeUtc
          type:
            - string
          description: 'ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName'
    name: 'getServiceTypeInfoByName(string, string, string, Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Service Fabric 클러스터에서 프로 비전 된 응용 프로그램 형식에서 지원 되는 특정 서비스 형식에 대 한 정보를 가져옵니다. 제공된 애플리케이션 유형이 존재해야 합니다.
      그렇지 않으면 404 상태가 반환됩니다. 클러스터의 지정된 된 서비스 유형에 없으면 204 응답 반환 됩니다.
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options?: Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: serviceTypeName
          type:
            - string
          description: Service Fabric 서비스 유형의 이름을 지정합니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_1'
    name: 'getServiceTypeInfoByName(string, string, string, ServiceCallback<ServiceTypeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, callback: ServiceCallback<ServiceTypeInfo>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: serviceTypeName
          type:
            - string
          description: Service Fabric 서비스 유형의 이름을 지정합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_2'
    name: 'getServiceTypeInfoByName(string, string, string, ServiceFabricClientGetServiceTypeInfoByNameOptionalParams, ServiceCallback<ServiceTypeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams, callback: ServiceCallback<ServiceTypeInfo>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: serviceTypeName
          type:
            - string
          description: Service Fabric 서비스 유형의 이름을 지정합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList'
    name: 'getServiceTypeInfoList(string, string, Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Service Fabric 클러스터에 프로비저닝된 애플리케이션 유형에서 지원하는 서비스 유형에 대한 정보가 포함된 목록을 가져옵니다. 제공된 애플리케이션 유형이 존재해야 합니다.
      그렇지 않으면 404 상태가 반환됩니다.
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options?: Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_1'
    name: 'getServiceTypeInfoList(string, string, ServiceCallback<ServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ServiceTypeInfo[]>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_2'
    name: 'getServiceTypeInfoList(string, string, ServiceFabricClientGetServiceTypeInfoListOptionalParams, ServiceCallback<ServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options: ServiceFabricClientGetServiceTypeInfoListOptionalParams, callback: ServiceCallback<ServiceTypeInfo[]>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: applicationTypeVersion
          type:
            - string
          description: 애플리케이션 유형의 버전입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList'
    name: 'getSubNameInfoList(string, Models.ServiceFabricClientGetSubNameInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정 된 이름으로 모든 Service Fabric 이름을 열거합니다. subnames 페이지에 맞지 않는, 결과 한 페이지는 페이지가 다음 페이지를 가져오는 데 사용할 수 있는 연속 토큰으로 반환 됩니다. 존재 하지 않는 이름을 쿼리 하는 실패 합니다.'
    syntax:
      content: 'function getSubNameInfoList(nameId: string, options?: Models.ServiceFabricClientGetSubNameInfoListOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: options
          type:
            - Models.ServiceFabricClientGetSubNameInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_1'
    name: 'getSubNameInfoList(string, ServiceCallback<PagedSubNameInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, callback: ServiceCallback<PagedSubNameInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_2'
    name: 'getSubNameInfoList(string, ServiceFabricClientGetSubNameInfoListOptionalParams, ServiceCallback<PagedSubNameInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, options: ServiceFabricClientGetSubNameInfoListOptionalParams, callback: ServiceCallback<PagedSubNameInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState'
    name: getUpgradeOrchestrationServiceState(Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태를 가져옵니다. 이 API 지원을 위해 내부적으로 사용 됩니다.
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(options?: Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_1'
    name: getUpgradeOrchestrationServiceState(ServiceCallback<UpgradeOrchestrationServiceState>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(callback: ServiceCallback<UpgradeOrchestrationServiceState>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_2'
    name: 'getUpgradeOrchestrationServiceState(ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams, ServiceCallback<UpgradeOrchestrationServiceState>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(options: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams, callback: ServiceCallback<UpgradeOrchestrationServiceState>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
          description: |
            콜백
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, Models.ServiceFabricClientInvokeContainerApiOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 코드 패키지에 대해 Service Fabric 노드에 배포한 컨테이너에 대한 컨테이너 API를 호출합니다.
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options?: Models.ServiceFabricClientInvokeContainerApiOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: codePackageName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.
        - id: codePackageInstanceId
          type:
            - string
          description: Service Fabric 노드에 배포된 코드 패키지 인스턴스를 고유하게 식별하는 ID입니다.
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: 컨테이너 API 호출에 대 한 매개 변수
        - id: options
          type:
            - Models.ServiceFabricClientInvokeContainerApiOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_1'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, ServiceCallback<ContainerApiResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, callback: ServiceCallback<ContainerApiResponse>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: codePackageName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.
        - id: codePackageInstanceId
          type:
            - string
          description: Service Fabric 노드에 배포된 코드 패키지 인스턴스를 고유하게 식별하는 ID입니다.
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: 컨테이너 API 호출에 대 한 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerApiResponse>
          description: |
            콜백
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_2'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, ServiceFabricClientInvokeContainerApiOptionalParams, ServiceCallback<ContainerApiResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options: ServiceFabricClientInvokeContainerApiOptionalParams, callback: ServiceCallback<ContainerApiResponse>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: serviceManifestName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.
        - id: codePackageName
          type:
            - string
          description: Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.
        - id: codePackageInstanceId
          type:
            - string
          description: Service Fabric 노드에 배포된 코드 패키지 인스턴스를 고유하게 식별하는 ID입니다.
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: 컨테이너 API 호출에 대 한 매개 변수
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerApiResponse>
          description: |
            콜백
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand'
    name: 'invokeInfrastructureCommand(string, Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      하나 이상의 인프라 서비스 인스턴스를 구성한 클러스터의 경우 이 API는 인프라 서비스의 특정 인스턴스에 인프라 관련 명령을 전송하는 방법을 제공합니다.
      사용 가능한 명령 및 해당 응답 형식은 클러스터가 실행되는 인프라에 따라 달라집니다.

      이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, options?: Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams)'
      parameters:
        - id: command
          type:
            - string
          description: 호출할 명령의 텍스트입니다. 명령의 콘텐츠는 인프라에 따라 다릅니다.
        - id: options
          type:
            - Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1'
    name: 'invokeInfrastructureCommand(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: 호출할 명령의 텍스트입니다. 명령의 콘텐츠는 인프라에 따라 다릅니다.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            콜백
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2'
    name: 'invokeInfrastructureCommand(string, ServiceFabricClientInvokeInfrastructureCommandOptionalParams, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, options: ServiceFabricClientInvokeInfrastructureCommandOptionalParams, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: 호출할 명령의 텍스트입니다. 명령의 콘텐츠는 인프라에 따라 다릅니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            콜백
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery'
    name: 'invokeInfrastructureQuery(string, Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      하나 이상의 인프라 서비스 인스턴스를 구성한 클러스터의 경우 이 API는 인프라 서비스의 특정 인스턴스에 인프라 관련 쿼리를 전송하는 방법을 제공합니다.
      사용 가능한 명령 및 해당 응답 형식은 클러스터가 실행되는 인프라에 따라 달라집니다.

      이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, options?: Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams)'
      parameters:
        - id: command
          type:
            - string
          description: 호출할 명령의 텍스트입니다. 명령의 콘텐츠는 인프라에 따라 다릅니다.
        - id: options
          type:
            - Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1'
    name: 'invokeInfrastructureQuery(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: 호출할 명령의 텍스트입니다. 명령의 콘텐츠는 인프라에 따라 다릅니다.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            콜백
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2'
    name: 'invokeInfrastructureQuery(string, ServiceFabricClientInvokeInfrastructureQueryOptionalParams, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, options: ServiceFabricClientInvokeInfrastructureQueryOptionalParams, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: 호출할 명령의 텍스트입니다. 명령의 콘텐츠는 인프라에 따라 다릅니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            콜백
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshApplication'
    name: meshApplication
    fullName: meshApplication
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshApplication: MeshApplication'
      return:
        type:
          - '@azure/servicefabric.MeshApplication'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshCodePackage'
    name: meshCodePackage
    fullName: meshCodePackage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshCodePackage: MeshCodePackage'
      return:
        type:
          - '@azure/servicefabric.MeshCodePackage'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshGateway'
    name: meshGateway
    fullName: meshGateway
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshGateway: MeshGateway'
      return:
        type:
          - '@azure/servicefabric.MeshGateway'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshNetwork'
    name: meshNetwork
    fullName: meshNetwork
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshNetwork: MeshNetwork'
      return:
        type:
          - '@azure/servicefabric.MeshNetwork'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshSecret'
    name: meshSecret
    fullName: meshSecret
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshSecret: MeshSecret'
      return:
        type:
          - '@azure/servicefabric.MeshSecret'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshSecretValue'
    name: meshSecretValue
    fullName: meshSecretValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshSecretValue: MeshSecretValue'
      return:
        type:
          - '@azure/servicefabric.MeshSecretValue'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshService'
    name: meshService
    fullName: meshService
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshService: MeshService'
      return:
        type:
          - '@azure/servicefabric.MeshService'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshServiceReplica'
    name: meshServiceReplica
    fullName: meshServiceReplica
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshServiceReplica: MeshServiceReplica'
      return:
        type:
          - '@azure/servicefabric.MeshServiceReplica'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshVolume'
    name: meshVolume
    fullName: meshVolume
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshVolume: MeshVolume'
      return:
        type:
          - '@azure/servicefabric.MeshVolume'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule'
    name: 'postChaosSchedule(ChaosScheduleDescription, Models.ServiceFabricClientPostChaosScheduleOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Chaos는 Chaos Schedule에 따라 실행을 자동으로 예약합니다.
      Chaos 일정 제공 된 버전이 서버 버전과 일치 하는 경우 업데이트 됩니다.
      Chaos 일정을 업데이트할 때 서버에서 버전 1 씩 증가 합니다.
      서버의 버전은 다 수에 도달한 후 0으로 다시 배치 됩니다.
      이 호출이 만들어질 때 Chaos가 실행되는 경우 호출에 실패합니다.
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, options?: Models.ServiceFabricClientPostChaosScheduleOptionalParams)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: 비정상 상황에서 사용 하는 일정을 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientPostChaosScheduleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_1'
    name: 'postChaosSchedule(ChaosScheduleDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: 비정상 상황에서 사용 하는 일정을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_2'
    name: 'postChaosSchedule(ChaosScheduleDescription, ServiceFabricClientPostChaosScheduleOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, options: ServiceFabricClientPostChaosScheduleOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: 비정상 상황에서 사용 하는 일정을 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, Models.ServiceFabricClientProvisionApplicationTypeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      클러스터를 통해 Service Fabric 애플리케이션 유형을 프로비전합니다. 새 응용 프로그램을 인스턴스화할 수 전에 프로 비전이 필요 합니다.
      프로 비전 작업은 relativePathInImageStore 또는 외부 '.sfpkg'의 URI를 사용 하 여 지정 된 응용 프로그램 패키지에서 수행할 수 있습니다.
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, options?: Models.ServiceFabricClientProvisionApplicationTypeOptionalParams)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: 이미지 저장소 기반 프로 비전 또는 외부 저장소 기반 프로 비전을 지 원하는 프로 비전 응용 프로그램 형식 설명의 기본 형식입니다.
        - id: options
          type:
            - Models.ServiceFabricClientProvisionApplicationTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_1'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: 이미지 저장소 기반 프로 비전 또는 외부 저장소 기반 프로 비전을 지 원하는 프로 비전 응용 프로그램 형식 설명의 기본 형식입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_2'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, ServiceFabricClientProvisionApplicationTypeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, options: ServiceFabricClientProvisionApplicationTypeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: 이미지 저장소 기반 프로 비전 또는 외부 저장소 기반 프로 비전을 지 원하는 프로 비전 응용 프로그램 형식 설명의 기본 형식입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster'
    name: 'provisionCluster(ProvisionFabricDescription, Models.ServiceFabricClientProvisionClusterOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 클러스터의 코드 또는 구성 패키지의 유효성을 검사하거나 프로비전합니다.
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options?: Models.ServiceFabricClientProvisionClusterOptionalParams)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: 클러스터를 프로 비전에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientProvisionClusterOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster_1'
    name: 'provisionCluster(ProvisionFabricDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: 클러스터를 프로 비전에 대 한 매개 변수를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster_2'
    name: 'provisionCluster(ProvisionFabricDescription, ServiceFabricClientProvisionClusterOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options: ServiceFabricClientProvisionClusterOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: 클러스터를 프로 비전에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty'
    name: 'putProperty(string, PropertyDescription, Models.ServiceFabricClientPutPropertyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 이름에서 지정된 Service Fabric 속성을 만들거나 업데이트합니다.
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, options?: Models.ServiceFabricClientPutPropertyOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: 만들 Service Fabric 속성을 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientPutPropertyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty_1'
    name: 'putProperty(string, PropertyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: 만들 Service Fabric 속성을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty_2'
    name: 'putProperty(string, PropertyDescription, ServiceFabricClientPutPropertyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, options: ServiceFabricClientPutPropertyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: 만들 Service Fabric 속성을 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions'
    name: recoverAllPartitions(Models.ServiceFabricClientRecoverAllPartitionsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 작업은 다운된 복제본을 복구하지 못할 경우에만 수행해야 합니다. 이 API를 잘못 사용하면 잠재적인 데이터 손실이 발생할 수 있습니다.
    syntax:
      content: 'function recoverAllPartitions(options?: Models.ServiceFabricClientRecoverAllPartitionsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRecoverAllPartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_1'
    name: recoverAllPartitions(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_2'
    name: 'recoverAllPartitions(ServiceFabricClientRecoverAllPartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(options: ServiceFabricClientRecoverAllPartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition'
    name: 'recoverPartition(string, Models.ServiceFabricClientRecoverPartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 작업은 다운된 복제본을 복구하지 못할 경우에만 수행해야 합니다. 이 API를 잘못 사용하면 잠재적인 데이터 손실이 발생할 수 있습니다.
    syntax:
      content: 'function recoverPartition(partitionId: string, options?: Models.ServiceFabricClientRecoverPartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientRecoverPartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition_1'
    name: 'recoverPartition(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition_2'
    name: 'recoverPartition(string, ServiceFabricClientRecoverPartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, options: ServiceFabricClientRecoverPartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions'
    name: 'recoverServicePartitions(string, Models.ServiceFabricClientRecoverServicePartitionsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 현재 쿼럼 손실 상태에 있는 지정된 서비스를 복구하려고 시도해야 한다는 것을 Service Fabric 클러스터에 나타냅니다. 이 작업은 다운된 복제본을 복구하지 못할 경우에만 수행해야 합니다. 이 API를 잘못 사용하면 잠재적인 데이터 손실이 발생할 수 있습니다.
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, options?: Models.ServiceFabricClientRecoverServicePartitionsOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientRecoverServicePartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_1'
    name: 'recoverServicePartitions(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_2'
    name: 'recoverServicePartitions(string, ServiceFabricClientRecoverServicePartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, options: ServiceFabricClientRecoverServicePartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions'
    name: recoverSystemPartitions(Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 현재 쿼럼 손실에 걸린 시스템 서비스를 복구하고자 시도해야 함을 Service Fabric 클러스터에 나타냅니다. 이 작업은 다운된 복제본을 복구하지 못할 경우에만 수행해야 합니다. 이 API를 잘못 사용하면 잠재적인 데이터 손실이 발생할 수 있습니다.
    syntax:
      content: 'function recoverSystemPartitions(options?: Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_1'
    name: recoverSystemPartitions(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_2'
    name: 'recoverSystemPartitions(ServiceFabricClientRecoverSystemPartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(options: ServiceFabricClientRecoverSystemPartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment'
    name: 'removeComposeDeployment(string, Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 기존 Service Fabric 작성 배포를 삭제합니다.
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, options?: Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_1'
    name: 'removeComposeDeployment(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_2'
    name: 'removeComposeDeployment(string, ServiceFabricClientRemoveComposeDeploymentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, options: ServiceFabricClientRemoveComposeDeploymentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState'
    name: 'removeNodeState(string, Models.ServiceFabricClientRemoveNodeStateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '해당 노드의 지속된 상태를 복구할 수 없다는 것을 의미합니다. 일반적으로 하드 디스크가 초기화 정리되거나 하드 디스크의 작동이 중단하는 경우에 발생합니다. 이 작업을 성공시키려면 노드는 중단되어야 합니다. 이 작업을 사용하면 Service Fabric에서 해당 노드의 복제본이 더 이상 존재하지 않으며, Service Fabric에서 해당 복제본이 다시 작동하기를 기다리는 것을 중지해야 함을 알 수 있습니다. 노드의 상태가 제거되지 않고 노드가 해당 상태 그대로 다시 작동할 수 있는 경우 이 cmdlet을 실행하지 마십시오.'
    syntax:
      content: 'function removeNodeState(nodeName: string, options?: Models.ServiceFabricClientRemoveNodeStateOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientRemoveNodeStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState_1'
    name: 'removeNodeState(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState_2'
    name: 'removeNodeState(string, ServiceFabricClientRemoveNodeStateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, options: ServiceFabricClientRemoveNodeStateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica'
    name: 'removeReplica(string, string, string, Models.ServiceFabricClientRemoveReplicaOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이 API는 Service Fabric 클러스터에서 복제본을 제거하여 Service Fabric 복제 오류를 시뮬레이션합니다. 제거는 복제본을 닫고, 복제본을 None 역할로 전환한 다음, 클러스터에서 복제본의 상태 정보 모두를 제거합니다. 이 API는 복제 상태 제거 경로를 테스트하고, 클라이언트 API를 통해 보고서 오류 영구 경로를 시뮬레이션합니다. 경고 ‑ 이 API가 사용될 때 수행되는 안전 검사가 없습니다. 이 API를 잘못 사용하면 상태 저장 서비스에 대한 데이터가 손실될 수 있습니다. 또한 forceRemove 플래그는 동일한 프로세스에서 호스팅되는 다른 모든 복제본에 영향을 줍니다.'
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientRemoveReplicaOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - Models.ServiceFabricClientRemoveReplicaOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica_1'
    name: 'removeReplica(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica_2'
    name: 'removeReplica(string, string, string, ServiceFabricClientRemoveReplicaOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientRemoveReplicaOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth'
    name: 'reportApplicationHealth(string, HealthInformation, Models.ServiceFabricClientReportApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 Service Fabric 애플리케이션의 상태를 보고합니다. 보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.
      보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 애플리케이션에 전송됩니다.
      보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.
      예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.
      보고서를 health 스토어에 적용 했는지를 보려면 응용 프로그램 상태 가져오기 및 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportApplicationHealthOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientReportApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_1'
    name: 'reportApplicationHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_2'
    name: 'reportApplicationHealth(string, HealthInformation, ServiceFabricClientReportApplicationHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportApplicationHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth'
    name: 'reportClusterHealth(HealthInformation, Models.ServiceFabricClientReportClusterHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Service Fabric 클러스터에서 상태 보고서를 보냅니다. 보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.
      보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 노드에 전송됩니다.
      보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.
      예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.
      보고서를 health 스토어에 적용 했는지, GetClusterHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportClusterHealthOptionalParams)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientReportClusterHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_1'
    name: 'reportClusterHealth(HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_2'
    name: 'reportClusterHealth(HealthInformation, ServiceFabricClientReportClusterHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, options: ServiceFabricClientReportClusterHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Service Fabric 노드에 배포 된 응용 프로그램의 상태를 보고 합니다. 보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.
      보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 서비스에 전송됩니다.
      보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.
      예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.
      보고서를 health 스토어에 적용 했는지 확인, 배포 된 응용 프로그램 상태 가져오기 및 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, ServiceFabricClientReportDeployedApplicationHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportDeployedApplicationHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Service Fabric 노드에 배포 된 응용 프로그램의 서비스 패키지의 상태를 보고 합니다. 보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.
      보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 서비스에 전송됩니다.
      보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.
      예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.
      보고서를 health 스토어에 적용 했는지를 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 하 고 배포 된 서비스 패키지 상태를 가져옵니다.
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, ServiceFabricClientReportDeployedServicePackageHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: servicePackageName
          type:
            - string
          description: 서비스 패키지의 이름입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth'
    name: 'reportNodeHealth(string, HealthInformation, Models.ServiceFabricClientReportNodeHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 Service Fabric 노드의 상태를 보고합니다. 보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.
      보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 노드에 전송됩니다.
      보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.
      예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.
      보고서를 health 스토어에 적용 했는지, GetNodeHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportNodeHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientReportNodeHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_1'
    name: 'reportNodeHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_2'
    name: 'reportNodeHealth(string, HealthInformation, ServiceFabricClientReportNodeHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options: ServiceFabricClientReportNodeHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth'
    name: 'reportPartitionHealth(string, HealthInformation, Models.ServiceFabricClientReportPartitionHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 Service Fabric 파티션의 상태를 보고합니다. 보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.
      보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 파티션에 전송됩니다.
      보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.
      예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.
      보고서를 health 스토어에 적용 했는지, GetPartitionHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportPartitionHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientReportPartitionHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_1'
    name: 'reportPartitionHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_2'
    name: 'reportPartitionHealth(string, HealthInformation, ServiceFabricClientReportPartitionHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportPartitionHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, Models.ServiceFabricClientReportReplicaHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 Service Fabric 복제본의 상태를 보고합니다. 보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.
      보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 복제본에 전송됩니다.
      보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.
      예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.
      보고서를 health 스토어에 적용 했는지, GetReplicaHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportReplicaHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: replicaHealthReportServiceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '상태 보고 되는 서비스 복제본 (상태 비저장 또는 상태 저장)의 종류입니다. 다음은 가능한 값입니다. 가능한 값은 다음과 같습니다. ''상태 비저장'', ''상태 저장'''
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientReportReplicaHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_1'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: replicaHealthReportServiceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '상태 보고 되는 서비스 복제본 (상태 비저장 또는 상태 저장)의 종류입니다. 다음은 가능한 값입니다. 가능한 값은 다음과 같습니다. ''상태 비저장'', ''상태 저장'''
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_2'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, ServiceFabricClientReportReplicaHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, options: ServiceFabricClientReportReplicaHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: replicaHealthReportServiceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '상태 보고 되는 서비스 복제본 (상태 비저장 또는 상태 저장)의 종류입니다. 다음은 가능한 값입니다. 가능한 값은 다음과 같습니다. ''상태 비저장'', ''상태 저장'''
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth'
    name: 'reportServiceHealth(string, HealthInformation, Models.ServiceFabricClientReportServiceHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 Service Fabric 서비스의 상태를 보고합니다. 보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.
      보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 서비스에 전송됩니다.
      보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.
      예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.
      보고서를 health 스토어에 적용 했는지, GetServiceHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportServiceHealthOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientReportServiceHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_1'
    name: 'reportServiceHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_2'
    name: 'reportServiceHealth(string, HealthInformation, ServiceFabricClientReportServiceHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportServiceHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: 상태 보고서에 대 한 상태 정보를 설명합니다. 이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad'
    name: 'resetPartitionLoad(string, Models.ServiceFabricClientResetPartitionLoadOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 파티션의 현재 부하를 서비스에 대한 기본 부하로 다시 설정합니다.
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, options?: Models.ServiceFabricClientResetPartitionLoadOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientResetPartitionLoadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_1'
    name: 'resetPartitionLoad(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_2'
    name: 'resetPartitionLoad(string, ServiceFabricClientResetPartitionLoadOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, options: ServiceFabricClientResetPartitionLoadOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService'
    name: 'resolveService(string, Models.ServiceFabricClientResolveServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 서비스 파티션을 확인하여 서비스 복제본의 엔드포인트를 가져옵니다.
    syntax:
      content: 'function resolveService(serviceId: string, options?: Models.ServiceFabricClientResolveServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientResolveServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService_1'
    name: 'resolveService(string, ServiceCallback<ResolvedServicePartition>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, callback: ServiceCallback<ResolvedServicePartition>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService_2'
    name: 'resolveService(string, ServiceFabricClientResolveServiceOptionalParams, ServiceCallback<ResolvedServicePartition>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, options: ServiceFabricClientResolveServiceOptionalParams, callback: ServiceCallback<ResolvedServicePartition>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
          description: |
            콜백
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 클러스터에서 Service Fabric 노드에 배포 된 코드 패키지 다시 시작 합니다. 그러면 코드 패키지 프로세스가 취소되고 해당 프로세스에서 호스팅되는 모든 사용자 서비스 복제본이 다시 시작됩니다.
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options?: Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: 다시 시작 하기 위해 Service Fabric 노드에서 배포 된 코드 패키지를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_1'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: 다시 시작 하기 위해 Service Fabric 노드에서 배포 된 코드 패키지를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_2'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, ServiceFabricClientRestartDeployedCodePackageOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options: ServiceFabricClientRestartDeployedCodePackageOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: 다시 시작 하기 위해 Service Fabric 노드에서 배포 된 코드 패키지를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode'
    name: 'restartNode(string, RestartNodeDescription, Models.ServiceFabricClientRestartNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이미 시작된 Microsoft Azure Service Fabric 클러스터 노드를 다시 시작합니다.
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options?: Models.ServiceFabricClientRestartNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: 인스턴스의 노드를 다시 시작 및 fabric 프로세스의 덤프를 수행 해야 함을 나타내는 플래그입니다.
        - id: options
          type:
            - Models.ServiceFabricClientRestartNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode_1'
    name: 'restartNode(string, RestartNodeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: 인스턴스의 노드를 다시 시작 및 fabric 프로세스의 덤프를 수행 해야 함을 나타내는 플래그입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode_2'
    name: 'restartNode(string, RestartNodeDescription, ServiceFabricClientRestartNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options: ServiceFabricClientRestartNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: 인스턴스의 노드를 다시 시작 및 fabric 프로세스의 덤프를 수행 해야 함을 나타내는 플래그입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica'
    name: 'restartReplica(string, string, string, Models.ServiceFabricClientRestartReplicaOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 노드에서 실행되는 지속된 서비스의 서비스 복제본을 다시 시작합니다. 경고 ‑ 이 API가 사용될 때 수행되는 안전 검사가 없습니다. 이 API를 잘못 사용하면 상태 저장 서비스에 대한 가용성이 손실될 수 있습니다.
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientRestartReplicaOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - Models.ServiceFabricClientRestartReplicaOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica_1'
    name: 'restartReplica(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica_2'
    name: 'restartReplica(string, string, string, ServiceFabricClientRestartReplicaOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientRestartReplicaOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: replicaId
          type:
            - string
          description: 복제본의 식별자입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition'
    name: 'restorePartition(string, RestorePartitionDescription, Models.ServiceFabricClientRestorePartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      상태를 복원 된 상태 저장의 지정 된 백업 위치를 사용 하 여 파티션을 유지 합니다. 파티션을 이미 되 고 주기적으로 백업 하는 경우 다음 기본적으로 백업 지점 검색 됩니다에 대 한 백업 정책에 지정 된 저장소에 있습니다. 본문에 복원 파티션 설명의 일부로 백업 저장소 세부 정보를 지정 하 여 동일한를 재정의할 수도 하나. 복원이 시작 된 후에 GetRestoreProgress 작업을 사용 하 여 해당 진행률을 추적할 수 있습니다.
      이 경우 작업 시간이 초과 쿼리 매개 변수에서 큰 복원 시간 제한 값을 지정 합니다.
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options?: Models.ServiceFabricClientRestorePartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: 파티션을 복원 하려면 매개 변수를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientRestorePartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition_1'
    name: 'restorePartition(string, RestorePartitionDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: 파티션을 복원 하려면 매개 변수를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition_2'
    name: 'restorePartition(string, RestorePartitionDescription, ServiceFabricClientRestorePartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options: ServiceFabricClientRestorePartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: 파티션을 복원 하려면 매개 변수를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup'
    name: 'resumeApplicationBackup(string, Models.ServiceFabricClientResumeApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이전에 일시 중단 된 Service Fabric 응용 프로그램에서는 동일한 경우에 현재 구성 된 백업 정책에 따라 정기적인 백업을 다시 시작 합니다.
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientResumeApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientResumeApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_1'
    name: 'resumeApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_2'
    name: 'resumeApplicationBackup(string, ServiceFabricClientResumeApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, options: ServiceFabricClientResumeApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 모니터링되지 않는 수동 Service Fabric 애플리케이션 업그레이드를 다시 시작합니다. Service Fabric은 한 번에 하나의 업그레이드 도메인을 업그레이드합니다. 모니터링되지 않는 수동 업그레이드의 경우 Service Fabric에서 업그레이드 도메인을 완료한 후 다음 업그레이드 도메인을 계속 진행하기 전에 이 API를 호출하도록 기다립니다.
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options?: Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: 응용 프로그램 업그레이드를 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: 응용 프로그램 업그레이드를 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, ServiceFabricClientResumeApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options: ServiceFabricClientResumeApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: 응용 프로그램 업그레이드를 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, Models.ServiceFabricClientResumeClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 해당되는 경우 클러스터 코드 또는 구성 업그레이드를 다음 업그레이드 도메인으로 이동합니다.
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options?: Models.ServiceFabricClientResumeClusterUpgradeOptionalParams)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: 클러스터 업그레이드 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientResumeClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_1'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: 클러스터 업그레이드 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_2'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, ServiceFabricClientResumeClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options: ServiceFabricClientResumeClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: 클러스터 업그레이드 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup'
    name: 'resumePartitionBackup(string, Models.ServiceFabricClientResumePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이전에 일시 중단 된 파티션을 다시 동일한 현재 구성 된 백업 정책에 따라 정기적인 백업을 시작 합니다.
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, options?: Models.ServiceFabricClientResumePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientResumePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_1'
    name: 'resumePartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_2'
    name: 'resumePartitionBackup(string, ServiceFabricClientResumePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, options: ServiceFabricClientResumePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup'
    name: 'resumeServiceBackup(string, Models.ServiceFabricClientResumeServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이전에 일시 중단 된 Service Fabric 서비스에서는 동일한 경우에 현재 구성 된 백업 정책에 따라 정기적인 백업 수행을 재개 합니다.
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, options?: Models.ServiceFabricClientResumeServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientResumeServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_1'
    name: 'resumeServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_2'
    name: 'resumeServiceBackup(string, ServiceFabricClientResumeServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, options: ServiceFabricClientResumeServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade'
    name: 'rollbackApplicationUpgrade(string, Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이전 버전으로 현재 애플리케이션 업그레이드의 롤백을 시작합니다. 이 API는 새 버전으로 롤포워드되는 현재 진행 중인 업그레이드를 롤백하는 데만 사용할 수 있습니다. 애플리케이션이 현재 업그레이드 중이 아닌 경우 StartApplicationUpgrade API를 사용하여 이전 버전으로 롤백을 포함하여 원하는 버전으로 업그레이드합니다.
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, options?: Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1'
    name: 'rollbackApplicationUpgrade(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2'
    name: 'rollbackApplicationUpgrade(string, ServiceFabricClientRollbackApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, options: ServiceFabricClientRollbackApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade'
    name: rollbackClusterUpgrade(Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 클러스터의 코드 또는 구성 업그레이드를 롤백합니다.
    syntax:
      content: 'function rollbackClusterUpgrade(options?: Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1'
    name: rollbackClusterUpgrade(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2'
    name: 'rollbackClusterUpgrade(ServiceFabricClientRollbackClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(options: ServiceFabricClientRollbackClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공 된 OperationSpec를 사용 하 여 채워지는 HTTP 요청을 보냅니다.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: HTTP 요청의 템플릿 값에서 채워집니다는 인수입니다.
        - id: operationSpec
          type:
            - OperationSpec
          description: Http 요청을 채우는 데 사용할 OperationSpec 합니다.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            응답을 받을 때 호출할 콜백.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공 된 http 요청을 보냅니다.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.constructor'
    name: ServiceFabricClient(Models.ServiceFabricClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ServiceFabricClient 클래스의 새 인스턴스를 초기화합니다.
    syntax:
      content: 'new ServiceFabricClient(options?: Models.ServiceFabricClientOptions)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientOptions
          description: ''
          optional: true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태를 업데이트 합니다. 이 API 지원을 위해 내부적으로 사용 됩니다.
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options?: Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태입니다.
        - id: options
          type:
            - Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_1'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, callback: ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태입니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
          description: |
            콜백
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_2'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams, ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams, callback: ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
          description: |
            콜백
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, Models.ServiceFabricClientStartApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공된 애플리케이션 업그레이드 매개 변수의 유효성을 검사하고 매개 변수가 유효한 경우 애플리케이션 업그레이드를 시작합니다.
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options?: Models.ServiceFabricClientStartApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: 응용 프로그램 업그레이드 매개 변수입니다.
        - id: options
          type:
            - Models.ServiceFabricClientStartApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_1'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: 응용 프로그램 업그레이드 매개 변수입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_2'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, ServiceFabricClientStartApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options: ServiceFabricClientStartApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: 응용 프로그램 업그레이드 매개 변수입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos'
    name: 'startChaos(ChaosParameters, Models.ServiceFabricClientStartChaosOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Chaos가 아직 클러스터에 실행되고 있지 않다면 Chaos 매개 변수에 전달된 값으로 Chaos를 시작합니다.
      이 호출을 수행할 때 Chaos가 이미 실행 중이면 호출이 FABRIC_E_CHAOS_ALREADY_RUNNING 오류 코드로 실패합니다.
      문서를 참조 [Induce Service Fabric 클러스터에서 비정상 상황 제어](https://docs.microsoft.com/azure/service-fabric/service-fabric-controlled-chaos) 대 한 자세한 내용은 합니다.
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, options?: Models.ServiceFabricClientStartChaosOptionalParams)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: 비정상 상황 실행을 구성 하는 모든 매개 변수를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientStartChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos_1'
    name: 'startChaos(ChaosParameters, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: 비정상 상황 실행을 구성 하는 모든 매개 변수를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos_2'
    name: 'startChaos(ChaosParameters, ServiceFabricClientStartChaosOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, options: ServiceFabricClientStartChaosOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: 비정상 상황 실행을 구성 하는 모든 매개 변수를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공된 구성 업그레이드 매개 변수의 유효성을 검사하고 매개 변수가 유효한 경우 클러스터 구성 업그레이드를 시작합니다.
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options?: Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: 독립 실행형 클러스터 구성 업그레이드에 대 한 매개 변수입니다.
        - id: options
          type:
            - Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: 독립 실행형 클러스터 구성 업그레이드에 대 한 매개 변수입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: 독립 실행형 클러스터 구성 업그레이드에 대 한 매개 변수입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, Models.ServiceFabricClientStartClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 제공된 업그레이드 매개 변수의 유효성을 검사하고 매개 변수가 유효한 경우 Service Fabric 클러스터의 코드 또는 구성 버전 업그레이드를 시작합니다.
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options?: Models.ServiceFabricClientStartClusterUpgradeOptionalParams)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: 클러스터 업그레이드를 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientStartClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_1'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: 클러스터 업그레이드를 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_2'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, ServiceFabricClientStartClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options: ServiceFabricClientStartClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: 클러스터 업그레이드를 시작 하는 것에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 매개 변수가 유효한 경우 제공된 업그레이드 매개 변수의 유효성을 검사하고 배포 업그레이드를 시작합니다.
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options?: Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: 업그레이드에 대 한 매개 변수는 배포를 구성 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: 업그레이드에 대 한 매개 변수는 배포를 구성 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: 업그레이드에 대 한 매개 변수는 배포를 구성 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, Models.ServiceFabricClientStartDataLossOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 API는 지정한 파티션에 대한 데이터 손실을 유도합니다. 파티션의 OnDataLoss API에 대한 호출을 트리거합니다.
      실제 데이터 손실은 지정된 DataLossMode에 따라 달라집니다.
      - PartialDataLoss - 복제본의 쿼럼만 제거되고 파티션에 대한 OnDataLoss가 트리거되지만 실제 데이터 손실은 진행 중인 복제의 존재 여부에 따라 달라집니다.
      - FullDataLoss - 모든 복제본이 제거되므로 모든 데이터가 손실되고 OnDataLoss가 트리거됩니다.

      이 API는 대상으로 상태 저장 서비스로만 호출되어야 합니다.

      시스템 서비스를 대상으로 이 API를 호출하는 것은 권장되지 않습니다.

      참고:  이 API가 호출되면 취소할 수 없습니다. CancelOperation을 호출하면 실행을 중지하고 내부 시스템 상태를 정리합니다.
      명령이 데이터 손실을 충분히 진행시킨 경우 데이터를 복원하지 않습니다.

      동일한 OperationId로 GetDataLossProgress API를 호출하여 이 API로 시작된 작업에 대한 정보를 반환합니다.
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, options?: Models.ServiceFabricClientStartDataLossOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '이 열거형은 유도한 데이터 손실의 유형을 나타내도록 StartDataLoss API에 전달됩니다. 가능한 값은 다음과 같습니다. '' Invalid'', ''PartialDataLoss'', ''FullDataLoss'''
        - id: options
          type:
            - Models.ServiceFabricClientStartDataLossOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss_1'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '이 열거형은 유도한 데이터 손실의 유형을 나타내도록 StartDataLoss API에 전달됩니다. 가능한 값은 다음과 같습니다. '' Invalid'', ''PartialDataLoss'', ''FullDataLoss'''
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss_2'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, ServiceFabricClientStartDataLossOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, options: ServiceFabricClientStartDataLossOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '이 열거형은 유도한 데이터 손실의 유형을 나타내도록 StartDataLoss API에 전달됩니다. 가능한 값은 다음과 같습니다. '' Invalid'', ''PartialDataLoss'', ''FullDataLoss'''
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, Models.ServiceFabricClientStartNodeTransitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      클러스터 노드를 시작하거나 중지합니다.  클러스터 노드는 프로세스이지 OS 인스턴스 그 자체가 아닙니다.  노드를 시작하려면 NodeTransitionType 매개 변수에 대한 "Start"을 전달합니다.
      노드를 중지하려면 NodeTransitionType 매개 변수에 대한 "Stop"을 전달합니다.  API가 아직 전환을 마치지 못한 노드를 반환할 때 이 API가 작업을 시작합니다.
      작업의 진행률을 가져오려면 동일한 OperationId로 GetNodeTransitionProgress를 호출합니다.
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, options?: Models.ServiceFabricClientStartNodeTransitionOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '수행할 전환의 유형을 나타냅니다.  NodeTransitionType.Start는 중지된 노드를 시작합니다.  NodeTransitionType.Stop은 작동하는 노드를 중지합니다. 가능한 값은 다음과 같습니다. ''Invalid'', '' Start'', ''Stop'''
        - id: nodeInstanceId
          type:
            - string
          description: 대상 노드의 노드 인스턴스 ID입니다.  이것은 GetNodeInfo API를 통해 확인할 수 있습니다.
        - id: stopDurationInSeconds
          type:
            - number
          description: '노드가 중지된 채로 유지되는 기간(초).  최솟값은 600, 최댓값은 14400입니다.  이 시간이 만료되면 노드가 자동으로 다시 작동합니다.'
        - id: options
          type:
            - Models.ServiceFabricClientStartNodeTransitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition_1'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '수행할 전환의 유형을 나타냅니다.  NodeTransitionType.Start는 중지된 노드를 시작합니다.  NodeTransitionType.Stop은 작동하는 노드를 중지합니다. 가능한 값은 다음과 같습니다. ''Invalid'', '' Start'', ''Stop'''
        - id: nodeInstanceId
          type:
            - string
          description: 대상 노드의 노드 인스턴스 ID입니다.  이것은 GetNodeInfo API를 통해 확인할 수 있습니다.
        - id: stopDurationInSeconds
          type:
            - number
          description: '노드가 중지된 채로 유지되는 기간(초).  최솟값은 600, 최댓값은 14400입니다.  이 시간이 만료되면 노드가 자동으로 다시 작동합니다.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition_2'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, ServiceFabricClientStartNodeTransitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, options: ServiceFabricClientStartNodeTransitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: 노드의 이름입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '수행할 전환의 유형을 나타냅니다.  NodeTransitionType.Start는 중지된 노드를 시작합니다.  NodeTransitionType.Stop은 작동하는 노드를 중지합니다. 가능한 값은 다음과 같습니다. ''Invalid'', '' Start'', ''Stop'''
        - id: nodeInstanceId
          type:
            - string
          description: 대상 노드의 노드 인스턴스 ID입니다.  이것은 GetNodeInfo API를 통해 확인할 수 있습니다.
        - id: stopDurationInSeconds
          type:
            - number
          description: '노드가 중지된 채로 유지되는 기간(초).  최솟값은 600, 최댓값은 14400입니다.  이 시간이 만료되면 노드가 자동으로 다시 작동합니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, Models.ServiceFabricClientStartPartitionRestartOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 API는 장애 조치를 테스트하는 데 유용합니다.
      상태 비저장 서비스 파티션을 대상으로 사용하는 경우, RestartPartitionMode는 AllReplicasOrInstances이어야 합니다.

      진행률을 가져오려면 동일한 OperationId를 사용하여 GetPartitionRestartProgress API를 호출합니다.
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, options?: Models.ServiceFabricClientStartPartitionRestartOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '다시 시작하는 파티션을 설명합니다. 가능한 값은 다음과 같습니다. ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries'''
        - id: options
          type:
            - Models.ServiceFabricClientStartPartitionRestartOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_1'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '다시 시작하는 파티션을 설명합니다. 가능한 값은 다음과 같습니다. ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries'''
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_2'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, ServiceFabricClientStartPartitionRestartOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, options: ServiceFabricClientStartPartitionRestartOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '다시 시작하는 파티션을 설명합니다. 가능한 값은 다음과 같습니다. ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries'''
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, Models.ServiceFabricClientStartQuorumLossOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 API는 서비스에서 임시 쿼럼 손실의 경우에 유용합니다.
      동일한 OperationId로 GetQuorumLossProgress API를 호출하여 이 API로 시작된 작업에 대한 정보를 반환합니다.

      상태 저장이 지속된(HasPersistedState==true) 서비스에서만 호출될 수 있습니다.  상태 비저장 서비스 또는 상태 저장 메모리 내 서비스에서 이 API를 사용하지 마십시오.
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, options?: Models.ServiceFabricClientStartQuorumLossOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '이 열거형은 유도한 쿼럼 손실의 유형을 나타내도록 StartQuorumLoss API에 전달됩니다. 가능한 값은 다음과 같습니다. '' Invalid'', ''QuorumReplicas'', ''AllReplicas'''
        - id: quorumLossDuration
          type:
            - number
          description: 파티션이 쿼럼 손실에 보관되는 시간입니다.  초 단위로 지정되어야 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientStartQuorumLossOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_1'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '이 열거형은 유도한 쿼럼 손실의 유형을 나타내도록 StartQuorumLoss API에 전달됩니다. 가능한 값은 다음과 같습니다. '' Invalid'', ''QuorumReplicas'', ''AllReplicas'''
        - id: quorumLossDuration
          type:
            - number
          description: 파티션이 쿼럼 손실에 보관되는 시간입니다.  초 단위로 지정되어야 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_2'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, ServiceFabricClientStartQuorumLossOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, options: ServiceFabricClientStartQuorumLossOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: operationId
          type:
            - string
          description: 이 API의 호출을 식별하는 GUID입니다.  이 값은 해당 GetProgress API에 전달 됩니다.
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '이 열거형은 유도한 쿼럼 손실의 유형을 나타내도록 StartQuorumLoss API에 전달됩니다. 가능한 값은 다음과 같습니다. '' Invalid'', ''QuorumReplicas'', ''AllReplicas'''
        - id: quorumLossDuration
          type:
            - number
          description: 파티션이 쿼럼 손실에 보관되는 시간입니다.  초 단위로 지정되어야 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade'
    name: 'startRollbackComposeDeploymentUpgrade(string, Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 작성 배포 업그레이드를 롤백합니다.
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, options?: Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_1'
    name: 'startRollbackComposeDeploymentUpgrade(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_2'
    name: 'startRollbackComposeDeploymentUpgrade(string, ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, options: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: 배포의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos'
    name: stopChaos(Models.ServiceFabricClientStopChaosOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      새로운 오류를 실행할 수 없도록 Chaos를 중지합니다. 진행 중인 오류는 완료될 때까지 계속해서 실행됩니다. 현재 Chaos Schedule은 중지된 상태로 전환됩니다.
      일정이 중지되면 중지된 상태로 유지되며 Chaos의 Chaos Schedule 새 실행에 사용할 수 없습니다. 일정을 다시 시작하기 위해 새 Chaos Schedule을 설정해야 합니다.
    syntax:
      content: 'function stopChaos(options?: Models.ServiceFabricClientStopChaosOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientStopChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos_1'
    name: stopChaos(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos_2'
    name: 'stopChaos(ServiceFabricClientStopChaosOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(options: ServiceFabricClientStopChaosOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, Models.ServiceFabricClientSubmitPropertyBatchOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 속성 작업의 일괄 처리를 전송 합니다. 전체 또는의 모든 작업이 커밋됩니다.
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options?: Models.ServiceFabricClientSubmitPropertyBatchOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: 전송할 속성 일괄 처리 작업을 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientSubmitPropertyBatchOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_1'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, ServiceCallback<Models.PropertyBatchInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, callback: ServiceCallback<Models.PropertyBatchInfoUnion>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: 전송할 속성 일괄 처리 작업을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<Models.PropertyBatchInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_2'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, ServiceFabricClientSubmitPropertyBatchOptionalParams, ServiceCallback<Models.PropertyBatchInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options: ServiceFabricClientSubmitPropertyBatchOptionalParams, callback: ServiceCallback<Models.PropertyBatchInfoUnion>)'
      parameters:
        - id: nameId
          type:
            - string
          description: 'Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: 전송할 속성 일괄 처리 작업을 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<Models.PropertyBatchInfoUnion>
          description: |
            콜백
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup'
    name: 'suspendApplicationBackup(string, Models.ServiceFabricClientSuspendApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      정기 백업을 수행 하도록 구성 된 응용 프로그램 백업을 추가로 다시 재개 될 때까지 대 한 일시 중단 됩니다. 이 작업 전체 응용 프로그램 계층에 적용 됩니다.
      즉, 모든 서비스 및 응용 프로그램 파티션이 백업에 대 한 일시 중단 이제 됩니다.
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientSuspendApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - Models.ServiceFabricClientSuspendApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_1'
    name: 'suspendApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_2'
    name: 'suspendApplicationBackup(string, ServiceFabricClientSuspendApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, options: ServiceFabricClientSuspendApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup'
    name: 'suspendPartitionBackup(string, Models.ServiceFabricClientSuspendPartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 정기 백업을 수행 하도록 구성 된 파티션은 다시 재개 될 때까지 백업을 추가로 수행 하는 것에 대 한 일시 중단 됩니다.
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, options?: Models.ServiceFabricClientSuspendPartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - Models.ServiceFabricClientSuspendPartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_1'
    name: 'suspendPartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_2'
    name: 'suspendPartitionBackup(string, ServiceFabricClientSuspendPartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, options: ServiceFabricClientSuspendPartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: 파티션의 id입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup'
    name: 'suspendServiceBackup(string, Models.ServiceFabricClientSuspendServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '정기 백업을 수행 하도록 구성 된 서비스에 백업을 추가 다시 재개 될 때까지 일시 중단 됩니다. 이 작업 전체 서비스의 계층 구조에 적용 됩니다. 즉, 이제이 서비스는 모든 파티션이 백업에 대 한 일시 중단 합니다.'
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, options?: Models.ServiceFabricClientSuspendServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - Models.ServiceFabricClientSuspendServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_1'
    name: 'suspendServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_2'
    name: 'suspendServiceBackup(string, ServiceFabricClientSuspendServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, options: ServiceFabricClientSuspendServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 작업은 애플리케이션 형식의 모든 애플리케이션 인스턴스가 삭제된 경우에만 수행될 수 있습니다. 애플리케이션 형식이 등록 취소되면 이 특정 애플리케이션 형식에 대해서는 새 애플리케이션 인스턴스가 만들어질 수 없습니다.
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options?: Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: 이전 복사 작업 중 지정 된 이미지 저장소에서 응용 프로그램 패키지에 대 한 상대 경로입니다.
        - id: options
          type:
            - Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_1'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: 이전 복사 작업 중 지정 된 이미지 저장소에서 응용 프로그램 패키지에 대 한 상대 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_2'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, ServiceFabricClientUnprovisionApplicationTypeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options: ServiceFabricClientUnprovisionApplicationTypeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: 애플리케이션 유형의 이름입니다.
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: 이전 복사 작업 중 지정 된 이미지 저장소에서 응용 프로그램 패키지에 대 한 상대 경로입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster'
    name: 'unprovisionCluster(UnprovisionFabricDescription, Models.ServiceFabricClientUnprovisionClusterOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 코드 및 구성을 개별적으로 프로비전 해제하도록 지원합니다.
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options?: Models.ServiceFabricClientUnprovisionClusterOptionalParams)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: 클러스터를 프로 비전 해제에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - Models.ServiceFabricClientUnprovisionClusterOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_1'
    name: 'unprovisionCluster(UnprovisionFabricDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: 클러스터를 프로 비전 해제에 대 한 매개 변수를 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_2'
    name: 'unprovisionCluster(UnprovisionFabricDescription, ServiceFabricClientUnprovisionClusterOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options: ServiceFabricClientUnprovisionClusterOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: 클러스터를 프로 비전 해제에 대 한 매개 변수를 설명 합니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 업데이트 진행 중인 응용 프로그램의 매개 변수에서의 응용 프로그램 업그레이드 시작 시 지정 된 업그레이드 합니다. 이 잘못 된 매개 변수 또는 진행 되도록 응용 프로그램의 문제로 인해 중단된 응용 프로그램 업그레이드를 완화 하기 위해 필요할 수 있습니다.
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options?: Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: 매개 변수는 기존 응용 프로그램 업그레이드를 업데이트 하는 중입니다.
        - id: options
          type:
            - Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_1'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: 매개 변수는 기존 응용 프로그램 업그레이드를 업데이트 하는 중입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_2'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, ServiceFabricClientUpdateApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options: ServiceFabricClientUpdateApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            애플리케이션 ID입니다. 일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: 매개 변수는 기존 응용 프로그램 업그레이드를 업데이트 하는 중입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, Models.ServiceFabricClientUpdateBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '{BackupPolicyName}로 식별 되는 백업 정책을 업데이트 합니다.'
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options?: Models.ServiceFabricClientUpdateBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: 백업 정책을 설명합니다.
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: options
          type:
            - Models.ServiceFabricClientUpdateBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_1'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: 백업 정책을 설명합니다.
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_2'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, ServiceFabricClientUpdateBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options: ServiceFabricClientUpdateBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: 백업 정책을 설명합니다.
        - id: backupPolicyName
          type:
            - string
          description: 백업 정책의 이름입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Service Fabric 클러스터 업그레이드를 사용 하는 동안 사용 된 업그레이드 매개 변수를 업데이트 합니다.
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options?: Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: 클러스터 업그레이드는 업데이트에 대 한 매개 변수입니다.
        - id: options
          type:
            - Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_1'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: 클러스터 업그레이드는 업데이트에 대 한 매개 변수입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_2'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, ServiceFabricClientUpdateClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options: ServiceFabricClientUpdateClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: 클러스터 업그레이드는 업데이트에 대 한 매개 변수입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState'
    name: 'updateRepairExecutionState(RepairTask, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: 생성 또는 업데이트 하려면 복구 작업을 설명 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_2'
    name: 'updateRepairExecutionState(RepairTask, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: 생성 또는 업데이트 하려면 복구 작업을 설명 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_1'
    name: 'updateRepairExecutionState(RepairTask, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: 생성 또는 업데이트 하려면 복구 작업을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: 업데이트할 복구 작업 상태 정책을 설명 합니다.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: 업데이트할 복구 작업 상태 정책을 설명 합니다.
        - id: options
          type:
            - RequestOptionsBase
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: 업데이트할 복구 작업 상태 정책을 설명 합니다.
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            콜백
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, Models.ServiceFabricClientUpdateServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      이 API는 실행 중인 Service Fabric 서비스의 속성 업데이트를 허용 합니다. 업데이트할 수 있는 속성 집합은 서비스를 만들 때 지정 된 속성의 하위 집합입니다. 사용 하 여 속성의 현재 집합을 가져올 수 있습니다 `GetServiceDescription` API.
      실행 중인 서비스의 속성 업데이트를 사용 하 여 응용 프로그램 업그레이드와 다른는 `StartApplicationUpgrade` API. 업데이트 새 속성을 즉시 서비스에 적용 하는 반면 업그레이드가 다른 버전을 한 번에 하나의 업그레이드 도메인에서 이동 하는 응용 프로그램을 포함 하는 장기 실행 백그라운드 작업을 합니다.
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, options?: Models.ServiceFabricClientUpdateServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: 서비스를 업데이트 하는 데 필요한 정보입니다.
        - id: options
          type:
            - Models.ServiceFabricClientUpdateServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService_1'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: 서비스를 업데이트 하는 데 필요한 정보입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService_2'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, ServiceFabricClientUpdateServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, options: ServiceFabricClientUpdateServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            서비스 id입니다. 이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.
            버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.
            예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: 서비스를 업데이트 하는 데 필요한 정보입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile'
    name: 'uploadFile(string, Models.ServiceFabricClientUploadFileOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '이미지 저장소에 파일의 콘텐츠를 업로드합니다. 파일 연결에 실패 하면 다시 업로드 충분히 작으면이 API를 사용 합니다. 파일의 데이터를 요청 본문에 추가 해야 합니다. 내용은 지정된 된 경로에 업로드 됩니다. 이미지 저장소 서비스 표시 파일을 사용 하 여 폴더의 사용 가능 함을 나타냅니다. 기호 파일이 "_.dir" 라는 빈 파일입니다. 표시 파일을 폴더의 모든 파일이 업로드 되 면 이미지 저장소 서비스에서 생성 됩니다. 이미지 저장소 서비스, 응용 프로그램 패키지의 파일 계층 구조 인식 하지 rest에서 응용 프로그램 패키지를 업로드할 파일 별로 접근 방식을 사용 하는 경우 폴더당 표시 파일을 만들고 마지막으로 업로드를 이미지 저장소 서비스 폴더 완료 되었음을 알 수 있도록 해야 합니다.'
    syntax:
      content: 'function uploadFile(contentPath: string, options?: Models.ServiceFabricClientUploadFileOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: options
          type:
            - Models.ServiceFabricClientUploadFileOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile_1'
    name: 'uploadFile(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile_2'
    name: 'uploadFile(string, ServiceFabricClientUploadFileOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, options: ServiceFabricClientUploadFileOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk'
    name: 'uploadFileChunk(string, string, string, Models.ServiceFabricClientUploadFileChunkOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정 된 업로드 세션 ID 및 이미지 저장소 상대 경로 사용 하 여 이미지 저장소에 파일 청크를 업로드 합니다. 이 API를 사용 하면 파일 업로드 작업을 다시 시작할 수 있습니다. 사용자는 네트워크 중단 될 때마다부터 파일 업로드를 다시 시작할 필요가 없습니다. 파일 크기가 큰 경우이 옵션을 사용 합니다.
      다시 시작 가능한 파일 업로드를 수행 하려면 사용자 파일 여러 개의 청크로 나누고 이러한 청크를 이미지 저장소 하나씩 업로드 해야 합니다. 청크 순서로 업로드할 필요가 없습니다. 이미 이미지 저장소 상대 경로 나타내는 파일이 있는 경우 업로드 세션 커밋될 때 덮어씁니다.
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, options?: Models.ServiceFabricClientUploadFileChunkOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: contentRange
          type:
            - string
          description: '파일 청크를 이미지 저장소에 업로드 하는 경우 Content-range 헤더 필드를 구성 하 고 요청으로 전송 해야 합니다. 형식으로 "바이트 {First-Byte-Position}-{Last-Byte-Position}/{File-Length}" 같습니다. 예를 들어, 콘텐츠-바이트 범위: 300-5000/20000 사용자 5,000 통해 300 바이트를 전송 하는 총 파일 길이 20, 000 바이트를 나타냅니다.'
        - id: options
          type:
            - Models.ServiceFabricClientUploadFileChunkOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_1'
    name: 'uploadFileChunk(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: contentRange
          type:
            - string
          description: '파일 청크를 이미지 저장소에 업로드 하는 경우 Content-range 헤더 필드를 구성 하 고 요청으로 전송 해야 합니다. 형식으로 "바이트 {First-Byte-Position}-{Last-Byte-Position}/{File-Length}" 같습니다. 예를 들어, 콘텐츠-바이트 범위: 300-5000/20000 사용자 5,000 통해 300 바이트를 전송 하는 총 파일 길이 20, 000 바이트를 나타냅니다.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_2'
    name: 'uploadFileChunk(string, string, string, ServiceFabricClientUploadFileChunkOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, options: ServiceFabricClientUploadFileChunkOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: 루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.
        - id: sessionId
          type:
            - string
          description: 파일을 업로드 하는 사용자가 생성 된 GUID입니다. 추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.
        - id: contentRange
          type:
            - string
          description: '파일 청크를 이미지 저장소에 업로드 하는 경우 Content-range 헤더 필드를 구성 하 고 요청으로 전송 해야 합니다. 형식으로 "바이트 {First-Byte-Position}-{Last-Byte-Position}/{File-Length}" 같습니다. 예를 들어, 콘텐츠-바이트 범위: 300-5000/20000 사용자 5,000 통해 300 바이트를 전송 하는 총 파일 길이 20, 000 바이트를 나타냅니다.'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'
          description: 선택적 매개 변수
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            콜백
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceFabricClientContext'
    name: ServiceFabricClientContext
    spec.typeScript:
      - name: ServiceFabricClientContext
        fullName: ServiceFabricClientContext
        uid: '@azure/servicefabric.ServiceFabricClientContext'
  - uid: '@azure/servicefabric.MeshApplication'
    name: MeshApplication
    spec.typeScript:
      - name: MeshApplication
        fullName: MeshApplication
        uid: '@azure/servicefabric.MeshApplication'
  - uid: '@azure/servicefabric.MeshCodePackage'
    name: MeshCodePackage
    spec.typeScript:
      - name: MeshCodePackage
        fullName: MeshCodePackage
        uid: '@azure/servicefabric.MeshCodePackage'
  - uid: '@azure/servicefabric.MeshGateway'
    name: MeshGateway
    spec.typeScript:
      - name: MeshGateway
        fullName: MeshGateway
        uid: '@azure/servicefabric.MeshGateway'
  - uid: '@azure/servicefabric.MeshNetwork'
    name: MeshNetwork
    spec.typeScript:
      - name: MeshNetwork
        fullName: MeshNetwork
        uid: '@azure/servicefabric.MeshNetwork'
  - uid: '@azure/servicefabric.MeshSecret'
    name: MeshSecret
    spec.typeScript:
      - name: MeshSecret
        fullName: MeshSecret
        uid: '@azure/servicefabric.MeshSecret'
  - uid: '@azure/servicefabric.MeshSecretValue'
    name: MeshSecretValue
    spec.typeScript:
      - name: MeshSecretValue
        fullName: MeshSecretValue
        uid: '@azure/servicefabric.MeshSecretValue'
  - uid: '@azure/servicefabric.MeshService'
    name: MeshService
    spec.typeScript:
      - name: MeshService
        fullName: MeshService
        uid: '@azure/servicefabric.MeshService'
  - uid: '@azure/servicefabric.MeshServiceReplica'
    name: MeshServiceReplica
    spec.typeScript:
      - name: MeshServiceReplica
        fullName: MeshServiceReplica
        uid: '@azure/servicefabric.MeshServiceReplica'
  - uid: '@azure/servicefabric.MeshVolume'
    name: MeshVolume
    spec.typeScript:
      - name: MeshVolume
        fullName: MeshVolume
        uid: '@azure/servicefabric.MeshVolume'
  - uid: '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
    name: ServiceFabricClientBackupPartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientBackupPartitionOptionalParams
        fullName: ServiceFabricClientBackupPartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
    name: ServiceFabricClientCancelOperationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCancelOperationOptionalParams
        fullName: ServiceFabricClientCancelOperationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskCancelDescription'
    name: RepairTaskCancelDescription
    spec.typeScript:
      - name: RepairTaskCancelDescription
        fullName: RepairTaskCancelDescription
        uid: '@azure/servicefabric.RepairTaskCancelDescription'
  - uid: ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
    name: RepairTaskUpdateInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RepairTaskUpdateInfo
        fullName: RepairTaskUpdateInfo
        uid: '@azure/servicefabric.RepairTaskUpdateInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
    name: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
        fullName: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
  - uid: '@azure/servicefabric.ImageStoreCopyDescription'
    name: ImageStoreCopyDescription
    spec.typeScript:
      - name: ImageStoreCopyDescription
        fullName: ImageStoreCopyDescription
        uid: '@azure/servicefabric.ImageStoreCopyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
    name: ServiceFabricClientCopyImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCopyImageStoreContentOptionalParams
        fullName: ServiceFabricClientCopyImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
  - uid: '@azure/servicefabric.ApplicationDescription'
    name: ApplicationDescription
    spec.typeScript:
      - name: ApplicationDescription
        fullName: ApplicationDescription
        uid: '@azure/servicefabric.ApplicationDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
    name: ServiceFabricClientCreateApplicationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateApplicationOptionalParams
        fullName: ServiceFabricClientCreateApplicationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
  - uid: '@azure/servicefabric.BackupPolicyDescription'
    name: BackupPolicyDescription
    spec.typeScript:
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: '@azure/servicefabric.BackupPolicyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
    name: ServiceFabricClientCreateBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateBackupPolicyOptionalParams
        fullName: ServiceFabricClientCreateBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.CreateComposeDeploymentDescription'
    name: CreateComposeDeploymentDescription
    spec.typeScript:
      - name: CreateComposeDeploymentDescription
        fullName: CreateComposeDeploymentDescription
        uid: '@azure/servicefabric.CreateComposeDeploymentDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
    name: ServiceFabricClientCreateComposeDeploymentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateComposeDeploymentOptionalParams
        fullName: ServiceFabricClientCreateComposeDeploymentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
  - uid: '@azure/servicefabric.NameDescription'
    name: NameDescription
    spec.typeScript:
      - name: NameDescription
        fullName: NameDescription
        uid: '@azure/servicefabric.NameDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
    name: ServiceFabricClientCreateNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateNameOptionalParams
        fullName: ServiceFabricClientCreateNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
  - uid: '@azure/servicefabric.RepairTask'
    name: RepairTask
    spec.typeScript:
      - name: RepairTask
        fullName: RepairTask
        uid: '@azure/servicefabric.RepairTask'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
    name: ServiceFabricClientCreateServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateServiceOptionalParams
        fullName: ServiceFabricClientCreateServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
  - uid: '@azure/servicefabric.ServiceFromTemplateDescription'
    name: ServiceFromTemplateDescription
    spec.typeScript:
      - name: ServiceFromTemplateDescription
        fullName: ServiceFromTemplateDescription
        uid: '@azure/servicefabric.ServiceFromTemplateDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
    name: ServiceFabricClientCreateServiceFromTemplateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateServiceFromTemplateOptionalParams
        fullName: ServiceFabricClientCreateServiceFromTemplateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
    name: ServiceFabricClientDeleteApplicationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteApplicationOptionalParams
        fullName: ServiceFabricClientDeleteApplicationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
    name: ServiceFabricClientDeleteBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteBackupPolicyOptionalParams
        fullName: ServiceFabricClientDeleteBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
    name: ServiceFabricClientDeleteImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteImageStoreContentOptionalParams
        fullName: ServiceFabricClientDeleteImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
    name: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
        fullName: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
    name: ServiceFabricClientDeleteNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteNameOptionalParams
        fullName: ServiceFabricClientDeleteNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
    name: ServiceFabricClientDeletePropertyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeletePropertyOptionalParams
        fullName: ServiceFabricClientDeletePropertyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskDeleteDescription'
    name: RepairTaskDeleteDescription
    spec.typeScript:
      - name: RepairTaskDeleteDescription
        fullName: RepairTaskDeleteDescription
        uid: '@azure/servicefabric.RepairTaskDeleteDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
    name: ServiceFabricClientDeleteServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteServiceOptionalParams
        fullName: ServiceFabricClientDeleteServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
  - uid: '@azure/servicefabric.DeployServicePackageToNodeDescription'
    name: DeployServicePackageToNodeDescription
    spec.typeScript:
      - name: DeployServicePackageToNodeDescription
        fullName: DeployServicePackageToNodeDescription
        uid: '@azure/servicefabric.DeployServicePackageToNodeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
    name: ServiceFabricClientDeployServicePackageToNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeployServicePackageToNodeOptionalParams
        fullName: ServiceFabricClientDeployServicePackageToNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
    name: ServiceFabricClientDisableApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableApplicationBackupOptionalParams
        fullName: ServiceFabricClientDisableApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.DeactivationIntentDescription'
    name: DeactivationIntentDescription
    spec.typeScript:
      - name: DeactivationIntentDescription
        fullName: DeactivationIntentDescription
        uid: '@azure/servicefabric.DeactivationIntentDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
    name: ServiceFabricClientDisableNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableNodeOptionalParams
        fullName: ServiceFabricClientDisableNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
    name: ServiceFabricClientDisablePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisablePartitionBackupOptionalParams
        fullName: ServiceFabricClientDisablePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
    name: ServiceFabricClientDisableServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableServiceBackupOptionalParams
        fullName: ServiceFabricClientDisableServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.EnableBackupDescription'
    name: EnableBackupDescription
    spec.typeScript:
      - name: EnableBackupDescription
        fullName: EnableBackupDescription
        uid: '@azure/servicefabric.EnableBackupDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
    name: ServiceFabricClientEnableApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableApplicationBackupOptionalParams
        fullName: ServiceFabricClientEnableApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
    name: ServiceFabricClientEnableNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableNodeOptionalParams
        fullName: ServiceFabricClientEnableNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
    name: ServiceFabricClientEnablePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnablePartitionBackupOptionalParams
        fullName: ServiceFabricClientEnablePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
    name: ServiceFabricClientEnableServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableServiceBackupOptionalParams
        fullName: ServiceFabricClientEnableServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskApproveDescription'
    name: RepairTaskApproveDescription
    spec.typeScript:
      - name: RepairTaskApproveDescription
        fullName: RepairTaskApproveDescription
        uid: '@azure/servicefabric.RepairTaskApproveDescription'
  - uid: ServiceCallback<@azure/servicefabric.AadMetadataObject>
    name: AadMetadataObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AadMetadataObject
        fullName: AadMetadataObject
        uid: '@azure/servicefabric.AadMetadataObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
    name: ServiceFabricClientGetAadMetadataOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetAadMetadataOptionalParams
        fullName: ServiceFabricClientGetAadMetadataOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
    name: PagedBackupEntityList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupEntityList
        fullName: PagedBackupEntityList
        uid: '@azure/servicefabric.PagedBackupEntityList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
    name: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
        fullName: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
    name: PagedBackupConfigurationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupConfigurationInfoList
        fullName: PagedBackupConfigurationInfoList
        uid: '@azure/servicefabric.PagedBackupConfigurationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
    name: PagedBackupInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupInfoList
        fullName: PagedBackupInfoList
        uid: '@azure/servicefabric.PagedBackupInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
    name: ServiceFabricClientGetApplicationBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationBackupListOptionalParams
        fullName: ServiceFabricClientGetApplicationBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
    name: ServiceFabricClientGetApplicationEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationEventListOptionalParams
        fullName: ServiceFabricClientGetApplicationEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationHealth>
    name: ApplicationHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationHealth
        fullName: ApplicationHealth
        uid: '@azure/servicefabric.ApplicationHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
    name: ServiceFabricClientGetApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationHealthOptionalParams
        fullName: ServiceFabricClientGetApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationInfo>
    name: ApplicationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationInfo
        fullName: ApplicationInfo
        uid: '@azure/servicefabric.ApplicationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
    name: ServiceFabricClientGetApplicationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
    name: PagedApplicationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationInfoList
        fullName: PagedApplicationInfoList
        uid: '@azure/servicefabric.PagedApplicationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
    name: ServiceFabricClientGetApplicationInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationInfoListOptionalParams
        fullName: ServiceFabricClientGetApplicationInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
    name: ApplicationLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationLoadInfo
        fullName: ApplicationLoadInfo
        uid: '@azure/servicefabric.ApplicationLoadInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
    name: ServiceFabricClientGetApplicationLoadInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationLoadInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationLoadInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
    name: ApplicationTypeManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationTypeManifest
        fullName: ApplicationTypeManifest
        uid: '@azure/servicefabric.ApplicationTypeManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
    name: ServiceFabricClientGetApplicationManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationManifestOptionalParams
        fullName: ServiceFabricClientGetApplicationManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
    name: ApplicationNameInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationNameInfo
        fullName: ApplicationNameInfo
        uid: '@azure/servicefabric.ApplicationNameInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
    name: ServiceFabricClientGetApplicationNameInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationNameInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationNameInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
    name: PagedApplicationTypeInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationTypeInfoList
        fullName: PagedApplicationTypeInfoList
        uid: '@azure/servicefabric.PagedApplicationTypeInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
    name: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
    name: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
        fullName: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
    name: ApplicationUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationUpgradeProgressInfo
        fullName: ApplicationUpgradeProgressInfo
        uid: '@azure/servicefabric.ApplicationUpgradeProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
    name: ServiceFabricClientGetApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientGetApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
    name: ServiceFabricClientGetApplicationsEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationsEventListOptionalParams
        fullName: ServiceFabricClientGetApplicationsEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
    name: BackupPolicyDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: '@azure/servicefabric.BackupPolicyDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
    name: ServiceFabricClientGetBackupPolicyByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupPolicyByNameOptionalParams
        fullName: ServiceFabricClientGetBackupPolicyByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
    name: PagedBackupPolicyDescriptionList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupPolicyDescriptionList
        fullName: PagedBackupPolicyDescriptionList
        uid: '@azure/servicefabric.PagedBackupPolicyDescriptionList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
    name: ServiceFabricClientGetBackupPolicyListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupPolicyListOptionalParams
        fullName: ServiceFabricClientGetBackupPolicyListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
  - uid: '@azure/servicefabric.GetBackupByStorageQueryDescription'
    name: GetBackupByStorageQueryDescription
    spec.typeScript:
      - name: GetBackupByStorageQueryDescription
        fullName: GetBackupByStorageQueryDescription
        uid: '@azure/servicefabric.GetBackupByStorageQueryDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
    name: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
        fullName: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.Chaos>
    name: Chaos>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Chaos
        fullName: Chaos
        uid: '@azure/servicefabric.Chaos'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
    name: ServiceFabricClientGetChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosOptionalParams
        fullName: ServiceFabricClientGetChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
    name: ChaosEventsSegment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ChaosEventsSegment
        fullName: ChaosEventsSegment
        uid: '@azure/servicefabric.ChaosEventsSegment'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
    name: ServiceFabricClientGetChaosEventsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosEventsOptionalParams
        fullName: ServiceFabricClientGetChaosEventsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
    name: ChaosScheduleDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: '@azure/servicefabric.ChaosScheduleDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
    name: ServiceFabricClientGetChaosScheduleOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosScheduleOptionalParams
        fullName: ServiceFabricClientGetChaosScheduleOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterConfiguration>
    name: ClusterConfiguration>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterConfiguration
        fullName: ClusterConfiguration
        uid: '@azure/servicefabric.ClusterConfiguration'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
    name: ServiceFabricClientGetClusterConfigurationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterConfigurationOptionalParams
        fullName: ServiceFabricClientGetClusterConfigurationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
    name: ClusterConfigurationUpgradeStatusInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterConfigurationUpgradeStatusInfo
        fullName: ClusterConfigurationUpgradeStatusInfo
        uid: '@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
    name: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
        fullName: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
    name: ServiceFabricClientGetClusterEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterEventListOptionalParams
        fullName: ServiceFabricClientGetClusterEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterHealth>
    name: ClusterHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterHealth
        fullName: ClusterHealth
        uid: '@azure/servicefabric.ClusterHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
    name: ServiceFabricClientGetClusterHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthOptionalParams
        fullName: ServiceFabricClientGetClusterHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
    name: ClusterHealthChunk>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterHealthChunk
        fullName: ClusterHealthChunk
        uid: '@azure/servicefabric.ClusterHealthChunk'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
    name: ServiceFabricClientGetClusterHealthChunkOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthChunkOptionalParams
        fullName: ServiceFabricClientGetClusterHealthChunkOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
    name: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
        fullName: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterManifest>
    name: ClusterManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterManifest
        fullName: ClusterManifest
        uid: '@azure/servicefabric.ClusterManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
    name: ServiceFabricClientGetClusterManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterManifestOptionalParams
        fullName: ServiceFabricClientGetClusterManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
    name: ClusterUpgradeProgressObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterUpgradeProgressObject
        fullName: ClusterUpgradeProgressObject
        uid: '@azure/servicefabric.ClusterUpgradeProgressObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
    name: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
        fullName: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterVersion>
    name: ClusterVersion>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterVersion
        fullName: ClusterVersion
        uid: '@azure/servicefabric.ClusterVersion'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
    name: ServiceFabricClientGetClusterVersionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterVersionOptionalParams
        fullName: ServiceFabricClientGetClusterVersionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
    name: ComposeDeploymentStatusInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComposeDeploymentStatusInfo
        fullName: ComposeDeploymentStatusInfo
        uid: '@azure/servicefabric.ComposeDeploymentStatusInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
    name: PagedComposeDeploymentStatusInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedComposeDeploymentStatusInfoList
        fullName: PagedComposeDeploymentStatusInfoList
        uid: '@azure/servicefabric.PagedComposeDeploymentStatusInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
    name: ComposeDeploymentUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComposeDeploymentUpgradeProgressInfo
        fullName: ComposeDeploymentUpgradeProgressInfo
        uid: '@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ContainerLogs>
    name: ContainerLogs>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerLogs
        fullName: ContainerLogs
        uid: '@azure/servicefabric.ContainerLogs'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
    name: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
        fullName: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
    name: 'ContainerInstanceEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerInstanceEvent
        fullName: ContainerInstanceEvent
        uid: '@azure/servicefabric.ContainerInstanceEvent'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
    name: ServiceFabricClientGetContainersEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetContainersEventListOptionalParams
        fullName: ServiceFabricClientGetContainersEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
    name: ServiceFabricClientGetCorrelatedEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetCorrelatedEventListOptionalParams
        fullName: ServiceFabricClientGetCorrelatedEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
    name: PartitionDataLossProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionDataLossProgress
        fullName: PartitionDataLossProgress
        uid: '@azure/servicefabric.PartitionDataLossProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
    name: ServiceFabricClientGetDataLossProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDataLossProgressOptionalParams
        fullName: ServiceFabricClientGetDataLossProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
    name: DeployedApplicationHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedApplicationHealth
        fullName: DeployedApplicationHealth
        uid: '@azure/servicefabric.DeployedApplicationHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
    name: DeployedApplicationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedApplicationInfo
        fullName: DeployedApplicationInfo
        uid: '@azure/servicefabric.DeployedApplicationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
    name: PagedDeployedApplicationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedDeployedApplicationInfoList
        fullName: PagedDeployedApplicationInfoList
        uid: '@azure/servicefabric.PagedDeployedApplicationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
    name: 'DeployedCodePackageInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedCodePackageInfo
        fullName: DeployedCodePackageInfo
        uid: '@azure/servicefabric.DeployedCodePackageInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
    name: DeployedServicePackageHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServicePackageHealth
        fullName: DeployedServicePackageHealth
        uid: '@azure/servicefabric.DeployedServicePackageHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
    name: 'DeployedServicePackageInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServicePackageInfo
        fullName: DeployedServicePackageInfo
        uid: '@azure/servicefabric.DeployedServicePackageInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
    name: 'DeployedServiceTypeInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServiceTypeInfo
        fullName: DeployedServiceTypeInfo
        uid: '@azure/servicefabric.DeployedServiceTypeInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
    name: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
    name: 'OperationStatus[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/servicefabric.OperationStatus'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
    name: ServiceFabricClientGetFaultOperationListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetFaultOperationListOptionalParams
        fullName: ServiceFabricClientGetFaultOperationListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ImageStoreContent>
    name: ImageStoreContent>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageStoreContent
        fullName: ImageStoreContent
        uid: '@azure/servicefabric.ImageStoreContent'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
    name: ServiceFabricClientGetImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreContentOptionalParams
        fullName: ServiceFabricClientGetImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
    name: ServiceFabricClientGetImageStoreRootContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreRootContentOptionalParams
        fullName: ServiceFabricClientGetImageStoreRootContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.UploadSession>
    name: UploadSession>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UploadSession
        fullName: UploadSession
        uid: '@azure/servicefabric.UploadSession'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
    name: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
        fullName: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
    name: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
        fullName: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
    name: ServiceFabricClientGetNameExistsInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNameExistsInfoOptionalParams
        fullName: ServiceFabricClientGetNameExistsInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
    name: ServiceFabricClientGetNodeEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeEventListOptionalParams
        fullName: ServiceFabricClientGetNodeEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeHealth>
    name: NodeHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeHealth
        fullName: NodeHealth
        uid: '@azure/servicefabric.NodeHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
    name: ServiceFabricClientGetNodeHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeHealthOptionalParams
        fullName: ServiceFabricClientGetNodeHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeInfo>
    name: NodeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeInfo
        fullName: NodeInfo
        uid: '@azure/servicefabric.NodeInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
    name: ServiceFabricClientGetNodeInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeInfoOptionalParams
        fullName: ServiceFabricClientGetNodeInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
    name: PagedNodeInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedNodeInfoList
        fullName: PagedNodeInfoList
        uid: '@azure/servicefabric.PagedNodeInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
    name: ServiceFabricClientGetNodeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeInfoListOptionalParams
        fullName: ServiceFabricClientGetNodeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeLoadInfo>
    name: NodeLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeLoadInfo
        fullName: NodeLoadInfo
        uid: '@azure/servicefabric.NodeLoadInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
    name: ServiceFabricClientGetNodeLoadInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeLoadInfoOptionalParams
        fullName: ServiceFabricClientGetNodeLoadInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
    name: NodeTransitionProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeTransitionProgress
        fullName: NodeTransitionProgress
        uid: '@azure/servicefabric.NodeTransitionProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
    name: ServiceFabricClientGetNodeTransitionProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeTransitionProgressOptionalParams
        fullName: ServiceFabricClientGetNodeTransitionProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
    name: ServiceFabricClientGetNodesEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodesEventListOptionalParams
        fullName: ServiceFabricClientGetNodesEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
    name: PartitionBackupConfigurationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionBackupConfigurationInfo
        fullName: PartitionBackupConfigurationInfo
        uid: '@azure/servicefabric.PartitionBackupConfigurationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
    name: ServiceFabricClientGetPartitionBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupListOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.BackupProgressInfo>
    name: BackupProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupProgressInfo
        fullName: BackupProgressInfo
        uid: '@azure/servicefabric.BackupProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
    name: ServiceFabricClientGetPartitionBackupProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
    name: ServiceFabricClientGetPartitionEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionHealth>
    name: PartitionHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionHealth
        fullName: PartitionHealth
        uid: '@azure/servicefabric.PartitionHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
    name: ServiceFabricClientGetPartitionHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionHealthOptionalParams
        fullName: ServiceFabricClientGetPartitionHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
    name: ServiceFabricClientGetPartitionInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionInfoOptionalParams
        fullName: ServiceFabricClientGetPartitionInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
    name: PagedServicePartitionInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedServicePartitionInfoList
        fullName: PagedServicePartitionInfoList
        uid: '@azure/servicefabric.PagedServicePartitionInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
    name: ServiceFabricClientGetPartitionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionInfoListOptionalParams
        fullName: ServiceFabricClientGetPartitionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
    name: PartitionLoadInformation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionLoadInformation
        fullName: PartitionLoadInformation
        uid: '@azure/servicefabric.PartitionLoadInformation'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
    name: ServiceFabricClientGetPartitionLoadInformationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionLoadInformationOptionalParams
        fullName: ServiceFabricClientGetPartitionLoadInformationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
    name: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
    name: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
    name: PartitionRestartProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionRestartProgress
        fullName: PartitionRestartProgress
        uid: '@azure/servicefabric.PartitionRestartProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
    name: ServiceFabricClientGetPartitionRestartProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionRestartProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionRestartProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
    name: RestoreProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RestoreProgressInfo
        fullName: RestoreProgressInfo
        uid: '@azure/servicefabric.RestoreProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
    name: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
    name: ServiceFabricClientGetPartitionsEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionsEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionsEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PropertyInfo>
    name: PropertyInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PropertyInfo
        fullName: PropertyInfo
        uid: '@azure/servicefabric.PropertyInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
    name: ServiceFabricClientGetPropertyInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPropertyInfoOptionalParams
        fullName: ServiceFabricClientGetPropertyInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
    name: PagedPropertyInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedPropertyInfoList
        fullName: PagedPropertyInfoList
        uid: '@azure/servicefabric.PagedPropertyInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
    name: ServiceFabricClientGetPropertyInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPropertyInfoListOptionalParams
        fullName: ServiceFabricClientGetPropertyInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
    name: 'FabricCodeVersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricCodeVersionInfo
        fullName: FabricCodeVersionInfo
        uid: '@azure/servicefabric.FabricCodeVersionInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
    name: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
        fullName: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
    name: 'FabricConfigVersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricConfigVersionInfo
        fullName: FabricConfigVersionInfo
        uid: '@azure/servicefabric.FabricConfigVersionInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
    name: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
        fullName: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
    name: PartitionQuorumLossProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionQuorumLossProgress
        fullName: PartitionQuorumLossProgress
        uid: '@azure/servicefabric.PartitionQuorumLossProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
    name: ServiceFabricClientGetQuorumLossProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetQuorumLossProgressOptionalParams
        fullName: ServiceFabricClientGetQuorumLossProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
    name: 'RepairTask[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RepairTask
        fullName: RepairTask
        uid: '@azure/servicefabric.RepairTask'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
    name: ServiceFabricClientGetRepairTaskListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetRepairTaskListOptionalParams
        fullName: ServiceFabricClientGetRepairTaskListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
    name: ServiceFabricClientGetReplicaHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaHealthOptionalParams
        fullName: ServiceFabricClientGetReplicaHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
    name: ServiceFabricClientGetReplicaInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaInfoOptionalParams
        fullName: ServiceFabricClientGetReplicaInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
    name: PagedReplicaInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedReplicaInfoList
        fullName: PagedReplicaInfoList
        uid: '@azure/servicefabric.PagedReplicaInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
    name: ServiceFabricClientGetReplicaInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaInfoListOptionalParams
        fullName: ServiceFabricClientGetReplicaInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
    name: ServiceFabricClientGetServiceBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceBackupListOptionalParams
        fullName: ServiceFabricClientGetServiceBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
    name: ServiceFabricClientGetServiceDescriptionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceDescriptionOptionalParams
        fullName: ServiceFabricClientGetServiceDescriptionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
    name: ServiceFabricClientGetServiceEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceEventListOptionalParams
        fullName: ServiceFabricClientGetServiceEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceHealth>
    name: ServiceHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceHealth
        fullName: ServiceHealth
        uid: '@azure/servicefabric.ServiceHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
    name: ServiceFabricClientGetServiceHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceHealthOptionalParams
        fullName: ServiceFabricClientGetServiceHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
    name: ServiceFabricClientGetServiceInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceInfoOptionalParams
        fullName: ServiceFabricClientGetServiceInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
    name: PagedServiceInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedServiceInfoList
        fullName: PagedServiceInfoList
        uid: '@azure/servicefabric.PagedServiceInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
    name: ServiceFabricClientGetServiceInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceInfoListOptionalParams
        fullName: ServiceFabricClientGetServiceInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
    name: ServiceTypeManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeManifest
        fullName: ServiceTypeManifest
        uid: '@azure/servicefabric.ServiceTypeManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
    name: ServiceFabricClientGetServiceManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceManifestOptionalParams
        fullName: ServiceFabricClientGetServiceManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceNameInfo>
    name: ServiceNameInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceNameInfo
        fullName: ServiceNameInfo
        uid: '@azure/servicefabric.ServiceNameInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
    name: ServiceFabricClientGetServiceNameInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceNameInfoOptionalParams
        fullName: ServiceFabricClientGetServiceNameInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
    name: ServiceTypeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: '@azure/servicefabric.ServiceTypeInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
    name: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
        fullName: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
    name: 'ServiceTypeInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: '@azure/servicefabric.ServiceTypeInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
    name: ServiceFabricClientGetServiceTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetServiceTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
    name: ServiceFabricClientGetServicesEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServicesEventListOptionalParams
        fullName: ServiceFabricClientGetServicesEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
    name: PagedSubNameInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedSubNameInfoList
        fullName: PagedSubNameInfoList
        uid: '@azure/servicefabric.PagedSubNameInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
    name: ServiceFabricClientGetSubNameInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetSubNameInfoListOptionalParams
        fullName: ServiceFabricClientGetSubNameInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
    name: UpgradeOrchestrationServiceState>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
    name: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
        fullName: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
  - uid: '@azure/servicefabric.ContainerApiRequestBody'
    name: ContainerApiRequestBody
    spec.typeScript:
      - name: ContainerApiRequestBody
        fullName: ContainerApiRequestBody
        uid: '@azure/servicefabric.ContainerApiRequestBody'
  - uid: ServiceCallback<@azure/servicefabric.ContainerApiResponse>
    name: ContainerApiResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerApiResponse
        fullName: ContainerApiResponse
        uid: '@azure/servicefabric.ContainerApiResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
    name: ServiceFabricClientInvokeContainerApiOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeContainerApiOptionalParams
        fullName: ServiceFabricClientInvokeContainerApiOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
    name: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
        fullName: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
    name: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
        fullName: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
  - uid: '@azure/servicefabric.ChaosScheduleDescription'
    name: ChaosScheduleDescription
    spec.typeScript:
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: '@azure/servicefabric.ChaosScheduleDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
    name: ServiceFabricClientPostChaosScheduleOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientPostChaosScheduleOptionalParams
        fullName: ServiceFabricClientPostChaosScheduleOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
    name: ServiceFabricClientProvisionApplicationTypeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientProvisionApplicationTypeOptionalParams
        fullName: ServiceFabricClientProvisionApplicationTypeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
  - uid: '@azure/servicefabric.ProvisionFabricDescription'
    name: ProvisionFabricDescription
    spec.typeScript:
      - name: ProvisionFabricDescription
        fullName: ProvisionFabricDescription
        uid: '@azure/servicefabric.ProvisionFabricDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
    name: ServiceFabricClientProvisionClusterOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientProvisionClusterOptionalParams
        fullName: ServiceFabricClientProvisionClusterOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
  - uid: '@azure/servicefabric.PropertyDescription'
    name: PropertyDescription
    spec.typeScript:
      - name: PropertyDescription
        fullName: PropertyDescription
        uid: '@azure/servicefabric.PropertyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
    name: ServiceFabricClientPutPropertyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientPutPropertyOptionalParams
        fullName: ServiceFabricClientPutPropertyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
    name: ServiceFabricClientRecoverAllPartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverAllPartitionsOptionalParams
        fullName: ServiceFabricClientRecoverAllPartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
    name: ServiceFabricClientRecoverPartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverPartitionOptionalParams
        fullName: ServiceFabricClientRecoverPartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
    name: ServiceFabricClientRecoverServicePartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverServicePartitionsOptionalParams
        fullName: ServiceFabricClientRecoverServicePartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
    name: ServiceFabricClientRecoverSystemPartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverSystemPartitionsOptionalParams
        fullName: ServiceFabricClientRecoverSystemPartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
    name: ServiceFabricClientRemoveComposeDeploymentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveComposeDeploymentOptionalParams
        fullName: ServiceFabricClientRemoveComposeDeploymentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
    name: ServiceFabricClientRemoveNodeStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveNodeStateOptionalParams
        fullName: ServiceFabricClientRemoveNodeStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
    name: ServiceFabricClientRemoveReplicaOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveReplicaOptionalParams
        fullName: ServiceFabricClientRemoveReplicaOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
  - uid: '@azure/servicefabric.HealthInformation'
    name: HealthInformation
    spec.typeScript:
      - name: HealthInformation
        fullName: HealthInformation
        uid: '@azure/servicefabric.HealthInformation'
  - uid: '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
    name: ServiceFabricClientReportApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportApplicationHealthOptionalParams
        fullName: ServiceFabricClientReportApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
    name: ServiceFabricClientReportClusterHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportClusterHealthOptionalParams
        fullName: ServiceFabricClientReportClusterHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
    name: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
        fullName: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
    name: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
        fullName: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
    name: ServiceFabricClientReportNodeHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportNodeHealthOptionalParams
        fullName: ServiceFabricClientReportNodeHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
    name: ServiceFabricClientReportPartitionHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportPartitionHealthOptionalParams
        fullName: ServiceFabricClientReportPartitionHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
    name: ServiceFabricClientReportReplicaHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportReplicaHealthOptionalParams
        fullName: ServiceFabricClientReportReplicaHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
    name: ServiceFabricClientReportServiceHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportServiceHealthOptionalParams
        fullName: ServiceFabricClientReportServiceHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
    name: ServiceFabricClientResetPartitionLoadOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResetPartitionLoadOptionalParams
        fullName: ServiceFabricClientResetPartitionLoadOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
    name: ResolvedServicePartition>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResolvedServicePartition
        fullName: ResolvedServicePartition
        uid: '@azure/servicefabric.ResolvedServicePartition'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
    name: ServiceFabricClientResolveServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResolveServiceOptionalParams
        fullName: ServiceFabricClientResolveServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
  - uid: '@azure/servicefabric.RestartDeployedCodePackageDescription'
    name: RestartDeployedCodePackageDescription
    spec.typeScript:
      - name: RestartDeployedCodePackageDescription
        fullName: RestartDeployedCodePackageDescription
        uid: '@azure/servicefabric.RestartDeployedCodePackageDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
    name: ServiceFabricClientRestartDeployedCodePackageOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartDeployedCodePackageOptionalParams
        fullName: ServiceFabricClientRestartDeployedCodePackageOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
  - uid: '@azure/servicefabric.RestartNodeDescription'
    name: RestartNodeDescription
    spec.typeScript:
      - name: RestartNodeDescription
        fullName: RestartNodeDescription
        uid: '@azure/servicefabric.RestartNodeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
    name: ServiceFabricClientRestartNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartNodeOptionalParams
        fullName: ServiceFabricClientRestartNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
    name: ServiceFabricClientRestartReplicaOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartReplicaOptionalParams
        fullName: ServiceFabricClientRestartReplicaOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
  - uid: '@azure/servicefabric.RestorePartitionDescription'
    name: RestorePartitionDescription
    spec.typeScript:
      - name: RestorePartitionDescription
        fullName: RestorePartitionDescription
        uid: '@azure/servicefabric.RestorePartitionDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
    name: ServiceFabricClientRestorePartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestorePartitionOptionalParams
        fullName: ServiceFabricClientRestorePartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
    name: ServiceFabricClientResumeApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeApplicationBackupOptionalParams
        fullName: ServiceFabricClientResumeApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ResumeApplicationUpgradeDescription'
    name: ResumeApplicationUpgradeDescription
    spec.typeScript:
      - name: ResumeApplicationUpgradeDescription
        fullName: ResumeApplicationUpgradeDescription
        uid: '@azure/servicefabric.ResumeApplicationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
    name: ServiceFabricClientResumeApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientResumeApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ResumeClusterUpgradeDescription'
    name: ResumeClusterUpgradeDescription
    spec.typeScript:
      - name: ResumeClusterUpgradeDescription
        fullName: ResumeClusterUpgradeDescription
        uid: '@azure/servicefabric.ResumeClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
    name: ServiceFabricClientResumeClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeClusterUpgradeOptionalParams
        fullName: ServiceFabricClientResumeClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
    name: ServiceFabricClientResumePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumePartitionBackupOptionalParams
        fullName: ServiceFabricClientResumePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
    name: ServiceFabricClientResumeServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeServiceBackupOptionalParams
        fullName: ServiceFabricClientResumeServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
    name: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
    name: ServiceFabricClientRollbackClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRollbackClusterUpgradeOptionalParams
        fullName: ServiceFabricClientRollbackClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
    name: UpgradeOrchestrationServiceState
    spec.typeScript:
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
  - uid: ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
    name: UpgradeOrchestrationServiceStateSummary>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UpgradeOrchestrationServiceStateSummary
        fullName: UpgradeOrchestrationServiceStateSummary
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceStateSummary'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
    name: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
        fullName: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription'
    name: ApplicationUpgradeDescription
    spec.typeScript:
      - name: ApplicationUpgradeDescription
        fullName: ApplicationUpgradeDescription
        uid: '@azure/servicefabric.ApplicationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
    name: ServiceFabricClientStartApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientStartApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ChaosParameters'
    name: ChaosParameters
    spec.typeScript:
      - name: ChaosParameters
        fullName: ChaosParameters
        uid: '@azure/servicefabric.ChaosParameters'
  - uid: '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
    name: ServiceFabricClientStartChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartChaosOptionalParams
        fullName: ServiceFabricClientStartChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
  - uid: '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
    name: ClusterConfigurationUpgradeDescription
    spec.typeScript:
      - name: ClusterConfigurationUpgradeDescription
        fullName: ClusterConfigurationUpgradeDescription
        uid: '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
    name: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
        fullName: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription'
    name: StartClusterUpgradeDescription
    spec.typeScript:
      - name: StartClusterUpgradeDescription
        fullName: StartClusterUpgradeDescription
        uid: '@azure/servicefabric.StartClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
    name: ServiceFabricClientStartClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartClusterUpgradeOptionalParams
        fullName: ServiceFabricClientStartClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
    name: ComposeDeploymentUpgradeDescription
    spec.typeScript:
      - name: ComposeDeploymentUpgradeDescription
        fullName: ComposeDeploymentUpgradeDescription
        uid: '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
    name: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
        fullName: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
    name: ServiceFabricClientStartDataLossOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartDataLossOptionalParams
        fullName: ServiceFabricClientStartDataLossOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
    name: ServiceFabricClientStartNodeTransitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartNodeTransitionOptionalParams
        fullName: ServiceFabricClientStartNodeTransitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
    name: ServiceFabricClientStartPartitionRestartOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartPartitionRestartOptionalParams
        fullName: ServiceFabricClientStartPartitionRestartOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
    name: ServiceFabricClientStartQuorumLossOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartQuorumLossOptionalParams
        fullName: ServiceFabricClientStartQuorumLossOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
    name: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
        fullName: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
    name: ServiceFabricClientStopChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStopChaosOptionalParams
        fullName: ServiceFabricClientStopChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
  - uid: '@azure/servicefabric.PropertyBatchDescriptionList'
    name: PropertyBatchDescriptionList
    spec.typeScript:
      - name: PropertyBatchDescriptionList
        fullName: PropertyBatchDescriptionList
        uid: '@azure/servicefabric.PropertyBatchDescriptionList'
  - uid: '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
    name: ServiceFabricClientSubmitPropertyBatchOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSubmitPropertyBatchOptionalParams
        fullName: ServiceFabricClientSubmitPropertyBatchOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
    name: ServiceFabricClientSuspendApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendApplicationBackupOptionalParams
        fullName: ServiceFabricClientSuspendApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
    name: ServiceFabricClientSuspendPartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendPartitionBackupOptionalParams
        fullName: ServiceFabricClientSuspendPartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
    name: ServiceFabricClientSuspendServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendServiceBackupOptionalParams
        fullName: ServiceFabricClientSuspendServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
    name: UnprovisionApplicationTypeDescriptionInfo
    spec.typeScript:
      - name: UnprovisionApplicationTypeDescriptionInfo
        fullName: UnprovisionApplicationTypeDescriptionInfo
        uid: '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
  - uid: '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
    name: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
        fullName: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
  - uid: '@azure/servicefabric.UnprovisionFabricDescription'
    name: UnprovisionFabricDescription
    spec.typeScript:
      - name: UnprovisionFabricDescription
        fullName: UnprovisionFabricDescription
        uid: '@azure/servicefabric.UnprovisionFabricDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
    name: ServiceFabricClientUnprovisionClusterOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUnprovisionClusterOptionalParams
        fullName: ServiceFabricClientUnprovisionClusterOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
  - uid: '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
    name: ApplicationUpgradeUpdateDescription
    spec.typeScript:
      - name: ApplicationUpgradeUpdateDescription
        fullName: ApplicationUpgradeUpdateDescription
        uid: '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
    name: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
    name: ServiceFabricClientUpdateBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateBackupPolicyOptionalParams
        fullName: ServiceFabricClientUpdateBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.UpdateClusterUpgradeDescription'
    name: UpdateClusterUpgradeDescription
    spec.typeScript:
      - name: UpdateClusterUpgradeDescription
        fullName: UpdateClusterUpgradeDescription
        uid: '@azure/servicefabric.UpdateClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
    name: ServiceFabricClientUpdateClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateClusterUpgradeOptionalParams
        fullName: ServiceFabricClientUpdateClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
    name: RepairTaskUpdateHealthPolicyDescription
    spec.typeScript:
      - name: RepairTaskUpdateHealthPolicyDescription
        fullName: RepairTaskUpdateHealthPolicyDescription
        uid: '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
    name: ServiceFabricClientUpdateServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateServiceOptionalParams
        fullName: ServiceFabricClientUpdateServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
    name: ServiceFabricClientUploadFileOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUploadFileOptionalParams
        fullName: ServiceFabricClientUploadFileOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'
    name: ServiceFabricClientUploadFileChunkOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUploadFileChunkOptionalParams
        fullName: ServiceFabricClientUploadFileChunkOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'