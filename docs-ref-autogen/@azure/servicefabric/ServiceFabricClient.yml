### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClient'
    name: ServiceFabricClient
    fullName: ServiceFabricClient
    children:
      - '@azure/servicefabric.ServiceFabricClient.backupPartition'
      - '@azure/servicefabric.ServiceFabricClient.backupPartition_1'
      - '@azure/servicefabric.ServiceFabricClient.backupPartition_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation_1'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_1'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_2'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.createApplication'
      - '@azure/servicefabric.ServiceFabricClient.createApplication_1'
      - '@azure/servicefabric.ServiceFabricClient.createApplication_2'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_1'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_2'
      - '@azure/servicefabric.ServiceFabricClient.createName'
      - '@azure/servicefabric.ServiceFabricClient.createName_1'
      - '@azure/servicefabric.ServiceFabricClient.createName_2'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.createService'
      - '@azure/servicefabric.ServiceFabricClient.createService_1'
      - '@azure/servicefabric.ServiceFabricClient.createService_2'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_1'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteName'
      - '@azure/servicefabric.ServiceFabricClient.deleteName_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteName_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteService'
      - '@azure/servicefabric.ServiceFabricClient.deleteService_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteService_2'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_1'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_2'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.disableNode'
      - '@azure/servicefabric.ServiceFabricClient.disableNode_1'
      - '@azure/servicefabric.ServiceFabricClient.disableNode_2'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableNode'
      - '@azure/servicefabric.ServiceFabricClient.enableNode_1'
      - '@azure/servicefabric.ServiceFabricClient.enableNode_2'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata_1'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata_2'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaos'
      - '@azure/servicefabric.ServiceFabricClient.getChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterLoad'
      - '@azure/servicefabric.ServiceFabricClient.getClusterLoad_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterLoad_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_1'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_2'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_1'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreFolderSize'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreFolderSize_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreFolderSize_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootFolderSize'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootFolderSize_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootFolderSize_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_2'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_1'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getUnplacedReplicaInformation'
      - '@azure/servicefabric.ServiceFabricClient.getUnplacedReplicaInformation_1'
      - '@azure/servicefabric.ServiceFabricClient.getUnplacedReplicaInformation_2'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_1'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2'
      - '@azure/servicefabric.ServiceFabricClient.meshApplication'
      - '@azure/servicefabric.ServiceFabricClient.meshCodePackage'
      - '@azure/servicefabric.ServiceFabricClient.meshGateway'
      - '@azure/servicefabric.ServiceFabricClient.meshNetwork'
      - '@azure/servicefabric.ServiceFabricClient.meshSecret'
      - '@azure/servicefabric.ServiceFabricClient.meshSecretValue'
      - '@azure/servicefabric.ServiceFabricClient.meshService'
      - '@azure/servicefabric.ServiceFabricClient.meshServiceReplica'
      - '@azure/servicefabric.ServiceFabricClient.meshVolume'
      - '@azure/servicefabric.ServiceFabricClient.movePrimaryReplica'
      - '@azure/servicefabric.ServiceFabricClient.movePrimaryReplica_1'
      - '@azure/servicefabric.ServiceFabricClient.movePrimaryReplica_2'
      - '@azure/servicefabric.ServiceFabricClient.moveSecondaryReplica'
      - '@azure/servicefabric.ServiceFabricClient.moveSecondaryReplica_1'
      - '@azure/servicefabric.ServiceFabricClient.moveSecondaryReplica_2'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_1'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_2'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_1'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_2'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster_1'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster_2'
      - '@azure/servicefabric.ServiceFabricClient.putProperty'
      - '@azure/servicefabric.ServiceFabricClient.putProperty_1'
      - '@azure/servicefabric.ServiceFabricClient.putProperty_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_1'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_2'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState_1'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState_2'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica_1'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica_2'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_1'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_2'
      - '@azure/servicefabric.ServiceFabricClient.resolveService'
      - '@azure/servicefabric.ServiceFabricClient.resolveService_1'
      - '@azure/servicefabric.ServiceFabricClient.resolveService_2'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_1'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_2'
      - '@azure/servicefabric.ServiceFabricClient.restartNode'
      - '@azure/servicefabric.ServiceFabricClient.restartNode_1'
      - '@azure/servicefabric.ServiceFabricClient.restartNode_2'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica_1'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica_2'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition_1'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.sendOperationRequest'
      - '@azure/servicefabric.ServiceFabricClient.sendRequest'
      - '@azure/servicefabric.ServiceFabricClient.constructor'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_1'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_2'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startChaos'
      - '@azure/servicefabric.ServiceFabricClient.startChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.startChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss_1'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss_2'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition_1'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition_2'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_1'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_2'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_1'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_2'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_1'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.toggleVerboseServicePlacementHealthReporting'
      - '@azure/servicefabric.ServiceFabricClient.toggleVerboseServicePlacementHealthReporting_1'
      - '@azure/servicefabric.ServiceFabricClient.toggleVerboseServicePlacementHealthReporting_2'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_1'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_2'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_1'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_2'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_1'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.updateService'
      - '@azure/servicefabric.ServiceFabricClient.updateService_1'
      - '@azure/servicefabric.ServiceFabricClient.updateService_2'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile_1'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile_2'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_1'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_2'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/servicefabric.ServiceFabricClientContext'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition'
    name: 'backupPartition(string, Models.ServiceFabricClientBackupPartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-101">상태 저장 지속형된 파티션 상태의 백업을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-101">Creates a backup of the stateful persisted partition's state.</span></span> <span data-ttu-id="493d4-102">파티션을 이미 사용 하는 경우 동일한 백업 저장소에 생성 됩니다 정기적으로 백업 되 기본적으로 다음, 새 백업.</span><span class="sxs-lookup"><span data-stu-id="493d4-102">In case the partition is already being periodically backed up, then by default the new backup is created at the same backup storage.</span></span> <span data-ttu-id="493d4-103">요청 본문의 일부로 백업 저장소 세부 정보를 지정 하 여 동일한 재정의할 수도 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-103">One can also override the same by specifying the backup storage details as part of the request body.</span></span> <span data-ttu-id="493d4-104">백업이 시작 된 후에 GetBackupProgress 작업을 사용 하 여 해당 진행률을 추적할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-104">Once the backup is initiated, its progress can be tracked using the GetBackupProgress operation.</span></span>
      <span data-ttu-id="493d4-105">이 경우 작업 시간이 초과 쿼리 매개 변수에서 큰 백업 시간 제한 값을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-105">In case, the operation times out, specify a greater backup timeout value in the query parameter.</span></span>
    syntax:
      content: 'function backupPartition(partitionId: string, options?: Models.ServiceFabricClientBackupPartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-106">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-106">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientBackupPartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition_1'
    name: 'backupPartition(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-107">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-107">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-108">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-108">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition_2'
    name: 'backupPartition(string, ServiceFabricClientBackupPartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, options: ServiceFabricClientBackupPartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-109">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-109">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
          description: <span data-ttu-id="493d4-110">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-110">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-111">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-111">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation'
    name: 'cancelOperation(string, boolean, Models.ServiceFabricClientCancelOperationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-112">다음 Api CancelOperation를 사용 하 여 취소 될 수 있습니다는 오류 작업을 시작 합니다. StartDataLoss, StartQuorumLoss, StartPartitionRestart, StartNodeTransition.</span><span class="sxs-lookup"><span data-stu-id="493d4-112">The following APIs start fault operations that may be cancelled by using CancelOperation: StartDataLoss, StartQuorumLoss, StartPartitionRestart, StartNodeTransition.</span></span>
      <span data-ttu-id="493d4-113">force가 false인 경우 지정된 사용자로 인한 작업이 정상적으로 중지되며 정리됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-113">If force is false, then the specified user-induced operation will be gracefully stopped and cleaned up.</span></span>  <span data-ttu-id="493d4-114">force가 true인 경우 명령이 중단되며, 일부 내부 상태가 남아 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-114">If force is true, the command will be aborted, and some internal state may be left behind.</span></span>  <span data-ttu-id="493d4-115">force를 true로 지정하는 것은 주의해서 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-115">Specifying force as true should be used with care.</span></span>  <span data-ttu-id="493d4-116">force가 true로 설정된 이 API를 호출하는 것은 이 API가 force가 false로 먼저 설정된 동일한 테스트 명령에서 호출될 때까지 또는 테스트 명령에 이미 OperationState.RollingBack의 OperationState가 있는 한 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-116">Calling this API with force set to true is not allowed until this API has already been called on the same test command with force set to false first, or unless the test command already has an OperationState of OperationState.RollingBack.</span></span>
      <span data-ttu-id="493d4-117">설명: OperationState.RollingBack 시스템은 수/임을 의미 명령을 실행 하 여 발생 하는 내부 시스템 상태를 정리 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-117">Clarification: OperationState.RollingBack means that the system will be/is cleaning up internal system state caused by executing the command.</span></span>  <span data-ttu-id="493d4-118">테스트 명령이 데이터 손실을 발생시킨 경우 데이터를 복원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-118">It will not restore data if the test command was to cause data loss.</span></span>  <span data-ttu-id="493d4-119">예를 들어 StartDataLoss를 호출한 다음, 이 API를 호출하는 경우 시스템은 명령 실행에서의 내부 상태만을 정리합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-119">For example, if you call StartDataLoss then call this API, the system will only clean up internal state from running the command.</span></span>
      <span data-ttu-id="493d4-120">명령이 데이터 손실을 충분히 진행시킨 경우 대상 파티션의 데이터를 복원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-120">It will not restore the target partition's data, if the command progressed far enough to cause data loss.</span></span>

      <span data-ttu-id="493d4-121">중요 참고: force를 사용 하 여이 API를 호출할 경우 = = true이 고, 내부 상태로 남아 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-121">Important note:  if this API is invoked with force==true, internal state may be left behind.</span></span>
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, options?: Models.ServiceFabricClientCancelOperationOptionalParams)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-122">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-122">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-123">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-123">This is passed into the corresponding GetProgress API</span></span>
        - id: force
          type:
            - boolean
          description: <span data-ttu-id="493d4-124">사용자로 인한 작업을 실행하여 수정된 내부 시스템 상태를 정상적으로 롤백 및 정리할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-124">Indicates whether to gracefully roll back and clean up internal system state modified by executing the user-induced operation.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCancelOperationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation_1'
    name: 'cancelOperation(string, boolean, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, callback: ServiceCallback<void>)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-125">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-125">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-126">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-126">This is passed into the corresponding GetProgress API</span></span>
        - id: force
          type:
            - boolean
          description: <span data-ttu-id="493d4-127">사용자로 인한 작업을 실행하여 수정된 내부 시스템 상태를 정상적으로 롤백 및 정리할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-127">Indicates whether to gracefully roll back and clean up internal system state modified by executing the user-induced operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-128">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-128">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation_2'
    name: 'cancelOperation(string, boolean, ServiceFabricClientCancelOperationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, options: ServiceFabricClientCancelOperationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-129">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-129">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-130">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-130">This is passed into the corresponding GetProgress API</span></span>
        - id: force
          type:
            - boolean
          description: <span data-ttu-id="493d4-131">사용자로 인한 작업을 실행하여 수정된 내부 시스템 상태를 정상적으로 롤백 및 정리할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-131">Indicates whether to gracefully roll back and clean up internal system state modified by executing the user-induced operation.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
          description: <span data-ttu-id="493d4-132">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-132">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-133">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-133">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask'
    name: 'cancelRepairTask(RepairTaskCancelDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-134">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-134">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: <span data-ttu-id="493d4-135">복구 작업을을 취소할 수에 대해 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-135">Describes the repair task to be cancelled.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_2'
    name: 'cancelRepairTask(RepairTaskCancelDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: <span data-ttu-id="493d4-136">복구 작업을을 취소할 수에 대해 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-136">Describes the repair task to be cancelled.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="493d4-137">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-137">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-138">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-138">The callback</span></span>
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_1'
    name: 'cancelRepairTask(RepairTaskCancelDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: <span data-ttu-id="493d4-139">복구 작업을을 취소할 수에 대해 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-139">Describes the repair task to be cancelled.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-140">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-140">The callback</span></span>
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession'
    name: 'commitImageStoreUploadSession(string, Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-141">모든 파일 청크 업로드 되었지만 업로드 세션에서 업로드를 완료 하려면 명시적으로 커밋할 수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-141">When all file chunks have been uploaded, the upload session needs to be committed explicitly to complete the upload.</span></span> <span data-ttu-id="493d4-142">이미지 저장소에 업로드 세션은 30 분 후 받은 마지막 청크는 만료 시간이 될 때까지 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-142">Image store preserves the upload session until the expiration time, which is 30 minutes after the last chunk received.</span></span>'
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, options?: Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-143">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-143">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-144">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-144">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_1'
    name: 'commitImageStoreUploadSession(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-145">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-145">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-146">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-146">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-147">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-147">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_2'
    name: 'commitImageStoreUploadSession(string, ServiceFabricClientCommitImageStoreUploadSessionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, options: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-148">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-148">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-149">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-149">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
          description: <span data-ttu-id="493d4-150">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-150">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-151">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-151">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, Models.ServiceFabricClientCopyImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-152">원본 이미지 저장소 상대 경로에서 대상 이미지 저장소 상대 경로에 이미지 저장소 콘텐츠를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-152">Copies the image store content from the source image store relative path to the destination image store relative path.</span></span>
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options?: Models.ServiceFabricClientCopyImageStoreContentOptionalParams)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: <span data-ttu-id="493d4-153">이미지 저장소에 대 한 복사 설명을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-153">Describes the copy description for the image store.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCopyImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_1'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: <span data-ttu-id="493d4-154">이미지 저장소에 대 한 복사 설명을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-154">Describes the copy description for the image store.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-155">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-155">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_2'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, ServiceFabricClientCopyImageStoreContentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options: ServiceFabricClientCopyImageStoreContentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: <span data-ttu-id="493d4-156">이미지 저장소에 대 한 복사 설명을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-156">Describes the copy description for the image store.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
          description: <span data-ttu-id="493d4-157">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-157">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-158">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-158">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication'
    name: 'createApplication(ApplicationDescription, Models.ServiceFabricClientCreateApplicationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-159">지정한 설명을 사용하여 Microsoft Azure Service Fabric 애플리케이션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-159">Creates a Service Fabric application using the specified description.</span></span>
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, options?: Models.ServiceFabricClientCreateApplicationOptionalParams)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: <span data-ttu-id="493d4-160">응용 프로그램 만들기에 대 한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-160">Description for creating an application.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateApplicationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication_1'
    name: 'createApplication(ApplicationDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: <span data-ttu-id="493d4-161">응용 프로그램 만들기에 대 한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-161">Description for creating an application.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-162">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-162">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication_2'
    name: 'createApplication(ApplicationDescription, ServiceFabricClientCreateApplicationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, options: ServiceFabricClientCreateApplicationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: <span data-ttu-id="493d4-163">응용 프로그램 만들기에 대 한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-163">Description for creating an application.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
          description: <span data-ttu-id="493d4-164">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-164">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-165">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-165">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy'
    name: 'createBackupPolicy(BackupPolicyDescription, Models.ServiceFabricClientCreateBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-166">Service Fabric 응용 프로그램, 서비스 또는 정기적인 백업에 대 한 파티션을 사용 하 여 나중에 연결 될 수 있는 백업 정책을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-166">Creates a backup policy which can be associated later with a Service Fabric application, service or a partition for periodic backup.</span></span>'
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, options?: Models.ServiceFabricClientCreateBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="493d4-167">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-167">Describes the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_1'
    name: 'createBackupPolicy(BackupPolicyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="493d4-168">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-168">Describes the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-169">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-169">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_2'
    name: 'createBackupPolicy(BackupPolicyDescription, ServiceFabricClientCreateBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, options: ServiceFabricClientCreateBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="493d4-170">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-170">Describes the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
          description: <span data-ttu-id="493d4-171">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-171">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-172">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-172">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, Models.ServiceFabricClientCreateComposeDeploymentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-173">Compose는 다중 컨테이너 응용 프로그램을 설명 하는 파일 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-173">Compose is a file format that describes multi-container applications.</span></span> <span data-ttu-id="493d4-174">이 API를 통해 컨테이너 기반 응용 프로그램 배포에 정의 된 Service Fabric 클러스터에 형식으로 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-174">This API allows deploying container based applications defined in compose format in a Service Fabric cluster.</span></span> <span data-ttu-id="493d4-175">배포가 만들어지면를 통해 해당 상태를 추적할 수 있습니다는 `GetComposeDeploymentStatus` API.</span><span class="sxs-lookup"><span data-stu-id="493d4-175">Once the deployment is created, its status can be tracked via the `GetComposeDeploymentStatus` API.</span></span>'
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options?: Models.ServiceFabricClientCreateComposeDeploymentOptionalParams)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: <span data-ttu-id="493d4-176">만들어야 하는 작성 배포를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-176">Describes the compose deployment that needs to be created.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateComposeDeploymentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_1'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: <span data-ttu-id="493d4-177">만들어야 하는 작성 배포를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-177">Describes the compose deployment that needs to be created.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-178">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-178">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_2'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, ServiceFabricClientCreateComposeDeploymentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options: ServiceFabricClientCreateComposeDeploymentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: <span data-ttu-id="493d4-179">만들어야 하는 작성 배포를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-179">Describes the compose deployment that needs to be created.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
          description: <span data-ttu-id="493d4-180">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-180">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-181">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-181">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName'
    name: 'createName(NameDescription, Models.ServiceFabricClientCreateNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-182">지정 된 Service Fabric 이름을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-182">Creates the specified Service Fabric name.</span></span>
    syntax:
      content: 'function createName(nameDescription: NameDescription, options?: Models.ServiceFabricClientCreateNameOptionalParams)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: <span data-ttu-id="493d4-183">만들려는 Service Fabric 이름을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-183">Describes the Service Fabric name to be created.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName_1'
    name: 'createName(NameDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: <span data-ttu-id="493d4-184">만들려는 Service Fabric 이름을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-184">Describes the Service Fabric name to be created.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-185">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-185">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName_2'
    name: 'createName(NameDescription, ServiceFabricClientCreateNameOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, options: ServiceFabricClientCreateNameOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: <span data-ttu-id="493d4-186">만들려는 Service Fabric 이름을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-186">Describes the Service Fabric name to be created.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
          description: <span data-ttu-id="493d4-187">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-187">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-188">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-188">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask'
    name: 'createRepairTask(RepairTask, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-189">복구 관리자 서비스를 구성 하는 클러스터에 대 한이 API는 자동 또는 수동으로 실행 하는 복구 작업을 만드는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-189">For clusters that have the Repair Manager Service configured, this API provides a way to create repair tasks that run automatically or manually.</span></span>
      <span data-ttu-id="493d4-190">자동으로 실행 되는 복구 작업에 대 한 적절 한 복구 실행 기를 자동으로 실행 하려면 각 복구 작업에 대 한 실행 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-190">For repair tasks that run automatically, an appropriate repair executor must be running for each repair action to run automatically.</span></span>
      <span data-ttu-id="493d4-191">이들은 현재만 특별히 구성 된 Azure Cloud Services에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-191">These are currently only available in specially-configured Azure Cloud Services.</span></span>
      <span data-ttu-id="493d4-192">수동 복구 작업을 만들려면 영향을 받는 노드 이름 및 예상 되는 영향의 집합을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-192">To create a manual repair task, provide the set of impacted node names and the expected impact.</span></span> <span data-ttu-id="493d4-193">만든된 복구 상태의 변경 내용을 승인 작업을 하는 경우에 해당 노드에서 복구 작업을 안전 하 게 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-193">When the state of the created repair task changes to approved, you can safely perform repair actions on those nodes.</span></span>

      <span data-ttu-id="493d4-194">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-194">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="493d4-195">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-195">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask_2'
    name: 'createRepairTask(RepairTask, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="493d4-196">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-196">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="493d4-197">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-197">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-198">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-198">The callback</span></span>
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask_1'
    name: 'createRepairTask(RepairTask, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="493d4-199">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-199">Describes the repair task to be created or updated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-200">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-200">The callback</span></span>
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService'
    name: 'createService(string, Models.ServiceDescriptionUnion, Models.ServiceFabricClientCreateServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-201">이 api는 지정된 된 Service Fabric 응용 프로그램에서 새 Service Fabric 상태 비저장 또는 상태 저장 서비스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-201">This api allows creating a new Service Fabric stateless or stateful service under a specified Service Fabric application.</span></span> <span data-ttu-id="493d4-202">서비스 만들기에 대 한 설명을 파티션 정보와 배치 및 부하 분산에 대 한 선택적 속성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-202">The description for creating the service includes partitioning information and optional properties for placement and load balancing.</span></span> <span data-ttu-id="493d4-203">속성 중 일부를 나중에 수정할 수 있습니다 사용 하 여 `UpdateService` API.</span><span class="sxs-lookup"><span data-stu-id="493d4-203">Some of the properties can later be modified using `UpdateService` API.</span></span>
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, options?: Models.ServiceFabricClientCreateServiceOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-204">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-204">The identity of the application.</span></span> <span data-ttu-id="493d4-205">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-205">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-206">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-206">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-207">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-207">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: <span data-ttu-id="493d4-208">서비스를 만드는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-208">The information necessary to create a service.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService_1'
    name: 'createService(string, Models.ServiceDescriptionUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-209">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-209">The identity of the application.</span></span> <span data-ttu-id="493d4-210">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-210">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-211">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-211">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-212">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-212">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: <span data-ttu-id="493d4-213">서비스를 만드는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-213">The information necessary to create a service.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-214">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-214">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService_2'
    name: 'createService(string, Models.ServiceDescriptionUnion, ServiceFabricClientCreateServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, options: ServiceFabricClientCreateServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-215">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-215">The identity of the application.</span></span> <span data-ttu-id="493d4-216">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-216">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-217">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-217">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-218">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-218">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: <span data-ttu-id="493d4-219">서비스를 만드는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-219">The information necessary to create a service.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
          description: <span data-ttu-id="493d4-220">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-220">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-221">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-221">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-222">응용 프로그램 매니페스트에 정의 된 서비스 템플릿에서 서비스 패브릭 서비스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-222">Creates a Service Fabric service from the service template defined in the application manifest.</span></span>
      <span data-ttu-id="493d4-223">서비스 템플릿을 동일한 형식의 서비스 인스턴스에 대 한 동일한 될 속성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-223">A service template contains the properties that will be same for the service instance of the same type.</span></span> <span data-ttu-id="493d4-224">API를 통해 동일한 서비스 유형의 다른 서비스에 대 한 일반적으로 다른 속성을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-224">The API allows overriding the properties that are usually different for different services of the same service type.</span></span>
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options?: Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-225">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-225">The identity of the application.</span></span> <span data-ttu-id="493d4-226">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-226">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-227">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-227">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-228">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-228">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: <span data-ttu-id="493d4-229">응용 프로그램 매니페스트에 정의 된 서식 파일에서 만들어야 하는 서비스를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-229">Describes the service that needs to be created from the template defined in the application manifest.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_1'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-230">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-230">The identity of the application.</span></span> <span data-ttu-id="493d4-231">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-231">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-232">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-232">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-233">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-233">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: <span data-ttu-id="493d4-234">응용 프로그램 매니페스트에 정의 된 서식 파일에서 만들어야 하는 서비스를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-234">Describes the service that needs to be created from the template defined in the application manifest.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-235">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-235">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_2'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, ServiceFabricClientCreateServiceFromTemplateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options: ServiceFabricClientCreateServiceFromTemplateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-236">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-236">The identity of the application.</span></span> <span data-ttu-id="493d4-237">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-237">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-238">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-238">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-239">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-239">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: <span data-ttu-id="493d4-240">응용 프로그램 매니페스트에 정의 된 서식 파일에서 만들어야 하는 서비스를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-240">Describes the service that needs to be created from the template defined in the application manifest.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
          description: <span data-ttu-id="493d4-241">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-241">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-242">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-242">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication'
    name: 'deleteApplication(string, Models.ServiceFabricClientDeleteApplicationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-243">애플리케이션을 삭제하려면 먼저 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-243">An application must be created before it can be deleted.</span></span> <span data-ttu-id="493d4-244">애플리케이션을 삭제하면 해당 애플리케이션의 일부인 모든 서비스가 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-244">Deleting an application will delete all services that are part of that application.</span></span> <span data-ttu-id="493d4-245">기본적으로 Service Fabric은 서비스 복제를 정상적으로 닫은 후 다음 서비스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-245">By default, Service Fabric will try to close service replicas in a graceful manner and then delete the service.</span></span> <span data-ttu-id="493d4-246">하지만 서비스에서 복제본을 정상적으로 닫는 데 문제가 있으면 삭제 작업이 오래 걸리거나 중단될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-246">However, if a service is having issues closing the replica gracefully, the delete operation may take a long time or get stuck.</span></span>
      <span data-ttu-id="493d4-247">선택적인 ForceRemove 플래그를 사용하여 정상적인 닫기 시퀀스를 건너 뛰고 애플리케이션 및 모든 서비스를 강제로 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-247">Use the optional ForceRemove flag to skip the graceful close sequence and forcefully delete the application and all of its services.</span></span>
    syntax:
      content: 'function deleteApplication(applicationId: string, options?: Models.ServiceFabricClientDeleteApplicationOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-248">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-248">The identity of the application.</span></span> <span data-ttu-id="493d4-249">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-249">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-250">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-250">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-251">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-251">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteApplicationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication_1'
    name: 'deleteApplication(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-252">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-252">The identity of the application.</span></span> <span data-ttu-id="493d4-253">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-253">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-254">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-254">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-255">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-255">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-256">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-256">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication_2'
    name: 'deleteApplication(string, ServiceFabricClientDeleteApplicationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, options: ServiceFabricClientDeleteApplicationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-257">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-257">The identity of the application.</span></span> <span data-ttu-id="493d4-258">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-258">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-259">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-259">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-260">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-260">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
          description: <span data-ttu-id="493d4-261">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-261">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-262">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-262">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy'
    name: 'deleteBackupPolicy(string, Models.ServiceFabricClientDeleteBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-263">기존 백업 정책을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-263">Deletes an existing backup policy.</span></span> <span data-ttu-id="493d4-264">백업 정책은 삭제 하려면 먼저 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-264">A backup policy must be created before it can be deleted.</span></span> <span data-ttu-id="493d4-265">첫 번째 매핑을 삭제 하지 않고 Service Fabric 응용 프로그램, 서비스 또는 파티션에 연결 된 현재 백업 정책을 삭제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-265">A currently active backup policy, associated with any Service Fabric application, service or partition, cannot be deleted without first deleting the mapping.</span></span>'
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, options?: Models.ServiceFabricClientDeleteBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-266">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-266">The name of the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_1'
    name: 'deleteBackupPolicy(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-267">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-267">The name of the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-268">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-268">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_2'
    name: 'deleteBackupPolicy(string, ServiceFabricClientDeleteBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, options: ServiceFabricClientDeleteBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-269">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-269">The name of the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
          description: <span data-ttu-id="493d4-270">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-270">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-271">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-271">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent'
    name: 'deleteImageStoreContent(string, Models.ServiceFabricClientDeleteImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-272">지정된 이미지 저장소 상대 경로 내에서 발견되는 기존 이미지 저장소 콘텐츠를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-272">Deletes existing image store content being found within the given image store relative path.</span></span>
      <span data-ttu-id="493d4-273">이 명령은 업로드된 애플리케이션 패키지가 프로비저닝된 후에 이를 삭제하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-273">This command can be used to delete uploaded application packages once they are provisioned.</span></span>
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, options?: Models.ServiceFabricClientDeleteImageStoreContentOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-274">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-274">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_1'
    name: 'deleteImageStoreContent(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-275">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-275">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-276">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-276">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_2'
    name: 'deleteImageStoreContent(string, ServiceFabricClientDeleteImageStoreContentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, options: ServiceFabricClientDeleteImageStoreContentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-277">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-277">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
          description: <span data-ttu-id="493d4-278">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-278">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-279">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-279">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession'
    name: 'deleteImageStoreUploadSession(string, Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-280">삭제 요청에 만료 되 고 모든 이전에 업로드 된 파일 청크를 제거 하려면 기존 업로드 세션이 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-280">The DELETE request will cause the existing upload session to expire and remove any previously uploaded file chunks.</span></span>
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, options?: Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-281">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-281">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-282">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-282">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_1'
    name: 'deleteImageStoreUploadSession(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-283">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-283">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-284">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-284">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-285">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-285">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_2'
    name: 'deleteImageStoreUploadSession(string, ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, options: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-286">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-286">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-287">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-287">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
          description: <span data-ttu-id="493d4-288">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-288">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-289">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-289">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName'
    name: 'deleteName(string, Models.ServiceFabricClientDeleteNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-290">지정된 된 Service Fabric 이름을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-290">Deletes the specified Service Fabric name.</span></span> <span data-ttu-id="493d4-291">이름은 삭제 하려면 먼저 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-291">A name must be created before it can be deleted.</span></span>
      <span data-ttu-id="493d4-292">자식 속성을 사용 하 여 이름을 삭제 하지 못합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-292">Deleting a name with child properties will fail.</span></span>
    syntax:
      content: 'function deleteName(nameId: string, options?: Models.ServiceFabricClientDeleteNameOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-293">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-293">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientDeleteNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName_1'
    name: 'deleteName(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-294">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-294">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-295">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-295">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName_2'
    name: 'deleteName(string, ServiceFabricClientDeleteNameOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, options: ServiceFabricClientDeleteNameOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-296">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-296">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
          description: <span data-ttu-id="493d4-297">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-297">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-298">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-298">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty'
    name: 'deleteProperty(string, string, Models.ServiceFabricClientDeletePropertyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-299">지정된 이름에서 지정된 Service Fabric 속성을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-299">Deletes the specified Service Fabric property under a given name.</span></span> <span data-ttu-id="493d4-300">속성을 삭제하려면 먼저 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-300">A property must be created before it can be deleted.</span></span>
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, options?: Models.ServiceFabricClientDeletePropertyOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-301">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-301">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="493d4-302">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-302">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeletePropertyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty_1'
    name: 'deleteProperty(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-303">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-303">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="493d4-304">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-304">Specifies the name of the property to get.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-305">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-305">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty_2'
    name: 'deleteProperty(string, string, ServiceFabricClientDeletePropertyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, options: ServiceFabricClientDeletePropertyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-306">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-306">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="493d4-307">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-307">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
          description: <span data-ttu-id="493d4-308">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-308">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-309">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-309">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-310">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-310">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: <span data-ttu-id="493d4-311">삭제할 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-311">Describes the repair task to be deleted.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_2'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: <span data-ttu-id="493d4-312">삭제할 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-312">Describes the repair task to be deleted.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="493d4-313">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-313">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-314">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-314">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_1'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: <span data-ttu-id="493d4-315">삭제할 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-315">Describes the repair task to be deleted.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-316">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-316">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService'
    name: 'deleteService(string, Models.ServiceFabricClientDeleteServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-317">서비스를 삭제하려면 먼저 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-317">A service must be created before it can be deleted.</span></span> <span data-ttu-id="493d4-318">기본적으로 Service Fabric은 서비스 복제를 정상적으로 닫은 후 다음 서비스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-318">By default, Service Fabric will try to close service replicas in a graceful manner and then delete the service.</span></span> <span data-ttu-id="493d4-319">하지만 서비스에서 복제본을 정상적으로 닫는 데 문제가 있으면 삭제 작업이 오래 걸리거나 중단될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-319">However, if the service is having issues closing the replica gracefully, the delete operation may take a long time or get stuck.</span></span> <span data-ttu-id="493d4-320">선택적인 ForceRemove 플래그를 사용하여 정상적인 닫기 시퀀스를 건너 뛰고 서비스를 강제로 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-320">Use the optional ForceRemove flag to skip the graceful close sequence and forcefully delete the service.</span></span>'
    syntax:
      content: 'function deleteService(serviceId: string, options?: Models.ServiceFabricClientDeleteServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-321">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-321">The identity of the service.</span></span> <span data-ttu-id="493d4-322">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-322">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-323">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-323">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-324">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-324">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService_1'
    name: 'deleteService(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-325">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-325">The identity of the service.</span></span> <span data-ttu-id="493d4-326">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-326">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-327">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-327">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-328">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-328">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-329">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-329">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService_2'
    name: 'deleteService(string, ServiceFabricClientDeleteServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, options: ServiceFabricClientDeleteServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-330">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-330">The identity of the service.</span></span> <span data-ttu-id="493d4-331">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-331">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-332">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-332">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-333">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-333">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
          description: <span data-ttu-id="493d4-334">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-334">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-335">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-335">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-336">이 API는 일반적인 응용 프로그램 배포 외부의 특정 노드의 컨테이너 이미지를 포함 하 여 코드 패키지를 다운로드 하 고 경로 업그레이드 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-336">This API provides a way to download code packages including the container images on a specific node outside of the normal application deployment and upgrade path.</span></span> <span data-ttu-id="493d4-337">이 대규모 코드 패키지 및 노드의 실제 응용 프로그램 배포 및 업그레이드 하므로 업그레이드를 배포 하는 데 필요한 총 시간을 크게 줄일 앞에 표시 하기 위해 컨테이너 이미지에 대 한 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-337">This is useful for the large code packages and container images to be present on the node before the actual application deployment and upgrade, thus significantly reducing the total time required for the deployment or upgrade.</span></span>'
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options?: Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-338">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-338">The name of the node.</span></span>
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: <span data-ttu-id="493d4-339">Service Fabric 노드를 서비스 패키지를 배포 하는 것에 대 한 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-339">Describes information for deploying a service package to a Service Fabric node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_1'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-340">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-340">The name of the node.</span></span>
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: <span data-ttu-id="493d4-341">Service Fabric 노드를 서비스 패키지를 배포 하는 것에 대 한 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-341">Describes information for deploying a service package to a Service Fabric node.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-342">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-342">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_2'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, ServiceFabricClientDeployServicePackageToNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options: ServiceFabricClientDeployServicePackageToNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-343">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-343">The name of the node.</span></span>
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: <span data-ttu-id="493d4-344">Service Fabric 노드를 서비스 패키지를 배포 하는 것에 대 한 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-344">Describes information for deploying a service package to a Service Fabric node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
          description: <span data-ttu-id="493d4-345">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-345">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-346">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-346">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup'
    name: 'disableApplicationBackup(string, Models.ServiceFabricClientDisableApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-347">이전에 설정 된 Service Fabric 응용 프로그램의 정기적 백업을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-347">Disables periodic backup of Service Fabric application which was previously enabled.</span></span>
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientDisableApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-348">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-348">The identity of the application.</span></span> <span data-ttu-id="493d4-349">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-349">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-350">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-350">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-351">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-351">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDisableApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_1'
    name: 'disableApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-352">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-352">The identity of the application.</span></span> <span data-ttu-id="493d4-353">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-353">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-354">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-354">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-355">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-355">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-356">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-356">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_2'
    name: 'disableApplicationBackup(string, ServiceFabricClientDisableApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, options: ServiceFabricClientDisableApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-357">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-357">The identity of the application.</span></span> <span data-ttu-id="493d4-358">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-358">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-359">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-359">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-360">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-360">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
          description: <span data-ttu-id="493d4-361">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-361">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-362">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-362">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode'
    name: 'disableNode(string, DeactivationIntentDescription, Models.ServiceFabricClientDisableNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-363">지정한 비활성화 의도로 Microsoft Azure Service Fabric 클러스터 노드를 비활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-363">Deactivate a Service Fabric cluster node with the specified deactivation intent.</span></span> <span data-ttu-id="493d4-364">비활성화가 진행 중이라면, 비활성화 의도가 증가할 수 있지만, 감소하지는 않습니다.(예를 들어 일시 중지 목적으로 비활성화된 노드는 다시 시작으로 더욱 비활성화되지만, 그 반대로는 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-364">Once the deactivation is in progress, the deactivation intent can be increased, but not decreased (for example, a node that is deactivated with the Pause intent can be deactivated further with Restart, but not the other way around.</span></span> <span data-ttu-id="493d4-365">노드는 비활성화한 후 언제든지 활성화를 사용하여 노드 작업을 다시 활성화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-365">Nodes may be reactivated using the Activate a node operation any time after they are deactivated.</span></span> <span data-ttu-id="493d4-366">비활성화가 완료되지 않을 경우 비활성화가 취소됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-366">If the deactivation is not complete, this will cancel the deactivation.</span></span> <span data-ttu-id="493d4-367">비활성화하는 동안에 작동 중지되었다가 다시 작동하는 노드는 여전히 다시 활성화해야 서비스를 해당 노드에 배치할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-367">A node that goes down and comes back up while deactivated will still need to be reactivated before services will be placed on that node.</span></span>'
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options?: Models.ServiceFabricClientDisableNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-368">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-368">The name of the node.</span></span>
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: <span data-ttu-id="493d4-369">노드를 비활성화하는 의도나 이유를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-369">Describes the intent or reason for deactivating the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDisableNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode_1'
    name: 'disableNode(string, DeactivationIntentDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-370">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-370">The name of the node.</span></span>
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: <span data-ttu-id="493d4-371">노드를 비활성화하는 의도나 이유를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-371">Describes the intent or reason for deactivating the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-372">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-372">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode_2'
    name: 'disableNode(string, DeactivationIntentDescription, ServiceFabricClientDisableNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options: ServiceFabricClientDisableNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-373">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-373">The name of the node.</span></span>
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: <span data-ttu-id="493d4-374">노드를 비활성화하는 의도나 이유를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-374">Describes the intent or reason for deactivating the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
          description: <span data-ttu-id="493d4-375">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-375">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-376">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-376">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup'
    name: 'disablePartitionBackup(string, Models.ServiceFabricClientDisablePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-377">이전에 설정 된 파티션의의 정기적인 백업을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-377">Disables periodic backup of partition which was previously enabled.</span></span> <span data-ttu-id="493d4-378">백업은 사용할 수 전에 명시적으로 활성화 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-378">Backup must be explicitly enabled before it can be disabled.</span></span>
      <span data-ttu-id="493d4-379">이 파티션에의 일부 이며, 서비스를 Service Fabric 응용 프로그램에 대 한 백업이 활성화 된 경우에 더 높은 수준 엔터티가 매핑된 정책에 따라 주기적으로 백업이 파티션을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-379">In case the backup is enabled for the Service Fabric application or service, which this partition is part of, this partition would continue to be periodically backed up as per the policy mapped at the higher level entity.</span></span>
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, options?: Models.ServiceFabricClientDisablePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-380">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-380">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDisablePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_1'
    name: 'disablePartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-381">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-381">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-382">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-382">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_2'
    name: 'disablePartitionBackup(string, ServiceFabricClientDisablePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, options: ServiceFabricClientDisablePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-383">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-383">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
          description: <span data-ttu-id="493d4-384">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-384">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-385">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-385">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup'
    name: 'disableServiceBackup(string, Models.ServiceFabricClientDisableServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-386">이전에 설정 된 Service Fabric 서비스의 정기적 백업을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-386">Disables periodic backup of Service Fabric service which was previously enabled.</span></span> <span data-ttu-id="493d4-387">백업은 사용할 수 전에 명시적으로 활성화 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-387">Backup must be explicitly enabled before it can be disabled.</span></span>
      <span data-ttu-id="493d4-388">이 서비스의 일부 이며, Service Fabric 응용 프로그램에 대 한 백업이 활성화 된 경우이 서비스 응용 프로그램 수준에서 매핑된 정책에 따라 주기적으로 백업 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-388">In case the backup is enabled for the Service Fabric application, which this service is part of, this service would continue to be periodically backed up as per the policy mapped at the application level.</span></span>
    syntax:
      content: 'function disableServiceBackup(serviceId: string, options?: Models.ServiceFabricClientDisableServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-389">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-389">The identity of the service.</span></span> <span data-ttu-id="493d4-390">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-390">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-391">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-391">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-392">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-392">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDisableServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_1'
    name: 'disableServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-393">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-393">The identity of the service.</span></span> <span data-ttu-id="493d4-394">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-394">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-395">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-395">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-396">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-396">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-397">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-397">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_2'
    name: 'disableServiceBackup(string, ServiceFabricClientDisableServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, options: ServiceFabricClientDisableServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-398">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-398">The identity of the service.</span></span> <span data-ttu-id="493d4-399">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-399">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-400">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-400">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-401">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-401">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
          description: <span data-ttu-id="493d4-402">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-402">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-403">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-403">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup'
    name: 'enableApplicationBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnableApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-404">이 Service Fabric 응용 프로그램의 구성 요소인 상태 저장 파티션의 정기적인 백업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-404">Enables periodic backup of stateful partitions which are part of this Service Fabric application.</span></span> <span data-ttu-id="493d4-405">각 파티션에 지정 된 백업 정책 설명에 따라 개별적으로 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-405">Each partition is backed up individually as per the specified backup policy description.</span></span>
      <span data-ttu-id="493d4-406">만 확인 C# 기반된 Reliable Actor 및 Reliable Stateful 서비스는 현재 정기적인 백업에 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-406">Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.</span></span>
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnableApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-407">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-407">The identity of the application.</span></span> <span data-ttu-id="493d4-408">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-408">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-409">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-409">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-410">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-410">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-411">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-411">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientEnableApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_1'
    name: 'enableApplicationBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-412">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-412">The identity of the application.</span></span> <span data-ttu-id="493d4-413">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-413">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-414">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-414">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-415">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-415">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-416">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-416">Specifies the parameters for enabling backup.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-417">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-417">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_2'
    name: 'enableApplicationBackup(string, EnableBackupDescription, ServiceFabricClientEnableApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnableApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-418">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-418">The identity of the application.</span></span> <span data-ttu-id="493d4-419">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-419">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-420">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-420">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-421">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-421">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-422">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-422">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
          description: <span data-ttu-id="493d4-423">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-423">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-424">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-424">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode'
    name: 'enableNode(string, Models.ServiceFabricClientEnableNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-425">현재 비활성화되어 있는 Microsoft Azure Service Fabric 클러스터 노드를 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-425">Activates a Service Fabric cluster node that is currently deactivated.</span></span> <span data-ttu-id="493d4-426">일단 활성화되면 노드는 다시 새로운 복제본을 배치하는 것이 가능한 대상이 되고 노드에 남아 있는 모든 비활성화된 복제본은 다시 활성화됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-426">Once activated, the node will again become a viable target for placing new replicas, and any deactivated replicas remaining on the node will be reactivated.</span></span>'
    syntax:
      content: 'function enableNode(nodeName: string, options?: Models.ServiceFabricClientEnableNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-427">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-427">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientEnableNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode_1'
    name: 'enableNode(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-428">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-428">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-429">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-429">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode_2'
    name: 'enableNode(string, ServiceFabricClientEnableNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, options: ServiceFabricClientEnableNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-430">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-430">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
          description: <span data-ttu-id="493d4-431">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-431">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-432">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-432">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup'
    name: 'enablePartitionBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnablePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-433">지속형 상태 저장 파티션의 정기적인 백업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-433">Enables periodic backup of stateful persisted partition.</span></span> <span data-ttu-id="493d4-434">각 파티션에 지정 된 백업 정책 설명에 따라 백업 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-434">Each partition is backed up as per the specified backup policy description.</span></span> <span data-ttu-id="493d4-435">응용 프로그램 또는 파티션이 있는 서비스의 일부인 경우 이미 사용 되 백업에 대 한이 작업에는이 파티션의 정기 백업을 수행 하는 데 사용 되는 정책 재정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-435">In case the application or service, which is partition is part of, is already enabled for backup then this operation would override the policy being used to take the periodic backup of this partition.</span></span>
      <span data-ttu-id="493d4-436">만 확인 C# 기반된 Reliable Actor 및 Reliable Stateful 서비스는 현재 정기적인 백업에 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-436">Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.</span></span>
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnablePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-437">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-437">The identity of the partition.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-438">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-438">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientEnablePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_1'
    name: 'enablePartitionBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-439">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-439">The identity of the partition.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-440">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-440">Specifies the parameters for enabling backup.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-441">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-441">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_2'
    name: 'enablePartitionBackup(string, EnableBackupDescription, ServiceFabricClientEnablePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnablePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-442">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-442">The identity of the partition.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-443">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-443">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
          description: <span data-ttu-id="493d4-444">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-444">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-445">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-445">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup'
    name: 'enableServiceBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnableServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-446">이 Service Fabric 서비스의 구성 요소인 상태 저장 파티션의 정기적인 백업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-446">Enables periodic backup of stateful partitions which are part of this Service Fabric service.</span></span>
      <span data-ttu-id="493d4-447">각 파티션에 지정 된 백업 정책 설명에 따라 개별적으로 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-447">Each partition is backed up individually as per the specified backup policy description.</span></span> <span data-ttu-id="493d4-448">경우이 작업 (재정의 되지 않는 경우 명시적으로 파티션 수준에서)이이 서비스 및 해당 파티션에 대 한 정기 백업을 수행 하는 데 사용 되는 정책 재정의 한 다음 백업에 대 한 서비스의 일부 이며, 응용 프로그램을 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-448">In case the application, which the service is part of, is already enabled for backup then this operation would override the policy being used to take the periodic backup for this service and its partitions (unless explicitly overridden at the partition level).</span></span>
      <span data-ttu-id="493d4-449">만 확인 C# 기반된 Reliable Actor 및 Reliable Stateful 서비스는 현재 정기적인 백업에 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-449">Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.</span></span>
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnableServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-450">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-450">The identity of the service.</span></span> <span data-ttu-id="493d4-451">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-451">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-452">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-452">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-453">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-453">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-454">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-454">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientEnableServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_1'
    name: 'enableServiceBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-455">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-455">The identity of the service.</span></span> <span data-ttu-id="493d4-456">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-456">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-457">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-457">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-458">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-458">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-459">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-459">Specifies the parameters for enabling backup.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-460">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-460">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_2'
    name: 'enableServiceBackup(string, EnableBackupDescription, ServiceFabricClientEnableServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnableServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-461">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-461">The identity of the service.</span></span> <span data-ttu-id="493d4-462">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-462">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-463">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-463">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-464">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-464">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="493d4-465">백업을 사용 하도록 설정 하는 것에 대 한 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-465">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
          description: <span data-ttu-id="493d4-466">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-466">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-467">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-467">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-468">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-468">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: <span data-ttu-id="493d4-469">승인이 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-469">Describes the repair task to be approved.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_2'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: <span data-ttu-id="493d4-470">승인이 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-470">Describes the repair task to be approved.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="493d4-471">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-471">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-472">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-472">The callback</span></span>
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_1'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: <span data-ttu-id="493d4-473">승인이 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-473">Describes the repair task to be approved.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-474">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-474">The callback</span></span>
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata'
    name: getAadMetadata(Models.ServiceFabricClientGetAadMetadataOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-475">클러스터에 보안된 연결에 사용 되는 Azure Active Directory 메타 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-475">Gets the Azure Active Directory metadata used for secured connection to cluster.</span></span>
      <span data-ttu-id="493d4-476">이 API는 별도로 호출할 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-476">This API is not supposed to be called separately.</span></span> <span data-ttu-id="493d4-477">Service Fabric 클러스터를 사용 하 여 연결을 보호 하는 Azure Active Directory를 설정 하는 데 필요한 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-477">It provides information needed to set up an Azure Active Directory secured connection with a Service Fabric cluster.</span></span>
    syntax:
      content: 'function getAadMetadata(options?: Models.ServiceFabricClientGetAadMetadataOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetAadMetadataOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata_1'
    name: getAadMetadata(ServiceCallback<AadMetadataObject>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(callback: ServiceCallback<AadMetadataObject>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.AadMetadataObject>
          description: |
            <span data-ttu-id="493d4-478">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-478">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata_2'
    name: 'getAadMetadata(ServiceFabricClientGetAadMetadataOptionalParams, ServiceCallback<AadMetadataObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(options: ServiceFabricClientGetAadMetadataOptionalParams, callback: ServiceCallback<AadMetadataObject>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
          description: <span data-ttu-id="493d4-479">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-479">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.AadMetadataObject>
          description: |
            <span data-ttu-id="493d4-480">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-480">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy'
    name: 'getAllEntitiesBackedUpByPolicy(string, Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-481">Service Fabric 응용 프로그램, 서비스 또는이 백업 정책과 연관 된 파티션의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-481">Returns a list of Service Fabric application, service or partition which are associated with this backup policy.</span></span>'
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, options?: Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-482">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-482">The name of the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_1'
    name: 'getAllEntitiesBackedUpByPolicy(string, ServiceCallback<PagedBackupEntityList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, callback: ServiceCallback<PagedBackupEntityList>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-483">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-483">The name of the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
          description: |
            <span data-ttu-id="493d4-484">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-484">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_2'
    name: 'getAllEntitiesBackedUpByPolicy(string, ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams, ServiceCallback<PagedBackupEntityList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, options: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams, callback: ServiceCallback<PagedBackupEntityList>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-485">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-485">The name of the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
          description: <span data-ttu-id="493d4-486">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-486">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
          description: |
            <span data-ttu-id="493d4-487">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-487">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo'
    name: 'getApplicationBackupConfigurationInfo(string, Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-488">응용 프로그램 및 서비스, 파티션이 응용이 프로그램에 대 한 Service Fabric 백업 구성 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-488">Gets the Service Fabric backup configuration information for the application and the services and partitions under this application.</span></span>'
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-489">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-489">The identity of the application.</span></span> <span data-ttu-id="493d4-490">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-490">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-491">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-491">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-492">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-492">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_1'
    name: 'getApplicationBackupConfigurationInfo(string, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-493">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-493">The identity of the application.</span></span> <span data-ttu-id="493d4-494">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-494">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-495">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-495">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-496">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-496">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            <span data-ttu-id="493d4-497">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-497">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_2'
    name: 'getApplicationBackupConfigurationInfo(string, ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, options: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-498">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-498">The identity of the application.</span></span> <span data-ttu-id="493d4-499">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-499">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-500">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-500">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-501">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-501">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
          description: <span data-ttu-id="493d4-502">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-502">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            <span data-ttu-id="493d4-503">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-503">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList'
    name: 'getApplicationBackupList(string, Models.ServiceFabricClientGetApplicationBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-504">이 Service Fabric 응용 프로그램의 모든 파티션에 대해 사용 가능한 백업 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-504">Returns a list of backups available for every partition in this Service Fabric application.</span></span> <span data-ttu-id="493d4-505">서버 백업 정책에 구성 된 백업 위치에서 사용 가능한 모든 백업을 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-505">The server enumerates all the backups available at the backup location configured in the backup policy.</span></span> <span data-ttu-id="493d4-506">또한 결과 시작 및 종료 날짜/시간에 따라 또는 모든 파티션에 대해 사용 가능한 최신 백업 인출만 필터링 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-506">It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for every partition.</span></span>
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, options?: Models.ServiceFabricClientGetApplicationBackupListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-507">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-507">The identity of the application.</span></span> <span data-ttu-id="493d4-508">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-508">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-509">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-509">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-510">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-510">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_1'
    name: 'getApplicationBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-511">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-511">The identity of the application.</span></span> <span data-ttu-id="493d4-512">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-512">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-513">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-513">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-514">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-514">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="493d4-515">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-515">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_2'
    name: 'getApplicationBackupList(string, ServiceFabricClientGetApplicationBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, options: ServiceFabricClientGetApplicationBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-516">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-516">The identity of the application.</span></span> <span data-ttu-id="493d4-517">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-517">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-518">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-518">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-519">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-519">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
          description: <span data-ttu-id="493d4-520">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-520">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="493d4-521">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-521">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList'
    name: 'getApplicationEventList(string, string, string, Models.ServiceFabricClientGetApplicationEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-522">응답은 ApplicationEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-522">The response is list of ApplicationEvent objects.</span></span>
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetApplicationEventListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-523">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-523">The identity of the application.</span></span> <span data-ttu-id="493d4-524">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-524">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-525">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-525">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-526">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-526">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-527">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-527">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-528">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-528">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_1'
    name: 'getApplicationEventList(string, string, string, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-529">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-529">The identity of the application.</span></span> <span data-ttu-id="493d4-530">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-530">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-531">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-531">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-532">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-532">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-533">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-533">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-534">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-534">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-535">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-535">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_2'
    name: 'getApplicationEventList(string, string, string, ServiceFabricClientGetApplicationEventListOptionalParams, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetApplicationEventListOptionalParams, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-536">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-536">The identity of the application.</span></span> <span data-ttu-id="493d4-537">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-537">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-538">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-538">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-539">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-539">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-540">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-540">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-541">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-541">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
          description: <span data-ttu-id="493d4-542">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-542">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-543">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-543">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth'
    name: 'getApplicationHealth(string, Models.ServiceFabricClientGetApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-544">Microsoft Azure Service Fabric 애플리케이션의 상태를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-544">Returns the heath state of the service fabric application.</span></span> <span data-ttu-id="493d4-545">응답은 확인, 오류 또는 상태 경고를 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-545">The response reports either Ok, Error or Warning health state.</span></span> <span data-ttu-id="493d4-546">엔터티를 Health 스토어에서 찾을 수 없다면 Error를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-546">If the entity is not found in the health store, it will return Error.</span></span>'
    syntax:
      content: 'function getApplicationHealth(applicationId: string, options?: Models.ServiceFabricClientGetApplicationHealthOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-547">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-547">The identity of the application.</span></span> <span data-ttu-id="493d4-548">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-548">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-549">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-549">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-550">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-550">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_1'
    name: 'getApplicationHealth(string, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-551">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-551">The identity of the application.</span></span> <span data-ttu-id="493d4-552">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-552">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-553">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-553">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-554">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-554">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            <span data-ttu-id="493d4-555">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-555">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_2'
    name: 'getApplicationHealth(string, ServiceFabricClientGetApplicationHealthOptionalParams, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, options: ServiceFabricClientGetApplicationHealthOptionalParams, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-556">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-556">The identity of the application.</span></span> <span data-ttu-id="493d4-557">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-557">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-558">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-558">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-559">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-559">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
          description: <span data-ttu-id="493d4-560">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-560">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            <span data-ttu-id="493d4-561">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-561">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy'
    name: 'getApplicationHealthUsingPolicy(string, Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-562">Service Fabric 응용 프로그램의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-562">Gets the health of a Service Fabric application.</span></span> <span data-ttu-id="493d4-563">상태에 따라 노드에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-563">Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state.</span></span> <span data-ttu-id="493d4-564">ClusterHealthPolicies를 사용 하 여 상태를 평가 하는 데 상태 정책을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-564">Use ClusterHealthPolicies to override the health policies used to evaluate the health.</span></span>
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, options?: Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-565">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-565">The identity of the application.</span></span> <span data-ttu-id="493d4-566">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-566">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-567">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-567">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-568">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-568">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1'
    name: 'getApplicationHealthUsingPolicy(string, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-569">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-569">The identity of the application.</span></span> <span data-ttu-id="493d4-570">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-570">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-571">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-571">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-572">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-572">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            <span data-ttu-id="493d4-573">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-573">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2'
    name: 'getApplicationHealthUsingPolicy(string, ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, options: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-574">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-574">The identity of the application.</span></span> <span data-ttu-id="493d4-575">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-575">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-576">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-576">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-577">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-577">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="493d4-578">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-578">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            <span data-ttu-id="493d4-579">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-579">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo'
    name: 'getApplicationInfo(string, Models.ServiceFabricClientGetApplicationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-580">Microsoft Azure Service Fabric 클러스터에서 만들어졌거나 만들어지는 과정에 있으며 이름이 매개 변수로 지정된 것과 일치하는 애플리케이션에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-580">Returns the information about the application that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter.</span></span>
      <span data-ttu-id="493d4-581">응답에는 이름, 유형, 상태, 매개 변수 및 애플리케이션에 관한 기타 세부 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-581">The response includes the name, type, status, parameters, and other details about the application.</span></span>
    syntax:
      content: 'function getApplicationInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-582">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-582">The identity of the application.</span></span> <span data-ttu-id="493d4-583">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-583">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-584">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-584">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-585">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-585">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_1'
    name: 'getApplicationInfo(string, ServiceCallback<ApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, callback: ServiceCallback<ApplicationInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-586">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-586">The identity of the application.</span></span> <span data-ttu-id="493d4-587">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-587">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-588">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-588">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-589">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-589">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationInfo>
          description: |
            <span data-ttu-id="493d4-590">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-590">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_2'
    name: 'getApplicationInfo(string, ServiceFabricClientGetApplicationInfoOptionalParams, ServiceCallback<ApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, options: ServiceFabricClientGetApplicationInfoOptionalParams, callback: ServiceCallback<ApplicationInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-591">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-591">The identity of the application.</span></span> <span data-ttu-id="493d4-592">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-592">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-593">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-593">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-594">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-594">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
          description: <span data-ttu-id="493d4-595">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-595">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationInfo>
          description: |
            <span data-ttu-id="493d4-596">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-596">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList'
    name: getApplicationInfoList(Models.ServiceFabricClientGetApplicationInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-597">Microsoft Azure Service Fabric 클러스터에서 만들어졌거나 만들어지는 과정에 있으며 지정된 필터와 일치하는 애플리케이션에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-597">Gets the information about the applications that were created or in the process of being created in the Service Fabric cluster and match the specified filters.</span></span> <span data-ttu-id="493d4-598">응답에는 이름, 유형, 상태, 매개 변수 및 애플리케이션에 관한 기타 세부 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-598">The response includes the name, type, status, parameters, and other details about the application.</span></span> <span data-ttu-id="493d4-599">애플리케이션이 한 페이지에 맞지 않는 경우, 결과 한 페이지가 연속 토큰으로 반환되어 다음 페이지를 가져오는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-599">If the applications do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span> <span data-ttu-id="493d4-600">필터 ApplicationTypeName 및 ApplicationDefinitionKindFilter는 동시에 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-600">Filters ApplicationTypeName and ApplicationDefinitionKindFilter cannot be specified at the same time.</span></span>'
    syntax:
      content: 'function getApplicationInfoList(options?: Models.ServiceFabricClientGetApplicationInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_1'
    name: getApplicationInfoList(ServiceCallback<PagedApplicationInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(callback: ServiceCallback<PagedApplicationInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
          description: |
            <span data-ttu-id="493d4-601">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-601">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_2'
    name: 'getApplicationInfoList(ServiceFabricClientGetApplicationInfoListOptionalParams, ServiceCallback<PagedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(options: ServiceFabricClientGetApplicationInfoListOptionalParams, callback: ServiceCallback<PagedApplicationInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
          description: <span data-ttu-id="493d4-602">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-602">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
          description: |
            <span data-ttu-id="493d4-603">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-603">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo'
    name: 'getApplicationLoadInfo(string, Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-604">Microsoft Azure Service Fabric 클러스터에서 만들어졌거나 만들어지는 과정에 있으며 이름이 매개 변수로 지정된 것과 일치하는 애플리케이션에 대한 로드 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-604">Returns the load information about the application that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter.</span></span>
      <span data-ttu-id="493d4-605">응답에는 이름, 최소 노드, 최대 노드, 애플리케이션이 현재 차지하는 노드 수, 애플리케이션에 대한 애플리케이션 부하 메트릭 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-605">The response includes the name, minimum nodes, maximum nodes, the number of nodes the application is occupying currently, and application load metric information about the application.</span></span>
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-606">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-606">The identity of the application.</span></span> <span data-ttu-id="493d4-607">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-607">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-608">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-608">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-609">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-609">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_1'
    name: 'getApplicationLoadInfo(string, ServiceCallback<ApplicationLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, callback: ServiceCallback<ApplicationLoadInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-610">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-610">The identity of the application.</span></span> <span data-ttu-id="493d4-611">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-611">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-612">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-612">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-613">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-613">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
          description: |
            <span data-ttu-id="493d4-614">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-614">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_2'
    name: 'getApplicationLoadInfo(string, ServiceFabricClientGetApplicationLoadInfoOptionalParams, ServiceCallback<ApplicationLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, options: ServiceFabricClientGetApplicationLoadInfoOptionalParams, callback: ServiceCallback<ApplicationLoadInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-615">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-615">The identity of the application.</span></span> <span data-ttu-id="493d4-616">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-616">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-617">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-617">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-618">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-618">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
          description: <span data-ttu-id="493d4-619">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-619">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
          description: |
            <span data-ttu-id="493d4-620">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-620">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest'
    name: 'getApplicationManifest(string, string, Models.ServiceFabricClientGetApplicationManifestOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-621">응답에 애플리케이션 매니페스트 XML이 문자열로 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-621">The response contains the application manifest XML as a string.</span></span>
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options?: Models.ServiceFabricClientGetApplicationManifestOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-622">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-622">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-623">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-623">The version of the application type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_1'
    name: 'getApplicationManifest(string, string, ServiceCallback<ApplicationTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ApplicationTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-624">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-624">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-625">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-625">The version of the application type.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
          description: |
            <span data-ttu-id="493d4-626">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-626">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_2'
    name: 'getApplicationManifest(string, string, ServiceFabricClientGetApplicationManifestOptionalParams, ServiceCallback<ApplicationTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options: ServiceFabricClientGetApplicationManifestOptionalParams, callback: ServiceCallback<ApplicationTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-627">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-627">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-628">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-628">The version of the application type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
          description: <span data-ttu-id="493d4-629">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-629">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
          description: |
            <span data-ttu-id="493d4-630">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-630">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo'
    name: 'getApplicationNameInfo(string, Models.ServiceFabricClientGetApplicationNameInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-631">지정된 서비스에 대한 애플리케이션의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-631">Gets the name of the application for the specified service.</span></span> <span data-ttu-id="493d4-632">제공된 서비스 ID가 있는 서비스가 존재하지 않는 경우 404 FABRIC_E_SERVICE_DOES_NOT_EXIST 오류가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-632">A 404 FABRIC_E_SERVICE_DOES_NOT_EXIST error is returned if a service with the provided service ID does not exist.</span></span>
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, options?: Models.ServiceFabricClientGetApplicationNameInfoOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-633">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-633">The identity of the service.</span></span> <span data-ttu-id="493d4-634">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-634">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-635">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-635">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-636">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-636">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationNameInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_1'
    name: 'getApplicationNameInfo(string, ServiceCallback<ApplicationNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, callback: ServiceCallback<ApplicationNameInfo>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-637">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-637">The identity of the service.</span></span> <span data-ttu-id="493d4-638">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-638">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-639">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-639">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-640">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-640">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
          description: |
            <span data-ttu-id="493d4-641">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-641">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_2'
    name: 'getApplicationNameInfo(string, ServiceFabricClientGetApplicationNameInfoOptionalParams, ServiceCallback<ApplicationNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, options: ServiceFabricClientGetApplicationNameInfoOptionalParams, callback: ServiceCallback<ApplicationNameInfo>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-642">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-642">The identity of the service.</span></span> <span data-ttu-id="493d4-643">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-643">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-644">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-644">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-645">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-645">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
          description: <span data-ttu-id="493d4-646">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-646">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
          description: |
            <span data-ttu-id="493d4-647">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-647">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList'
    name: 'getApplicationsEventList(string, string, Models.ServiceFabricClientGetApplicationsEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-648">응답은 ApplicationEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-648">The response is list of ApplicationEvent objects.</span></span>
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetApplicationsEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-649">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-649">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-650">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-650">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationsEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_1'
    name: 'getApplicationsEventList(string, string, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-651">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-651">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-652">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-652">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-653">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-653">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_2'
    name: 'getApplicationsEventList(string, string, ServiceFabricClientGetApplicationsEventListOptionalParams, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetApplicationsEventListOptionalParams, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-654">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-654">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-655">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-655">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
          description: <span data-ttu-id="493d4-656">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-656">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-657">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-657">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList'
    name: getApplicationTypeInfoList(Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-658">Microsoft Azure Service Fabric 클러스터에 프로비전된 또는 프로비전되는 프로세스에 있는 애플리케이션 유형에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-658">Returns the information about the application types that are provisioned or in the process of being provisioned in the Service Fabric cluster.</span></span> <span data-ttu-id="493d4-659">애플리케이션 유형의 각 버전은 하나의 애플리케이션 유형으로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-659">Each version of an application type is returned as one application type.</span></span> <span data-ttu-id="493d4-660">응답에는 이름, 버전, 상태 및 애플리케이션에 관한 기타 세부 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-660">The response includes the name, version, status, and other details about the application type.</span></span> <span data-ttu-id="493d4-661">이것은 페이징된 쿼리로 애플리케이션 유형 모두가 한 페이지에 맞지 않는 경우, 결과 한 페이지가 연속 토큰으로 반환되어 다음 페이지를 가져오는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-661">This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span> <span data-ttu-id="493d4-662">예를 들어 10개의 애플리케이션 형식이 있지만 페이지는 처음 3개 애플리케이션 형식에만 맞거나, 최대 결과가 3으로 설정된다면, 3이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-662">For example, if there are 10 application types but a page only fits the first three application types, or if max results is set to 3, then three is returned.</span></span>
      <span data-ttu-id="493d4-663">결과의 나머지 부분에 액세스하려면 다음 쿼리에 반환된 연속 토큰을 사용하여 후속 페이지를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-663">To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query.</span></span> <span data-ttu-id="493d4-664">후속 페이지가 없다면 공백인 연속 토큰이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-664">An empty continuation token is returned if there are no subsequent pages.</span></span>
    syntax:
      content: 'function getApplicationTypeInfoList(options?: Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1'
    name: getApplicationTypeInfoList(ServiceCallback<PagedApplicationTypeInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            <span data-ttu-id="493d4-665">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-665">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2'
    name: 'getApplicationTypeInfoList(ServiceFabricClientGetApplicationTypeInfoListOptionalParams, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(options: ServiceFabricClientGetApplicationTypeInfoListOptionalParams, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
          description: <span data-ttu-id="493d4-666">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-666">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            <span data-ttu-id="493d4-667">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-667">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName'
    name: 'getApplicationTypeInfoListByName(string, Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-668">Microsoft Azure Service Fabric 클러스터에 프로비전된 또는 프로비전되는 프로세스에 있는 애플리케이션 유형에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-668">Returns the information about the application types that are provisioned or in the process of being provisioned in the Service Fabric cluster.</span></span> <span data-ttu-id="493d4-669">이러한 결과는 이름이 매개 변수로 지정된 것과 정확히 일치하며 주어진 쿼리 매개 변수를 준수해야 하는 애플리케이션 유형에서 나온 값입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-669">These results are of application types whose name match exactly the one specified as the parameter, and which comply with the given query parameters.</span></span> <span data-ttu-id="493d4-670">하나의 애플리케이션 형식으로 반환된 각 버전과 함께 애플리케이션 형식 이름과 일치하는 애플리케이션 형식의 모든 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-670">All versions of the application type matching the application type name are returned, with each version returned as one application type.</span></span> <span data-ttu-id="493d4-671">응답에는 이름, 버전, 상태 및 애플리케이션에 관한 기타 세부 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-671">The response includes the name, version, status, and other details about the application type.</span></span> <span data-ttu-id="493d4-672">이것은 페이징된 쿼리로 애플리케이션 유형 모두가 한 페이지에 맞지 않는 경우, 결과 한 페이지가 연속 토큰으로 반환되어 다음 페이지를 가져오는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-672">This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span> <span data-ttu-id="493d4-673">예를 들어 10개의 애플리케이션 형식이 있지만 페이지는 처음 3개 애플리케이션 형식에만 맞거나, 최대 결과가 3으로 설정된다면, 3이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-673">For example, if there are 10 application types but a page only fits the first three application types, or if max results is set to 3, then three is returned.</span></span> <span data-ttu-id="493d4-674">결과의 나머지 부분에 액세스하려면 다음 쿼리에 반환된 연속 토큰을 사용하여 후속 페이지를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-674">To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query.</span></span> <span data-ttu-id="493d4-675">후속 페이지가 없다면 공백인 연속 토큰이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-675">An empty continuation token is returned if there are no subsequent pages.</span></span>'
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options?: Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-676">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-676">The name of the application type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1'
    name: 'getApplicationTypeInfoListByName(string, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-677">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-677">The name of the application type.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            <span data-ttu-id="493d4-678">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-678">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2'
    name: 'getApplicationTypeInfoListByName(string, ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-679">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-679">The name of the application type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
          description: <span data-ttu-id="493d4-680">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-680">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            <span data-ttu-id="493d4-681">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-681">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade'
    name: 'getApplicationUpgrade(string, Models.ServiceFabricClientGetApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-682">애플리케이션 상태 문제 디버깅을 지원하기 위한 세부 정보와 함께 최신 애플리케이션 업그레이드의 상태에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-682">Returns information about the state of the latest application upgrade along with details to aid debugging application health issues.</span></span>
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, options?: Models.ServiceFabricClientGetApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-683">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-683">The identity of the application.</span></span> <span data-ttu-id="493d4-684">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-684">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-685">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-685">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-686">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-686">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_1'
    name: 'getApplicationUpgrade(string, ServiceCallback<ApplicationUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-687">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-687">The identity of the application.</span></span> <span data-ttu-id="493d4-688">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-688">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-689">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-689">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-690">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-690">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
          description: |
            <span data-ttu-id="493d4-691">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-691">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_2'
    name: 'getApplicationUpgrade(string, ServiceFabricClientGetApplicationUpgradeOptionalParams, ServiceCallback<ApplicationUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, options: ServiceFabricClientGetApplicationUpgradeOptionalParams, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-692">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-692">The identity of the application.</span></span> <span data-ttu-id="493d4-693">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-693">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-694">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-694">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-695">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-695">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-696">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-696">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
          description: |
            <span data-ttu-id="493d4-697">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-697">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName'
    name: 'getBackupPolicyByName(string, Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-698">{BackupPolicyName}로 식별 되는 특정 백업 정책을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-698">Gets a particular backup policy identified by {backupPolicyName}</span></span>'
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, options?: Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-699">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-699">The name of the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_1'
    name: 'getBackupPolicyByName(string, ServiceCallback<BackupPolicyDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, callback: ServiceCallback<BackupPolicyDescription>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-700">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-700">The name of the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
          description: |
            <span data-ttu-id="493d4-701">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-701">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_2'
    name: 'getBackupPolicyByName(string, ServiceFabricClientGetBackupPolicyByNameOptionalParams, ServiceCallback<BackupPolicyDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, options: ServiceFabricClientGetBackupPolicyByNameOptionalParams, callback: ServiceCallback<BackupPolicyDescription>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-702">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-702">The name of the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
          description: <span data-ttu-id="493d4-703">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-703">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
          description: |
            <span data-ttu-id="493d4-704">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-704">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList'
    name: getBackupPolicyList(Models.ServiceFabricClientGetBackupPolicyListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-705">구성 된 모든 백업 정책 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-705">Get a list of all the backup policies configured.</span></span>
    syntax:
      content: 'function getBackupPolicyList(options?: Models.ServiceFabricClientGetBackupPolicyListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupPolicyListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_1'
    name: getBackupPolicyList(ServiceCallback<PagedBackupPolicyDescriptionList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(callback: ServiceCallback<PagedBackupPolicyDescriptionList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
          description: |
            <span data-ttu-id="493d4-706">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-706">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_2'
    name: 'getBackupPolicyList(ServiceFabricClientGetBackupPolicyListOptionalParams, ServiceCallback<PagedBackupPolicyDescriptionList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(options: ServiceFabricClientGetBackupPolicyListOptionalParams, callback: ServiceCallback<PagedBackupPolicyDescriptionList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
          description: <span data-ttu-id="493d4-707">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-707">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
          description: |
            <span data-ttu-id="493d4-708">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-708">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-709">지정 된 엔터티 (응용 프로그램, 서비스 또는 파티션) 지정된 된 백업 위치 (파일 공유 또는 Azure Blob Storage)에 백업에 대 한 사용 가능한 백업 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-709">Gets the list of backups available for the specified backed up entity (Application, Service or Partition) at the specified backup location (FileShare or Azure Blob Storage).</span></span>'
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options?: Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: <span data-ttu-id="493d4-710">필터 및 열거 백업에 사용할 백업 저장소 세부 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-710">Describes the filters and backup storage details to be used for enumerating backups.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_1'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: <span data-ttu-id="493d4-711">필터 및 열거 백업에 사용할 백업 저장소 세부 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-711">Describes the filters and backup storage details to be used for enumerating backups.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="493d4-712">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-712">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_2'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, ServiceFabricClientGetBackupsFromBackupLocationOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: <span data-ttu-id="493d4-713">필터 및 열거 백업에 사용할 백업 저장소 세부 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-713">Describes the filters and backup storage details to be used for enumerating backups.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
          description: <span data-ttu-id="493d4-714">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-714">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="493d4-715">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-715">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos'
    name: getChaos(Models.ServiceFabricClientGetChaosOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-716">Chaos가 실행 중인지 여부, Chaos 매개 변수가 Chaos 실행에 사용되는지 여부 및 Chaos Schedule의 상태를 나타내는 Chaos의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-716">Get the status of Chaos indicating whether or not Chaos is running, the Chaos parameters used for running Chaos and the status of the Chaos Schedule.</span></span>'
    syntax:
      content: 'function getChaos(options?: Models.ServiceFabricClientGetChaosOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos_1'
    name: getChaos(ServiceCallback<Chaos>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(callback: ServiceCallback<Chaos>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.Chaos>
          description: |
            <span data-ttu-id="493d4-717">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-717">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos_2'
    name: 'getChaos(ServiceFabricClientGetChaosOptionalParams, ServiceCallback<Chaos>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(options: ServiceFabricClientGetChaosOptionalParams, callback: ServiceCallback<Chaos>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
          description: <span data-ttu-id="493d4-718">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-718">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.Chaos>
          description: |
            <span data-ttu-id="493d4-719">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-719">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents'
    name: getChaosEvents(Models.ServiceFabricClientGetChaosEventsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-720">Chaos 이벤트의 다음 세그먼트를 가져오기 위해 ContinuationToken을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-720">To get the next segment of the Chaos events, you can specify the ContinuationToken.</span></span> <span data-ttu-id="493d4-721">Chaos 이벤트의 새 세그먼트의 시작 부분을 가져오기 위해 StartTimeUtc 및 EndTimeUtc를 통해 시간 범위를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-721">To get the start of a new segment of Chaos events, you can specify the time range through StartTimeUtc and EndTimeUtc.</span></span> <span data-ttu-id="493d4-722">동일한 호출에서는 ContinuationToken과 시간 범위를 모두 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-722">You cannot specify both the ContinuationToken and the time range in the same call.</span></span>
      <span data-ttu-id="493d4-723">100개 이상의 Chaos 이벤트가 있는 경우 Chaos 이벤트는 세그먼트가 100개 이하의 Chaos 이벤트를 포함하는 여러 세그먼트에서 반환되며, 다음 세그먼트를 가져오기 위해 연속 토큰을 사용하여 이 API에 대한 호출을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-723">When there are more than 100 Chaos events, the Chaos events are returned in multiple segments where a segment contains no more than 100 Chaos events and to get the next segment you make a call to this API with the continuation token.</span></span>
    syntax:
      content: 'function getChaosEvents(options?: Models.ServiceFabricClientGetChaosEventsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosEventsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents_1'
    name: getChaosEvents(ServiceCallback<ChaosEventsSegment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(callback: ServiceCallback<ChaosEventsSegment>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
          description: |
            <span data-ttu-id="493d4-724">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-724">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents_2'
    name: 'getChaosEvents(ServiceFabricClientGetChaosEventsOptionalParams, ServiceCallback<ChaosEventsSegment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(options: ServiceFabricClientGetChaosEventsOptionalParams, callback: ServiceCallback<ChaosEventsSegment>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
          description: <span data-ttu-id="493d4-725">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-725">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
          description: |
            <span data-ttu-id="493d4-726">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-726">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule'
    name: getChaosSchedule(Models.ServiceFabricClientGetChaosScheduleOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-727">사용 중인 Chaos Schedule과 Chaos를 실행하는 시기 및 방법을 정의하는 Chaos Schedule의 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-727">Gets the version of the Chaos Schedule in use and the Chaos Schedule that defines when and how to run Chaos.</span></span>
    syntax:
      content: 'function getChaosSchedule(options?: Models.ServiceFabricClientGetChaosScheduleOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosScheduleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_1'
    name: getChaosSchedule(ServiceCallback<ChaosScheduleDescription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(callback: ServiceCallback<ChaosScheduleDescription>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
          description: |
            <span data-ttu-id="493d4-728">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-728">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_2'
    name: 'getChaosSchedule(ServiceFabricClientGetChaosScheduleOptionalParams, ServiceCallback<ChaosScheduleDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(options: ServiceFabricClientGetChaosScheduleOptionalParams, callback: ServiceCallback<ChaosScheduleDescription>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
          description: <span data-ttu-id="493d4-729">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-729">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
          description: |
            <span data-ttu-id="493d4-730">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-730">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration'
    name: 'getClusterConfiguration(string, Models.ServiceFabricClientGetClusterConfigurationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-731">클러스터 구성에는 클러스터, 보안 구성, 오류 및 업그레이드 도메인 토폴로지 등의 다양한 노드 형식을 포함하는 클러스터의 속성이 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-731">The cluster configuration contains properties of the cluster that include different node types on the cluster, security configurations, fault, and upgrade domain topologies, etc.</span></span>'
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, options?: Models.ServiceFabricClientGetClusterConfigurationOptionalParams)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: <span data-ttu-id="493d4-732">독립 실행형 클러스터 json 구성의 API 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-732">The API version of the Standalone cluster json configuration.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterConfigurationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_1'
    name: 'getClusterConfiguration(string, ServiceCallback<ClusterConfiguration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, callback: ServiceCallback<ClusterConfiguration>)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: <span data-ttu-id="493d4-733">독립 실행형 클러스터 json 구성의 API 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-733">The API version of the Standalone cluster json configuration.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfiguration>
          description: |
            <span data-ttu-id="493d4-734">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-734">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_2'
    name: 'getClusterConfiguration(string, ServiceFabricClientGetClusterConfigurationOptionalParams, ServiceCallback<ClusterConfiguration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, options: ServiceFabricClientGetClusterConfigurationOptionalParams, callback: ServiceCallback<ClusterConfiguration>)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: <span data-ttu-id="493d4-735">독립 실행형 클러스터 json 구성의 API 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-735">The API version of the Standalone cluster json configuration.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
          description: <span data-ttu-id="493d4-736">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-736">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfiguration>
          description: |
            <span data-ttu-id="493d4-737">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-737">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus'
    name: getClusterConfigurationUpgradeStatus(Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-738">Service Fabric 독립 실행형 클러스터의 클러스터 구성 업그레이드 상태 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-738">Get the cluster configuration upgrade status details of a Service Fabric standalone cluster.</span></span>
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(options?: Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1'
    name: getClusterConfigurationUpgradeStatus(ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
          description: |
            <span data-ttu-id="493d4-739">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-739">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2'
    name: 'getClusterConfigurationUpgradeStatus(ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams, ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(options: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams, callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
          description: <span data-ttu-id="493d4-740">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-740">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
          description: |
            <span data-ttu-id="493d4-741">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-741">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList'
    name: 'getClusterEventList(string, string, Models.ServiceFabricClientGetClusterEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-742">응답은 ClusterEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-742">The response is list of ClusterEvent objects.</span></span>
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetClusterEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-743">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-743">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-744">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-744">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList_1'
    name: 'getClusterEventList(string, string, ServiceCallback<Models.ClusterEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ClusterEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-745">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-745">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-746">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-746">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ClusterEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-747">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-747">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList_2'
    name: 'getClusterEventList(string, string, ServiceFabricClientGetClusterEventListOptionalParams, ServiceCallback<Models.ClusterEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetClusterEventListOptionalParams, callback: ServiceCallback<Models.ClusterEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-748">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-748">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-749">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-749">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
          description: <span data-ttu-id="493d4-750">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-750">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ClusterEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-751">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-751">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth'
    name: getClusterHealth(Models.ServiceFabricClientGetClusterHealthOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-752">상태에 따라 클러스터에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-752">Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.</span></span>
      <span data-ttu-id="493d4-753">마찬가지로, 집계된 상태에 따라 반환된 노드 및 애플리케이션 컬렉션을 필터링할 NodesHealthStateFilter 및 ApplicationsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-753">Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter the collection of nodes and applications returned based on their aggregated health state.</span></span>
    syntax:
      content: 'function getClusterHealth(options?: Models.ServiceFabricClientGetClusterHealthOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth_1'
    name: getClusterHealth(ServiceCallback<ClusterHealth>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            <span data-ttu-id="493d4-754">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-754">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth_2'
    name: 'getClusterHealth(ServiceFabricClientGetClusterHealthOptionalParams, ServiceCallback<ClusterHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(options: ServiceFabricClientGetClusterHealthOptionalParams, callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
          description: <span data-ttu-id="493d4-755">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-755">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            <span data-ttu-id="493d4-756">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-756">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk'
    name: getClusterHealthChunk(Models.ServiceFabricClientGetClusterHealthChunkOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-757">상태 청크를 사용 하 여 Service Fabric 클러스터의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-757">Gets the health of a Service Fabric cluster using health chunks.</span></span> <span data-ttu-id="493d4-758">클러스터의 집계 된 상태를 제외 하 고 클러스터 엔터티를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-758">Includes the aggregated health state of the cluster, but none of the cluster entities.</span></span>
      <span data-ttu-id="493d4-759">클러스터 상태를 확장 하 고 엔터티를의 전체 또는 일부의 상태를 가져오기, POST URI를 사용 하 고 클러스터 상태 청크 쿼리 설명을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-759">To expand the cluster health and get the health state of all or some of the entities, use the POST URI and specify the cluster health chunk query description.</span></span>
    syntax:
      content: 'function getClusterHealthChunk(options?: Models.ServiceFabricClientGetClusterHealthChunkOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthChunkOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_1'
    name: getClusterHealthChunk(ServiceCallback<ClusterHealthChunk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            <span data-ttu-id="493d4-760">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-760">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_2'
    name: 'getClusterHealthChunk(ServiceFabricClientGetClusterHealthChunkOptionalParams, ServiceCallback<ClusterHealthChunk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(options: ServiceFabricClientGetClusterHealthChunkOptionalParams, callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
          description: <span data-ttu-id="493d4-761">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-761">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            <span data-ttu-id="493d4-762">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-762">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters'
    name: getClusterHealthChunkUsingPolicyAndAdvancedFilters(Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-763">상태 청크를 사용 하 여 Service Fabric 클러스터의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-763">Gets the health of a Service Fabric cluster using health chunks.</span></span> <span data-ttu-id="493d4-764">상태 평가 입력된 클러스터 상태 청크 쿼리 설명에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-764">The health evaluation is done based on the input cluster health chunk query description.</span></span>
      <span data-ttu-id="493d4-765">쿼리 설명을 사용 하면 클러스터 및 해당 자식 평가용 상태 정책을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-765">The query description allows users to specify health policies for evaluating the cluster and its children.</span></span>
      <span data-ttu-id="493d4-766">사용자 매우 유연한 선택을 위해 필터를 반환 하는 클러스터 엔터티를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-766">Users can specify very flexible filters to select which cluster entities to return.</span></span> <span data-ttu-id="493d4-767">선택한은 엔터티 상태에 따라 수행 하 고 계층에 따라 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-767">The selection can be done based on the entities health state and based on the hierarchy.</span></span>
      <span data-ttu-id="493d4-768">쿼리는 여러 수준의 자식의 지정한 필터를 기반으로 엔터티를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-768">The query can return multi-level children of the entities based on the specified filters.</span></span> <span data-ttu-id="493d4-769">예를 들어,이 응용 프로그램에 대 한 지정 된 이름의 한 응용 프로그램을 반환, 오류 또는 경고 및 모든 파티션 및 이러한 서비스 중 하나에 대 한 복제본에 있는 서비스만 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-769">For example, it can return one application with a specified name, and for this application, return only services that are in Error or Warning, and all partitions and replicas for one of these services.</span></span>
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options?: Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1'
    name: getClusterHealthChunkUsingPolicyAndAdvancedFilters(ServiceCallback<ClusterHealthChunk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            <span data-ttu-id="493d4-770">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-770">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2'
    name: 'getClusterHealthChunkUsingPolicyAndAdvancedFilters(ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams, ServiceCallback<ClusterHealthChunk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams, callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
          description: <span data-ttu-id="493d4-771">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-771">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            <span data-ttu-id="493d4-772">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-772">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy'
    name: getClusterHealthUsingPolicy(Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-773">상태에 따라 클러스터에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-773">Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.</span></span>
      <span data-ttu-id="493d4-774">마찬가지로, 집계된 상태에 따라 반환된 노드 및 애플리케이션 컬렉션을 필터링할 NodesHealthStateFilter 및 ApplicationsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-774">Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter the collection of nodes and applications returned based on their aggregated health state.</span></span>
      <span data-ttu-id="493d4-775">ClusterHealthPolicies를 사용 하 여 상태를 평가 하는 데 상태 정책을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-775">Use ClusterHealthPolicies to override the health policies used to evaluate the health.</span></span>
    syntax:
      content: 'function getClusterHealthUsingPolicy(options?: Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1'
    name: getClusterHealthUsingPolicy(ServiceCallback<ClusterHealth>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            <span data-ttu-id="493d4-776">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-776">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2'
    name: 'getClusterHealthUsingPolicy(ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams, ServiceCallback<ClusterHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(options: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams, callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="493d4-777">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-777">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            <span data-ttu-id="493d4-778">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-778">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterLoad'
    name: getClusterLoad(Models.ServiceFabricClientGetClusterLoadOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-779">로드 또는 용량이 정의 되어 있는 모든 메트릭에 대 한 Service Fabric 클러스터의 부하 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-779">Retrieves the load information of a Service Fabric cluster for all the metrics that have load or capacity defined.</span></span>
    syntax:
      content: 'function getClusterLoad(options?: Models.ServiceFabricClientGetClusterLoadOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterLoadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterLoadResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterLoad_1'
    name: getClusterLoad(ServiceCallback<ClusterLoadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterLoad(callback: ServiceCallback<ClusterLoadInfo>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterLoadInfo>
          description: |
            <span data-ttu-id="493d4-780">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-780">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterLoadResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterLoad_2'
    name: 'getClusterLoad(ServiceFabricClientGetClusterLoadOptionalParams, ServiceCallback<ClusterLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterLoad(options: ServiceFabricClientGetClusterLoadOptionalParams, callback: ServiceCallback<ClusterLoadInfo>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterLoadOptionalParams'
          description: <span data-ttu-id="493d4-781">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-781">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterLoadInfo>
          description: |
            <span data-ttu-id="493d4-782">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-782">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterLoadResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest'
    name: getClusterManifest(Models.ServiceFabricClientGetClusterManifestOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-783">Service Fabric 클러스터 매니페스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-783">Get the Service Fabric cluster manifest.</span></span> <span data-ttu-id="493d4-784">클러스터 매니페스트에는 클러스터, 보안 구성, 오류 및 업그레이드 도메인 토폴로지 등의 다양한 노드 형식을 포함하는 클러스터의 속성이 들어 있습니다. 이러한 속성은 독립 실행형 클러스터를 배포하는 동안 ClusterConfig.JSON 파일의 일부로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-784">The cluster manifest contains properties of the cluster that include different node types on the cluster, security configurations, fault, and upgrade domain topologies, etc. These properties are specified as part of the ClusterConfig.JSON file while deploying a stand-alone cluster.</span></span> <span data-ttu-id="493d4-785">그러나 클러스터 매니페스트에 있는 대부분 정보는 다른 배포 시나리오(예: Azure Portal 사용 시)에서 클러스터 배포할 경우 서비스 패브릭에서 내부적으로 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-785">However, most of the information in the cluster manifest is generated internally by service fabric during cluster deployment in other deployment scenarios (e.g. when using Azure portal).</span></span>

      <span data-ttu-id="493d4-786">클러스터 매니페스트의 내용이 단지 정보용일 경우 사용자는 파일 내용 및 해석 형식에 의존하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-786">The contents of the cluster manifest are for informational purposes only and users are not expected to take a dependency on the format of the file contents or its interpretation.</span></span>
    syntax:
      content: 'function getClusterManifest(options?: Models.ServiceFabricClientGetClusterManifestOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest_1'
    name: getClusterManifest(ServiceCallback<ClusterManifest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(callback: ServiceCallback<ClusterManifest>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterManifest>
          description: |
            <span data-ttu-id="493d4-787">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-787">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest_2'
    name: 'getClusterManifest(ServiceFabricClientGetClusterManifestOptionalParams, ServiceCallback<ClusterManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(options: ServiceFabricClientGetClusterManifestOptionalParams, callback: ServiceCallback<ClusterManifest>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
          description: <span data-ttu-id="493d4-788">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-788">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterManifest>
          description: |
            <span data-ttu-id="493d4-789">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-789">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress'
    name: getClusterUpgradeProgress(Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-790">진행 중인 클러스터 업그레이드의 현재 진행률을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-790">Gets the current progress of the ongoing cluster upgrade.</span></span> <span data-ttu-id="493d4-791">현재 진행 중인 업그레이드가 없는 경우 이전 클러스터 업그레이드의 마지막 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-791">If no upgrade is currently in progress, get the last state of the previous cluster upgrade.</span></span>'
    syntax:
      content: 'function getClusterUpgradeProgress(options?: Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1'
    name: getClusterUpgradeProgress(ServiceCallback<ClusterUpgradeProgressObject>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(callback: ServiceCallback<ClusterUpgradeProgressObject>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
          description: |
            <span data-ttu-id="493d4-792">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-792">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2'
    name: 'getClusterUpgradeProgress(ServiceFabricClientGetClusterUpgradeProgressOptionalParams, ServiceCallback<ClusterUpgradeProgressObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(options: ServiceFabricClientGetClusterUpgradeProgressOptionalParams, callback: ServiceCallback<ClusterUpgradeProgressObject>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
          description: <span data-ttu-id="493d4-793">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-793">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
          description: |
            <span data-ttu-id="493d4-794">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-794">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion'
    name: getClusterVersion(Models.ServiceFabricClientGetClusterVersionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-795">클러스터 업그레이드는 발생 하는 경우 현재 가장 낮은 (구) 버전 및 대상 클러스터 런타임 버전이이 API 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-795">If a cluster upgrade is happening, then this API will return the lowest (older) version of the current and target cluster runtime versions.</span></span>'
    syntax:
      content: 'function getClusterVersion(options?: Models.ServiceFabricClientGetClusterVersionOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterVersionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion_1'
    name: getClusterVersion(ServiceCallback<ClusterVersion>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(callback: ServiceCallback<ClusterVersion>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterVersion>
          description: |
            <span data-ttu-id="493d4-796">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-796">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion_2'
    name: 'getClusterVersion(ServiceFabricClientGetClusterVersionOptionalParams, ServiceCallback<ClusterVersion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(options: ServiceFabricClientGetClusterVersionOptionalParams, callback: ServiceCallback<ClusterVersion>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
          description: <span data-ttu-id="493d4-797">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-797">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterVersion>
          description: |
            <span data-ttu-id="493d4-798">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-798">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus'
    name: 'getComposeDeploymentStatus(string, Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-799">Service Fabric 클러스터에서 만들어졌거나 만들어지는 과정에 있으며 이름이 매개 변수로 지정된 것과 일치하는 작성 배포의 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-799">Returns the status of the compose deployment that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter.</span></span> <span data-ttu-id="493d4-800">응답에는 이름, 상태 및 배포에 관한 기타 세부 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-800">The response includes the name, status, and other details about the deployment.</span></span>'
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, options?: Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-801">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-801">The identity of the deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1'
    name: 'getComposeDeploymentStatus(string, ServiceCallback<ComposeDeploymentStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-802">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-802">The identity of the deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
          description: |
            <span data-ttu-id="493d4-803">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-803">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2'
    name: 'getComposeDeploymentStatus(string, ServiceFabricClientGetComposeDeploymentStatusOptionalParams, ServiceCallback<ComposeDeploymentStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, options: ServiceFabricClientGetComposeDeploymentStatusOptionalParams, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-804">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-804">The identity of the deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
          description: <span data-ttu-id="493d4-805">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-805">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
          description: |
            <span data-ttu-id="493d4-806">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-806">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList'
    name: getComposeDeploymentStatusList(Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-807">Service Fabric 클러스터에 만들어졌거나 만들어지는 프로세스에 있는 작성 배포에 관한 상태를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-807">Gets the status about the compose deployments that were created or in the process of being created in the Service Fabric cluster.</span></span> <span data-ttu-id="493d4-808">응답에는 이름, 상태 및 작성 배포에 관한 기타 세부 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-808">The response includes the name, status, and other details about the compose deployments.</span></span> <span data-ttu-id="493d4-809">배포 목록이 한 페이지에 맞지 않는 경우, 결과의 한 페이지가 연속 토큰으로 반환되어 다음 페이지를 가져오는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-809">If the list of deployments do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span>'
    syntax:
      content: 'function getComposeDeploymentStatusList(options?: Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1'
    name: getComposeDeploymentStatusList(ServiceCallback<PagedComposeDeploymentStatusInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
          description: |
            <span data-ttu-id="493d4-810">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-810">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2'
    name: 'getComposeDeploymentStatusList(ServiceFabricClientGetComposeDeploymentStatusListOptionalParams, ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(options: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams, callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
          description: <span data-ttu-id="493d4-811">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-811">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
          description: |
            <span data-ttu-id="493d4-812">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-812">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress'
    name: 'getComposeDeploymentUpgradeProgress(string, Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-813">애플리케이션 상태 문제 디버깅을 지원하기 위한 세부 정보와 함께 작성 배포 업그레이드의 상태에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-813">Returns the information about the state of the compose deployment upgrade along with details to aid debugging application health issues.</span></span>
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options?: Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-814">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-814">The identity of the deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1'
    name: 'getComposeDeploymentUpgradeProgress(string, ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-815">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-815">The identity of the deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
          description: |
            <span data-ttu-id="493d4-816">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-816">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2'
    name: 'getComposeDeploymentUpgradeProgress(string, ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams, ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-817">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-817">The identity of the deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
          description: <span data-ttu-id="493d4-818">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-818">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
          description: |
            <span data-ttu-id="493d4-819">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-819">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-820">지정된 코드 패키지에 대해 Service Fabric 노드에 배포한 컨테이너에 대한 컨테이너 로그를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-820">Gets the container logs for container deployed on a Service Fabric node for the given code package.</span></span>
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options?: Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-821">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-821">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-822">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-822">The identity of the application.</span></span> <span data-ttu-id="493d4-823">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-823">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-824">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-824">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-825">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-825">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-826">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-826">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-827">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-827">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_1'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-828">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-828">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-829">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-829">The identity of the application.</span></span> <span data-ttu-id="493d4-830">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-830">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-831">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-831">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-832">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-832">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-833">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-833">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-834">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-834">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerLogs>
          description: |
            <span data-ttu-id="493d4-835">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-835">The callback</span></span>
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_2'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-836">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-836">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-837">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-837">The identity of the application.</span></span> <span data-ttu-id="493d4-838">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-838">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-839">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-839">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-840">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-840">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-841">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-841">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-842">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-842">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
          description: <span data-ttu-id="493d4-843">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-843">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerLogs>
          description: |
            <span data-ttu-id="493d4-844">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-844">The callback</span></span>
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList'
    name: 'getContainersEventList(string, string, Models.ServiceFabricClientGetContainersEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-845">응답은 ContainerInstanceEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-845">The response is list of ContainerInstanceEvent objects.</span></span>
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetContainersEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-846">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-846">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-847">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-847">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetContainersEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList_1'
    name: 'getContainersEventList(string, string, ServiceCallback<ContainerInstanceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ContainerInstanceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-848">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-848">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-849">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-849">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
          description: |
            <span data-ttu-id="493d4-850">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-850">The callback</span></span>
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList_2'
    name: 'getContainersEventList(string, string, ServiceFabricClientGetContainersEventListOptionalParams, ServiceCallback<ContainerInstanceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetContainersEventListOptionalParams, callback: ServiceCallback<ContainerInstanceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-851">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-851">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-852">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-852">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
          description: <span data-ttu-id="493d4-853">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-853">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
          description: |
            <span data-ttu-id="493d4-854">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-854">The callback</span></span>
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList'
    name: 'getCorrelatedEventList(string, Models.ServiceFabricClientGetCorrelatedEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-855">응답은 목록 FabricEvents입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-855">The response is list of FabricEvents.</span></span>
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, options?: Models.ServiceFabricClientGetCorrelatedEventListOptionalParams)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-856">EventInstanceId 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-856">The EventInstanceId.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetCorrelatedEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_1'
    name: 'getCorrelatedEventList(string, ServiceCallback<Models.FabricEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, callback: ServiceCallback<Models.FabricEventUnion[]>)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-857">EventInstanceId 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-857">The EventInstanceId.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.FabricEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-858">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-858">The callback</span></span>
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_2'
    name: 'getCorrelatedEventList(string, ServiceFabricClientGetCorrelatedEventListOptionalParams, ServiceCallback<Models.FabricEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, options: ServiceFabricClientGetCorrelatedEventListOptionalParams, callback: ServiceCallback<Models.FabricEventUnion[]>)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-859">EventInstanceId 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-859">The EventInstanceId.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
          description: <span data-ttu-id="493d4-860">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-860">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.FabricEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-861">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-861">The callback</span></span>
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress'
    name: 'getDataLossProgress(string, string, string, Models.ServiceFabricClientGetDataLossProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-862">OperationId를 사용하여 StartDataLoss로 시작된 데이터 손실 작업의 진행률을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-862">Gets the progress of a data loss operation started with StartDataLoss, using the OperationId.</span></span>'
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetDataLossProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-863">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-863">The identity of the service.</span></span> <span data-ttu-id="493d4-864">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-864">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-865">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-865">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-866">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-866">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-867">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-867">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-868">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-868">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-869">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-869">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDataLossProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_1'
    name: 'getDataLossProgress(string, string, string, ServiceCallback<PartitionDataLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionDataLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-870">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-870">The identity of the service.</span></span> <span data-ttu-id="493d4-871">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-871">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-872">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-872">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-873">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-873">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-874">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-874">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-875">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-875">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-876">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-876">This is passed into the corresponding GetProgress API</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
          description: |
            <span data-ttu-id="493d4-877">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-877">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_2'
    name: 'getDataLossProgress(string, string, string, ServiceFabricClientGetDataLossProgressOptionalParams, ServiceCallback<PartitionDataLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetDataLossProgressOptionalParams, callback: ServiceCallback<PartitionDataLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-878">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-878">The identity of the service.</span></span> <span data-ttu-id="493d4-879">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-879">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-880">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-880">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-881">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-881">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-882">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-882">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-883">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-883">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-884">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-884">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
          description: <span data-ttu-id="493d4-885">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-885">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
          description: |
            <span data-ttu-id="493d4-886">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-886">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth'
    name: 'getDeployedApplicationHealth(string, string, Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-887">Service Fabric 노드에 배포된 애플리케이션의 상태에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-887">Gets the information about health of an application deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-888">EventsHealthStateFilter를 사용하여 필요에 따라 상태에 따라 배포된 애플리케이션에 보고된 HealthEvent 개체의 컬렉션에 대해 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-888">Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed application based on health state.</span></span> <span data-ttu-id="493d4-889">DeployedServicePackagesHealthStateFilter를 사용하여 필요에 따라 상태를 기반으로 한 DeployedServicePackageHealth 자식에 대해 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-889">Use DeployedServicePackagesHealthStateFilter to optionally filter for DeployedServicePackageHealth children based on health state.</span></span>
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-890">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-890">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-891">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-891">The identity of the application.</span></span> <span data-ttu-id="493d4-892">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-892">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-893">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-893">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-894">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-894">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1'
    name: 'getDeployedApplicationHealth(string, string, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-895">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-895">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-896">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-896">The identity of the application.</span></span> <span data-ttu-id="493d4-897">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-897">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-898">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-898">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-899">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-899">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            <span data-ttu-id="493d4-900">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-900">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2'
    name: 'getDeployedApplicationHealth(string, string, ServiceFabricClientGetDeployedApplicationHealthOptionalParams, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationHealthOptionalParams, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-901">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-901">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-902">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-902">The identity of the application.</span></span> <span data-ttu-id="493d4-903">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-903">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-904">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-904">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-905">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-905">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
          description: <span data-ttu-id="493d4-906">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-906">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            <span data-ttu-id="493d4-907">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-907">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-908">지정 된 정책을 사용 하 여 Service Fabric 노드에 배포 된 응용 프로그램의 상태에 대 한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-908">Gets the information about health of an application deployed on a Service Fabric node using the specified policy.</span></span> <span data-ttu-id="493d4-909">EventsHealthStateFilter를 사용하여 필요에 따라 상태에 따라 배포된 애플리케이션에 보고된 HealthEvent 개체의 컬렉션에 대해 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-909">Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed application based on health state.</span></span> <span data-ttu-id="493d4-910">DeployedServicePackagesHealthStateFilter를 사용하여 필요에 따라 상태를 기반으로 한 DeployedServicePackageHealth 자식에 대해 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-910">Use DeployedServicePackagesHealthStateFilter to optionally filter for DeployedServicePackageHealth children based on health state.</span></span> <span data-ttu-id="493d4-911">필요에 따라 상태를 평가 하는 데 상태 정책을 재정의 하려면 ApplicationHealthPolicy를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-911">Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health.</span></span> <span data-ttu-id="493d4-912">이 API는 ApplicationHealthPolicy 'ConsiderWarningAsError' 필드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-912">This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy.</span></span> <span data-ttu-id="493d4-913">나머지 필드는 배포 된 응용 프로그램의 상태를 평가 하는 동안 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-913">The rest of the fields are ignored while evaluating the health of the deployed application.</span></span>
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-914">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-914">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-915">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-915">The identity of the application.</span></span> <span data-ttu-id="493d4-916">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-916">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-917">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-917">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-918">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-918">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-919">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-919">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-920">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-920">The identity of the application.</span></span> <span data-ttu-id="493d4-921">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-921">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-922">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-922">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-923">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-923">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            <span data-ttu-id="493d4-924">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-924">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-925">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-925">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-926">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-926">The identity of the application.</span></span> <span data-ttu-id="493d4-927">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-927">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-928">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-928">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-929">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-929">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="493d4-930">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-930">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            <span data-ttu-id="493d4-931">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-931">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo'
    name: 'getDeployedApplicationInfo(string, string, Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-932">이 쿼리는 제공되는 애플리케이션 ID가 시스템 애플리케이션용인 경우 시스템 애플리케이션 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-932">This query returns system application information if the application ID provided is for system application.</span></span> <span data-ttu-id="493d4-933">결과는 활성, 활성화 중 및 상태 다운로드 중인 배포된 애플리케이션을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-933">Results encompass deployed applications in active, activating, and downloading states.</span></span> <span data-ttu-id="493d4-934">이 쿼리에서는 노드 이름이 클러스터의 노드에 해당해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-934">This query requires that the node name corresponds to a node on the cluster.</span></span> <span data-ttu-id="493d4-935">제공된 노드 이름이 클러스터의 활성 Service Fabric 노드를 가리키지 않으면 쿼리가 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-935">The query fails if the provided node name does not point to any active Service Fabric nodes on the cluster.</span></span>'
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-936">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-936">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-937">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-937">The identity of the application.</span></span> <span data-ttu-id="493d4-938">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-938">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-939">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-939">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-940">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-940">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1'
    name: 'getDeployedApplicationInfo(string, string, ServiceCallback<DeployedApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-941">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-941">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-942">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-942">The identity of the application.</span></span> <span data-ttu-id="493d4-943">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-943">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-944">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-944">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-945">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-945">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
          description: |
            <span data-ttu-id="493d4-946">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-946">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2'
    name: 'getDeployedApplicationInfo(string, string, ServiceFabricClientGetDeployedApplicationInfoOptionalParams, ServiceCallback<DeployedApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationInfoOptionalParams, callback: ServiceCallback<DeployedApplicationInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-947">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-947">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-948">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-948">The identity of the application.</span></span> <span data-ttu-id="493d4-949">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-949">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-950">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-950">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-951">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-951">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
          description: <span data-ttu-id="493d4-952">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-952">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
          description: |
            <span data-ttu-id="493d4-953">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-953">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList'
    name: 'getDeployedApplicationInfoList(string, Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-954">Microsoft Azure Service Fabric 노드에서 배포된 애플리케이션의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-954">Gets the list of applications deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-955">결과는 ID별에 대해 명시적으로 쿼리되지 않는 한 배포된 시스템 애플리케이션에 대한 정보를 포함하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-955">The results do not include information about deployed system applications unless explicitly queried for by ID.</span></span> <span data-ttu-id="493d4-956">결과는 활성, 활성화 중 및 상태 다운로드 중인 배포된 애플리케이션을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-956">Results encompass deployed applications in active, activating, and downloading states.</span></span> <span data-ttu-id="493d4-957">이 쿼리에서는 노드 이름이 클러스터의 노드에 해당해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-957">This query requires that the node name corresponds to a node on the cluster.</span></span> <span data-ttu-id="493d4-958">제공된 노드 이름이 클러스터의 활성 Service Fabric 노드를 가리키지 않으면 쿼리가 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-958">The query fails if the provided node name does not point to any active Service Fabric nodes on the cluster.</span></span>'
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, options?: Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-959">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-959">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1'
    name: 'getDeployedApplicationInfoList(string, ServiceCallback<PagedDeployedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, callback: ServiceCallback<PagedDeployedApplicationInfoList>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-960">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-960">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
          description: |
            <span data-ttu-id="493d4-961">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-961">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2'
    name: 'getDeployedApplicationInfoList(string, ServiceFabricClientGetDeployedApplicationInfoListOptionalParams, ServiceCallback<PagedDeployedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, options: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams, callback: ServiceCallback<PagedDeployedApplicationInfoList>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-962">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-962">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
          description: <span data-ttu-id="493d4-963">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-963">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
          description: |
            <span data-ttu-id="493d4-964">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-964">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList'
    name: 'getDeployedCodePackageInfoList(string, string, Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-965">지정된 애플리케이션에 대한 Service Fabric 노드에 배포된 코드 패키지 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-965">Gets the list of code packages deployed on a Service Fabric node for the given application.</span></span>
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-966">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-966">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-967">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-967">The identity of the application.</span></span> <span data-ttu-id="493d4-968">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-968">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-969">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-969">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-970">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-970">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1'
    name: 'getDeployedCodePackageInfoList(string, string, ServiceCallback<DeployedCodePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-971">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-971">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-972">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-972">The identity of the application.</span></span> <span data-ttu-id="493d4-973">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-973">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-974">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-974">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-975">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-975">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
          description: |
            <span data-ttu-id="493d4-976">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-976">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2'
    name: 'getDeployedCodePackageInfoList(string, string, ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams, ServiceCallback<DeployedCodePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-977">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-977">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-978">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-978">The identity of the application.</span></span> <span data-ttu-id="493d4-979">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-979">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-980">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-980">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-981">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-981">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
          description: <span data-ttu-id="493d4-982">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-982">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
          description: |
            <span data-ttu-id="493d4-983">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-983">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth'
    name: 'getDeployedServicePackageHealth(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-984">Service Fabric 노드에 배포된 특정 애플리케이션의 서비스 패키지 상태에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-984">Gets the information about health of a service package for a specific application deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-985">EventsHealthStateFilter를 사용하여 필요에 따라 상태에 따라 배포된 서비스 패키지에 보고된 HealthEvent 개체의 컬렉션에 대해 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-985">Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed service package based on health state.</span></span>
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-986">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-986">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-987">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-987">The identity of the application.</span></span> <span data-ttu-id="493d4-988">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-988">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-989">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-989">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-990">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-990">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-991">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-991">The name of the service package.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1'
    name: 'getDeployedServicePackageHealth(string, string, string, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-992">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-992">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-993">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-993">The identity of the application.</span></span> <span data-ttu-id="493d4-994">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-994">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-995">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-995">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-996">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-996">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-997">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-997">The name of the service package.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            <span data-ttu-id="493d4-998">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-998">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2'
    name: 'getDeployedServicePackageHealth(string, string, string, ServiceFabricClientGetDeployedServicePackageHealthOptionalParams, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-999">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-999">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1000">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1000">The identity of the application.</span></span> <span data-ttu-id="493d4-1001">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1001">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1002">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1002">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1003">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1003">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1004">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1004">The name of the service package.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
          description: <span data-ttu-id="493d4-1005">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1005">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            <span data-ttu-id="493d4-1006">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1006">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1007">Service Fabric 노드에 배포된 특정 애플리케이션의 서비스 패키지 상태에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1007">Gets the information about health of a service package for a specific application deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-1008">지정 된 정책을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1008">using the specified policy.</span></span> <span data-ttu-id="493d4-1009">EventsHealthStateFilter를 사용하여 필요에 따라 상태에 따라 배포된 서비스 패키지에 보고된 HealthEvent 개체의 컬렉션에 대해 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1009">Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed service package based on health state.</span></span> <span data-ttu-id="493d4-1010">필요에 따라 상태를 평가 하는 데 상태 정책을 재정의 하려면 ApplicationHealthPolicy를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1010">Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health.</span></span> <span data-ttu-id="493d4-1011">이 API는 ApplicationHealthPolicy 'ConsiderWarningAsError' 필드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1011">This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy.</span></span> <span data-ttu-id="493d4-1012">나머지 필드는 배포 된 서비스 패키지의 상태를 평가 하는 동안 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1012">The rest of the fields are ignored while evaluating the health of the deployed service package.</span></span>
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1013">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1013">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1014">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1014">The identity of the application.</span></span> <span data-ttu-id="493d4-1015">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1015">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1016">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1016">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1017">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1017">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1018">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1018">The name of the service package.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1019">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1019">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1020">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1020">The identity of the application.</span></span> <span data-ttu-id="493d4-1021">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1021">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1022">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1022">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1023">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1023">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1024">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1024">The name of the service package.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            <span data-ttu-id="493d4-1025">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1025">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1026">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1026">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1027">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1027">The identity of the application.</span></span> <span data-ttu-id="493d4-1028">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1028">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1029">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1029">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1030">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1030">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1031">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1031">The name of the service package.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="493d4-1032">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1032">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            <span data-ttu-id="493d4-1033">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1033">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList'
    name: 'getDeployedServicePackageInfoList(string, string, Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1034">지정된 애플리케이션에 대한 Service Fabric 노드에 배포된 서비스 패키지에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1034">Returns the information about the service packages deployed on a Service Fabric node for the given application.</span></span>
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1035">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1035">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1036">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1036">The identity of the application.</span></span> <span data-ttu-id="493d4-1037">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1037">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1038">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1038">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1039">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1039">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1'
    name: 'getDeployedServicePackageInfoList(string, string, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1040">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1040">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1041">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1041">The identity of the application.</span></span> <span data-ttu-id="493d4-1042">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1042">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1043">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1043">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1044">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1044">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            <span data-ttu-id="493d4-1045">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1045">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2'
    name: 'getDeployedServicePackageInfoList(string, string, ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1046">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1046">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1047">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1047">The identity of the application.</span></span> <span data-ttu-id="493d4-1048">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1048">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1049">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1049">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1050">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1050">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1051">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1051">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            <span data-ttu-id="493d4-1052">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1052">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1053">지정된 애플리케이션에 대한 Service Fabric 노드에 배포된 서비스 패키지에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1053">Returns the information about the service packages deployed on a Service Fabric node for the given application.</span></span> <span data-ttu-id="493d4-1054">이러한 결과는 해당 이름이 매개 변수로 지정된 서비스 패키지 이름과 정확히 일치하는 서비스 패키지입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1054">These results are of service packages whose name match exactly the service package name specified as the parameter.</span></span>
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1055">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1055">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1056">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1056">The identity of the application.</span></span> <span data-ttu-id="493d4-1057">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1057">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1058">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1058">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1059">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1059">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1060">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1060">The name of the service package.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1061">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1061">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1062">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1062">The identity of the application.</span></span> <span data-ttu-id="493d4-1063">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1063">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1064">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1064">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1065">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1065">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1066">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1066">The name of the service package.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            <span data-ttu-id="493d4-1067">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1067">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1068">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1068">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1069">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1069">The identity of the application.</span></span> <span data-ttu-id="493d4-1070">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1070">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1071">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1071">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1072">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1072">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1073">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1073">The name of the service package.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
          description: <span data-ttu-id="493d4-1074">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1074">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            <span data-ttu-id="493d4-1075">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1075">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1076">Service Fabric 노드에서 배포된 복제본의 세부 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1076">Gets the details of the replica deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-1077">정보로는 서비스 종류, 서비스 이름, 현재 서비스 작업, 현재 서비스 작업 시작 날짜 시간, 파티션 ID, 복제본/인스턴스 ID, 보고된 로드 및 기타 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1077">The information includes service kind, service name, current service operation, current service operation start date time, partition ID, replica/instance ID, reported load, and other information.</span></span>'
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1078">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1078">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1079">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1079">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1080">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1080">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1081">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1081">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1082">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1082">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1083">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1083">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            <span data-ttu-id="493d4-1084">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1084">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1085">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1085">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1086">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1086">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1087">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1087">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
          description: <span data-ttu-id="493d4-1088">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1088">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            <span data-ttu-id="493d4-1089">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1089">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1090">Service Fabric 노드에서 배포된 복제본의 세부 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1090">Gets the details of the replica deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-1091">정보로는 서비스 종류, 서비스 이름, 현재 서비스 작업, 현재 서비스 작업 시작 날짜 시간, 파티션 ID, 복제본/인스턴스 ID, 보고된 로드 및 기타 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1091">The information includes service kind, service name, current service operation, current service operation start date time, partition ID, replica/instance ID, reported load, and other information.</span></span>'
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1092">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1092">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1093">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1093">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1094">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1094">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1095">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1095">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            <span data-ttu-id="493d4-1096">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1096">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1097">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1097">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1098">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1098">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
          description: <span data-ttu-id="493d4-1099">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1099">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            <span data-ttu-id="493d4-1100">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1100">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList'
    name: 'getDeployedServiceReplicaInfoList(string, string, Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1101">Service Fabric 노드에 배포된 복제본에 대한 정보를 포함하는 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1101">Gets the list containing the information about replicas deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-1102">정보는 파티션 ID, 복제본 ID, 복제본의 상태, 서비스의 이름, 서비스 유형의 이름 및 기타 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1102">The information include partition ID, replica ID, status of the replica, name of the service, name of the service type, and other information.</span></span> <span data-ttu-id="493d4-1103">PartitionId 또는 ServiceManifestName 쿼리 매개 변수를 사용하여 이러한 매개 변수에 지정된 값과 일치하는 배포된 복제본에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1103">Use PartitionId or ServiceManifestName query parameters to return information about the deployed replicas matching the specified values for those parameters.</span></span>'
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1104">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1104">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1105">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1105">The identity of the application.</span></span> <span data-ttu-id="493d4-1106">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1106">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1107">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1107">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1108">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1108">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1'
    name: 'getDeployedServiceReplicaInfoList(string, string, ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1109">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1109">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1110">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1110">The identity of the application.</span></span> <span data-ttu-id="493d4-1111">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1111">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1112">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1112">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1113">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1113">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>'
          description: |
            <span data-ttu-id="493d4-1114">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1114">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2'
    name: 'getDeployedServiceReplicaInfoList(string, string, ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams, ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1115">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1115">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1116">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1116">The identity of the application.</span></span> <span data-ttu-id="493d4-1117">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1117">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1118">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1118">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1119">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1119">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1120">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1120">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>'
          description: |
            <span data-ttu-id="493d4-1121">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1121">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1122">Service Fabric 클러스터의 노드에 배포된 애플리케이션의 특정 서비스 유형에 대한 정보가 포함된 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1122">Gets the list containing the information about a specific service type from the applications deployed on a node in a Service Fabric cluster.</span></span> <span data-ttu-id="493d4-1123">응답은 서비스 유형의 이름, 해당 등록 상태, 등록한 코드 패키지 및 서비스 패키지의 활성화 ID를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1123">The response includes the name of the service type, its registration status, the code package that registered it and activation ID of the service package.</span></span> <span data-ttu-id="493d4-1124">각 항목은 활성화 ID로 구분된 서비스 유형의 하나의 활성화를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1124">Each entry represents one activation of a service type, differentiated by the activation ID.</span></span>'
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options?: Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1125">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1125">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1126">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1126">The identity of the application.</span></span> <span data-ttu-id="493d4-1127">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1127">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1128">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1128">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1129">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1129">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1130">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1130">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1131">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1131">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1132">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1132">The identity of the application.</span></span> <span data-ttu-id="493d4-1133">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1133">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1134">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1134">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1135">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1135">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1136">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1136">Specifies the name of a Service Fabric service type.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="493d4-1137">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1137">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1138">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1138">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1139">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1139">The identity of the application.</span></span> <span data-ttu-id="493d4-1140">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1140">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1141">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1141">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1142">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1142">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1143">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1143">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
          description: <span data-ttu-id="493d4-1144">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1144">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="493d4-1145">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1145">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList'
    name: 'getDeployedServiceTypeInfoList(string, string, Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1146">Service Fabric 클러스터의 노드에 배포된 애플리케이션의 서비스 유형에 대한 정보가 포함된 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1146">Gets the list containing the information about service types from the applications deployed on a node in a Service Fabric cluster.</span></span> <span data-ttu-id="493d4-1147">응답은 서비스 유형의 이름, 해당 등록 상태, 등록한 코드 패키지 및 서비스 패키지의 활성화 ID를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1147">The response includes the name of the service type, its registration status, the code package that registered it and activation ID of the service package.</span></span>'
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1148">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1148">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1149">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1149">The identity of the application.</span></span> <span data-ttu-id="493d4-1150">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1150">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1151">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1151">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1152">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1152">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1'
    name: 'getDeployedServiceTypeInfoList(string, string, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1153">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1153">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1154">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1154">The identity of the application.</span></span> <span data-ttu-id="493d4-1155">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1155">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1156">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1156">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1157">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1157">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="493d4-1158">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1158">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2'
    name: 'getDeployedServiceTypeInfoList(string, string, ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1159">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1159">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1160">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1160">The identity of the application.</span></span> <span data-ttu-id="493d4-1161">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1161">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1162">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1162">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1163">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1163">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1164">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1164">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="493d4-1165">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1165">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList'
    name: 'getFaultOperationList(number, number, Models.ServiceFabricClientGetFaultOperationListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1166">제공된 입력으로 필터링한 사용자로 인한 오류 작업 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1166">Gets the list of user-induced fault operations filtered by provided input.</span></span>
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options?: Models.ServiceFabricClientGetFaultOperationListOptionalParams)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            <span data-ttu-id="493d4-1167">사용자로 인한 작업에 대한 OperationType을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1167">Used to filter on OperationType for user-induced operations.</span></span>

            - <span data-ttu-id="493d4-1168">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1168">65535 - select all</span></span>
            - <span data-ttu-id="493d4-1169">1-PartitionDataLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1169">1 - select PartitionDataLoss.</span></span>
            - <span data-ttu-id="493d4-1170">2-PartitionQuorumLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1170">2 - select PartitionQuorumLoss.</span></span>
            - <span data-ttu-id="493d4-1171">4 - select PartitionRestart.</span><span class="sxs-lookup"><span data-stu-id="493d4-1171">4 - select PartitionRestart.</span></span>
            - <span data-ttu-id="493d4-1172">8-NodeTransition 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1172">8 - select NodeTransition.</span></span>
        - id: stateFilter
          type:
            - number
          description: |-
            <span data-ttu-id="493d4-1173">OperationState의 사용자로 인한 작업을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1173">Used to filter on OperationState's for user-induced operations.</span></span>

            - <span data-ttu-id="493d4-1174">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1174">65535 - select All</span></span>
            - <span data-ttu-id="493d4-1175">1 - Running 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1175">1 - select Running</span></span>
            - <span data-ttu-id="493d4-1176">2-롤백하는 중 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1176">2 - select RollingBack</span></span>
            - <span data-ttu-id="493d4-1177">8-완료 됨을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1177">8 - select Completed</span></span>
            - <span data-ttu-id="493d4-1178">16-Faulted를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1178">16 - select Faulted</span></span>
            - <span data-ttu-id="493d4-1179">32 비트 취소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1179">32 - select Cancelled</span></span>
            - <span data-ttu-id="493d4-1180">64-ForceCancelled를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1180">64 - select ForceCancelled</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetFaultOperationListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_1'
    name: 'getFaultOperationList(number, number, ServiceCallback<OperationStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, callback: ServiceCallback<OperationStatus[]>)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            <span data-ttu-id="493d4-1181">사용자로 인한 작업에 대한 OperationType을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1181">Used to filter on OperationType for user-induced operations.</span></span>

            - <span data-ttu-id="493d4-1182">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1182">65535 - select all</span></span>
            - <span data-ttu-id="493d4-1183">1-PartitionDataLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1183">1 - select PartitionDataLoss.</span></span>
            - <span data-ttu-id="493d4-1184">2-PartitionQuorumLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1184">2 - select PartitionQuorumLoss.</span></span>
            - <span data-ttu-id="493d4-1185">4 - select PartitionRestart.</span><span class="sxs-lookup"><span data-stu-id="493d4-1185">4 - select PartitionRestart.</span></span>
            - <span data-ttu-id="493d4-1186">8-NodeTransition 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1186">8 - select NodeTransition.</span></span>
        - id: stateFilter
          type:
            - number
          description: |-
            <span data-ttu-id="493d4-1187">OperationState의 사용자로 인한 작업을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1187">Used to filter on OperationState's for user-induced operations.</span></span>

            - <span data-ttu-id="493d4-1188">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1188">65535 - select All</span></span>
            - <span data-ttu-id="493d4-1189">1 - Running 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1189">1 - select Running</span></span>
            - <span data-ttu-id="493d4-1190">2-롤백하는 중 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1190">2 - select RollingBack</span></span>
            - <span data-ttu-id="493d4-1191">8-완료 됨을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1191">8 - select Completed</span></span>
            - <span data-ttu-id="493d4-1192">16-Faulted를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1192">16 - select Faulted</span></span>
            - <span data-ttu-id="493d4-1193">32 비트 취소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1193">32 - select Cancelled</span></span>
            - <span data-ttu-id="493d4-1194">64-ForceCancelled를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1194">64 - select ForceCancelled</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
          description: |
            <span data-ttu-id="493d4-1195">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1195">The callback</span></span>
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_2'
    name: 'getFaultOperationList(number, number, ServiceFabricClientGetFaultOperationListOptionalParams, ServiceCallback<OperationStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options: ServiceFabricClientGetFaultOperationListOptionalParams, callback: ServiceCallback<OperationStatus[]>)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            <span data-ttu-id="493d4-1196">사용자로 인한 작업에 대한 OperationType을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1196">Used to filter on OperationType for user-induced operations.</span></span>

            - <span data-ttu-id="493d4-1197">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1197">65535 - select all</span></span>
            - <span data-ttu-id="493d4-1198">1-PartitionDataLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1198">1 - select PartitionDataLoss.</span></span>
            - <span data-ttu-id="493d4-1199">2-PartitionQuorumLoss 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1199">2 - select PartitionQuorumLoss.</span></span>
            - <span data-ttu-id="493d4-1200">4 - select PartitionRestart.</span><span class="sxs-lookup"><span data-stu-id="493d4-1200">4 - select PartitionRestart.</span></span>
            - <span data-ttu-id="493d4-1201">8-NodeTransition 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1201">8 - select NodeTransition.</span></span>
        - id: stateFilter
          type:
            - number
          description: |-
            <span data-ttu-id="493d4-1202">OperationState의 사용자로 인한 작업을 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1202">Used to filter on OperationState's for user-induced operations.</span></span>

            - <span data-ttu-id="493d4-1203">65535 - 모두 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1203">65535 - select All</span></span>
            - <span data-ttu-id="493d4-1204">1 - Running 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1204">1 - select Running</span></span>
            - <span data-ttu-id="493d4-1205">2-롤백하는 중 선택</span><span class="sxs-lookup"><span data-stu-id="493d4-1205">2 - select RollingBack</span></span>
            - <span data-ttu-id="493d4-1206">8-완료 됨을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1206">8 - select Completed</span></span>
            - <span data-ttu-id="493d4-1207">16-Faulted를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1207">16 - select Faulted</span></span>
            - <span data-ttu-id="493d4-1208">32 비트 취소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1208">32 - select Cancelled</span></span>
            - <span data-ttu-id="493d4-1209">64-ForceCancelled를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1209">64 - select ForceCancelled</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
          description: <span data-ttu-id="493d4-1210">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1210">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
          description: |
            <span data-ttu-id="493d4-1211">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1211">The callback</span></span>
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent'
    name: 'getImageStoreContent(string, Models.ServiceFabricClientGetImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1212">지정된 contentPath에 있는 이미지 저장소 콘텐츠에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1212">Returns the information about the image store content at the specified contentPath.</span></span> <span data-ttu-id="493d4-1213">contentPath는 이미지 저장소의 루트를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1213">The contentPath is relative to the root of the image store.</span></span>
    syntax:
      content: 'function getImageStoreContent(contentPath: string, options?: Models.ServiceFabricClientGetImageStoreContentOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1214">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1214">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_1'
    name: 'getImageStoreContent(string, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1215">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1215">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            <span data-ttu-id="493d4-1216">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1216">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_2'
    name: 'getImageStoreContent(string, ServiceFabricClientGetImageStoreContentOptionalParams, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, options: ServiceFabricClientGetImageStoreContentOptionalParams, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1217">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1217">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
          description: <span data-ttu-id="493d4-1218">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1218">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            <span data-ttu-id="493d4-1219">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1219">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreFolderSize'
    name: 'getImageStoreFolderSize(string, Models.ServiceFabricClientGetImageStoreFolderSizeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1220">지정 된 contentPath를 이미지 저장소 폴더 아래에 있는 파일의 총 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1220">Gets the total size of file under a image store folder, specified by contentPath.</span></span> <span data-ttu-id="493d4-1221">contentPath는 이미지 저장소의 루트를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1221">The contentPath is relative to the root of the image store.</span></span>'
    syntax:
      content: 'function getImageStoreFolderSize(contentPath: string, options?: Models.ServiceFabricClientGetImageStoreFolderSizeOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1222">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1222">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreFolderSizeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreFolderSizeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreFolderSize_1'
    name: 'getImageStoreFolderSize(string, ServiceCallback<FolderSizeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreFolderSize(contentPath: string, callback: ServiceCallback<FolderSizeInfo>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1223">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1223">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.FolderSizeInfo>
          description: |
            <span data-ttu-id="493d4-1224">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1224">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreFolderSizeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreFolderSize_2'
    name: 'getImageStoreFolderSize(string, ServiceFabricClientGetImageStoreFolderSizeOptionalParams, ServiceCallback<FolderSizeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreFolderSize(contentPath: string, options: ServiceFabricClientGetImageStoreFolderSizeOptionalParams, callback: ServiceCallback<FolderSizeInfo>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1225">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1225">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreFolderSizeOptionalParams'
          description: <span data-ttu-id="493d4-1226">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1226">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.FolderSizeInfo>
          description: |
            <span data-ttu-id="493d4-1227">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1227">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreFolderSizeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent'
    name: getImageStoreRootContent(Models.ServiceFabricClientGetImageStoreRootContentOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1228">이미지 저장소의 루트에 있는 이미지 저장소 콘텐츠에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1228">Returns the information about the image store content at the root of the image store.</span></span>
    syntax:
      content: 'function getImageStoreRootContent(options?: Models.ServiceFabricClientGetImageStoreRootContentOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreRootContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_1'
    name: getImageStoreRootContent(ServiceCallback<ImageStoreContent>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            <span data-ttu-id="493d4-1229">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1229">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_2'
    name: 'getImageStoreRootContent(ServiceFabricClientGetImageStoreRootContentOptionalParams, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(options: ServiceFabricClientGetImageStoreRootContentOptionalParams, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
          description: <span data-ttu-id="493d4-1230">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1230">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            <span data-ttu-id="493d4-1231">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1231">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootFolderSize'
    name: getImageStoreRootFolderSize(Models.ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1232">이미지 저장소의 루트 및 하위 항목에 있는 파일의 총 크기 폴더를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1232">Returns the total size of files at the root and children folders in image store.</span></span>
    syntax:
      content: 'function getImageStoreRootFolderSize(options?: Models.ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreRootFolderSizeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootFolderSize_1'
    name: getImageStoreRootFolderSize(ServiceCallback<FolderSizeInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootFolderSize(callback: ServiceCallback<FolderSizeInfo>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.FolderSizeInfo>
          description: |
            <span data-ttu-id="493d4-1233">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1233">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreRootFolderSizeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootFolderSize_2'
    name: 'getImageStoreRootFolderSize(ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams, ServiceCallback<FolderSizeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootFolderSize(options: ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams, callback: ServiceCallback<FolderSizeInfo>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams'
          description: <span data-ttu-id="493d4-1234">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1234">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.FolderSizeInfo>
          description: |
            <span data-ttu-id="493d4-1235">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1235">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreRootFolderSizeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById'
    name: 'getImageStoreUploadSessionById(string, Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1236">지정된 된 ID로 식별 되는 이미지 저장소 업로드 세션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1236">Gets the image store upload session identified by the given ID.</span></span> <span data-ttu-id="493d4-1237">사용자는 언제 든 지 업로드 하는 동안 업로드 세션을 쿼리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1237">User can query the upload session at any time during uploading.</span></span>
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, options?: Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-1238">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1238">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-1239">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1239">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_1'
    name: 'getImageStoreUploadSessionById(string, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-1240">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1240">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-1241">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1241">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            <span data-ttu-id="493d4-1242">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1242">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_2'
    name: 'getImageStoreUploadSessionById(string, ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, options: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-1243">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1243">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-1244">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1244">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
          description: <span data-ttu-id="493d4-1245">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1245">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            <span data-ttu-id="493d4-1246">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1246">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath'
    name: 'getImageStoreUploadSessionByPath(string, Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1247">지정 된 이미지 저장소 상대 경로와 연결 된 이미지 저장소 업로드 세션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1247">Gets the image store upload session associated with the given image store relative path.</span></span> <span data-ttu-id="493d4-1248">사용자는 언제 든 지 업로드 하는 동안 업로드 세션을 쿼리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1248">User can query the upload session at any time during uploading.</span></span>
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, options?: Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1249">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1249">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_1'
    name: 'getImageStoreUploadSessionByPath(string, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1250">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1250">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            <span data-ttu-id="493d4-1251">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1251">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_2'
    name: 'getImageStoreUploadSessionByPath(string, ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, options: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-1252">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1252">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
          description: <span data-ttu-id="493d4-1253">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1253">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            <span data-ttu-id="493d4-1254">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1254">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo'
    name: 'getNameExistsInfo(string, Models.ServiceFabricClientGetNameExistsInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1255">지정 된 Service Fabric 이름이 있는지 여부를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1255">Returns whether the specified Service Fabric name exists.</span></span>
    syntax:
      content: 'function getNameExistsInfo(nameId: string, options?: Models.ServiceFabricClientGetNameExistsInfoOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1256">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1256">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetNameExistsInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_1'
    name: 'getNameExistsInfo(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1257">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1257">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1258">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1258">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_2'
    name: 'getNameExistsInfo(string, ServiceFabricClientGetNameExistsInfoOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, options: ServiceFabricClientGetNameExistsInfoOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1259">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1259">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
          description: <span data-ttu-id="493d4-1260">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1260">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1261">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1261">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList'
    name: 'getNodeEventList(string, string, string, Models.ServiceFabricClientGetNodeEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1262">응답은 NodeEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1262">The response is list of NodeEvent objects.</span></span>
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetNodeEventListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1263">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1263">The name of the node.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1264">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1264">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1265">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1265">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList_1'
    name: 'getNodeEventList(string, string, string, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1266">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1266">The name of the node.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1267">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1267">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1268">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1268">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1269">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1269">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList_2'
    name: 'getNodeEventList(string, string, string, ServiceFabricClientGetNodeEventListOptionalParams, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetNodeEventListOptionalParams, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1270">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1270">The name of the node.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1271">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1271">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1272">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1272">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
          description: <span data-ttu-id="493d4-1273">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1273">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1274">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1274">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth'
    name: 'getNodeHealth(string, Models.ServiceFabricClientGetNodeHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1275">Microsoft Azure Service 패브릭 노드의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1275">Gets the health of a Service Fabric node.</span></span> <span data-ttu-id="493d4-1276">상태에 따라 노드에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1276">Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state.</span></span> <span data-ttu-id="493d4-1277">이름으로 지정한 노드가 상태 저장소에 존재하지 않을 경우 오류가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1277">If the node that you specify by name does not exist in the health store, this returns an error.</span></span>'
    syntax:
      content: 'function getNodeHealth(nodeName: string, options?: Models.ServiceFabricClientGetNodeHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1278">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1278">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth_1'
    name: 'getNodeHealth(string, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1279">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1279">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            <span data-ttu-id="493d4-1280">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1280">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth_2'
    name: 'getNodeHealth(string, ServiceFabricClientGetNodeHealthOptionalParams, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, options: ServiceFabricClientGetNodeHealthOptionalParams, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1281">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1281">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
          description: <span data-ttu-id="493d4-1282">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1282">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            <span data-ttu-id="493d4-1283">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1283">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy'
    name: 'getNodeHealthUsingPolicy(string, Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1284">Microsoft Azure Service 패브릭 노드의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1284">Gets the health of a Service Fabric node.</span></span> <span data-ttu-id="493d4-1285">상태에 따라 노드에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1285">Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state.</span></span> <span data-ttu-id="493d4-1286">상태를 평가 하는 데 상태 정책을 재정의 하는 POST 본문이 ClusterHealthPolicy를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1286">Use ClusterHealthPolicy in the POST body to override the health policies used to evaluate the health.</span></span> <span data-ttu-id="493d4-1287">이름으로 지정한 노드가 상태 저장소에 존재하지 않을 경우 오류가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1287">If the node that you specify by name does not exist in the health store, this returns an error.</span></span>'
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, options?: Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1288">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1288">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1'
    name: 'getNodeHealthUsingPolicy(string, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1289">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1289">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            <span data-ttu-id="493d4-1290">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1290">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2'
    name: 'getNodeHealthUsingPolicy(string, ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, options: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1291">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1291">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="493d4-1292">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1292">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            <span data-ttu-id="493d4-1293">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1293">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo'
    name: 'getNodeInfo(string, Models.ServiceFabricClientGetNodeInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1294">응답에는 이름, 상태, ID, 상태, 작동 \`시간 및 노드에 대한 기타 세부 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1294">The response includes the name, status, ID, health, uptime, and other details about the node.</span></span>'
    syntax:
      content: 'function getNodeInfo(nodeName: string, options?: Models.ServiceFabricClientGetNodeInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1295">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1295">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo_1'
    name: 'getNodeInfo(string, ServiceCallback<NodeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, callback: ServiceCallback<NodeInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1296">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1296">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeInfo>
          description: |
            <span data-ttu-id="493d4-1297">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1297">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo_2'
    name: 'getNodeInfo(string, ServiceFabricClientGetNodeInfoOptionalParams, ServiceCallback<NodeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, options: ServiceFabricClientGetNodeInfoOptionalParams, callback: ServiceCallback<NodeInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1298">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1298">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
          description: <span data-ttu-id="493d4-1299">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1299">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeInfo>
          description: |
            <span data-ttu-id="493d4-1300">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1300">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList'
    name: getNodeInfoList(Models.ServiceFabricClientGetNodeInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1301">응답에는 이름, 상태, ID, 상태, 작동 \`시간 및 노드에 대한 기타 세부 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1301">The response includes the name, status, ID, health, uptime, and other details about the nodes.</span></span>'
    syntax:
      content: 'function getNodeInfoList(options?: Models.ServiceFabricClientGetNodeInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_1'
    name: getNodeInfoList(ServiceCallback<PagedNodeInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(callback: ServiceCallback<PagedNodeInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
          description: |
            <span data-ttu-id="493d4-1302">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1302">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_2'
    name: 'getNodeInfoList(ServiceFabricClientGetNodeInfoListOptionalParams, ServiceCallback<PagedNodeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(options: ServiceFabricClientGetNodeInfoListOptionalParams, callback: ServiceCallback<PagedNodeInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1303">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1303">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
          description: |
            <span data-ttu-id="493d4-1304">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1304">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo'
    name: 'getNodeLoadInfo(string, Models.ServiceFabricClientGetNodeLoadInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1305">정의된 로드 또는 용량이 있는 모든 메트릭에 대한 Service Fabric 노드의 로드 정보를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1305">Retrieves the load information of a Service Fabric node for all the metrics that have load or capacity defined.</span></span>
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, options?: Models.ServiceFabricClientGetNodeLoadInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1306">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1306">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeLoadInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_1'
    name: 'getNodeLoadInfo(string, ServiceCallback<NodeLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, callback: ServiceCallback<NodeLoadInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1307">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1307">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeLoadInfo>
          description: |
            <span data-ttu-id="493d4-1308">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1308">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_2'
    name: 'getNodeLoadInfo(string, ServiceFabricClientGetNodeLoadInfoOptionalParams, ServiceCallback<NodeLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, options: ServiceFabricClientGetNodeLoadInfoOptionalParams, callback: ServiceCallback<NodeLoadInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1309">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1309">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
          description: <span data-ttu-id="493d4-1310">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1310">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeLoadInfo>
          description: |
            <span data-ttu-id="493d4-1311">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1311">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList'
    name: 'getNodesEventList(string, string, Models.ServiceFabricClientGetNodesEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1312">응답은 NodeEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1312">The response is list of NodeEvent objects.</span></span>
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetNodesEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1313">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1313">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1314">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1314">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetNodesEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList_1'
    name: 'getNodesEventList(string, string, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1315">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1315">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1316">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1316">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1317">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1317">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList_2'
    name: 'getNodesEventList(string, string, ServiceFabricClientGetNodesEventListOptionalParams, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetNodesEventListOptionalParams, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1318">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1318">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1319">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1319">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
          description: <span data-ttu-id="493d4-1320">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1320">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1321">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1321">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress'
    name: 'getNodeTransitionProgress(string, string, Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1322">제공 된 OperationId를 사용하여 StartNodeTransition으로 시작되는 작업의 진행률을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1322">Gets the progress of an operation started with StartNodeTransition using the provided OperationId.</span></span>
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options?: Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1323">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1323">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1324">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1324">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1325">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1325">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_1'
    name: 'getNodeTransitionProgress(string, string, ServiceCallback<NodeTransitionProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, callback: ServiceCallback<NodeTransitionProgress>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1326">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1326">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1327">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1327">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1328">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1328">This is passed into the corresponding GetProgress API</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
          description: |
            <span data-ttu-id="493d4-1329">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1329">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_2'
    name: 'getNodeTransitionProgress(string, string, ServiceFabricClientGetNodeTransitionProgressOptionalParams, ServiceCallback<NodeTransitionProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options: ServiceFabricClientGetNodeTransitionProgressOptionalParams, callback: ServiceCallback<NodeTransitionProgress>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1330">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1330">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1331">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1331">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1332">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1332">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
          description: <span data-ttu-id="493d4-1333">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1333">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
          description: |
            <span data-ttu-id="493d4-1334">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1334">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo'
    name: 'getPartitionBackupConfigurationInfo(string, Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1335">지정 된 파티션에 대 한 서비스 패브릭 Backup 구성 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1335">Gets the Service Fabric Backup configuration information for the specified partition.</span></span>
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1336">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1336">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_1'
    name: 'getPartitionBackupConfigurationInfo(string, ServiceCallback<PartitionBackupConfigurationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, callback: ServiceCallback<PartitionBackupConfigurationInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1337">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1337">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
          description: |
            <span data-ttu-id="493d4-1338">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1338">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_2'
    name: 'getPartitionBackupConfigurationInfo(string, ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams, ServiceCallback<PartitionBackupConfigurationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, options: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PartitionBackupConfigurationInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1339">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1339">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
          description: <span data-ttu-id="493d4-1340">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1340">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
          description: |
            <span data-ttu-id="493d4-1341">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1341">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList'
    name: 'getPartitionBackupList(string, Models.ServiceFabricClientGetPartitionBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1342">지정된 파티션에 사용 가능한 백업 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1342">Returns a list of backups available for the specified partition.</span></span> <span data-ttu-id="493d4-1343">서버 백업 정책에 구성 된 백업 저장소에서 사용 가능한 모든 백업을 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1343">The server enumerates all the backups available in the backup store configured in the backup policy.</span></span> <span data-ttu-id="493d4-1344">또한 결과 시작 및 종료 날짜/시간에 따라 또는 파티션에 대 한 사용 가능한 최신 백업 인출만 필터링 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1344">It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for the partition.</span></span>
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1345">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1345">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_1'
    name: 'getPartitionBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1346">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1346">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="493d4-1347">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1347">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_2'
    name: 'getPartitionBackupList(string, ServiceFabricClientGetPartitionBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, options: ServiceFabricClientGetPartitionBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1348">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1348">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
          description: <span data-ttu-id="493d4-1349">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1349">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="493d4-1350">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1350">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress'
    name: 'getPartitionBackupProgress(string, Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1351">세부 정보 또는 오류 원인 완료의 경우와 함께 최신 백업의 상태에 대 한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1351">Returns information about the state of the latest backup along with details or failure reason in case of completion.</span></span>
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1352">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1352">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_1'
    name: 'getPartitionBackupProgress(string, ServiceCallback<BackupProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, callback: ServiceCallback<BackupProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1353">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1353">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupProgressInfo>
          description: |
            <span data-ttu-id="493d4-1354">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1354">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_2'
    name: 'getPartitionBackupProgress(string, ServiceFabricClientGetPartitionBackupProgressOptionalParams, ServiceCallback<BackupProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, options: ServiceFabricClientGetPartitionBackupProgressOptionalParams, callback: ServiceCallback<BackupProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1355">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1355">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
          description: <span data-ttu-id="493d4-1356">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1356">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupProgressInfo>
          description: |
            <span data-ttu-id="493d4-1357">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1357">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList'
    name: 'getPartitionEventList(string, string, string, Models.ServiceFabricClientGetPartitionEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1358">응답은 PartitionEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1358">The response is list of PartitionEvent objects.</span></span>
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1359">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1359">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1360">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1360">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1361">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1361">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_1'
    name: 'getPartitionEventList(string, string, string, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1362">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1362">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1363">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1363">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1364">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1364">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1365">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1365">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_2'
    name: 'getPartitionEventList(string, string, string, ServiceFabricClientGetPartitionEventListOptionalParams, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionEventListOptionalParams, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1366">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1366">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1367">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1367">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1368">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1368">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
          description: <span data-ttu-id="493d4-1369">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1369">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1370">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1370">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth'
    name: 'getPartitionHealth(string, Models.ServiceFabricClientGetPartitionHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1371">상태에 따라 서비스에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1371">Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.</span></span>
      <span data-ttu-id="493d4-1372">ReplicasHealthStateFilter를 사용하여 파티션에 ReplicaHealthState 개체 컬렉션을 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1372">Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition.</span></span>
      <span data-ttu-id="493d4-1373">Health store에 존재하지 않는 파티션을 지정하면 이 요청은 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1373">If you specify a partition that does not exist in the health store, this request returns an error.</span></span>
    syntax:
      content: 'function getPartitionHealth(partitionId: string, options?: Models.ServiceFabricClientGetPartitionHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1374">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1374">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_1'
    name: 'getPartitionHealth(string, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1375">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1375">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            <span data-ttu-id="493d4-1376">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1376">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_2'
    name: 'getPartitionHealth(string, ServiceFabricClientGetPartitionHealthOptionalParams, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, options: ServiceFabricClientGetPartitionHealthOptionalParams, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1377">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1377">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
          description: <span data-ttu-id="493d4-1378">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1378">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            <span data-ttu-id="493d4-1379">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1379">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy'
    name: 'getPartitionHealthUsingPolicy(string, Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1380">지정된 파티션의 상태 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1380">Gets the health information of the specified partition.</span></span>
      <span data-ttu-id="493d4-1381">응용 프로그램 상태 정책이 지정 된 상태 평가 집계 된 상태를 가져오려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1381">If the application health policy is specified, the health evaluation uses it to get the aggregated health state.</span></span>
      <span data-ttu-id="493d4-1382">정책을 지정 하지 않으면 상태 평가 정책이 없는 매니페스트에서 정의 된 경우 응용 프로그램 매니페스트 또는 기본 상태 정책을 정의 하는 응용 프로그램 상태 정책을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1382">If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.</span></span>
      <span data-ttu-id="493d4-1383">상태를 기준으로 파티션을 보고 된 상태 이벤트의 컬렉션을 필터링 하려면 EventsHealthStateFilter를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1383">Use EventsHealthStateFilter to filter the collection of health events reported on the partition based on the health state.</span></span>
      <span data-ttu-id="493d4-1384">ReplicasHealthStateFilter를 사용하여 파티션에 ReplicaHealthState 개체 컬렉션을 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1384">Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition.</span></span> <span data-ttu-id="493d4-1385">상태를 평가 하는 데 상태 정책을 재정의 하는 POST 본문이 ApplicationHealthPolicy를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1385">Use ApplicationHealthPolicy in the POST body to override the health policies used to evaluate the health.</span></span>
      <span data-ttu-id="493d4-1386">Health store에 존재하지 않는 파티션을 지정하면 이 요청은 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1386">If you specify a partition that does not exist in the health store, this request returns an error.</span></span>
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, options?: Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1387">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1387">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1'
    name: 'getPartitionHealthUsingPolicy(string, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1388">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1388">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            <span data-ttu-id="493d4-1389">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1389">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2'
    name: 'getPartitionHealthUsingPolicy(string, ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, options: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1390">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1390">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="493d4-1391">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1391">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            <span data-ttu-id="493d4-1392">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1392">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo'
    name: 'getPartitionInfo(string, Models.ServiceFabricClientGetPartitionInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1393">지정된 파티션에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1393">Gets the information about the specified partition.</span></span> <span data-ttu-id="493d4-1394">응답에는 파티션 ID, 파티셔닝 스키마 정보, 파티션에 의해 지원되는 키, 상태, 상태 및 파티션에 관한 기타 세부 정보가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1394">The response includes the partition ID, partitioning scheme information, keys supported by the partition, status, health, and other details about the partition.</span></span>'
    syntax:
      content: 'function getPartitionInfo(partitionId: string, options?: Models.ServiceFabricClientGetPartitionInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1395">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1395">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_1'
    name: 'getPartitionInfo(string, ServiceCallback<Models.ServicePartitionInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, callback: ServiceCallback<Models.ServicePartitionInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1396">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1396">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServicePartitionInfoUnion>
          description: |
            <span data-ttu-id="493d4-1397">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1397">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_2'
    name: 'getPartitionInfo(string, ServiceFabricClientGetPartitionInfoOptionalParams, ServiceCallback<Models.ServicePartitionInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, options: ServiceFabricClientGetPartitionInfoOptionalParams, callback: ServiceCallback<Models.ServicePartitionInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1398">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1398">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
          description: <span data-ttu-id="493d4-1399">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1399">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServicePartitionInfoUnion>
          description: |
            <span data-ttu-id="493d4-1400">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1400">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList'
    name: 'getPartitionInfoList(string, Models.ServiceFabricClientGetPartitionInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1401">응답에는 파티션 ID, 파티셔닝 스키마 정보, 파티션에 의해 지원되는 키, 상태, 상태 및 파티션에 관한 기타 세부 정보가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1401">The response includes the partition ID, partitioning scheme information, keys supported by the partition, status, health, and other details about the partition.</span></span>'
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, options?: Models.ServiceFabricClientGetPartitionInfoListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1402">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1402">The identity of the service.</span></span> <span data-ttu-id="493d4-1403">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1403">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1404">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1404">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1405">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1405">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_1'
    name: 'getPartitionInfoList(string, ServiceCallback<PagedServicePartitionInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, callback: ServiceCallback<PagedServicePartitionInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1406">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1406">The identity of the service.</span></span> <span data-ttu-id="493d4-1407">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1407">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1408">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1408">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1409">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1409">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
          description: |
            <span data-ttu-id="493d4-1410">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1410">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_2'
    name: 'getPartitionInfoList(string, ServiceFabricClientGetPartitionInfoListOptionalParams, ServiceCallback<PagedServicePartitionInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, options: ServiceFabricClientGetPartitionInfoListOptionalParams, callback: ServiceCallback<PagedServicePartitionInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1411">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1411">The identity of the service.</span></span> <span data-ttu-id="493d4-1412">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1412">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1413">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1413">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1414">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1414">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1415">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1415">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
          description: |
            <span data-ttu-id="493d4-1416">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1416">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation'
    name: 'getPartitionLoadInformation(string, Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1417">지정된 파티션의 부하에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1417">Returns information about the load of a specified partition.</span></span>
      <span data-ttu-id="493d4-1418">응답은 Service Fabric 파티션에 대한 부하 보고서 목록을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1418">The response includes a list of load reports for a Service Fabric partition.</span></span>
      <span data-ttu-id="493d4-1419">각 보고서에는 부하 메트릭 이름, 값 및 마지막 보고 시간(UTC)이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1419">Each report includes the load metric name, value, and last reported time in UTC.</span></span>
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, options?: Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1420">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1420">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_1'
    name: 'getPartitionLoadInformation(string, ServiceCallback<PartitionLoadInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, callback: ServiceCallback<PartitionLoadInformation>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1421">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1421">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
          description: |
            <span data-ttu-id="493d4-1422">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1422">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_2'
    name: 'getPartitionLoadInformation(string, ServiceFabricClientGetPartitionLoadInformationOptionalParams, ServiceCallback<PartitionLoadInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, options: ServiceFabricClientGetPartitionLoadInformationOptionalParams, callback: ServiceCallback<PartitionLoadInformation>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1423">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1423">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
          description: <span data-ttu-id="493d4-1424">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1424">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
          description: |
            <span data-ttu-id="493d4-1425">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1425">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList'
    name: 'getPartitionReplicaEventList(string, string, string, string, Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1426">응답은 ReplicaEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1426">The response is list of ReplicaEvent objects.</span></span>
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1427">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1427">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1428">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1428">The identifier of the replica.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1429">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1429">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1430">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1430">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_1'
    name: 'getPartitionReplicaEventList(string, string, string, string, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1431">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1431">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1432">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1432">The identifier of the replica.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1433">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1433">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1434">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1434">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1435">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1435">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_2'
    name: 'getPartitionReplicaEventList(string, string, string, string, ServiceFabricClientGetPartitionReplicaEventListOptionalParams, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionReplicaEventListOptionalParams, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1436">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1436">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1437">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1437">The identifier of the replica.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1438">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1438">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1439">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1439">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
          description: <span data-ttu-id="493d4-1440">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1440">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1441">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1441">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList'
    name: 'getPartitionReplicasEventList(string, string, string, Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1442">응답은 ReplicaEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1442">The response is list of ReplicaEvent objects.</span></span>
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1443">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1443">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1444">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1444">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1445">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1445">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_1'
    name: 'getPartitionReplicasEventList(string, string, string, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1446">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1446">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1447">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1447">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1448">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1448">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1449">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1449">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_2'
    name: 'getPartitionReplicasEventList(string, string, string, ServiceFabricClientGetPartitionReplicasEventListOptionalParams, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionReplicasEventListOptionalParams, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1450">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1450">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1451">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1451">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1452">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1452">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
          description: <span data-ttu-id="493d4-1453">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1453">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1454">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1454">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress'
    name: 'getPartitionRestartProgress(string, string, string, Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1455">제공된 OperationId를 사용하여 StartPartitionRestart로 시작된 PartitionRestart의 진행률을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1455">Gets the progress of a PartitionRestart started with StartPartitionRestart using the provided OperationId.</span></span>
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1456">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1456">The identity of the service.</span></span> <span data-ttu-id="493d4-1457">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1457">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1458">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1458">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1459">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1459">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1460">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1460">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1461">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1461">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1462">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1462">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_1'
    name: 'getPartitionRestartProgress(string, string, string, ServiceCallback<PartitionRestartProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionRestartProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1463">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1463">The identity of the service.</span></span> <span data-ttu-id="493d4-1464">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1464">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1465">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1465">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1466">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1466">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1467">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1467">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1468">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1468">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1469">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1469">This is passed into the corresponding GetProgress API</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
          description: |
            <span data-ttu-id="493d4-1470">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1470">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_2'
    name: 'getPartitionRestartProgress(string, string, string, ServiceFabricClientGetPartitionRestartProgressOptionalParams, ServiceCallback<PartitionRestartProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetPartitionRestartProgressOptionalParams, callback: ServiceCallback<PartitionRestartProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1471">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1471">The identity of the service.</span></span> <span data-ttu-id="493d4-1472">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1472">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1473">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1473">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1474">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1474">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1475">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1475">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1476">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1476">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1477">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1477">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
          description: <span data-ttu-id="493d4-1478">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1478">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
          description: |
            <span data-ttu-id="493d4-1479">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1479">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress'
    name: 'getPartitionRestoreProgress(string, Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1480">세부 정보 또는 오류 원인 완료의 경우와 함께 최신 복원 작업의 상태에 대 한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1480">Returns information about the state of the latest restore operation along with details or failure reason in case of completion.</span></span>
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, options?: Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1481">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1481">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_1'
    name: 'getPartitionRestoreProgress(string, ServiceCallback<RestoreProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, callback: ServiceCallback<RestoreProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1482">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1482">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
          description: |
            <span data-ttu-id="493d4-1483">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1483">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_2'
    name: 'getPartitionRestoreProgress(string, ServiceFabricClientGetPartitionRestoreProgressOptionalParams, ServiceCallback<RestoreProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, options: ServiceFabricClientGetPartitionRestoreProgressOptionalParams, callback: ServiceCallback<RestoreProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1484">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1484">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
          description: <span data-ttu-id="493d4-1485">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1485">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
          description: |
            <span data-ttu-id="493d4-1486">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1486">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList'
    name: 'getPartitionsEventList(string, string, Models.ServiceFabricClientGetPartitionsEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1487">응답은 PartitionEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1487">The response is list of PartitionEvent objects.</span></span>
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionsEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1488">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1488">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1489">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1489">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionsEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_1'
    name: 'getPartitionsEventList(string, string, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1490">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1490">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1491">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1491">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1492">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1492">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_2'
    name: 'getPartitionsEventList(string, string, ServiceFabricClientGetPartitionsEventListOptionalParams, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionsEventListOptionalParams, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1493">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1493">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1494">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1494">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
          description: <span data-ttu-id="493d4-1495">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1495">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1496">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1496">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo'
    name: 'getPropertyInfo(string, string, Models.ServiceFabricClientGetPropertyInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1497">지정된 이름에서 지정된 Service Fabric 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1497">Gets the specified Service Fabric property under a given name.</span></span> <span data-ttu-id="493d4-1498">값 및 메타데이터 모두를 항상 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1498">This will always return both value and metadata.</span></span>
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, options?: Models.ServiceFabricClientGetPropertyInfoOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1499">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1499">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="493d4-1500">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1500">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPropertyInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_1'
    name: 'getPropertyInfo(string, string, ServiceCallback<PropertyInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, callback: ServiceCallback<PropertyInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1501">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1501">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="493d4-1502">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1502">Specifies the name of the property to get.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PropertyInfo>
          description: |
            <span data-ttu-id="493d4-1503">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1503">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_2'
    name: 'getPropertyInfo(string, string, ServiceFabricClientGetPropertyInfoOptionalParams, ServiceCallback<PropertyInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, options: ServiceFabricClientGetPropertyInfoOptionalParams, callback: ServiceCallback<PropertyInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1504">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1504">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="493d4-1505">가져올 속성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1505">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
          description: <span data-ttu-id="493d4-1506">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1506">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PropertyInfo>
          description: |
            <span data-ttu-id="493d4-1507">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1507">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList'
    name: 'getPropertyInfoList(string, Models.ServiceFabricClientGetPropertyInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1508">Service Fabric 이름에는 사용자 지정 정보를 저장하는 하나 이상의 명명된 속성이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1508">A Service Fabric name can have one or more named properties that store custom information.</span></span> <span data-ttu-id="493d4-1509">이 작업은 페이지가 지정된 목록에서 이러한 속성에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1509">This operation gets the information about these properties in a paged list.</span></span> <span data-ttu-id="493d4-1510">정보는 각 속성에 대한 이름, 값 및 메타데이터를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1510">The information includes name, value, and metadata about each of the properties.</span></span>'
    syntax:
      content: 'function getPropertyInfoList(nameId: string, options?: Models.ServiceFabricClientGetPropertyInfoListOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1511">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1511">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPropertyInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_1'
    name: 'getPropertyInfoList(string, ServiceCallback<PagedPropertyInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, callback: ServiceCallback<PagedPropertyInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1512">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1512">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
          description: |
            <span data-ttu-id="493d4-1513">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1513">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_2'
    name: 'getPropertyInfoList(string, ServiceFabricClientGetPropertyInfoListOptionalParams, ServiceCallback<PagedPropertyInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, options: ServiceFabricClientGetPropertyInfoListOptionalParams, callback: ServiceCallback<PagedPropertyInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1514">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1514">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1515">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1515">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
          description: |
            <span data-ttu-id="493d4-1516">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1516">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList'
    name: getProvisionedFabricCodeVersionInfoList(Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1517">클러스터에 프로비전되는 패브릭 코드 버전에 대한 정보의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1517">Gets a list of information about fabric code versions that are provisioned in the cluster.</span></span> <span data-ttu-id="493d4-1518">매개 변수 CodeVersion은 필요에 따라 해당 특정 버전에만 출력을 필터링하는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1518">The parameter CodeVersion can be used to optionally filter the output to only that particular version.</span></span>
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(options?: Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1'
    name: 'getProvisionedFabricCodeVersionInfoList(ServiceCallback<FabricCodeVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(callback: ServiceCallback<FabricCodeVersionInfo[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
          description: |
            <span data-ttu-id="493d4-1519">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1519">The callback</span></span>
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2'
    name: 'getProvisionedFabricCodeVersionInfoList(ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams, ServiceCallback<FabricCodeVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(options: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams, callback: ServiceCallback<FabricCodeVersionInfo[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1520">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1520">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
          description: |
            <span data-ttu-id="493d4-1521">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1521">The callback</span></span>
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList'
    name: getProvisionedFabricConfigVersionInfoList(Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1522">클러스터에 프로비전되는 패브릭 구성 버전에 대한 정보의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1522">Gets a list of information about fabric config versions that are provisioned in the cluster.</span></span> <span data-ttu-id="493d4-1523">매개 변수 ConfigVersion은 필요에 따라 해당 특정 버전에만 출력을 필터링하는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1523">The parameter ConfigVersion can be used to optionally filter the output to only that particular version.</span></span>
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(options?: Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1'
    name: 'getProvisionedFabricConfigVersionInfoList(ServiceCallback<FabricConfigVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(callback: ServiceCallback<FabricConfigVersionInfo[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
          description: |
            <span data-ttu-id="493d4-1524">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1524">The callback</span></span>
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2'
    name: 'getProvisionedFabricConfigVersionInfoList(ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams, ServiceCallback<FabricConfigVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(options: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams, callback: ServiceCallback<FabricConfigVersionInfo[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1525">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1525">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
          description: |
            <span data-ttu-id="493d4-1526">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1526">The callback</span></span>
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress'
    name: 'getQuorumLossProgress(string, string, string, Models.ServiceFabricClientGetQuorumLossProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1527">제공된 OperationId를 사용하여 StartQuorumLoss로 시작된 쿼럼 손실 작업의 진행률을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1527">Gets the progress of a quorum loss operation started with StartQuorumLoss, using the provided OperationId.</span></span>'
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetQuorumLossProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1528">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1528">The identity of the service.</span></span> <span data-ttu-id="493d4-1529">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1529">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1530">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1530">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1531">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1531">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1532">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1532">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1533">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1533">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1534">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1534">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetQuorumLossProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_1'
    name: 'getQuorumLossProgress(string, string, string, ServiceCallback<PartitionQuorumLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionQuorumLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1535">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1535">The identity of the service.</span></span> <span data-ttu-id="493d4-1536">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1536">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1537">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1537">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1538">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1538">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1539">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1539">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1540">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1540">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1541">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1541">This is passed into the corresponding GetProgress API</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
          description: |
            <span data-ttu-id="493d4-1542">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1542">The callback</span></span>
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_2'
    name: 'getQuorumLossProgress(string, string, string, ServiceFabricClientGetQuorumLossProgressOptionalParams, ServiceCallback<PartitionQuorumLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetQuorumLossProgressOptionalParams, callback: ServiceCallback<PartitionQuorumLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1543">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1543">The identity of the service.</span></span> <span data-ttu-id="493d4-1544">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1544">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1545">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1545">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1546">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1546">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1547">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1547">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-1548">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1548">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-1549">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1549">This is passed into the corresponding GetProgress API</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
          description: <span data-ttu-id="493d4-1550">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1550">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
          description: |
            <span data-ttu-id="493d4-1551">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1551">The callback</span></span>
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList'
    name: getRepairTaskList(Models.ServiceFabricClientGetRepairTaskListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1552">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1552">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function getRepairTaskList(options?: Models.ServiceFabricClientGetRepairTaskListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetRepairTaskListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_1'
    name: 'getRepairTaskList(ServiceCallback<RepairTask[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(callback: ServiceCallback<RepairTask[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
          description: |
            <span data-ttu-id="493d4-1553">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1553">The callback</span></span>
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_2'
    name: 'getRepairTaskList(ServiceFabricClientGetRepairTaskListOptionalParams, ServiceCallback<RepairTask[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(options: ServiceFabricClientGetRepairTaskListOptionalParams, callback: ServiceCallback<RepairTask[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
          description: <span data-ttu-id="493d4-1554">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1554">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
          description: |
            <span data-ttu-id="493d4-1555">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1555">The callback</span></span>
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth'
    name: 'getReplicaHealth(string, string, Models.ServiceFabricClientGetReplicaHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1556">Service Fabric 복제본의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1556">Gets the health of a Service Fabric replica.</span></span>
      <span data-ttu-id="493d4-1557">상태에 따라 복제본에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1557">Use EventsHealthStateFilter to filter the collection of health events reported on the replica based on the health state.</span></span>
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1558">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1558">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1559">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1559">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_1'
    name: 'getReplicaHealth(string, string, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1560">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1560">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1561">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1561">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            <span data-ttu-id="493d4-1562">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1562">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_2'
    name: 'getReplicaHealth(string, string, ServiceFabricClientGetReplicaHealthOptionalParams, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaHealthOptionalParams, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1563">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1563">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1564">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1564">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
          description: <span data-ttu-id="493d4-1565">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1565">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            <span data-ttu-id="493d4-1566">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1566">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy'
    name: 'getReplicaHealthUsingPolicy(string, string, Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1567">Service Fabric 상태 저장 서비스 복제본 또는 상태 비저장 서비스 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1567">Gets the health of a Service Fabric stateful service replica or stateless service instance.</span></span>
      <span data-ttu-id="493d4-1568">상태에 따라 클러스터에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1568">Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.</span></span>
      <span data-ttu-id="493d4-1569">필요에 따라 상태를 평가 하는 데 상태 정책을 재정의 하려면 ApplicationHealthPolicy를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1569">Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health.</span></span> <span data-ttu-id="493d4-1570">이 API는 ApplicationHealthPolicy 'ConsiderWarningAsError' 필드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1570">This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy.</span></span> <span data-ttu-id="493d4-1571">필드의 나머지 복제본의 상태를 평가 하는 동안 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1571">The rest of the fields are ignored while evaluating the health of the replica.</span></span>
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1572">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1572">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1573">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1573">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1'
    name: 'getReplicaHealthUsingPolicy(string, string, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1574">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1574">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1575">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1575">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            <span data-ttu-id="493d4-1576">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1576">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2'
    name: 'getReplicaHealthUsingPolicy(string, string, ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1577">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1577">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1578">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1578">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="493d4-1579">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1579">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            <span data-ttu-id="493d4-1580">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1580">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo'
    name: 'getReplicaInfo(string, string, Models.ServiceFabricClientGetReplicaInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1581">응답에는 ID, 역할, 상태, 상태, 노드 이름, 작동 시간 및 기타 복제본에 관한 세부 정보가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1581">The response includes the ID, role, status, health, node name, uptime, and other details about the replica.</span></span>'
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1582">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1582">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1583">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1583">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_1'
    name: 'getReplicaInfo(string, string, ServiceCallback<Models.ReplicaInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1584">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1584">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1585">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1585">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaInfoUnion>
          description: |
            <span data-ttu-id="493d4-1586">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1586">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_2'
    name: 'getReplicaInfo(string, string, ServiceFabricClientGetReplicaInfoOptionalParams, ServiceCallback<Models.ReplicaInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaInfoOptionalParams, callback: ServiceCallback<Models.ReplicaInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1587">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1587">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-1588">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1588">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
          description: <span data-ttu-id="493d4-1589">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1589">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaInfoUnion>
          description: |
            <span data-ttu-id="493d4-1590">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1590">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList'
    name: 'getReplicaInfoList(string, Models.ServiceFabricClientGetReplicaInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1591">GetReplicas 엔드포인트는 지정된 파티션의 복제본에 관한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1591">The GetReplicas endpoint returns information about the replicas of the specified partition.</span></span> <span data-ttu-id="493d4-1592">응답에는 ID, 역할, 상태, 상태, 노드 이름, 작동 시간 및 기타 복제본에 관한 세부 정보가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1592">The response includes the ID, role, status, health, node name, uptime, and other details about the replica.</span></span>'
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, options?: Models.ServiceFabricClientGetReplicaInfoListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1593">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1593">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_1'
    name: 'getReplicaInfoList(string, ServiceCallback<PagedReplicaInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, callback: ServiceCallback<PagedReplicaInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1594">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1594">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
          description: |
            <span data-ttu-id="493d4-1595">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1595">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_2'
    name: 'getReplicaInfoList(string, ServiceFabricClientGetReplicaInfoListOptionalParams, ServiceCallback<PagedReplicaInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, options: ServiceFabricClientGetReplicaInfoListOptionalParams, callback: ServiceCallback<PagedReplicaInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1596">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1596">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1597">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1597">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
          description: |
            <span data-ttu-id="493d4-1598">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1598">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo'
    name: 'getServiceBackupConfigurationInfo(string, Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1599">서비스 및이 서비스 파티션에 대 한 Service Fabric 백업 구성 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1599">Gets the Service Fabric backup configuration information for the service and the partitions under this service.</span></span>
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, options?: Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1600">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1600">The identity of the service.</span></span> <span data-ttu-id="493d4-1601">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1601">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1602">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1602">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1603">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1603">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_1'
    name: 'getServiceBackupConfigurationInfo(string, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1604">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1604">The identity of the service.</span></span> <span data-ttu-id="493d4-1605">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1605">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1606">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1606">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1607">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1607">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            <span data-ttu-id="493d4-1608">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1608">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_2'
    name: 'getServiceBackupConfigurationInfo(string, ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, options: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1609">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1609">The identity of the service.</span></span> <span data-ttu-id="493d4-1610">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1610">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1611">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1611">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1612">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1612">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
          description: <span data-ttu-id="493d4-1613">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1613">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            <span data-ttu-id="493d4-1614">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1614">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList'
    name: 'getServiceBackupList(string, Models.ServiceFabricClientGetServiceBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1615">이 Service Fabric 서비스의 모든 파티션에 대해 사용 가능한 백업 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1615">Returns a list of backups available for every partition in this Service Fabric service.</span></span> <span data-ttu-id="493d4-1616">서버 백업 정책에 구성 된 백업 저장소에서 사용 가능한 모든 백업을 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1616">The server enumerates all the backups available in the backup store configured in the backup policy.</span></span>
      <span data-ttu-id="493d4-1617">또한 결과 시작 및 종료 날짜/시간에 따라 또는 모든 파티션에 대해 사용 가능한 최신 백업 인출만 필터링 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1617">It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for every partition.</span></span>
    syntax:
      content: 'function getServiceBackupList(serviceId: string, options?: Models.ServiceFabricClientGetServiceBackupListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1618">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1618">The identity of the service.</span></span> <span data-ttu-id="493d4-1619">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1619">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1620">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1620">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1621">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1621">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_1'
    name: 'getServiceBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1622">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1622">The identity of the service.</span></span> <span data-ttu-id="493d4-1623">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1623">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1624">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1624">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1625">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1625">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="493d4-1626">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1626">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_2'
    name: 'getServiceBackupList(string, ServiceFabricClientGetServiceBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, options: ServiceFabricClientGetServiceBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1627">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1627">The identity of the service.</span></span> <span data-ttu-id="493d4-1628">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1628">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1629">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1629">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1630">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1630">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
          description: <span data-ttu-id="493d4-1631">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1631">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="493d4-1632">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1632">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription'
    name: 'getServiceDescription(string, Models.ServiceFabricClientGetServiceDescriptionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1633">기존 Service Fabric서비스에 대한 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1633">Gets the description of an existing Service Fabric service.</span></span> <span data-ttu-id="493d4-1634">서비스 설명을 가져올 수 있으려면 먼저 서비스를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1634">A service must be created before its description can be obtained.</span></span>
    syntax:
      content: 'function getServiceDescription(serviceId: string, options?: Models.ServiceFabricClientGetServiceDescriptionOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1635">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1635">The identity of the service.</span></span> <span data-ttu-id="493d4-1636">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1636">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1637">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1637">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1638">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1638">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceDescriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription_1'
    name: 'getServiceDescription(string, ServiceCallback<Models.ServiceDescriptionUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, callback: ServiceCallback<Models.ServiceDescriptionUnion>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1639">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1639">The identity of the service.</span></span> <span data-ttu-id="493d4-1640">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1640">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1641">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1641">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1642">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1642">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServiceDescriptionUnion>
          description: |
            <span data-ttu-id="493d4-1643">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1643">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription_2'
    name: 'getServiceDescription(string, ServiceFabricClientGetServiceDescriptionOptionalParams, ServiceCallback<Models.ServiceDescriptionUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, options: ServiceFabricClientGetServiceDescriptionOptionalParams, callback: ServiceCallback<Models.ServiceDescriptionUnion>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1644">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1644">The identity of the service.</span></span> <span data-ttu-id="493d4-1645">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1645">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1646">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1646">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1647">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1647">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
          description: <span data-ttu-id="493d4-1648">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1648">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServiceDescriptionUnion>
          description: |
            <span data-ttu-id="493d4-1649">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1649">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList'
    name: 'getServiceEventList(string, string, string, Models.ServiceFabricClientGetServiceEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1650">응답은 ServiceEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1650">The response is list of ServiceEvent objects.</span></span>
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetServiceEventListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1651">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1651">The identity of the service.</span></span> <span data-ttu-id="493d4-1652">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1652">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1653">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1653">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1654">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1654">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1655">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1655">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1656">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1656">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList_1'
    name: 'getServiceEventList(string, string, string, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1657">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1657">The identity of the service.</span></span> <span data-ttu-id="493d4-1658">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1658">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1659">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1659">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1660">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1660">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1661">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1661">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1662">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1662">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1663">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1663">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList_2'
    name: 'getServiceEventList(string, string, string, ServiceFabricClientGetServiceEventListOptionalParams, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetServiceEventListOptionalParams, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1664">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1664">The identity of the service.</span></span> <span data-ttu-id="493d4-1665">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1665">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1666">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1666">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1667">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1667">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1668">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1668">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1669">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1669">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
          description: <span data-ttu-id="493d4-1670">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1670">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1671">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1671">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth'
    name: 'getServiceHealth(string, Models.ServiceFabricClientGetServiceHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1672">지정된 서비스의 상태 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1672">Gets the health information of the specified service.</span></span>
      <span data-ttu-id="493d4-1673">상태에 따라 서비스에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1673">Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.</span></span>
      <span data-ttu-id="493d4-1674">반환된 파티션 컬렉션을 필터링하려면 PartitionsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1674">Use PartitionsHealthStateFilter to filter the collection of partitions returned.</span></span>
      <span data-ttu-id="493d4-1675">Health 스토어에 없는 서비스를 지정하면 이 요청이 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1675">If you specify a service that does not exist in the health store, this request returns an error.</span></span>
    syntax:
      content: 'function getServiceHealth(serviceId: string, options?: Models.ServiceFabricClientGetServiceHealthOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1676">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1676">The identity of the service.</span></span> <span data-ttu-id="493d4-1677">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1677">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1678">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1678">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1679">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1679">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth_1'
    name: 'getServiceHealth(string, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1680">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1680">The identity of the service.</span></span> <span data-ttu-id="493d4-1681">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1681">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1682">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1682">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1683">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1683">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            <span data-ttu-id="493d4-1684">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1684">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth_2'
    name: 'getServiceHealth(string, ServiceFabricClientGetServiceHealthOptionalParams, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, options: ServiceFabricClientGetServiceHealthOptionalParams, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1685">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1685">The identity of the service.</span></span> <span data-ttu-id="493d4-1686">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1686">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1687">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1687">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1688">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1688">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
          description: <span data-ttu-id="493d4-1689">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1689">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            <span data-ttu-id="493d4-1690">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1690">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy'
    name: 'getServiceHealthUsingPolicy(string, Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1691">지정된 서비스의 상태 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1691">Gets the health information of the specified service.</span></span>
      <span data-ttu-id="493d4-1692">응용 프로그램 상태 정책이 지정 된 상태 평가 집계 된 상태를 가져오려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1692">If the application health policy is specified, the health evaluation uses it to get the aggregated health state.</span></span>
      <span data-ttu-id="493d4-1693">정책을 지정 하지 않으면 상태 평가 정책이 없는 매니페스트에서 정의 된 경우 응용 프로그램 매니페스트 또는 기본 상태 정책을 정의 하는 응용 프로그램 상태 정책을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1693">If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.</span></span>
      <span data-ttu-id="493d4-1694">상태에 따라 서비스에 보고된 상태 이벤트의 컬렉션을 필터링하려면 EventsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1694">Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.</span></span>
      <span data-ttu-id="493d4-1695">반환된 파티션 컬렉션을 필터링하려면 PartitionsHealthStateFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1695">Use PartitionsHealthStateFilter to filter the collection of partitions returned.</span></span>
      <span data-ttu-id="493d4-1696">Health 스토어에 없는 서비스를 지정하면 이 요청이 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1696">If you specify a service that does not exist in the health store, this request returns an error.</span></span>
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, options?: Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1697">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1697">The identity of the service.</span></span> <span data-ttu-id="493d4-1698">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1698">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1699">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1699">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1700">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1700">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1'
    name: 'getServiceHealthUsingPolicy(string, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1701">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1701">The identity of the service.</span></span> <span data-ttu-id="493d4-1702">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1702">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1703">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1703">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1704">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1704">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            <span data-ttu-id="493d4-1705">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1705">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2'
    name: 'getServiceHealthUsingPolicy(string, ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, options: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1706">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1706">The identity of the service.</span></span> <span data-ttu-id="493d4-1707">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1707">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1708">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1708">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1709">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1709">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="493d4-1710">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1710">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            <span data-ttu-id="493d4-1711">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1711">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo'
    name: 'getServiceInfo(string, string, Models.ServiceFabricClientGetServiceInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1712">지정된 Service Fabric 애플리케이션에 속하는 지정된 서비스에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1712">Returns the information about the specified service belonging to the specified Service Fabric application.</span></span>
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, options?: Models.ServiceFabricClientGetServiceInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1713">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1713">The identity of the application.</span></span> <span data-ttu-id="493d4-1714">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1714">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1715">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1715">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1716">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1716">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1717">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1717">The identity of the service.</span></span> <span data-ttu-id="493d4-1718">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1718">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1719">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1719">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1720">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1720">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo_1'
    name: 'getServiceInfo(string, string, ServiceCallback<Models.ServiceInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, callback: ServiceCallback<Models.ServiceInfoUnion>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1721">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1721">The identity of the application.</span></span> <span data-ttu-id="493d4-1722">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1722">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1723">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1723">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1724">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1724">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1725">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1725">The identity of the service.</span></span> <span data-ttu-id="493d4-1726">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1726">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1727">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1727">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1728">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1728">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServiceInfoUnion>
          description: |
            <span data-ttu-id="493d4-1729">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1729">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo_2'
    name: 'getServiceInfo(string, string, ServiceFabricClientGetServiceInfoOptionalParams, ServiceCallback<Models.ServiceInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, options: ServiceFabricClientGetServiceInfoOptionalParams, callback: ServiceCallback<Models.ServiceInfoUnion>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1730">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1730">The identity of the application.</span></span> <span data-ttu-id="493d4-1731">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1731">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1732">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1732">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1733">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1733">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1734">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1734">The identity of the service.</span></span> <span data-ttu-id="493d4-1735">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1735">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1736">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1736">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1737">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1737">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
          description: <span data-ttu-id="493d4-1738">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1738">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServiceInfoUnion>
          description: |
            <span data-ttu-id="493d4-1739">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1739">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList'
    name: 'getServiceInfoList(string, Models.ServiceFabricClientGetServiceInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1740">애플리케이션 ID로 지정된 애플리케이션에 속하는 모든 서비스에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1740">Returns the information about all services belonging to the application specified by the application ID.</span></span>
    syntax:
      content: 'function getServiceInfoList(applicationId: string, options?: Models.ServiceFabricClientGetServiceInfoListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1741">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1741">The identity of the application.</span></span> <span data-ttu-id="493d4-1742">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1742">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1743">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1743">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1744">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1744">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_1'
    name: 'getServiceInfoList(string, ServiceCallback<PagedServiceInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, callback: ServiceCallback<PagedServiceInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1745">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1745">The identity of the application.</span></span> <span data-ttu-id="493d4-1746">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1746">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1747">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1747">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1748">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1748">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
          description: |
            <span data-ttu-id="493d4-1749">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1749">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_2'
    name: 'getServiceInfoList(string, ServiceFabricClientGetServiceInfoListOptionalParams, ServiceCallback<PagedServiceInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, options: ServiceFabricClientGetServiceInfoListOptionalParams, callback: ServiceCallback<PagedServiceInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1750">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1750">The identity of the application.</span></span> <span data-ttu-id="493d4-1751">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1751">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1752">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1752">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1753">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1753">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1754">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1754">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
          description: |
            <span data-ttu-id="493d4-1755">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1755">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest'
    name: 'getServiceManifest(string, string, string, Models.ServiceFabricClientGetServiceManifestOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1756">서비스 유형을 설명하는 매니페스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1756">Gets the manifest describing a service type.</span></span> <span data-ttu-id="493d4-1757">응답에 서비스 매니페스트 XML이 문자열로 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1757">The response contains the service manifest XML as a string.</span></span>
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options?: Models.ServiceFabricClientGetServiceManifestOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1758">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1758">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1759">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1759">The version of the application type.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-1760">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1760">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest_1'
    name: 'getServiceManifest(string, string, string, ServiceCallback<ServiceTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, callback: ServiceCallback<ServiceTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1761">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1761">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1762">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1762">The version of the application type.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-1763">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1763">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
          description: |
            <span data-ttu-id="493d4-1764">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1764">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest_2'
    name: 'getServiceManifest(string, string, string, ServiceFabricClientGetServiceManifestOptionalParams, ServiceCallback<ServiceTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options: ServiceFabricClientGetServiceManifestOptionalParams, callback: ServiceCallback<ServiceTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1765">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1765">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1766">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1766">The version of the application type.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-1767">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1767">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
          description: <span data-ttu-id="493d4-1768">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1768">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
          description: |
            <span data-ttu-id="493d4-1769">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1769">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo'
    name: 'getServiceNameInfo(string, Models.ServiceFabricClientGetServiceNameInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1770">지정된 파티션에 대한 서비스의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1770">Gets name of the service for the specified partition.</span></span> <span data-ttu-id="493d4-1771">파티션 ID가 클러스터에 없는 경우 404 오류가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1771">A 404 error is returned if the partition ID does not exist in the cluster.</span></span>
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, options?: Models.ServiceFabricClientGetServiceNameInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1772">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1772">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceNameInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_1'
    name: 'getServiceNameInfo(string, ServiceCallback<ServiceNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, callback: ServiceCallback<ServiceNameInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1773">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1773">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceNameInfo>
          description: |
            <span data-ttu-id="493d4-1774">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1774">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_2'
    name: 'getServiceNameInfo(string, ServiceFabricClientGetServiceNameInfoOptionalParams, ServiceCallback<ServiceNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, options: ServiceFabricClientGetServiceNameInfoOptionalParams, callback: ServiceCallback<ServiceNameInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1775">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1775">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
          description: <span data-ttu-id="493d4-1776">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1776">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceNameInfo>
          description: |
            <span data-ttu-id="493d4-1777">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1777">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList'
    name: 'getServicesEventList(string, string, Models.ServiceFabricClientGetServicesEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1778">응답은 ServiceEvent 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1778">The response is list of ServiceEvent objects.</span></span>
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetServicesEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1779">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1779">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1780">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1780">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetServicesEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList_1'
    name: 'getServicesEventList(string, string, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1781">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1781">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1782">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1782">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1783">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1783">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList_2'
    name: 'getServicesEventList(string, string, ServiceFabricClientGetServicesEventListOptionalParams, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetServicesEventListOptionalParams, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1784">ISO UTC yyyy에서 조회 쿼리의 시작 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1784">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="493d4-1785">ISO UTC yyyy에서 조회 쿼리의 종료 시간-MM-: Ssz 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1785">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
          description: <span data-ttu-id="493d4-1786">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1786">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            <span data-ttu-id="493d4-1787">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1787">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName'
    name: 'getServiceTypeInfoByName(string, string, string, Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1788">Service Fabric 클러스터에서 프로 비전 된 응용 프로그램 형식에서 지원 되는 특정 서비스 형식에 대 한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1788">Gets the information about a specific service type that is supported by a provisioned application type in a Service Fabric cluster.</span></span> <span data-ttu-id="493d4-1789">제공된 애플리케이션 유형이 존재해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1789">The provided application type must exist.</span></span>
      <span data-ttu-id="493d4-1790">그렇지 않으면 404 상태가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1790">Otherwise, a 404 status is returned.</span></span> <span data-ttu-id="493d4-1791">클러스터의 지정된 된 서비스 유형에 없으면 204 응답 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1791">A 204 response is returned if the specified service type is not found in the cluster.</span></span>
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options?: Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1792">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1792">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1793">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1793">The version of the application type.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1794">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1794">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_1'
    name: 'getServiceTypeInfoByName(string, string, string, ServiceCallback<ServiceTypeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, callback: ServiceCallback<ServiceTypeInfo>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1795">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1795">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1796">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1796">The version of the application type.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1797">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1797">Specifies the name of a Service Fabric service type.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
          description: |
            <span data-ttu-id="493d4-1798">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1798">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_2'
    name: 'getServiceTypeInfoByName(string, string, string, ServiceFabricClientGetServiceTypeInfoByNameOptionalParams, ServiceCallback<ServiceTypeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams, callback: ServiceCallback<ServiceTypeInfo>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1799">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1799">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1800">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1800">The version of the application type.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1801">Service Fabric 서비스 유형의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1801">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
          description: <span data-ttu-id="493d4-1802">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1802">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
          description: |
            <span data-ttu-id="493d4-1803">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1803">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList'
    name: 'getServiceTypeInfoList(string, string, Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1804">Service Fabric 클러스터에 프로비저닝된 애플리케이션 유형에서 지원하는 서비스 유형에 대한 정보가 포함된 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1804">Gets the list containing the information about service types that are supported by a provisioned application type in a Service Fabric cluster.</span></span> <span data-ttu-id="493d4-1805">제공된 애플리케이션 유형이 존재해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1805">The provided application type must exist.</span></span>
      <span data-ttu-id="493d4-1806">그렇지 않으면 404 상태가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1806">Otherwise, a 404 status is returned.</span></span>
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options?: Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1807">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1807">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1808">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1808">The version of the application type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_1'
    name: 'getServiceTypeInfoList(string, string, ServiceCallback<ServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ServiceTypeInfo[]>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1809">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1809">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1810">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1810">The version of the application type.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="493d4-1811">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1811">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_2'
    name: 'getServiceTypeInfoList(string, string, ServiceFabricClientGetServiceTypeInfoListOptionalParams, ServiceCallback<ServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options: ServiceFabricClientGetServiceTypeInfoListOptionalParams, callback: ServiceCallback<ServiceTypeInfo[]>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-1812">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1812">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="493d4-1813">애플리케이션 유형의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1813">The version of the application type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1814">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1814">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="493d4-1815">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1815">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList'
    name: 'getSubNameInfoList(string, Models.ServiceFabricClientGetSubNameInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-1816">지정 된 이름으로 모든 Service Fabric 이름을 열거합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1816">Enumerates all the Service Fabric names under a given name.</span></span> <span data-ttu-id="493d4-1817">subnames 페이지에 맞지 않는, 결과 한 페이지는 페이지가 다음 페이지를 가져오는 데 사용할 수 있는 연속 토큰으로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1817">If the subnames do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span> <span data-ttu-id="493d4-1818">존재 하지 않는 이름을 쿼리 하는 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1818">Querying a name that doesn''t exist will fail.</span></span>'
    syntax:
      content: 'function getSubNameInfoList(nameId: string, options?: Models.ServiceFabricClientGetSubNameInfoListOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1819">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1819">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetSubNameInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_1'
    name: 'getSubNameInfoList(string, ServiceCallback<PagedSubNameInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, callback: ServiceCallback<PagedSubNameInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1820">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1820">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
          description: |
            <span data-ttu-id="493d4-1821">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1821">The callback</span></span>
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_2'
    name: 'getSubNameInfoList(string, ServiceFabricClientGetSubNameInfoListOptionalParams, ServiceCallback<PagedSubNameInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, options: ServiceFabricClientGetSubNameInfoListOptionalParams, callback: ServiceCallback<PagedSubNameInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1822">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1822">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
          description: <span data-ttu-id="493d4-1823">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1823">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
          description: |
            <span data-ttu-id="493d4-1824">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1824">The callback</span></span>
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUnplacedReplicaInformation'
    name: 'getUnplacedReplicaInformation(string, Models.ServiceFabricClientGetUnplacedReplicaInformationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1825">서비스의 위치가 지정 되지 않은 복제본에 대 한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1825">Returns the information about the unplaced replicas of the service.</span></span>
      <span data-ttu-id="493d4-1826">PartitionId가 지정 하는 경우 결과 해당 파티션에 대 한 위치가 지정 되지 않은 복제본에 대 한 정보만 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1826">If PartitionId is specified, then result will contain information only about unplaced replicas for that partition.</span></span>
      <span data-ttu-id="493d4-1827">PartitionId를 지정 하지 않은 경우 결과 해당 서비스의 모든 파티션에 대 한 위치가 지정 되지 않은 복제본에 대 한 정보가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1827">If PartitionId is not specified, then result will contain information about unplaced replicas for all partitions of that service.</span></span>
      <span data-ttu-id="493d4-1828">결과는 주 복제본에 대 한 정보만 포함 됩니다 OnlyQueryPrimaries true로 설정 된 경우 위치가 지정 되지 않은 보조 복제본을 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1828">If OnlyQueryPrimaries is set to true, then result will contain information only about primary replicas, and will ignore unplaced secondary replicas.</span></span>
    syntax:
      content: 'function getUnplacedReplicaInformation(serviceId: string, options?: Models.ServiceFabricClientGetUnplacedReplicaInformationOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1829">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1829">The identity of the service.</span></span> <span data-ttu-id="493d4-1830">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1830">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1831">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1831">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1832">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1832">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetUnplacedReplicaInformationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetUnplacedReplicaInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUnplacedReplicaInformation_1'
    name: 'getUnplacedReplicaInformation(string, ServiceCallback<UnplacedReplicaInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUnplacedReplicaInformation(serviceId: string, callback: ServiceCallback<UnplacedReplicaInformation>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1833">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1833">The identity of the service.</span></span> <span data-ttu-id="493d4-1834">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1834">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1835">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1835">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1836">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1836">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UnplacedReplicaInformation>
          description: |
            <span data-ttu-id="493d4-1837">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1837">The callback</span></span>
      return:
        type:
          - Promise<Models.GetUnplacedReplicaInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUnplacedReplicaInformation_2'
    name: 'getUnplacedReplicaInformation(string, ServiceFabricClientGetUnplacedReplicaInformationOptionalParams, ServiceCallback<UnplacedReplicaInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUnplacedReplicaInformation(serviceId: string, options: ServiceFabricClientGetUnplacedReplicaInformationOptionalParams, callback: ServiceCallback<UnplacedReplicaInformation>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1838">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1838">The identity of the service.</span></span> <span data-ttu-id="493d4-1839">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1839">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1840">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1840">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1841">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1841">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetUnplacedReplicaInformationOptionalParams'
          description: <span data-ttu-id="493d4-1842">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1842">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UnplacedReplicaInformation>
          description: |
            <span data-ttu-id="493d4-1843">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1843">The callback</span></span>
      return:
        type:
          - Promise<Models.GetUnplacedReplicaInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState'
    name: getUpgradeOrchestrationServiceState(Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1844">Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1844">Get the service state of Service Fabric Upgrade Orchestration Service.</span></span> <span data-ttu-id="493d4-1845">이 API 지원을 위해 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1845">This API is internally used for support purposes.</span></span>
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(options?: Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_1'
    name: getUpgradeOrchestrationServiceState(ServiceCallback<UpgradeOrchestrationServiceState>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(callback: ServiceCallback<UpgradeOrchestrationServiceState>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
          description: |
            <span data-ttu-id="493d4-1846">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1846">The callback</span></span>
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_2'
    name: 'getUpgradeOrchestrationServiceState(ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams, ServiceCallback<UpgradeOrchestrationServiceState>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(options: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams, callback: ServiceCallback<UpgradeOrchestrationServiceState>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
          description: <span data-ttu-id="493d4-1847">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1847">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
          description: |
            <span data-ttu-id="493d4-1848">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1848">The callback</span></span>
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, Models.ServiceFabricClientInvokeContainerApiOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1849">지정된 코드 패키지에 대해 Service Fabric 노드에 배포한 컨테이너에 대한 컨테이너 API를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1849">Invoke container API on a container deployed on a Service Fabric node for the given code package.</span></span>
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options?: Models.ServiceFabricClientInvokeContainerApiOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1850">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1850">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1851">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1851">The identity of the application.</span></span> <span data-ttu-id="493d4-1852">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1852">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1853">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1853">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1854">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1854">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-1855">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1855">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1856">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1856">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-1857">Service Fabric 노드에 배포된 코드 패키지 인스턴스를 고유하게 식별하는 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1857">ID that uniquely identifies a code package instance deployed on a service fabric node.</span></span>
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: <span data-ttu-id="493d4-1858">컨테이너 API 호출에 대 한 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1858">Parameters for making container API call</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientInvokeContainerApiOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_1'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, ServiceCallback<ContainerApiResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, callback: ServiceCallback<ContainerApiResponse>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1859">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1859">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1860">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1860">The identity of the application.</span></span> <span data-ttu-id="493d4-1861">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1861">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1862">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1862">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1863">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1863">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-1864">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1864">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1865">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1865">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-1866">Service Fabric 노드에 배포된 코드 패키지 인스턴스를 고유하게 식별하는 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1866">ID that uniquely identifies a code package instance deployed on a service fabric node.</span></span>
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: <span data-ttu-id="493d4-1867">컨테이너 API 호출에 대 한 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1867">Parameters for making container API call</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerApiResponse>
          description: |
            <span data-ttu-id="493d4-1868">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1868">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_2'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, ServiceFabricClientInvokeContainerApiOptionalParams, ServiceCallback<ContainerApiResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options: ServiceFabricClientInvokeContainerApiOptionalParams, callback: ServiceCallback<ContainerApiResponse>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1869">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1869">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1870">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1870">The identity of the application.</span></span> <span data-ttu-id="493d4-1871">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1871">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1872">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1872">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1873">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1873">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: <span data-ttu-id="493d4-1874">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1874">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-1875">Service Fabric 클러스터에 애플리케이션 유형의 일부로 등록된 서비스 매니페스트에 지정된 코드 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1875">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>
        - id: codePackageInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-1876">Service Fabric 노드에 배포된 코드 패키지 인스턴스를 고유하게 식별하는 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1876">ID that uniquely identifies a code package instance deployed on a service fabric node.</span></span>
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: <span data-ttu-id="493d4-1877">컨테이너 API 호출에 대 한 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1877">Parameters for making container API call</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
          description: <span data-ttu-id="493d4-1878">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1878">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerApiResponse>
          description: |
            <span data-ttu-id="493d4-1879">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1879">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand'
    name: 'invokeInfrastructureCommand(string, Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1880">하나 이상의 인프라 서비스 인스턴스를 구성한 클러스터의 경우 이 API는 인프라 서비스의 특정 인스턴스에 인프라 관련 명령을 전송하는 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1880">For clusters that have one or more instances of the Infrastructure Service configured, this API provides a way to send infrastructure-specific commands to a particular instance of the Infrastructure Service.</span></span>
      <span data-ttu-id="493d4-1881">사용 가능한 명령 및 해당 응답 형식은 클러스터가 실행되는 인프라에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1881">Available commands and their corresponding response formats vary depending upon the infrastructure on which the cluster is running.</span></span>

      <span data-ttu-id="493d4-1882">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1882">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, options?: Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="493d4-1883">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1883">The text of the command to be invoked.</span></span> <span data-ttu-id="493d4-1884">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1884">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1'
    name: 'invokeInfrastructureCommand(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="493d4-1885">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1885">The text of the command to be invoked.</span></span> <span data-ttu-id="493d4-1886">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1886">The content of the command is infrastructure-specific.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="493d4-1887">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1887">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2'
    name: 'invokeInfrastructureCommand(string, ServiceFabricClientInvokeInfrastructureCommandOptionalParams, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, options: ServiceFabricClientInvokeInfrastructureCommandOptionalParams, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="493d4-1888">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1888">The text of the command to be invoked.</span></span> <span data-ttu-id="493d4-1889">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1889">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
          description: <span data-ttu-id="493d4-1890">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1890">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="493d4-1891">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1891">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery'
    name: 'invokeInfrastructureQuery(string, Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1892">하나 이상의 인프라 서비스 인스턴스를 구성한 클러스터의 경우 이 API는 인프라 서비스의 특정 인스턴스에 인프라 관련 쿼리를 전송하는 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1892">For clusters that have one or more instances of the Infrastructure Service configured, this API provides a way to send infrastructure-specific queries to a particular instance of the Infrastructure Service.</span></span>
      <span data-ttu-id="493d4-1893">사용 가능한 명령 및 해당 응답 형식은 클러스터가 실행되는 인프라에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1893">Available commands and their corresponding response formats vary depending upon the infrastructure on which the cluster is running.</span></span>

      <span data-ttu-id="493d4-1894">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1894">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, options?: Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="493d4-1895">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1895">The text of the command to be invoked.</span></span> <span data-ttu-id="493d4-1896">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1896">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1'
    name: 'invokeInfrastructureQuery(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="493d4-1897">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1897">The text of the command to be invoked.</span></span> <span data-ttu-id="493d4-1898">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1898">The content of the command is infrastructure-specific.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="493d4-1899">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1899">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2'
    name: 'invokeInfrastructureQuery(string, ServiceFabricClientInvokeInfrastructureQueryOptionalParams, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, options: ServiceFabricClientInvokeInfrastructureQueryOptionalParams, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="493d4-1900">호출할 명령의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1900">The text of the command to be invoked.</span></span> <span data-ttu-id="493d4-1901">명령의 콘텐츠는 인프라에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1901">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
          description: <span data-ttu-id="493d4-1902">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1902">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="493d4-1903">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1903">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshApplication'
    name: meshApplication
    fullName: meshApplication
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshApplication: MeshApplication'
      return:
        type:
          - '@azure/servicefabric.MeshApplication'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshCodePackage'
    name: meshCodePackage
    fullName: meshCodePackage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshCodePackage: MeshCodePackage'
      return:
        type:
          - '@azure/servicefabric.MeshCodePackage'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshGateway'
    name: meshGateway
    fullName: meshGateway
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshGateway: MeshGateway'
      return:
        type:
          - '@azure/servicefabric.MeshGateway'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshNetwork'
    name: meshNetwork
    fullName: meshNetwork
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshNetwork: MeshNetwork'
      return:
        type:
          - '@azure/servicefabric.MeshNetwork'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshSecret'
    name: meshSecret
    fullName: meshSecret
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshSecret: MeshSecret'
      return:
        type:
          - '@azure/servicefabric.MeshSecret'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshSecretValue'
    name: meshSecretValue
    fullName: meshSecretValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshSecretValue: MeshSecretValue'
      return:
        type:
          - '@azure/servicefabric.MeshSecretValue'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshService'
    name: meshService
    fullName: meshService
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshService: MeshService'
      return:
        type:
          - '@azure/servicefabric.MeshService'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshServiceReplica'
    name: meshServiceReplica
    fullName: meshServiceReplica
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshServiceReplica: MeshServiceReplica'
      return:
        type:
          - '@azure/servicefabric.MeshServiceReplica'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshVolume'
    name: meshVolume
    fullName: meshVolume
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshVolume: MeshVolume'
      return:
        type:
          - '@azure/servicefabric.MeshVolume'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.movePrimaryReplica'
    name: 'movePrimaryReplica(string, Models.ServiceFabricClientMovePrimaryReplicaOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1904">이 명령은 모든 제약 조건을 적용, 상태 저장 서비스 파티션의 주 복제본을 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1904">This command moves the primary replica of a partition of a stateful service, respecting all constraints.</span></span>
      <span data-ttu-id="493d4-1905">NodeName 매개 변수는 기본을 지정 하는 경우 (제약 조건에서 허용) 하는 경우 지정한 노드로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1905">If NodeName parameter is specified, primary will be moved to the specified node (if constraints allow it).</span></span>
      <span data-ttu-id="493d4-1906">NodeName 매개 변수를 지정 하지 않으면 주 복제본을 클러스터의 임의 노드에 옮겨집니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1906">If NodeName parameter is not specified, primary replica will be moved to a random node in the cluster.</span></span>
      <span data-ttu-id="493d4-1907">IgnoreConstraints 매개 변수가 지정 되 고 주를 true로 설정 하는 경우 제약 조건에 관계 없이 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1907">If IgnoreConstraints parameter is specified and set to true, then primary will be moved regardless of the constraints.</span></span>
    syntax:
      content: 'function movePrimaryReplica(partitionId: string, options?: Models.ServiceFabricClientMovePrimaryReplicaOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1908">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1908">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientMovePrimaryReplicaOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.movePrimaryReplica_1'
    name: 'movePrimaryReplica(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function movePrimaryReplica(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1909">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1909">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1910">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1910">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.movePrimaryReplica_2'
    name: 'movePrimaryReplica(string, ServiceFabricClientMovePrimaryReplicaOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function movePrimaryReplica(partitionId: string, options: ServiceFabricClientMovePrimaryReplicaOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1911">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1911">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientMovePrimaryReplicaOptionalParams'
          description: <span data-ttu-id="493d4-1912">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1912">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1913">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1913">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.moveSecondaryReplica'
    name: 'moveSecondaryReplica(string, string, Models.ServiceFabricClientMoveSecondaryReplicaOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1914">이 명령은 모든 제약 조건을 적용 상태 저장 서비스의 파티션 보조 복제본을 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1914">This command moves the secondary replica of a partition of a stateful service, respecting all constraints.</span></span>
      <span data-ttu-id="493d4-1915">CurrentNodeName 매개 변수는 복제본 이동 하는 데 지정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1915">CurrentNodeName parameter must be specified to identify the replica that is moved.</span></span>
      <span data-ttu-id="493d4-1916">소스 노드 이름을 지정 해야 하지만 새로운 노드 이름 수 생략 하 고 복제는 임의 노드로 이동 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="493d4-1916">Source node name must be specified, but new node name can be omitted, and in that case replica is moved to a random node.</span></span>
      <span data-ttu-id="493d4-1917">IgnoreConstraints 매개 변수가 지정 되 고 보조를 true로 설정 하는 경우 제약 조건에 관계 없이 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1917">If IgnoreConstraints parameter is specified and set to true, then secondary will be moved regardless of the constraints.</span></span>
    syntax:
      content: 'function moveSecondaryReplica(partitionId: string, currentNodeName: string, options?: Models.ServiceFabricClientMoveSecondaryReplicaOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1918">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1918">The identity of the partition.</span></span>
        - id: currentNodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1919">보조 복제본에 대 한 소스 노드의 이름을 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1919">The name of the source node for secondary replica move.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientMoveSecondaryReplicaOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.moveSecondaryReplica_1'
    name: 'moveSecondaryReplica(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function moveSecondaryReplica(partitionId: string, currentNodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1920">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1920">The identity of the partition.</span></span>
        - id: currentNodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1921">보조 복제본에 대 한 소스 노드의 이름을 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1921">The name of the source node for secondary replica move.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1922">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1922">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.moveSecondaryReplica_2'
    name: 'moveSecondaryReplica(string, string, ServiceFabricClientMoveSecondaryReplicaOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function moveSecondaryReplica(partitionId: string, currentNodeName: string, options: ServiceFabricClientMoveSecondaryReplicaOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1923">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1923">The identity of the partition.</span></span>
        - id: currentNodeName
          type:
            - string
          description: <span data-ttu-id="493d4-1924">보조 복제본에 대 한 소스 노드의 이름을 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1924">The name of the source node for secondary replica move.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientMoveSecondaryReplicaOptionalParams'
          description: <span data-ttu-id="493d4-1925">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1925">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1926">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1926">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule'
    name: 'postChaosSchedule(ChaosScheduleDescription, Models.ServiceFabricClientPostChaosScheduleOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1927">Chaos는 Chaos Schedule에 따라 실행을 자동으로 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1927">Chaos will automatically schedule runs based on the Chaos Schedule.</span></span>
      <span data-ttu-id="493d4-1928">Chaos 일정 제공 된 버전이 서버 버전과 일치 하는 경우 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1928">The Chaos Schedule will be updated if the provided version matches the version on the server.</span></span>
      <span data-ttu-id="493d4-1929">Chaos 일정을 업데이트할 때 서버에서 버전 1 씩 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1929">When updating the Chaos Schedule, the version on the server is incremented by 1.</span></span>
      <span data-ttu-id="493d4-1930">서버의 버전은 다 수에 도달한 후 0으로 다시 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1930">The version on the server will wrap back to 0 after reaching a large number.</span></span>
      <span data-ttu-id="493d4-1931">이 호출이 만들어질 때 Chaos가 실행되는 경우 호출에 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1931">If Chaos is running when this call is made, the call will fail.</span></span>
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, options?: Models.ServiceFabricClientPostChaosScheduleOptionalParams)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: <span data-ttu-id="493d4-1932">비정상 상황에서 사용 하는 일정을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1932">Describes the schedule used by Chaos.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientPostChaosScheduleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_1'
    name: 'postChaosSchedule(ChaosScheduleDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: <span data-ttu-id="493d4-1933">비정상 상황에서 사용 하는 일정을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1933">Describes the schedule used by Chaos.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1934">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1934">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_2'
    name: 'postChaosSchedule(ChaosScheduleDescription, ServiceFabricClientPostChaosScheduleOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, options: ServiceFabricClientPostChaosScheduleOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: <span data-ttu-id="493d4-1935">비정상 상황에서 사용 하는 일정을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1935">Describes the schedule used by Chaos.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
          description: <span data-ttu-id="493d4-1936">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1936">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1937">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1937">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, Models.ServiceFabricClientProvisionApplicationTypeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-1938">클러스터를 통해 Service Fabric 애플리케이션 유형을 프로비전합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1938">Provisions a Service Fabric application type with the cluster.</span></span> <span data-ttu-id="493d4-1939">새 응용 프로그램을 인스턴스화할 수 전에 프로 비전이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1939">The provision is required before any new applications can be instantiated.</span></span>
      <span data-ttu-id="493d4-1940">프로 비전 작업은 relativePathInImageStore 또는 외부 '.sfpkg'의 URI를 사용 하 여 지정 된 응용 프로그램 패키지에서 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1940">The provision operation can be performed either on the application package specified by the relativePathInImageStore, or by using the URI of the external '.sfpkg'.</span></span>
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, options?: Models.ServiceFabricClientProvisionApplicationTypeOptionalParams)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: <span data-ttu-id="493d4-1941">이미지 저장소 기반 프로 비전 또는 외부 저장소 기반 프로 비전을 지 원하는 프로 비전 응용 프로그램 형식 설명의 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1941">The base type of provision application type description which supports either image store-based provision or external store-based provision.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientProvisionApplicationTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_1'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: <span data-ttu-id="493d4-1942">이미지 저장소 기반 프로 비전 또는 외부 저장소 기반 프로 비전을 지 원하는 프로 비전 응용 프로그램 형식 설명의 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1942">The base type of provision application type description which supports either image store-based provision or external store-based provision.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1943">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1943">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_2'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, ServiceFabricClientProvisionApplicationTypeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, options: ServiceFabricClientProvisionApplicationTypeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: <span data-ttu-id="493d4-1944">이미지 저장소 기반 프로 비전 또는 외부 저장소 기반 프로 비전을 지 원하는 프로 비전 응용 프로그램 형식 설명의 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1944">The base type of provision application type description which supports either image store-based provision or external store-based provision.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
          description: <span data-ttu-id="493d4-1945">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1945">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1946">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1946">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster'
    name: 'provisionCluster(ProvisionFabricDescription, Models.ServiceFabricClientProvisionClusterOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1947">Service Fabric 클러스터의 코드 또는 구성 패키지의 유효성을 검사하거나 프로비전합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1947">Validate and provision the code or configuration packages of a Service Fabric cluster.</span></span>
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options?: Models.ServiceFabricClientProvisionClusterOptionalParams)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: <span data-ttu-id="493d4-1948">클러스터를 프로 비전에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1948">Describes the parameters for provisioning a cluster.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientProvisionClusterOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster_1'
    name: 'provisionCluster(ProvisionFabricDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: <span data-ttu-id="493d4-1949">클러스터를 프로 비전에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1949">Describes the parameters for provisioning a cluster.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1950">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1950">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster_2'
    name: 'provisionCluster(ProvisionFabricDescription, ServiceFabricClientProvisionClusterOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options: ServiceFabricClientProvisionClusterOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: <span data-ttu-id="493d4-1951">클러스터를 프로 비전에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1951">Describes the parameters for provisioning a cluster.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
          description: <span data-ttu-id="493d4-1952">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1952">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1953">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1953">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty'
    name: 'putProperty(string, PropertyDescription, Models.ServiceFabricClientPutPropertyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1954">지정된 이름에서 지정된 Service Fabric 속성을 만들거나 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1954">Creates or updates the specified Service Fabric property under a given name.</span></span>
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, options?: Models.ServiceFabricClientPutPropertyOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1955">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1955">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: <span data-ttu-id="493d4-1956">만들 Service Fabric 속성을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1956">Describes the Service Fabric property to be created.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientPutPropertyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty_1'
    name: 'putProperty(string, PropertyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1957">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1957">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: <span data-ttu-id="493d4-1958">만들 Service Fabric 속성을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1958">Describes the Service Fabric property to be created.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1959">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1959">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty_2'
    name: 'putProperty(string, PropertyDescription, ServiceFabricClientPutPropertyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, options: ServiceFabricClientPutPropertyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-1960">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1960">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: <span data-ttu-id="493d4-1961">만들 Service Fabric 속성을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1961">Describes the Service Fabric property to be created.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
          description: <span data-ttu-id="493d4-1962">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1962">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1963">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1963">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions'
    name: recoverAllPartitions(Models.ServiceFabricClientRecoverAllPartitionsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1964">이 작업은 다운된 복제본을 복구하지 못할 경우에만 수행해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1964">This operation should only be performed if it is known that the replicas that are down cannot be recovered.</span></span> <span data-ttu-id="493d4-1965">이 API를 잘못 사용하면 잠재적인 데이터 손실이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1965">Incorrect use of this API can cause potential data loss.</span></span>
    syntax:
      content: 'function recoverAllPartitions(options?: Models.ServiceFabricClientRecoverAllPartitionsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRecoverAllPartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_1'
    name: recoverAllPartitions(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1966">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1966">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_2'
    name: 'recoverAllPartitions(ServiceFabricClientRecoverAllPartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(options: ServiceFabricClientRecoverAllPartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
          description: <span data-ttu-id="493d4-1967">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1967">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1968">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1968">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition'
    name: 'recoverPartition(string, Models.ServiceFabricClientRecoverPartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1969">이 작업은 다운된 복제본을 복구하지 못할 경우에만 수행해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1969">This operation should only be performed if it is known that the replicas that are down cannot be recovered.</span></span> <span data-ttu-id="493d4-1970">이 API를 잘못 사용하면 잠재적인 데이터 손실이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1970">Incorrect use of this API can cause potential data loss.</span></span>
    syntax:
      content: 'function recoverPartition(partitionId: string, options?: Models.ServiceFabricClientRecoverPartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1971">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1971">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRecoverPartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition_1'
    name: 'recoverPartition(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1972">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1972">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1973">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1973">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition_2'
    name: 'recoverPartition(string, ServiceFabricClientRecoverPartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, options: ServiceFabricClientRecoverPartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-1974">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1974">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
          description: <span data-ttu-id="493d4-1975">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1975">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1976">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1976">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions'
    name: 'recoverServicePartitions(string, Models.ServiceFabricClientRecoverServicePartitionsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1977">현재 쿼럼 손실 상태에 있는 지정된 서비스를 복구하려고 시도해야 한다는 것을 Service Fabric 클러스터에 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1977">Indicates to the Service Fabric cluster that it should attempt to recover the specified service that is currently stuck in quorum loss.</span></span> <span data-ttu-id="493d4-1978">이 작업은 다운된 복제본을 복구하지 못할 경우에만 수행해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1978">This operation should only be performed if it is known that the replicas that are down cannot be recovered.</span></span> <span data-ttu-id="493d4-1979">이 API를 잘못 사용하면 잠재적인 데이터 손실이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1979">Incorrect use of this API can cause potential data loss.</span></span>
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, options?: Models.ServiceFabricClientRecoverServicePartitionsOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1980">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1980">The identity of the service.</span></span> <span data-ttu-id="493d4-1981">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1981">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1982">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1982">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1983">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1983">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRecoverServicePartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_1'
    name: 'recoverServicePartitions(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1984">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1984">The identity of the service.</span></span> <span data-ttu-id="493d4-1985">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1985">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1986">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1986">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1987">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1987">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1988">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1988">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_2'
    name: 'recoverServicePartitions(string, ServiceFabricClientRecoverServicePartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, options: ServiceFabricClientRecoverServicePartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-1989">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1989">The identity of the service.</span></span> <span data-ttu-id="493d4-1990">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1990">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-1991">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1991">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-1992">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1992">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
          description: <span data-ttu-id="493d4-1993">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1993">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1994">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1994">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions'
    name: recoverSystemPartitions(Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-1995">현재 쿼럼 손실에 걸린 시스템 서비스를 복구하고자 시도해야 함을 Service Fabric 클러스터에 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1995">Indicates to the Service Fabric cluster that it should attempt to recover the system services that are currently stuck in quorum loss.</span></span> <span data-ttu-id="493d4-1996">이 작업은 다운된 복제본을 복구하지 못할 경우에만 수행해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1996">This operation should only be performed if it is known that the replicas that are down cannot be recovered.</span></span> <span data-ttu-id="493d4-1997">이 API를 잘못 사용하면 잠재적인 데이터 손실이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-1997">Incorrect use of this API can cause potential data loss.</span></span>
    syntax:
      content: 'function recoverSystemPartitions(options?: Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_1'
    name: recoverSystemPartitions(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-1998">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-1998">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_2'
    name: 'recoverSystemPartitions(ServiceFabricClientRecoverSystemPartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(options: ServiceFabricClientRecoverSystemPartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
          description: <span data-ttu-id="493d4-1999">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-1999">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2000">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2000">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment'
    name: 'removeComposeDeployment(string, Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2001">기존 Service Fabric 작성 배포를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2001">Deletes an existing Service Fabric compose deployment.</span></span>
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, options?: Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2002">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2002">The identity of the deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_1'
    name: 'removeComposeDeployment(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2003">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2003">The identity of the deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2004">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2004">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_2'
    name: 'removeComposeDeployment(string, ServiceFabricClientRemoveComposeDeploymentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, options: ServiceFabricClientRemoveComposeDeploymentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2005">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2005">The identity of the deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
          description: <span data-ttu-id="493d4-2006">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2006">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2007">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2007">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState'
    name: 'removeNodeState(string, Models.ServiceFabricClientRemoveNodeStateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2008">해당 노드의 지속된 상태를 복구할 수 없다는 것을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2008">This implies that it is not possible to recover the persisted state of that node.</span></span> <span data-ttu-id="493d4-2009">일반적으로 하드 디스크가 초기화 정리되거나 하드 디스크의 작동이 중단하는 경우에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2009">This generally happens if a hard disk has been wiped clean, or if a hard disk crashes.</span></span> <span data-ttu-id="493d4-2010">이 작업을 성공시키려면 노드는 중단되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2010">The node has to be down for this operation to be successful.</span></span> <span data-ttu-id="493d4-2011">이 작업을 사용하면 Service Fabric에서 해당 노드의 복제본이 더 이상 존재하지 않으며, Service Fabric에서 해당 복제본이 다시 작동하기를 기다리는 것을 중지해야 함을 알 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2011">This operation lets Service Fabric know that the replicas on that node no longer exist, and that Service Fabric should stop waiting for those replicas to come back up.</span></span> <span data-ttu-id="493d4-2012">노드의 상태가 제거되지 않고 노드가 해당 상태 그대로 다시 작동할 수 있는 경우 이 cmdlet을 실행하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="493d4-2012">Do not run this cmdlet if the state on the node has not been removed and the node can come back up with its state intact.</span></span> <span data-ttu-id="493d4-2013">시드 노드의 경우이 API를 사용 하려면 서비스 패브릭 6.5에서 시작 일반 (비-시드) 노드로 시드 노드를 변경 하십시오 하 고 노드 상태를 제거 하려면이 API를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2013">Starting from Service Fabric 6.5, in order to use this API for seed nodes, please change the seed nodes to regular (non-seed) nodes and then invoke this API to remove the node state.</span></span> <span data-ttu-id="493d4-2014">시드 노드가 다운 되 면 클러스터를 Azure에서 실행을 하는 경우 Service Fabric 비-시드 노드로 자동으로 변경 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2014">If the cluster is running on Azure, after the seed node goes down, Service Fabric will try to change it to a non-seed node automatically.</span></span> <span data-ttu-id="493d4-2015">이렇게 확인 있는지 주 노드 형식에서 비-시드 노드의 수를 시드 노드 아래로 개수 보다 작아서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2015">To make this happen, make sure the number of non-seed nodes in the primary node type is no less than the number of Down seed nodes.</span></span> <span data-ttu-id="493d4-2016">필요한 경우이 달성 하기 위해 주 노드 형식에 더 많은 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2016">If necessary, add more nodes to the primary node type to achieve this.</span></span> <span data-ttu-id="493d4-2017">독립 실행형 클러스터에 대 한 상태 그대로 돌아와서 아래쪽 시드 노드가 필요 하지 않습니다, 경우 클러스터에서 노드를 제거 하세요 참조 https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-windows-server-add-remove-nodes</span><span class="sxs-lookup"><span data-stu-id="493d4-2017">For standalone cluster, if the Down seed node is not expected to come back up with its state intact, please remove the node from the cluster, see https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-windows-server-add-remove-nodes</span></span>'
    syntax:
      content: 'function removeNodeState(nodeName: string, options?: Models.ServiceFabricClientRemoveNodeStateOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2018">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2018">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRemoveNodeStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState_1'
    name: 'removeNodeState(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2019">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2019">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2020">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2020">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState_2'
    name: 'removeNodeState(string, ServiceFabricClientRemoveNodeStateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, options: ServiceFabricClientRemoveNodeStateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2021">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2021">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
          description: <span data-ttu-id="493d4-2022">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2022">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2023">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2023">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica'
    name: 'removeReplica(string, string, string, Models.ServiceFabricClientRemoveReplicaOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2024">이 API는 Service Fabric 클러스터에서 복제본을 제거하여 Service Fabric 복제 오류를 시뮬레이션합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2024">This API simulates a Service Fabric replica failure by removing a replica from a Service Fabric cluster.</span></span> <span data-ttu-id="493d4-2025">제거는 복제본을 닫고, 복제본을 None 역할로 전환한 다음, 클러스터에서 복제본의 상태 정보 모두를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2025">The removal closes the replica, transitions the replica to the role None, and then removes all of the state information of the replica from the cluster.</span></span> <span data-ttu-id="493d4-2026">이 API는 복제 상태 제거 경로를 테스트하고, 클라이언트 API를 통해 보고서 오류 영구 경로를 시뮬레이션합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2026">This API tests the replica state removal path, and simulates the report fault permanent path through client APIs.</span></span> <span data-ttu-id="493d4-2027">경고 ‑ 이 API가 사용될 때 수행되는 안전 검사가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2027">Warning - There are no safety checks performed when this API is used.</span></span> <span data-ttu-id="493d4-2028">이 API를 잘못 사용하면 상태 저장 서비스에 대한 데이터가 손실될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2028">Incorrect use of this API can lead to data loss for stateful services.</span></span> <span data-ttu-id="493d4-2029">또한 forceRemove 플래그는 동일한 프로세스에서 호스팅되는 다른 모든 복제본에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2029">In addition, the forceRemove flag impacts all other replicas hosted in the same process.</span></span>'
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientRemoveReplicaOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2030">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2030">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2031">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2031">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2032">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2032">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRemoveReplicaOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica_1'
    name: 'removeReplica(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2033">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2033">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2034">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2034">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2035">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2035">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2036">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2036">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica_2'
    name: 'removeReplica(string, string, string, ServiceFabricClientRemoveReplicaOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientRemoveReplicaOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2037">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2037">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2038">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2038">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2039">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2039">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
          description: <span data-ttu-id="493d4-2040">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2040">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2041">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2041">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth'
    name: 'reportApplicationHealth(string, HealthInformation, Models.ServiceFabricClientReportApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2042">지정된 Service Fabric 애플리케이션의 상태를 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2042">Reports health state of the specified Service Fabric application.</span></span> <span data-ttu-id="493d4-2043">보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2043">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="493d4-2044">보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 애플리케이션에 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2044">The report is sent to a Service Fabric gateway Application, which forwards to the health store.</span></span>
      <span data-ttu-id="493d4-2045">보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2045">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="493d4-2046">예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2046">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="493d4-2047">보고서를 health 스토어에 적용 했는지를 보려면 응용 프로그램 상태 가져오기 및 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2047">To see whether the report was applied in the health store, get application health and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportApplicationHealthOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2048">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2048">The identity of the application.</span></span> <span data-ttu-id="493d4-2049">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2049">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2050">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2050">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2051">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2051">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2052">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2052">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2053">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2053">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_1'
    name: 'reportApplicationHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2054">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2054">The identity of the application.</span></span> <span data-ttu-id="493d4-2055">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2055">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2056">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2056">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2057">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2057">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2058">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2058">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2059">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2059">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2060">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2060">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_2'
    name: 'reportApplicationHealth(string, HealthInformation, ServiceFabricClientReportApplicationHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportApplicationHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2061">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2061">The identity of the application.</span></span> <span data-ttu-id="493d4-2062">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2062">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2063">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2063">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2064">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2064">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2065">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2065">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2066">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2066">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
          description: <span data-ttu-id="493d4-2067">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2067">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2068">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2068">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth'
    name: 'reportClusterHealth(HealthInformation, Models.ServiceFabricClientReportClusterHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2069">Service Fabric 클러스터에서 상태 보고서를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2069">Sends a health report on a Service Fabric cluster.</span></span> <span data-ttu-id="493d4-2070">보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2070">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="493d4-2071">보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 노드에 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2071">The report is sent to a Service Fabric gateway node, which forwards to the health store.</span></span>
      <span data-ttu-id="493d4-2072">보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2072">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="493d4-2073">예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2073">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="493d4-2074">보고서를 health 스토어에 적용 했는지, GetClusterHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2074">To see whether the report was applied in the health store, run GetClusterHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportClusterHealthOptionalParams)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2075">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2075">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2076">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2076">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportClusterHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_1'
    name: 'reportClusterHealth(HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2077">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2077">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2078">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2078">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2079">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2079">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_2'
    name: 'reportClusterHealth(HealthInformation, ServiceFabricClientReportClusterHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, options: ServiceFabricClientReportClusterHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2080">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2080">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2081">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2081">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
          description: <span data-ttu-id="493d4-2082">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2082">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2083">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2083">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2084">Service Fabric 노드에 배포 된 응용 프로그램의 상태를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2084">Reports health state of the application deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-2085">보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2085">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="493d4-2086">보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 서비스에 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2086">The report is sent to a Service Fabric gateway Service, which forwards to the health store.</span></span>
      <span data-ttu-id="493d4-2087">보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2087">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="493d4-2088">예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2088">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="493d4-2089">보고서를 health 스토어에 적용 했는지 확인, 배포 된 응용 프로그램 상태 가져오기 및 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2089">To see whether the report was applied in the health store, get deployed application health and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2090">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2090">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2091">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2091">The identity of the application.</span></span> <span data-ttu-id="493d4-2092">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2092">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2093">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2093">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2094">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2094">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2095">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2095">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2096">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2096">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2097">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2097">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2098">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2098">The identity of the application.</span></span> <span data-ttu-id="493d4-2099">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2099">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2100">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2100">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2101">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2101">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2102">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2102">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2103">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2103">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2104">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2104">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, ServiceFabricClientReportDeployedApplicationHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportDeployedApplicationHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2105">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2105">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2106">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2106">The identity of the application.</span></span> <span data-ttu-id="493d4-2107">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2107">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2108">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2108">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2109">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2109">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2110">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2110">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2111">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2111">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
          description: <span data-ttu-id="493d4-2112">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2112">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2113">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2113">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2114">Service Fabric 노드에 배포 된 응용 프로그램의 서비스 패키지의 상태를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2114">Reports health state of the service package of the application deployed on a Service Fabric node.</span></span> <span data-ttu-id="493d4-2115">보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2115">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="493d4-2116">보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 서비스에 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2116">The report is sent to a Service Fabric gateway Service, which forwards to the health store.</span></span>
      <span data-ttu-id="493d4-2117">보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2117">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="493d4-2118">예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2118">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="493d4-2119">보고서를 health 스토어에 적용 했는지를 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 하 고 배포 된 서비스 패키지 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2119">To see whether the report was applied in the health store, get deployed service package health and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2120">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2120">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2121">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2121">The identity of the application.</span></span> <span data-ttu-id="493d4-2122">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2122">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2123">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2123">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2124">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2124">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-2125">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2125">The name of the service package.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2126">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2126">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2127">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2127">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2128">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2128">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2129">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2129">The identity of the application.</span></span> <span data-ttu-id="493d4-2130">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2130">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2131">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2131">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2132">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2132">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-2133">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2133">The name of the service package.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2134">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2134">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2135">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2135">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2136">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2136">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, ServiceFabricClientReportDeployedServicePackageHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2137">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2137">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2138">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2138">The identity of the application.</span></span> <span data-ttu-id="493d4-2139">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2139">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2140">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2140">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2141">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2141">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="493d4-2142">서비스 패키지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2142">The name of the service package.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2143">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2143">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2144">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2144">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
          description: <span data-ttu-id="493d4-2145">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2145">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2146">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2146">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth'
    name: 'reportNodeHealth(string, HealthInformation, Models.ServiceFabricClientReportNodeHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2147">지정된 Service Fabric 노드의 상태를 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2147">Reports health state of the specified Service Fabric node.</span></span> <span data-ttu-id="493d4-2148">보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2148">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="493d4-2149">보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 노드에 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2149">The report is sent to a Service Fabric gateway node, which forwards to the health store.</span></span>
      <span data-ttu-id="493d4-2150">보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2150">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="493d4-2151">예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2151">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="493d4-2152">보고서를 health 스토어에 적용 했는지, GetNodeHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2152">To see whether the report was applied in the health store, run GetNodeHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportNodeHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2153">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2153">The name of the node.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2154">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2154">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2155">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2155">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportNodeHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_1'
    name: 'reportNodeHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2156">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2156">The name of the node.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2157">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2157">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2158">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2158">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2159">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2159">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_2'
    name: 'reportNodeHealth(string, HealthInformation, ServiceFabricClientReportNodeHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options: ServiceFabricClientReportNodeHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2160">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2160">The name of the node.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2161">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2161">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2162">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2162">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
          description: <span data-ttu-id="493d4-2163">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2163">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2164">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2164">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth'
    name: 'reportPartitionHealth(string, HealthInformation, Models.ServiceFabricClientReportPartitionHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2165">지정된 Service Fabric 파티션의 상태를 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2165">Reports health state of the specified Service Fabric partition.</span></span> <span data-ttu-id="493d4-2166">보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2166">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="493d4-2167">보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 파티션에 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2167">The report is sent to a Service Fabric gateway Partition, which forwards to the health store.</span></span>
      <span data-ttu-id="493d4-2168">보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2168">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="493d4-2169">예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2169">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="493d4-2170">보고서를 health 스토어에 적용 했는지, GetPartitionHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2170">To see whether the report was applied in the health store, run GetPartitionHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportPartitionHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2171">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2171">The identity of the partition.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2172">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2172">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2173">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2173">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportPartitionHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_1'
    name: 'reportPartitionHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2174">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2174">The identity of the partition.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2175">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2175">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2176">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2176">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2177">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2177">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_2'
    name: 'reportPartitionHealth(string, HealthInformation, ServiceFabricClientReportPartitionHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportPartitionHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2178">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2178">The identity of the partition.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2179">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2179">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2180">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2180">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
          description: <span data-ttu-id="493d4-2181">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2181">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2182">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2182">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, Models.ServiceFabricClientReportReplicaHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2183">지정된 Service Fabric 복제본의 상태를 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2183">Reports health state of the specified Service Fabric replica.</span></span> <span data-ttu-id="493d4-2184">보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2184">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="493d4-2185">보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 복제본에 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2185">The report is sent to a Service Fabric gateway Replica, which forwards to the health store.</span></span>
      <span data-ttu-id="493d4-2186">보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2186">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="493d4-2187">예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2187">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="493d4-2188">보고서를 health 스토어에 적용 했는지, GetReplicaHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2188">To see whether the report was applied in the health store, run GetReplicaHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, serviceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportReplicaHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2189">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2189">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2190">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2190">The identifier of the replica.</span></span>
        - id: serviceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '<span data-ttu-id="493d4-2191">상태 보고 되는 서비스 복제본 (상태 비저장 또는 상태 저장)의 종류입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2191">The kind of service replica (Stateless or Stateful) for which the health is being reported.</span></span> <span data-ttu-id="493d4-2192">다음은 가능한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2192">Following are the possible values.</span></span> <span data-ttu-id="493d4-2193">가능한 값은 다음과 같습니다. ''상태 비저장'', ''상태 저장''</span><span class="sxs-lookup"><span data-stu-id="493d4-2193">Possible values include: ''Stateless'', ''Stateful''</span></span>'
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2194">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2194">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2195">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2195">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportReplicaHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_1'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, serviceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2196">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2196">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2197">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2197">The identifier of the replica.</span></span>
        - id: serviceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '<span data-ttu-id="493d4-2198">상태 보고 되는 서비스 복제본 (상태 비저장 또는 상태 저장)의 종류입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2198">The kind of service replica (Stateless or Stateful) for which the health is being reported.</span></span> <span data-ttu-id="493d4-2199">다음은 가능한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2199">Following are the possible values.</span></span> <span data-ttu-id="493d4-2200">가능한 값은 다음과 같습니다. ''상태 비저장'', ''상태 저장''</span><span class="sxs-lookup"><span data-stu-id="493d4-2200">Possible values include: ''Stateless'', ''Stateful''</span></span>'
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2201">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2201">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2202">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2202">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2203">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2203">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_2'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, ServiceFabricClientReportReplicaHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, serviceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, options: ServiceFabricClientReportReplicaHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2204">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2204">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2205">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2205">The identifier of the replica.</span></span>
        - id: serviceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '<span data-ttu-id="493d4-2206">상태 보고 되는 서비스 복제본 (상태 비저장 또는 상태 저장)의 종류입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2206">The kind of service replica (Stateless or Stateful) for which the health is being reported.</span></span> <span data-ttu-id="493d4-2207">다음은 가능한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2207">Following are the possible values.</span></span> <span data-ttu-id="493d4-2208">가능한 값은 다음과 같습니다. ''상태 비저장'', ''상태 저장''</span><span class="sxs-lookup"><span data-stu-id="493d4-2208">Possible values include: ''Stateless'', ''Stateful''</span></span>'
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2209">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2209">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2210">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2210">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
          description: <span data-ttu-id="493d4-2211">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2211">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2212">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2212">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth'
    name: 'reportServiceHealth(string, HealthInformation, Models.ServiceFabricClientReportServiceHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2213">지정된 Service Fabric 서비스의 상태를 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2213">Reports health state of the specified Service Fabric service.</span></span> <span data-ttu-id="493d4-2214">보고서는 상태 보고서의 원본 및 보고되는 속성에 대한 정보를 포함해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2214">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="493d4-2215">보고서는 Health 스토어에 전달하는 Service Fabric 게이트웨이 서비스에 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2215">The report is sent to a Service Fabric gateway Service, which forwards to the health store.</span></span>
      <span data-ttu-id="493d4-2216">보고서는 게이트웨이에 의해 허용되지만 추가 유효성 검사 후 Health 스토어에 의해 거부될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2216">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="493d4-2217">예를 들어 Health 스토어는 부실 시퀀스 번호와 같은 잘못된 매개 변수로 인해 보고서를 거부할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2217">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="493d4-2218">보고서를 health 스토어에 적용 했는지, GetServiceHealth 실행을 보려면 보고서 HealthEvents 섹션에 표시 되는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2218">To see whether the report was applied in the health store, run GetServiceHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportServiceHealthOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2219">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2219">The identity of the service.</span></span> <span data-ttu-id="493d4-2220">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2220">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2221">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2221">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2222">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2222">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2223">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2223">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2224">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2224">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportServiceHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_1'
    name: 'reportServiceHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2225">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2225">The identity of the service.</span></span> <span data-ttu-id="493d4-2226">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2226">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2227">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2227">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2228">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2228">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2229">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2229">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2230">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2230">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2231">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2231">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_2'
    name: 'reportServiceHealth(string, HealthInformation, ServiceFabricClientReportServiceHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportServiceHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2232">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2232">The identity of the service.</span></span> <span data-ttu-id="493d4-2233">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2233">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2234">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2234">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2235">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2235">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="493d4-2236">상태 보고서에 대 한 상태 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2236">Describes the health information for the health report.</span></span> <span data-ttu-id="493d4-2237">이 정보를 상태 관리자에 게 보낸 상태 보고서의 모든 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2237">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
          description: <span data-ttu-id="493d4-2238">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2238">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2239">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2239">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad'
    name: 'resetPartitionLoad(string, Models.ServiceFabricClientResetPartitionLoadOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2240">Service Fabric 파티션의 현재 부하를 서비스에 대한 기본 부하로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2240">Resets the current load of a Service Fabric partition to the default load for the service.</span></span>
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, options?: Models.ServiceFabricClientResetPartitionLoadOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2241">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2241">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResetPartitionLoadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_1'
    name: 'resetPartitionLoad(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2242">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2242">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2243">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2243">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_2'
    name: 'resetPartitionLoad(string, ServiceFabricClientResetPartitionLoadOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, options: ServiceFabricClientResetPartitionLoadOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2244">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2244">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
          description: <span data-ttu-id="493d4-2245">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2245">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2246">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2246">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService'
    name: 'resolveService(string, Models.ServiceFabricClientResolveServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2247">Service Fabric 서비스 파티션을 확인하여 서비스 복제본의 엔드포인트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2247">Resolve a Service Fabric service partition to get the endpoints of the service replicas.</span></span>
    syntax:
      content: 'function resolveService(serviceId: string, options?: Models.ServiceFabricClientResolveServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2248">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2248">The identity of the service.</span></span> <span data-ttu-id="493d4-2249">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2249">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2250">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2250">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2251">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2251">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResolveServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService_1'
    name: 'resolveService(string, ServiceCallback<ResolvedServicePartition>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, callback: ServiceCallback<ResolvedServicePartition>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2252">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2252">The identity of the service.</span></span> <span data-ttu-id="493d4-2253">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2253">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2254">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2254">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2255">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2255">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
          description: |
            <span data-ttu-id="493d4-2256">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2256">The callback</span></span>
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService_2'
    name: 'resolveService(string, ServiceFabricClientResolveServiceOptionalParams, ServiceCallback<ResolvedServicePartition>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, options: ServiceFabricClientResolveServiceOptionalParams, callback: ServiceCallback<ResolvedServicePartition>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2257">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2257">The identity of the service.</span></span> <span data-ttu-id="493d4-2258">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2258">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2259">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2259">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2260">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2260">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
          description: <span data-ttu-id="493d4-2261">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2261">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
          description: |
            <span data-ttu-id="493d4-2262">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2262">The callback</span></span>
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2263">클러스터에서 Service Fabric 노드에 배포 된 코드 패키지 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2263">Restarts a code package deployed on a Service Fabric node in a cluster.</span></span> <span data-ttu-id="493d4-2264">그러면 코드 패키지 프로세스가 취소되고 해당 프로세스에서 호스팅되는 모든 사용자 서비스 복제본이 다시 시작됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2264">This aborts the code package process, which will restart all the user service replicas hosted in that process.</span></span>'
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options?: Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2265">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2265">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2266">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2266">The identity of the application.</span></span> <span data-ttu-id="493d4-2267">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2267">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2268">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2268">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2269">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2269">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: <span data-ttu-id="493d4-2270">다시 시작 하기 위해 Service Fabric 노드에서 배포 된 코드 패키지를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2270">Describes the deployed code package on Service Fabric node to restart.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_1'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2271">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2271">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2272">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2272">The identity of the application.</span></span> <span data-ttu-id="493d4-2273">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2273">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2274">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2274">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2275">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2275">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: <span data-ttu-id="493d4-2276">다시 시작 하기 위해 Service Fabric 노드에서 배포 된 코드 패키지를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2276">Describes the deployed code package on Service Fabric node to restart.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2277">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2277">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_2'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, ServiceFabricClientRestartDeployedCodePackageOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options: ServiceFabricClientRestartDeployedCodePackageOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2278">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2278">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2279">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2279">The identity of the application.</span></span> <span data-ttu-id="493d4-2280">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2280">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2281">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2281">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2282">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2282">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: <span data-ttu-id="493d4-2283">다시 시작 하기 위해 Service Fabric 노드에서 배포 된 코드 패키지를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2283">Describes the deployed code package on Service Fabric node to restart.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
          description: <span data-ttu-id="493d4-2284">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2284">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2285">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2285">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode'
    name: 'restartNode(string, RestartNodeDescription, Models.ServiceFabricClientRestartNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2286">이미 시작된 Microsoft Azure Service Fabric 클러스터 노드를 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2286">Restarts a Service Fabric cluster node that is already started.</span></span>
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options?: Models.ServiceFabricClientRestartNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2287">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2287">The name of the node.</span></span>
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: <span data-ttu-id="493d4-2288">인스턴스의 노드를 다시 시작 및 fabric 프로세스의 덤프를 수행 해야 함을 나타내는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2288">The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRestartNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode_1'
    name: 'restartNode(string, RestartNodeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2289">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2289">The name of the node.</span></span>
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: <span data-ttu-id="493d4-2290">인스턴스의 노드를 다시 시작 및 fabric 프로세스의 덤프를 수행 해야 함을 나타내는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2290">The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2291">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2291">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode_2'
    name: 'restartNode(string, RestartNodeDescription, ServiceFabricClientRestartNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options: ServiceFabricClientRestartNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2292">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2292">The name of the node.</span></span>
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: <span data-ttu-id="493d4-2293">인스턴스의 노드를 다시 시작 및 fabric 프로세스의 덤프를 수행 해야 함을 나타내는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2293">The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
          description: <span data-ttu-id="493d4-2294">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2294">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2295">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2295">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica'
    name: 'restartReplica(string, string, string, Models.ServiceFabricClientRestartReplicaOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2296">노드에서 실행되는 지속된 서비스의 서비스 복제본을 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2296">Restarts a service replica of a persisted service running on a node.</span></span> <span data-ttu-id="493d4-2297">경고 ‑ 이 API가 사용될 때 수행되는 안전 검사가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2297">Warning - There are no safety checks performed when this API is used.</span></span> <span data-ttu-id="493d4-2298">이 API를 잘못 사용하면 상태 저장 서비스에 대한 가용성이 손실될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2298">Incorrect use of this API can lead to availability loss for stateful services.</span></span>
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientRestartReplicaOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2299">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2299">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2300">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2300">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2301">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2301">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRestartReplicaOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica_1'
    name: 'restartReplica(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2302">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2302">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2303">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2303">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2304">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2304">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2305">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2305">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica_2'
    name: 'restartReplica(string, string, string, ServiceFabricClientRestartReplicaOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientRestartReplicaOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2306">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2306">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2307">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2307">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="493d4-2308">복제본의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2308">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
          description: <span data-ttu-id="493d4-2309">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2309">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2310">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2310">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition'
    name: 'restorePartition(string, RestorePartitionDescription, Models.ServiceFabricClientRestorePartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2311">상태를 복원 된 상태 저장의 지정 된 백업 위치를 사용 하 여 파티션을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2311">Restores the state of a of the stateful persisted partition using the specified backup point.</span></span> <span data-ttu-id="493d4-2312">파티션을 이미 되 고 주기적으로 백업 하는 경우 다음 기본적으로 백업 지점 검색 됩니다에 대 한 백업 정책에 지정 된 저장소에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2312">In case the partition is already being periodically backed up, then by default the backup point is looked for in the storage specified in backup policy.</span></span> <span data-ttu-id="493d4-2313">본문에 복원 파티션 설명의 일부로 백업 저장소 세부 정보를 지정 하 여 동일한를 재정의할 수도 하나.</span><span class="sxs-lookup"><span data-stu-id="493d4-2313">One can also override the same by specifying the backup storage details as part of the restore partition description in body.</span></span> <span data-ttu-id="493d4-2314">복원이 시작 된 후에 GetRestoreProgress 작업을 사용 하 여 해당 진행률을 추적할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2314">Once the restore is initiated, its progress can be tracked using the GetRestoreProgress operation.</span></span>
      <span data-ttu-id="493d4-2315">이 경우 작업 시간이 초과 쿼리 매개 변수에서 큰 복원 시간 제한 값을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2315">In case, the operation times out, specify a greater restore timeout value in the query parameter.</span></span>
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options?: Models.ServiceFabricClientRestorePartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2316">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2316">The identity of the partition.</span></span>
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: <span data-ttu-id="493d4-2317">파티션을 복원 하려면 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2317">Describes the parameters to restore the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRestorePartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition_1'
    name: 'restorePartition(string, RestorePartitionDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2318">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2318">The identity of the partition.</span></span>
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: <span data-ttu-id="493d4-2319">파티션을 복원 하려면 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2319">Describes the parameters to restore the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2320">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2320">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition_2'
    name: 'restorePartition(string, RestorePartitionDescription, ServiceFabricClientRestorePartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options: ServiceFabricClientRestorePartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2321">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2321">The identity of the partition.</span></span>
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: <span data-ttu-id="493d4-2322">파티션을 복원 하려면 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2322">Describes the parameters to restore the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
          description: <span data-ttu-id="493d4-2323">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2323">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2324">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2324">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup'
    name: 'resumeApplicationBackup(string, Models.ServiceFabricClientResumeApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2325">이전에 일시 중단 된 Service Fabric 응용 프로그램에서는 동일한 경우에 현재 구성 된 백업 정책에 따라 정기적인 백업을 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2325">The previously suspended Service Fabric application resumes taking periodic backup as per the backup policy currently configured for the same.</span></span>
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientResumeApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2326">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2326">The identity of the application.</span></span> <span data-ttu-id="493d4-2327">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2327">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2328">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2328">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2329">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2329">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumeApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_1'
    name: 'resumeApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2330">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2330">The identity of the application.</span></span> <span data-ttu-id="493d4-2331">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2331">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2332">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2332">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2333">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2333">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2334">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2334">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_2'
    name: 'resumeApplicationBackup(string, ServiceFabricClientResumeApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, options: ServiceFabricClientResumeApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2335">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2335">The identity of the application.</span></span> <span data-ttu-id="493d4-2336">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2336">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2337">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2337">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2338">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2338">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
          description: <span data-ttu-id="493d4-2339">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2339">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2340">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2340">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2341">모니터링되지 않는 수동 Service Fabric 애플리케이션 업그레이드를 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2341">Resumes an unmonitored manual Service Fabric application upgrade.</span></span> <span data-ttu-id="493d4-2342">Service Fabric은 한 번에 하나의 업그레이드 도메인을 업그레이드합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2342">Service Fabric upgrades one upgrade domain at a time.</span></span> <span data-ttu-id="493d4-2343">모니터링되지 않는 수동 업그레이드의 경우 Service Fabric에서 업그레이드 도메인을 완료한 후 다음 업그레이드 도메인을 계속 진행하기 전에 이 API를 호출하도록 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2343">For unmonitored manual upgrades, after Service Fabric finishes an upgrade domain, it waits for you to call this API before proceeding to the next upgrade domain.</span></span>'
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options?: Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2344">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2344">The identity of the application.</span></span> <span data-ttu-id="493d4-2345">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2345">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2346">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2346">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2347">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2347">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: <span data-ttu-id="493d4-2348">응용 프로그램 업그레이드를 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2348">Describes the parameters for resuming an application upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2349">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2349">The identity of the application.</span></span> <span data-ttu-id="493d4-2350">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2350">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2351">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2351">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2352">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2352">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: <span data-ttu-id="493d4-2353">응용 프로그램 업그레이드를 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2353">Describes the parameters for resuming an application upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2354">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2354">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, ServiceFabricClientResumeApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options: ServiceFabricClientResumeApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2355">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2355">The identity of the application.</span></span> <span data-ttu-id="493d4-2356">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2356">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2357">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2357">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2358">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2358">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: <span data-ttu-id="493d4-2359">응용 프로그램 업그레이드를 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2359">Describes the parameters for resuming an application upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2360">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2360">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2361">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2361">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, Models.ServiceFabricClientResumeClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2362">해당되는 경우 클러스터 코드 또는 구성 업그레이드를 다음 업그레이드 도메인으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2362">Make the cluster code or configuration upgrade move on to the next upgrade domain if appropriate.</span></span>
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options?: Models.ServiceFabricClientResumeClusterUpgradeOptionalParams)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2363">클러스터 업그레이드 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2363">Describes the parameters for resuming a cluster upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumeClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_1'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2364">클러스터 업그레이드 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2364">Describes the parameters for resuming a cluster upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2365">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2365">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_2'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, ServiceFabricClientResumeClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options: ServiceFabricClientResumeClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2366">클러스터 업그레이드 다시 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2366">Describes the parameters for resuming a cluster upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2367">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2367">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2368">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2368">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup'
    name: 'resumePartitionBackup(string, Models.ServiceFabricClientResumePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2369">이전에 일시 중단 된 파티션을 다시 동일한 현재 구성 된 백업 정책에 따라 정기적인 백업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2369">The previously suspended partition resumes taking periodic backup as per the backup policy currently configured for the same.</span></span>
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, options?: Models.ServiceFabricClientResumePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2370">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2370">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_1'
    name: 'resumePartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2371">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2371">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2372">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2372">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_2'
    name: 'resumePartitionBackup(string, ServiceFabricClientResumePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, options: ServiceFabricClientResumePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2373">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2373">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
          description: <span data-ttu-id="493d4-2374">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2374">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2375">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2375">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup'
    name: 'resumeServiceBackup(string, Models.ServiceFabricClientResumeServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2376">이전에 일시 중단 된 Service Fabric 서비스에서는 동일한 경우에 현재 구성 된 백업 정책에 따라 정기적인 백업 수행을 재개 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2376">The previously suspended Service Fabric service resumes taking periodic backup as per the backup policy currently configured for the same.</span></span>
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, options?: Models.ServiceFabricClientResumeServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2377">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2377">The identity of the service.</span></span> <span data-ttu-id="493d4-2378">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2378">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2379">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2379">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2380">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2380">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumeServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_1'
    name: 'resumeServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2381">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2381">The identity of the service.</span></span> <span data-ttu-id="493d4-2382">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2382">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2383">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2383">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2384">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2384">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2385">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2385">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_2'
    name: 'resumeServiceBackup(string, ServiceFabricClientResumeServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, options: ServiceFabricClientResumeServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2386">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2386">The identity of the service.</span></span> <span data-ttu-id="493d4-2387">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2387">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2388">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2388">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2389">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2389">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
          description: <span data-ttu-id="493d4-2390">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2390">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2391">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2391">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade'
    name: 'rollbackApplicationUpgrade(string, Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2392">이전 버전으로 현재 애플리케이션 업그레이드의 롤백을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2392">Starts rolling back the current application upgrade to the previous version.</span></span> <span data-ttu-id="493d4-2393">이 API는 새 버전으로 롤포워드되는 현재 진행 중인 업그레이드를 롤백하는 데만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2393">This API can only be used to roll back the current in-progress upgrade that is rolling forward to new version.</span></span> <span data-ttu-id="493d4-2394">애플리케이션이 현재 업그레이드 중이 아닌 경우 StartApplicationUpgrade API를 사용하여 이전 버전으로 롤백을 포함하여 원하는 버전으로 업그레이드합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2394">If the application is not currently being upgraded use StartApplicationUpgrade API to upgrade it to desired version, including rolling back to a previous version.</span></span>'
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, options?: Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2395">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2395">The identity of the application.</span></span> <span data-ttu-id="493d4-2396">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2396">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2397">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2397">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2398">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2398">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1'
    name: 'rollbackApplicationUpgrade(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2399">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2399">The identity of the application.</span></span> <span data-ttu-id="493d4-2400">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2400">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2401">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2401">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2402">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2402">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2403">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2403">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2'
    name: 'rollbackApplicationUpgrade(string, ServiceFabricClientRollbackApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, options: ServiceFabricClientRollbackApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2404">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2404">The identity of the application.</span></span> <span data-ttu-id="493d4-2405">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2405">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2406">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2406">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2407">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2407">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2408">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2408">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2409">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2409">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade'
    name: rollbackClusterUpgrade(Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2410">Service Fabric 클러스터의 코드 또는 구성 업그레이드를 롤백합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2410">Roll back the code or configuration upgrade of a Service Fabric cluster.</span></span>
    syntax:
      content: 'function rollbackClusterUpgrade(options?: Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1'
    name: rollbackClusterUpgrade(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2411">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2411">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2'
    name: 'rollbackClusterUpgrade(ServiceFabricClientRollbackClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(options: ServiceFabricClientRollbackClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2412">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2412">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2413">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2413">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2414">제공 된 OperationSpec를 사용 하 여 채워지는 HTTP 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2414">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="493d4-2415">HTTP 요청의 템플릿 값에서 채워집니다는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2415">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="493d4-2416">Http 요청을 채우는 데 사용할 OperationSpec 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2416">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="493d4-2417">응답을 받을 때 호출할 콜백.</span><span class="sxs-lookup"><span data-stu-id="493d4-2417">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2418">제공 된 http 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2418">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.constructor'
    name: ServiceFabricClient(Models.ServiceFabricClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2419">ServiceFabricClient 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2419">Initializes a new instance of the ServiceFabricClient class.</span></span>
    syntax:
      content: 'new ServiceFabricClient(options?: Models.ServiceFabricClientOptions)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientOptions
          description: ''
          optional: true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2420">Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2420">Update the service state of Service Fabric Upgrade Orchestration Service.</span></span> <span data-ttu-id="493d4-2421">이 API 지원을 위해 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2421">This API is internally used for support purposes.</span></span>
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options?: Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: <span data-ttu-id="493d4-2422">Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2422">Service state of Service Fabric Upgrade Orchestration Service.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_1'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, callback: ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: <span data-ttu-id="493d4-2423">Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2423">Service state of Service Fabric Upgrade Orchestration Service.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
          description: |
            <span data-ttu-id="493d4-2424">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2424">The callback</span></span>
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_2'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams, ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams, callback: ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: <span data-ttu-id="493d4-2425">Service Fabric 업그레이드 오케스트레이션 서비스의 서비스 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2425">Service state of Service Fabric Upgrade Orchestration Service.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
          description: <span data-ttu-id="493d4-2426">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2426">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
          description: |
            <span data-ttu-id="493d4-2427">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2427">The callback</span></span>
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, Models.ServiceFabricClientStartApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2428">제공된 애플리케이션 업그레이드 매개 변수의 유효성을 검사하고 매개 변수가 유효한 경우 애플리케이션 업그레이드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2428">Validates the supplied application upgrade parameters and starts upgrading the application if the parameters are valid.</span></span>
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options?: Models.ServiceFabricClientStartApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2429">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2429">The identity of the application.</span></span> <span data-ttu-id="493d4-2430">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2430">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2431">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2431">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2432">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2432">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: <span data-ttu-id="493d4-2433">응용 프로그램 업그레이드 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2433">Parameters for an application upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_1'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2434">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2434">The identity of the application.</span></span> <span data-ttu-id="493d4-2435">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2435">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2436">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2436">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2437">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2437">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: <span data-ttu-id="493d4-2438">응용 프로그램 업그레이드 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2438">Parameters for an application upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2439">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2439">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_2'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, ServiceFabricClientStartApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options: ServiceFabricClientStartApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2440">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2440">The identity of the application.</span></span> <span data-ttu-id="493d4-2441">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2441">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2442">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2442">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2443">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2443">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: <span data-ttu-id="493d4-2444">응용 프로그램 업그레이드 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2444">Parameters for an application upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2445">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2445">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2446">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2446">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos'
    name: 'startChaos(ChaosParameters, Models.ServiceFabricClientStartChaosOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2447">Chaos가 아직 클러스터에 실행되고 있지 않다면 Chaos 매개 변수에 전달된 값으로 Chaos를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2447">If Chaos is not already running in the cluster, it starts Chaos with the passed in Chaos parameters.</span></span>
      <span data-ttu-id="493d4-2448">이 호출을 수행할 때 Chaos가 이미 실행 중이면 호출이 FABRIC_E_CHAOS_ALREADY_RUNNING 오류 코드로 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2448">If Chaos is already running when this call is made, the call fails with the error code FABRIC_E_CHAOS_ALREADY_RUNNING.</span></span>
      <span data-ttu-id="493d4-2449">문서를 참조 [Induce Service Fabric 클러스터에서 비정상 상황 제어](https://docs.microsoft.com/azure/service-fabric/service-fabric-controlled-chaos) 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2449">Refer to the article [Induce controlled Chaos in Service Fabric clusters](https://docs.microsoft.com/azure/service-fabric/service-fabric-controlled-chaos) for more details.</span></span>
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, options?: Models.ServiceFabricClientStartChaosOptionalParams)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: <span data-ttu-id="493d4-2450">비정상 상황 실행을 구성 하는 모든 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2450">Describes all the parameters to configure a Chaos run.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos_1'
    name: 'startChaos(ChaosParameters, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: <span data-ttu-id="493d4-2451">비정상 상황 실행을 구성 하는 모든 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2451">Describes all the parameters to configure a Chaos run.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2452">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2452">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos_2'
    name: 'startChaos(ChaosParameters, ServiceFabricClientStartChaosOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, options: ServiceFabricClientStartChaosOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: <span data-ttu-id="493d4-2453">비정상 상황 실행을 구성 하는 모든 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2453">Describes all the parameters to configure a Chaos run.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
          description: <span data-ttu-id="493d4-2454">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2454">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2455">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2455">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2456">제공된 구성 업그레이드 매개 변수의 유효성을 검사하고 매개 변수가 유효한 경우 클러스터 구성 업그레이드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2456">Validate the supplied configuration upgrade parameters and start upgrading the cluster configuration if the parameters are valid.</span></span>
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options?: Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: <span data-ttu-id="493d4-2457">독립 실행형 클러스터 구성 업그레이드에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2457">Parameters for a standalone cluster configuration upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: <span data-ttu-id="493d4-2458">독립 실행형 클러스터 구성 업그레이드에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2458">Parameters for a standalone cluster configuration upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2459">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2459">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: <span data-ttu-id="493d4-2460">독립 실행형 클러스터 구성 업그레이드에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2460">Parameters for a standalone cluster configuration upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2461">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2461">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2462">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2462">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, Models.ServiceFabricClientStartClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2463">제공된 업그레이드 매개 변수의 유효성을 검사하고 매개 변수가 유효한 경우 Service Fabric 클러스터의 코드 또는 구성 버전 업그레이드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2463">Validate the supplied upgrade parameters and start upgrading the code or configuration version of a Service Fabric cluster if the parameters are valid.</span></span>
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options?: Models.ServiceFabricClientStartClusterUpgradeOptionalParams)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2464">클러스터 업그레이드를 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2464">Describes the parameters for starting a cluster upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_1'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2465">클러스터 업그레이드를 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2465">Describes the parameters for starting a cluster upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2466">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2466">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_2'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, ServiceFabricClientStartClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options: ServiceFabricClientStartClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2467">클러스터 업그레이드를 시작 하는 것에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2467">Describes the parameters for starting a cluster upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2468">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2468">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2469">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2469">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2470">매개 변수가 유효한 경우 제공된 업그레이드 매개 변수의 유효성을 검사하고 배포 업그레이드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2470">Validates the supplied upgrade parameters and starts upgrading the deployment if the parameters are valid.</span></span>
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options?: Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2471">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2471">The identity of the deployment.</span></span>
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: <span data-ttu-id="493d4-2472">업그레이드에 대 한 매개 변수는 배포를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2472">Parameters for upgrading compose deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2473">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2473">The identity of the deployment.</span></span>
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: <span data-ttu-id="493d4-2474">업그레이드에 대 한 매개 변수는 배포를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2474">Parameters for upgrading compose deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2475">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2475">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2476">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2476">The identity of the deployment.</span></span>
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: <span data-ttu-id="493d4-2477">업그레이드에 대 한 매개 변수는 배포를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2477">Parameters for upgrading compose deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2478">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2478">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2479">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2479">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, Models.ServiceFabricClientStartDataLossOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2480">이 API는 지정한 파티션에 대한 데이터 손실을 유도합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2480">This API will induce data loss for the specified partition.</span></span> <span data-ttu-id="493d4-2481">파티션의 OnDataLoss API에 대한 호출을 트리거합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2481">It will trigger a call to the OnDataLoss API of the partition.</span></span>
      <span data-ttu-id="493d4-2482">실제 데이터 손실은 지정된 DataLossMode에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2482">Actual data loss will depend on the specified DataLossMode.</span></span>
      - <span data-ttu-id="493d4-2483">PartialDataLoss - 복제본의 쿼럼만 제거되고 파티션에 대한 OnDataLoss가 트리거되지만 실제 데이터 손실은 진행 중인 복제의 존재 여부에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2483">PartialDataLoss - Only a quorum of replicas are removed and OnDataLoss is triggered for the partition but actual data loss depends on the presence of in-flight replication.</span></span>
      - <span data-ttu-id="493d4-2484">FullDataLoss - 모든 복제본이 제거되므로 모든 데이터가 손실되고 OnDataLoss가 트리거됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2484">FullDataLoss - All replicas are removed hence all data is lost and OnDataLoss is triggered.</span></span>

      <span data-ttu-id="493d4-2485">이 API는 대상으로 상태 저장 서비스로만 호출되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2485">This API should only be called with a stateful service as the target.</span></span>

      <span data-ttu-id="493d4-2486">시스템 서비스를 대상으로 이 API를 호출하는 것은 권장되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2486">Calling this API with a system service as the target is not advised.</span></span>

      <span data-ttu-id="493d4-2487">참고:  이 API가 호출되면 취소할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2487">Note:  Once this API has been called, it cannot be reversed.</span></span> <span data-ttu-id="493d4-2488">CancelOperation을 호출하면 실행을 중지하고 내부 시스템 상태를 정리합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2488">Calling CancelOperation will only stop execution and clean up internal system state.</span></span>
      <span data-ttu-id="493d4-2489">명령이 데이터 손실을 충분히 진행시킨 경우 데이터를 복원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2489">It will not restore data if the command has progressed far enough to cause data loss.</span></span>

      <span data-ttu-id="493d4-2490">동일한 OperationId로 GetDataLossProgress API를 호출하여 이 API로 시작된 작업에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2490">Call the GetDataLossProgress API with the same OperationId to return information on the operation started with this API.</span></span>
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, options?: Models.ServiceFabricClientStartDataLossOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2491">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2491">The identity of the service.</span></span> <span data-ttu-id="493d4-2492">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2492">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2493">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2493">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2494">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2494">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2495">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2495">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2496">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2496">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2497">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2497">This is passed into the corresponding GetProgress API</span></span>
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '<span data-ttu-id="493d4-2498">이 열거형은 유도한 데이터 손실의 유형을 나타내도록 StartDataLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2498">This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.</span></span> <span data-ttu-id="493d4-2499">가능한 값은 다음과 같습니다. '' Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span><span class="sxs-lookup"><span data-stu-id="493d4-2499">Possible values include: ''Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientStartDataLossOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss_1'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2500">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2500">The identity of the service.</span></span> <span data-ttu-id="493d4-2501">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2501">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2502">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2502">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2503">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2503">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2504">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2504">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2505">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2505">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2506">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2506">This is passed into the corresponding GetProgress API</span></span>
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '<span data-ttu-id="493d4-2507">이 열거형은 유도한 데이터 손실의 유형을 나타내도록 StartDataLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2507">This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.</span></span> <span data-ttu-id="493d4-2508">가능한 값은 다음과 같습니다. '' Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span><span class="sxs-lookup"><span data-stu-id="493d4-2508">Possible values include: ''Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2509">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2509">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss_2'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, ServiceFabricClientStartDataLossOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, options: ServiceFabricClientStartDataLossOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2510">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2510">The identity of the service.</span></span> <span data-ttu-id="493d4-2511">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2511">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2512">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2512">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2513">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2513">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2514">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2514">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2515">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2515">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2516">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2516">This is passed into the corresponding GetProgress API</span></span>
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '<span data-ttu-id="493d4-2517">이 열거형은 유도한 데이터 손실의 유형을 나타내도록 StartDataLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2517">This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.</span></span> <span data-ttu-id="493d4-2518">가능한 값은 다음과 같습니다. '' Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span><span class="sxs-lookup"><span data-stu-id="493d4-2518">Possible values include: ''Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
          description: <span data-ttu-id="493d4-2519">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2519">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2520">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2520">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, Models.ServiceFabricClientStartNodeTransitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2521">클러스터 노드를 시작하거나 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2521">Starts or stops a cluster node.</span></span>  <span data-ttu-id="493d4-2522">클러스터 노드는 프로세스이지 OS 인스턴스 그 자체가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2522">A cluster node is a process, not the OS instance itself.</span></span>  <span data-ttu-id="493d4-2523">노드를 시작하려면 NodeTransitionType 매개 변수에 대한 "Start"을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2523">To start a node, pass in "Start" for the NodeTransitionType parameter.</span></span>
      <span data-ttu-id="493d4-2524">노드를 중지하려면 NodeTransitionType 매개 변수에 대한 "Stop"을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2524">To stop a node, pass in "Stop" for the NodeTransitionType parameter.</span></span>  <span data-ttu-id="493d4-2525">API가 아직 전환을 마치지 못한 노드를 반환할 때 이 API가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2525">This API starts the operation - when the API returns the node may not have finished transitioning yet.</span></span>
      <span data-ttu-id="493d4-2526">작업의 진행률을 가져오려면 동일한 OperationId로 GetNodeTransitionProgress를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2526">Call GetNodeTransitionProgress with the same OperationId to get the progress of the operation.</span></span>
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, options?: Models.ServiceFabricClientStartNodeTransitionOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2527">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2527">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2528">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2528">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2529">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2529">This is passed into the corresponding GetProgress API</span></span>
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '<span data-ttu-id="493d4-2530">수행할 전환의 유형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2530">Indicates the type of transition to perform.</span></span>  <span data-ttu-id="493d4-2531">NodeTransitionType.Start는 중지된 노드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2531">NodeTransitionType.Start will start a stopped node.</span></span>  <span data-ttu-id="493d4-2532">NodeTransitionType.Stop은 작동하는 노드를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2532">NodeTransitionType.Stop will stop a node that is up.</span></span> <span data-ttu-id="493d4-2533">가능한 값은 다음과 같습니다. ''Invalid'', '' Start'', ''Stop''</span><span class="sxs-lookup"><span data-stu-id="493d4-2533">Possible values include: ''Invalid'', ''Start'', ''Stop''</span></span>'
        - id: nodeInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-2534">대상 노드의 노드 인스턴스 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2534">The node instance ID of the target node.</span></span>  <span data-ttu-id="493d4-2535">이것은 GetNodeInfo API를 통해 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2535">This can be determined through GetNodeInfo API.</span></span>
        - id: stopDurationInSeconds
          type:
            - number
          description: '<span data-ttu-id="493d4-2536">노드가 중지된 채로 유지되는 기간(초).</span><span class="sxs-lookup"><span data-stu-id="493d4-2536">The duration, in seconds, to keep the node stopped.</span></span>  <span data-ttu-id="493d4-2537">최솟값은 600, 최댓값은 14400입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2537">The minimum value is 600, the maximum is 14400.</span></span>  <span data-ttu-id="493d4-2538">이 시간이 만료되면 노드가 자동으로 다시 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2538">After this time expires, the node will automatically come back up.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientStartNodeTransitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition_1'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2539">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2539">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2540">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2540">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2541">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2541">This is passed into the corresponding GetProgress API</span></span>
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '<span data-ttu-id="493d4-2542">수행할 전환의 유형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2542">Indicates the type of transition to perform.</span></span>  <span data-ttu-id="493d4-2543">NodeTransitionType.Start는 중지된 노드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2543">NodeTransitionType.Start will start a stopped node.</span></span>  <span data-ttu-id="493d4-2544">NodeTransitionType.Stop은 작동하는 노드를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2544">NodeTransitionType.Stop will stop a node that is up.</span></span> <span data-ttu-id="493d4-2545">가능한 값은 다음과 같습니다. ''Invalid'', '' Start'', ''Stop''</span><span class="sxs-lookup"><span data-stu-id="493d4-2545">Possible values include: ''Invalid'', ''Start'', ''Stop''</span></span>'
        - id: nodeInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-2546">대상 노드의 노드 인스턴스 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2546">The node instance ID of the target node.</span></span>  <span data-ttu-id="493d4-2547">이것은 GetNodeInfo API를 통해 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2547">This can be determined through GetNodeInfo API.</span></span>
        - id: stopDurationInSeconds
          type:
            - number
          description: '<span data-ttu-id="493d4-2548">노드가 중지된 채로 유지되는 기간(초).</span><span class="sxs-lookup"><span data-stu-id="493d4-2548">The duration, in seconds, to keep the node stopped.</span></span>  <span data-ttu-id="493d4-2549">최솟값은 600, 최댓값은 14400입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2549">The minimum value is 600, the maximum is 14400.</span></span>  <span data-ttu-id="493d4-2550">이 시간이 만료되면 노드가 자동으로 다시 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2550">After this time expires, the node will automatically come back up.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2551">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2551">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition_2'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, ServiceFabricClientStartNodeTransitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, options: ServiceFabricClientStartNodeTransitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="493d4-2552">노드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2552">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2553">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2553">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2554">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2554">This is passed into the corresponding GetProgress API</span></span>
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '<span data-ttu-id="493d4-2555">수행할 전환의 유형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2555">Indicates the type of transition to perform.</span></span>  <span data-ttu-id="493d4-2556">NodeTransitionType.Start는 중지된 노드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2556">NodeTransitionType.Start will start a stopped node.</span></span>  <span data-ttu-id="493d4-2557">NodeTransitionType.Stop은 작동하는 노드를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2557">NodeTransitionType.Stop will stop a node that is up.</span></span> <span data-ttu-id="493d4-2558">가능한 값은 다음과 같습니다. ''Invalid'', '' Start'', ''Stop''</span><span class="sxs-lookup"><span data-stu-id="493d4-2558">Possible values include: ''Invalid'', ''Start'', ''Stop''</span></span>'
        - id: nodeInstanceId
          type:
            - string
          description: <span data-ttu-id="493d4-2559">대상 노드의 노드 인스턴스 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2559">The node instance ID of the target node.</span></span>  <span data-ttu-id="493d4-2560">이것은 GetNodeInfo API를 통해 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2560">This can be determined through GetNodeInfo API.</span></span>
        - id: stopDurationInSeconds
          type:
            - number
          description: '<span data-ttu-id="493d4-2561">노드가 중지된 채로 유지되는 기간(초).</span><span class="sxs-lookup"><span data-stu-id="493d4-2561">The duration, in seconds, to keep the node stopped.</span></span>  <span data-ttu-id="493d4-2562">최솟값은 600, 최댓값은 14400입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2562">The minimum value is 600, the maximum is 14400.</span></span>  <span data-ttu-id="493d4-2563">이 시간이 만료되면 노드가 자동으로 다시 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2563">After this time expires, the node will automatically come back up.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
          description: <span data-ttu-id="493d4-2564">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2564">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2565">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2565">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, Models.ServiceFabricClientStartPartitionRestartOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2566">이 API는 장애 조치를 테스트하는 데 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2566">This API is useful for testing failover.</span></span>
      <span data-ttu-id="493d4-2567">상태 비저장 서비스 파티션을 대상으로 사용하는 경우, RestartPartitionMode는 AllReplicasOrInstances이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2567">If used to target a stateless service partition, RestartPartitionMode must be AllReplicasOrInstances.</span></span>

      <span data-ttu-id="493d4-2568">진행률을 가져오려면 동일한 OperationId를 사용하여 GetPartitionRestartProgress API를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2568">Call the GetPartitionRestartProgress API using the same OperationId to get the progress.</span></span>
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, options?: Models.ServiceFabricClientStartPartitionRestartOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2569">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2569">The identity of the service.</span></span> <span data-ttu-id="493d4-2570">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2570">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2571">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2571">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2572">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2572">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2573">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2573">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2574">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2574">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2575">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2575">This is passed into the corresponding GetProgress API</span></span>
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '<span data-ttu-id="493d4-2576">다시 시작하는 파티션을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2576">Describe which partitions to restart.</span></span> <span data-ttu-id="493d4-2577">가능한 값은 다음과 같습니다. ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span><span class="sxs-lookup"><span data-stu-id="493d4-2577">Possible values include: ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientStartPartitionRestartOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_1'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2578">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2578">The identity of the service.</span></span> <span data-ttu-id="493d4-2579">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2579">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2580">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2580">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2581">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2581">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2582">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2582">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2583">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2583">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2584">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2584">This is passed into the corresponding GetProgress API</span></span>
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '<span data-ttu-id="493d4-2585">다시 시작하는 파티션을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2585">Describe which partitions to restart.</span></span> <span data-ttu-id="493d4-2586">가능한 값은 다음과 같습니다. ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span><span class="sxs-lookup"><span data-stu-id="493d4-2586">Possible values include: ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2587">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2587">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_2'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, ServiceFabricClientStartPartitionRestartOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, options: ServiceFabricClientStartPartitionRestartOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2588">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2588">The identity of the service.</span></span> <span data-ttu-id="493d4-2589">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2589">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2590">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2590">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2591">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2591">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2592">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2592">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2593">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2593">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2594">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2594">This is passed into the corresponding GetProgress API</span></span>
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '<span data-ttu-id="493d4-2595">다시 시작하는 파티션을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2595">Describe which partitions to restart.</span></span> <span data-ttu-id="493d4-2596">가능한 값은 다음과 같습니다. ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span><span class="sxs-lookup"><span data-stu-id="493d4-2596">Possible values include: ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
          description: <span data-ttu-id="493d4-2597">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2597">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2598">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2598">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, Models.ServiceFabricClientStartQuorumLossOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2599">이 API는 서비스에서 임시 쿼럼 손실의 경우에 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2599">This API is useful for a temporary quorum loss situation on your service.</span></span>
      <span data-ttu-id="493d4-2600">동일한 OperationId로 GetQuorumLossProgress API를 호출하여 이 API로 시작된 작업에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2600">Call the GetQuorumLossProgress API with the same OperationId to return information on the operation started with this API.</span></span>

      <span data-ttu-id="493d4-2601">상태 저장이 지속된(HasPersistedState==true) 서비스에서만 호출될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2601">This can only be called on stateful persisted (HasPersistedState==true) services.</span></span>  <span data-ttu-id="493d4-2602">상태 비저장 서비스 또는 상태 저장 메모리 내 서비스에서 이 API를 사용하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="493d4-2602">Do not use this API on stateless services or stateful in-memory only services.</span></span>
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, options?: Models.ServiceFabricClientStartQuorumLossOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2603">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2603">The identity of the service.</span></span> <span data-ttu-id="493d4-2604">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2604">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2605">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2605">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2606">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2606">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2607">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2607">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2608">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2608">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2609">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2609">This is passed into the corresponding GetProgress API</span></span>
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '<span data-ttu-id="493d4-2610">이 열거형은 유도한 쿼럼 손실의 유형을 나타내도록 StartQuorumLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2610">This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.</span></span> <span data-ttu-id="493d4-2611">가능한 값은 다음과 같습니다. '' Invalid'', ''QuorumReplicas'', ''AllReplicas''</span><span class="sxs-lookup"><span data-stu-id="493d4-2611">Possible values include: ''Invalid'', ''QuorumReplicas'', ''AllReplicas''</span></span>'
        - id: quorumLossDuration
          type:
            - number
          description: <span data-ttu-id="493d4-2612">파티션이 쿼럼 손실에 보관되는 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2612">The amount of time for which the partition will be kept in quorum loss.</span></span>  <span data-ttu-id="493d4-2613">초 단위로 지정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2613">This must be specified in seconds.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartQuorumLossOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_1'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2614">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2614">The identity of the service.</span></span> <span data-ttu-id="493d4-2615">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2615">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2616">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2616">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2617">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2617">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2618">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2618">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2619">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2619">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2620">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2620">This is passed into the corresponding GetProgress API</span></span>
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '<span data-ttu-id="493d4-2621">이 열거형은 유도한 쿼럼 손실의 유형을 나타내도록 StartQuorumLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2621">This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.</span></span> <span data-ttu-id="493d4-2622">가능한 값은 다음과 같습니다. '' Invalid'', ''QuorumReplicas'', ''AllReplicas''</span><span class="sxs-lookup"><span data-stu-id="493d4-2622">Possible values include: ''Invalid'', ''QuorumReplicas'', ''AllReplicas''</span></span>'
        - id: quorumLossDuration
          type:
            - number
          description: <span data-ttu-id="493d4-2623">파티션이 쿼럼 손실에 보관되는 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2623">The amount of time for which the partition will be kept in quorum loss.</span></span>  <span data-ttu-id="493d4-2624">초 단위로 지정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2624">This must be specified in seconds.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2625">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2625">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_2'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, ServiceFabricClientStartQuorumLossOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, options: ServiceFabricClientStartQuorumLossOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2626">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2626">The identity of the service.</span></span> <span data-ttu-id="493d4-2627">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2627">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2628">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2628">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2629">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2629">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2630">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2630">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="493d4-2631">이 API의 호출을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2631">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="493d4-2632">이 값은 해당 GetProgress API에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2632">This is passed into the corresponding GetProgress API</span></span>
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '<span data-ttu-id="493d4-2633">이 열거형은 유도한 쿼럼 손실의 유형을 나타내도록 StartQuorumLoss API에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2633">This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.</span></span> <span data-ttu-id="493d4-2634">가능한 값은 다음과 같습니다. '' Invalid'', ''QuorumReplicas'', ''AllReplicas''</span><span class="sxs-lookup"><span data-stu-id="493d4-2634">Possible values include: ''Invalid'', ''QuorumReplicas'', ''AllReplicas''</span></span>'
        - id: quorumLossDuration
          type:
            - number
          description: <span data-ttu-id="493d4-2635">파티션이 쿼럼 손실에 보관되는 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2635">The amount of time for which the partition will be kept in quorum loss.</span></span>  <span data-ttu-id="493d4-2636">초 단위로 지정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2636">This must be specified in seconds.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
          description: <span data-ttu-id="493d4-2637">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2637">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2638">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2638">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade'
    name: 'startRollbackComposeDeploymentUpgrade(string, Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2639">Service Fabric 작성 배포 업그레이드를 롤백합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2639">Rollback a service fabric compose deployment upgrade.</span></span>
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, options?: Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2640">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2640">The identity of the deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_1'
    name: 'startRollbackComposeDeploymentUpgrade(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2641">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2641">The identity of the deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2642">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2642">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_2'
    name: 'startRollbackComposeDeploymentUpgrade(string, ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, options: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="493d4-2643">배포의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2643">The identity of the deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2644">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2644">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2645">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2645">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos'
    name: stopChaos(Models.ServiceFabricClientStopChaosOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2646">새로운 오류를 실행할 수 없도록 Chaos를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2646">Stops Chaos from executing new faults.</span></span> <span data-ttu-id="493d4-2647">진행 중인 오류는 완료될 때까지 계속해서 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2647">In-flight faults will continue to execute until they are complete.</span></span> <span data-ttu-id="493d4-2648">현재 Chaos Schedule은 중지된 상태로 전환됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2648">The current Chaos Schedule is put into a stopped state.</span></span>
      <span data-ttu-id="493d4-2649">일정이 중지되면 중지된 상태로 유지되며 Chaos의 Chaos Schedule 새 실행에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2649">Once a schedule is stopped, it will stay in the stopped state and not be used to Chaos Schedule new runs of Chaos.</span></span> <span data-ttu-id="493d4-2650">일정을 다시 시작하기 위해 새 Chaos Schedule을 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2650">A new Chaos Schedule must be set in order to resume scheduling.</span></span>
    syntax:
      content: 'function stopChaos(options?: Models.ServiceFabricClientStopChaosOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientStopChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos_1'
    name: stopChaos(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2651">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2651">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos_2'
    name: 'stopChaos(ServiceFabricClientStopChaosOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(options: ServiceFabricClientStopChaosOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
          description: <span data-ttu-id="493d4-2652">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2652">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2653">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2653">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, Models.ServiceFabricClientSubmitPropertyBatchOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2654">속성 작업의 일괄 처리를 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2654">Submits a batch of property operations.</span></span> <span data-ttu-id="493d4-2655">전체 또는의 모든 작업이 커밋됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2655">Either all or none of the operations will be committed.</span></span>
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options?: Models.ServiceFabricClientSubmitPropertyBatchOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-2656">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2656">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: <span data-ttu-id="493d4-2657">전송할 속성 일괄 처리 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2657">Describes the property batch operations to be submitted.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSubmitPropertyBatchOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_1'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, ServiceCallback<Models.PropertyBatchInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, callback: ServiceCallback<Models.PropertyBatchInfoUnion>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-2658">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2658">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: <span data-ttu-id="493d4-2659">전송할 속성 일괄 처리 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2659">Describes the property batch operations to be submitted.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.PropertyBatchInfoUnion>
          description: |
            <span data-ttu-id="493d4-2660">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2660">The callback</span></span>
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_2'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, ServiceFabricClientSubmitPropertyBatchOptionalParams, ServiceCallback<Models.PropertyBatchInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options: ServiceFabricClientSubmitPropertyBatchOptionalParams, callback: ServiceCallback<Models.PropertyBatchInfoUnion>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="493d4-2661">Service Fabric 이름 없이 '' fabric:'' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2661">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: <span data-ttu-id="493d4-2662">전송할 속성 일괄 처리 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2662">Describes the property batch operations to be submitted.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
          description: <span data-ttu-id="493d4-2663">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2663">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.PropertyBatchInfoUnion>
          description: |
            <span data-ttu-id="493d4-2664">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2664">The callback</span></span>
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup'
    name: 'suspendApplicationBackup(string, Models.ServiceFabricClientSuspendApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2665">정기 백업을 수행 하도록 구성 된 응용 프로그램 백업을 추가로 다시 재개 될 때까지 대 한 일시 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2665">The application which is configured to take periodic backups, is suspended for taking further backups till it is resumed again.</span></span> <span data-ttu-id="493d4-2666">이 작업 전체 응용 프로그램 계층에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2666">This operation applies to the entire application's hierarchy.</span></span>
      <span data-ttu-id="493d4-2667">즉, 모든 서비스 및 응용 프로그램 파티션이 백업에 대 한 일시 중단 이제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2667">It means all the services and partitions under this application are now suspended for backup.</span></span>
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientSuspendApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2668">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2668">The identity of the application.</span></span> <span data-ttu-id="493d4-2669">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2669">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2670">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2670">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2671">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2671">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSuspendApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_1'
    name: 'suspendApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2672">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2672">The identity of the application.</span></span> <span data-ttu-id="493d4-2673">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2673">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2674">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2674">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2675">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2675">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2676">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2676">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_2'
    name: 'suspendApplicationBackup(string, ServiceFabricClientSuspendApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, options: ServiceFabricClientSuspendApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2677">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2677">The identity of the application.</span></span> <span data-ttu-id="493d4-2678">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2678">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2679">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2679">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2680">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2680">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
          description: <span data-ttu-id="493d4-2681">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2681">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2682">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2682">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup'
    name: 'suspendPartitionBackup(string, Models.ServiceFabricClientSuspendPartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2683">정기 백업을 수행 하도록 구성 된 파티션은 다시 재개 될 때까지 백업을 추가로 수행 하는 것에 대 한 일시 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2683">The partition which is configured to take periodic backups, is suspended for taking further backups till it is resumed again.</span></span>'
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, options?: Models.ServiceFabricClientSuspendPartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2684">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2684">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSuspendPartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_1'
    name: 'suspendPartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2685">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2685">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2686">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2686">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_2'
    name: 'suspendPartitionBackup(string, ServiceFabricClientSuspendPartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, options: ServiceFabricClientSuspendPartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="493d4-2687">파티션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2687">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
          description: <span data-ttu-id="493d4-2688">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2688">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2689">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2689">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup'
    name: 'suspendServiceBackup(string, Models.ServiceFabricClientSuspendServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2690">정기 백업을 수행 하도록 구성 된 서비스에 백업을 추가 다시 재개 될 때까지 일시 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2690">The service which is configured to take periodic backups, is suspended for taking further backups till it is resumed again.</span></span> <span data-ttu-id="493d4-2691">이 작업 전체 서비스의 계층 구조에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2691">This operation applies to the entire service''s hierarchy.</span></span> <span data-ttu-id="493d4-2692">즉, 이제이 서비스는 모든 파티션이 백업에 대 한 일시 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2692">It means all the partitions under this service are now suspended for backup.</span></span>'
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, options?: Models.ServiceFabricClientSuspendServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2693">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2693">The identity of the service.</span></span> <span data-ttu-id="493d4-2694">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2694">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2695">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2695">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2696">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2696">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSuspendServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_1'
    name: 'suspendServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2697">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2697">The identity of the service.</span></span> <span data-ttu-id="493d4-2698">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2698">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2699">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2699">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2700">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2700">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2701">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2701">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_2'
    name: 'suspendServiceBackup(string, ServiceFabricClientSuspendServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, options: ServiceFabricClientSuspendServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2702">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2702">The identity of the service.</span></span> <span data-ttu-id="493d4-2703">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2703">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2704">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2704">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2705">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2705">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
          description: <span data-ttu-id="493d4-2706">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2706">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2707">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2707">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.toggleVerboseServicePlacementHealthReporting'
    name: 'toggleVerboseServicePlacementHealthReporting(boolean, Models.ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2708">True 이면 자세한 상태 보고서의 자세한 정도 설정 된 경우 복제본을 배치 하거나 삭제할 수 없는 경우 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2708">If verbosity is set to true, then detailed health reports will be generated when replicas cannot be placed or dropped.</span></span>
      <span data-ttu-id="493d4-2709">복제본을 배치 하거나 삭제할 수 없는 경우 상태 보고서를 생성한 다음의 자세한 정도를 false로 설정 된 경우</span><span class="sxs-lookup"><span data-stu-id="493d4-2709">If verbosity is set to false, then no health reports will be generated when replicas cannot be placed or dropped.</span></span>
    syntax:
      content: 'function toggleVerboseServicePlacementHealthReporting(enabled: boolean, options?: Models.ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams)'
      parameters:
        - id: enabled
          type:
            - boolean
          description: <span data-ttu-id="493d4-2710">서비스 배치 상태 보고의 자세한 정도입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2710">The verbosity of service placement health reporting.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.toggleVerboseServicePlacementHealthReporting_1'
    name: 'toggleVerboseServicePlacementHealthReporting(boolean, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function toggleVerboseServicePlacementHealthReporting(enabled: boolean, callback: ServiceCallback<void>)'
      parameters:
        - id: enabled
          type:
            - boolean
          description: <span data-ttu-id="493d4-2711">서비스 배치 상태 보고의 자세한 정도입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2711">The verbosity of service placement health reporting.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2712">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2712">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.toggleVerboseServicePlacementHealthReporting_2'
    name: 'toggleVerboseServicePlacementHealthReporting(boolean, ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function toggleVerboseServicePlacementHealthReporting(enabled: boolean, options: ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: enabled
          type:
            - boolean
          description: <span data-ttu-id="493d4-2713">서비스 배치 상태 보고의 자세한 정도입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2713">The verbosity of service placement health reporting.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams'
          description: <span data-ttu-id="493d4-2714">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2714">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2715">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2715">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2716">이 작업은 애플리케이션 형식의 모든 애플리케이션 인스턴스가 삭제된 경우에만 수행될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2716">This operation can only be performed if all application instances of the application type have been deleted.</span></span> <span data-ttu-id="493d4-2717">애플리케이션 형식이 등록 취소되면 이 특정 애플리케이션 형식에 대해서는 새 애플리케이션 인스턴스가 만들어질 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2717">Once the application type is unregistered, no new application instances can be created for this particular application type.</span></span>'
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options?: Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-2718">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2718">The name of the application type.</span></span>
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: <span data-ttu-id="493d4-2719">이전 복사 작업 중 지정 된 이미지 저장소에서 응용 프로그램 패키지에 대 한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2719">The relative path for the application package in the image store specified during the prior copy operation.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_1'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-2720">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2720">The name of the application type.</span></span>
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: <span data-ttu-id="493d4-2721">이전 복사 작업 중 지정 된 이미지 저장소에서 응용 프로그램 패키지에 대 한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2721">The relative path for the application package in the image store specified during the prior copy operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2722">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2722">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_2'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, ServiceFabricClientUnprovisionApplicationTypeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options: ServiceFabricClientUnprovisionApplicationTypeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="493d4-2723">애플리케이션 유형의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2723">The name of the application type.</span></span>
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: <span data-ttu-id="493d4-2724">이전 복사 작업 중 지정 된 이미지 저장소에서 응용 프로그램 패키지에 대 한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2724">The relative path for the application package in the image store specified during the prior copy operation.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
          description: <span data-ttu-id="493d4-2725">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2725">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2726">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2726">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster'
    name: 'unprovisionCluster(UnprovisionFabricDescription, Models.ServiceFabricClientUnprovisionClusterOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2727">코드 및 구성을 개별적으로 프로비전 해제하도록 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2727">It is supported to unprovision code and configuration separately.</span></span>
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options?: Models.ServiceFabricClientUnprovisionClusterOptionalParams)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: <span data-ttu-id="493d4-2728">클러스터를 프로 비전 해제에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2728">Describes the parameters for unprovisioning a cluster.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUnprovisionClusterOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_1'
    name: 'unprovisionCluster(UnprovisionFabricDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: <span data-ttu-id="493d4-2729">클러스터를 프로 비전 해제에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2729">Describes the parameters for unprovisioning a cluster.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2730">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2730">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_2'
    name: 'unprovisionCluster(UnprovisionFabricDescription, ServiceFabricClientUnprovisionClusterOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options: ServiceFabricClientUnprovisionClusterOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: <span data-ttu-id="493d4-2731">클러스터를 프로 비전 해제에 대 한 매개 변수를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2731">Describes the parameters for unprovisioning a cluster.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
          description: <span data-ttu-id="493d4-2732">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2732">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2733">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2733">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2734">업데이트 진행 중인 응용 프로그램의 매개 변수에서의 응용 프로그램 업그레이드 시작 시 지정 된 업그레이드 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2734">Updates the parameters of an ongoing application upgrade from the ones specified at the time of starting the application upgrade.</span></span> <span data-ttu-id="493d4-2735">이 잘못 된 매개 변수 또는 진행 되도록 응용 프로그램의 문제로 인해 중단된 응용 프로그램 업그레이드를 완화 하기 위해 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2735">This may be required to mitigate stuck application upgrades due to incorrect parameters or issues in the application to make progress.</span></span>
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options?: Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2736">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2736">The identity of the application.</span></span> <span data-ttu-id="493d4-2737">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2737">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2738">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2738">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2739">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2739">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: <span data-ttu-id="493d4-2740">매개 변수는 기존 응용 프로그램 업그레이드를 업데이트 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2740">Parameters for updating an existing application upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_1'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2741">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2741">The identity of the application.</span></span> <span data-ttu-id="493d4-2742">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2742">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2743">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2743">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2744">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2744">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: <span data-ttu-id="493d4-2745">매개 변수는 기존 응용 프로그램 업그레이드를 업데이트 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2745">Parameters for updating an existing application upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2746">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2746">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_2'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, ServiceFabricClientUpdateApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options: ServiceFabricClientUpdateApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2747">애플리케이션 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2747">The identity of the application.</span></span> <span data-ttu-id="493d4-2748">일반적으로 'fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2748">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2749">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2749">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2750">예를 들어 애플리케이션 이름이 ‘fabric://myapp/app1’인 경우 애플리케이션 ID가 6.0 이상에서는 “myapp~app1”이고 이전 버전에서는 “myapp/app1”입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2750">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: <span data-ttu-id="493d4-2751">매개 변수는 기존 응용 프로그램 업그레이드를 업데이트 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2751">Parameters for updating an existing application upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2752">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2752">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2753">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2753">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, Models.ServiceFabricClientUpdateBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2754">{BackupPolicyName}로 식별 되는 백업 정책을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2754">Updates the backup policy identified by {backupPolicyName}</span></span>'
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options?: Models.ServiceFabricClientUpdateBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="493d4-2755">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2755">Describes the backup policy.</span></span>
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-2756">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2756">The name of the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUpdateBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_1'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="493d4-2757">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2757">Describes the backup policy.</span></span>
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-2758">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2758">The name of the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2759">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2759">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_2'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, ServiceFabricClientUpdateBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options: ServiceFabricClientUpdateBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="493d4-2760">백업 정책을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2760">Describes the backup policy.</span></span>
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="493d4-2761">백업 정책의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2761">The name of the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
          description: <span data-ttu-id="493d4-2762">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2762">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2763">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2763">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2764">Service Fabric 클러스터 업그레이드를 사용 하는 동안 사용 된 업그레이드 매개 변수를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2764">Update the upgrade parameters used during a Service Fabric cluster upgrade.</span></span>
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options?: Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2765">클러스터 업그레이드는 업데이트에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2765">Parameters for updating a cluster upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_1'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2766">클러스터 업그레이드는 업데이트에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2766">Parameters for updating a cluster upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2767">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2767">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_2'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, ServiceFabricClientUpdateClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options: ServiceFabricClientUpdateClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: <span data-ttu-id="493d4-2768">클러스터 업그레이드는 업데이트에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2768">Parameters for updating a cluster upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
          description: <span data-ttu-id="493d4-2769">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2769">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2770">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2770">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState'
    name: 'updateRepairExecutionState(RepairTask, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2771">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2771">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="493d4-2772">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2772">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_2'
    name: 'updateRepairExecutionState(RepairTask, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="493d4-2773">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2773">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="493d4-2774">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2774">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-2775">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2775">The callback</span></span>
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_1'
    name: 'updateRepairExecutionState(RepairTask, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="493d4-2776">생성 또는 업데이트 하려면 복구 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2776">Describes the repair task to be created or updated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-2777">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2777">The callback</span></span>
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="493d4-2778">이 API는 Service Fabric 플랫폼을 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2778">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: <span data-ttu-id="493d4-2779">업데이트할 복구 작업 상태 정책을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2779">Describes the repair task healthy policy to be updated.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: <span data-ttu-id="493d4-2780">업데이트할 복구 작업 상태 정책을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2780">Describes the repair task healthy policy to be updated.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="493d4-2781">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2781">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-2782">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2782">The callback</span></span>
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: <span data-ttu-id="493d4-2783">업데이트할 복구 작업 상태 정책을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2783">Describes the repair task healthy policy to be updated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="493d4-2784">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2784">The callback</span></span>
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, Models.ServiceFabricClientUpdateServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2785">이 API는 실행 중인 Service Fabric 서비스의 속성 업데이트를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2785">This API allows updating properties of a running Service Fabric service.</span></span> <span data-ttu-id="493d4-2786">업데이트할 수 있는 속성 집합은 서비스를 만들 때 지정 된 속성의 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2786">The set of properties that can be updated are a subset of the properties that were specified at the time of creating the service.</span></span> <span data-ttu-id="493d4-2787">사용 하 여 속성의 현재 집합을 가져올 수 있습니다 `GetServiceDescription` API.</span><span class="sxs-lookup"><span data-stu-id="493d4-2787">The current set of properties can be obtained using `GetServiceDescription` API.</span></span>
      <span data-ttu-id="493d4-2788">실행 중인 서비스의 속성 업데이트를 사용 하 여 응용 프로그램 업그레이드와 다른는 `StartApplicationUpgrade` API.</span><span class="sxs-lookup"><span data-stu-id="493d4-2788">Note that updating the properties of a running service is different than upgrading your application using `StartApplicationUpgrade` API.</span></span> <span data-ttu-id="493d4-2789">업데이트 새 속성을 즉시 서비스에 적용 하는 반면 업그레이드가 다른 버전을 한 번에 하나의 업그레이드 도메인에서 이동 하는 응용 프로그램을 포함 하는 장기 실행 백그라운드 작업을 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2789">The upgrade is a long running background operation that involves moving the application from one version to another, one upgrade domain at a time, whereas update applies the new properties immediately to the service.</span></span>
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, options?: Models.ServiceFabricClientUpdateServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2790">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2790">The identity of the service.</span></span> <span data-ttu-id="493d4-2791">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2791">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2792">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2792">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2793">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2793">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: <span data-ttu-id="493d4-2794">서비스를 업데이트 하는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2794">The information necessary to update a service.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUpdateServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService_1'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2795">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2795">The identity of the service.</span></span> <span data-ttu-id="493d4-2796">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2796">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2797">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2797">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2798">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2798">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: <span data-ttu-id="493d4-2799">서비스를 업데이트 하는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2799">The information necessary to update a service.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2800">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2800">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService_2'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, ServiceFabricClientUpdateServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, options: ServiceFabricClientUpdateServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="493d4-2801">서비스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2801">The identity of the service.</span></span> <span data-ttu-id="493d4-2802">이 ID가 없는 서비스의 전체 이름 일반적으로 ' fabric:' URI 구성표가 없는 애플리케이션의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2802">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="493d4-2803">버전 6.0에서 시작하며, 계층적 이름이 "~" 문자로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2803">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="493d4-2804">예를 들어 서비스 이름이 "fabric: / myapp/app1/svc1", 서비스 id는 것 "myapp ~ app1 ~ svc1" 6.0 이상에서는 "myapp/app1/svc1" 이전 버전에서입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2804">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: <span data-ttu-id="493d4-2805">서비스를 업데이트 하는 데 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2805">The information necessary to update a service.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
          description: <span data-ttu-id="493d4-2806">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2806">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2807">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2807">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile'
    name: 'uploadFile(string, Models.ServiceFabricClientUploadFileOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="493d4-2808">이미지 저장소에 파일의 콘텐츠를 업로드합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2808">Uploads contents of the file to the image store.</span></span> <span data-ttu-id="493d4-2809">파일 연결에 실패 하면 다시 업로드 충분히 작으면이 API를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2809">Use this API if the file is small enough to upload again if the connection fails.</span></span> <span data-ttu-id="493d4-2810">파일의 데이터를 요청 본문에 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2810">The file''s data needs to be added to the request body.</span></span> <span data-ttu-id="493d4-2811">내용은 지정된 된 경로에 업로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2811">The contents will be uploaded to the specified path.</span></span> <span data-ttu-id="493d4-2812">이미지 저장소 서비스 표시 파일을 사용 하 여 폴더의 사용 가능 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2812">Image store service uses a mark file to indicate the availability of the folder.</span></span> <span data-ttu-id="493d4-2813">기호 파일이 "_.dir" 라는 빈 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2813">The mark file is an empty file named "_.dir".</span></span> <span data-ttu-id="493d4-2814">표시 파일을 폴더의 모든 파일이 업로드 되 면 이미지 저장소 서비스에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2814">The mark file is generated by the image store service when all files in a folder are uploaded.</span></span> <span data-ttu-id="493d4-2815">이미지 저장소 서비스, 응용 프로그램 패키지의 파일 계층 구조 인식 하지 rest에서 응용 프로그램 패키지를 업로드할 파일 별로 접근 방식을 사용 하는 경우 폴더당 표시 파일을 만들고 마지막으로 업로드를 이미지 저장소 서비스 폴더 완료 되었음을 알 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2815">When using File-by-File approach to upload application package in REST, the image store service isn''t aware of the file hierarchy of the application package; you need to create a mark file per folder and upload it last, to let the image store service know that the folder is complete.</span></span>'
    syntax:
      content: 'function uploadFile(contentPath: string, options?: Models.ServiceFabricClientUploadFileOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-2816">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2816">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUploadFileOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile_1'
    name: 'uploadFile(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-2817">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2817">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2818">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2818">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile_2'
    name: 'uploadFile(string, ServiceFabricClientUploadFileOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, options: ServiceFabricClientUploadFileOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-2819">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2819">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
          description: <span data-ttu-id="493d4-2820">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2820">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2821">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2821">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk'
    name: 'uploadFileChunk(string, string, string, Models.ServiceFabricClientUploadFileChunkOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="493d4-2822">지정 된 업로드 세션 ID 및 이미지 저장소 상대 경로 사용 하 여 이미지 저장소에 파일 청크를 업로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2822">Uploads a file chunk to the image store with the specified upload session ID and image store relative path.</span></span> <span data-ttu-id="493d4-2823">이 API를 사용 하면 파일 업로드 작업을 다시 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2823">This API allows user to resume the file upload operation.</span></span> <span data-ttu-id="493d4-2824">사용자는 네트워크 중단 될 때마다부터 파일 업로드를 다시 시작할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2824">user doesn't have to restart the file upload from scratch whenever there is a network interruption.</span></span> <span data-ttu-id="493d4-2825">파일 크기가 큰 경우이 옵션을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2825">Use this option if the file size is large.</span></span>
      <span data-ttu-id="493d4-2826">다시 시작 가능한 파일 업로드를 수행 하려면 사용자 파일 여러 개의 청크로 나누고 이러한 청크를 이미지 저장소 하나씩 업로드 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2826">To perform a resumable file upload, user need to break the file into multiple chunks and upload these chunks to the image store one-by-one.</span></span> <span data-ttu-id="493d4-2827">청크 순서로 업로드할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2827">Chunks don't have to be uploaded in order.</span></span> <span data-ttu-id="493d4-2828">이미 이미지 저장소 상대 경로 나타내는 파일이 있는 경우 업로드 세션 커밋될 때 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2828">If the file represented by the image store relative path already exists, it will be overwritten when the upload session commits.</span></span>
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, options?: Models.ServiceFabricClientUploadFileChunkOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-2829">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2829">Relative path to file or folder in the image store from its root.</span></span>
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-2830">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2830">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-2831">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2831">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: contentRange
          type:
            - string
          description: '<span data-ttu-id="493d4-2832">파일 청크를 이미지 저장소에 업로드 하는 경우 Content-range 헤더 필드를 구성 하 고 요청으로 전송 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2832">When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request.</span></span> <span data-ttu-id="493d4-2833">형식으로 "바이트 {First-Byte-Position}-{Last-Byte-Position}/{File-Length}" 같습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2833">The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}".</span></span> <span data-ttu-id="493d4-2834">예를 들어, 콘텐츠-바이트 범위: 300-5000/20000 사용자 5,000 통해 300 바이트를 전송 하는 총 파일 길이 20, 000 바이트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2834">For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientUploadFileChunkOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_1'
    name: 'uploadFileChunk(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-2835">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2835">Relative path to file or folder in the image store from its root.</span></span>
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-2836">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2836">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-2837">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2837">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: contentRange
          type:
            - string
          description: '<span data-ttu-id="493d4-2838">파일 청크를 이미지 저장소에 업로드 하는 경우 Content-range 헤더 필드를 구성 하 고 요청으로 전송 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2838">When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request.</span></span> <span data-ttu-id="493d4-2839">형식으로 "바이트 {First-Byte-Position}-{Last-Byte-Position}/{File-Length}" 같습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2839">The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}".</span></span> <span data-ttu-id="493d4-2840">예를 들어, 콘텐츠-바이트 범위: 300-5000/20000 사용자 5,000 통해 300 바이트를 전송 하는 총 파일 길이 20, 000 바이트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2840">For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2841">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2841">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_2'
    name: 'uploadFileChunk(string, string, string, ServiceFabricClientUploadFileChunkOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, options: ServiceFabricClientUploadFileChunkOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="493d4-2842">루트에서 이미지 저장소의 파일 또는 폴더에 대한 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2842">Relative path to file or folder in the image store from its root.</span></span>
        - id: sessionId
          type:
            - string
          description: <span data-ttu-id="493d4-2843">파일을 업로드 하는 사용자가 생성 된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2843">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="493d4-2844">추적 하는 모든 파일 청크 커밋될 때까지 이미지 저장소 업로드 세션을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2844">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>
        - id: contentRange
          type:
            - string
          description: '<span data-ttu-id="493d4-2845">파일 청크를 이미지 저장소에 업로드 하는 경우 Content-range 헤더 필드를 구성 하 고 요청으로 전송 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2845">When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request.</span></span> <span data-ttu-id="493d4-2846">형식으로 "바이트 {First-Byte-Position}-{Last-Byte-Position}/{File-Length}" 같습니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2846">The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}".</span></span> <span data-ttu-id="493d4-2847">예를 들어, 콘텐츠-바이트 범위: 300-5000/20000 사용자 5,000 통해 300 바이트를 전송 하는 총 파일 길이 20, 000 바이트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="493d4-2847">For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'
          description: <span data-ttu-id="493d4-2848">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="493d4-2848">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="493d4-2849">콜백</span><span class="sxs-lookup"><span data-stu-id="493d4-2849">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceFabricClientContext'
    name: ServiceFabricClientContext
    spec.typeScript:
      - name: ServiceFabricClientContext
        fullName: ServiceFabricClientContext
        uid: '@azure/servicefabric.ServiceFabricClientContext'
  - uid: '@azure/servicefabric.MeshApplication'
    name: MeshApplication
    spec.typeScript:
      - name: MeshApplication
        fullName: MeshApplication
        uid: '@azure/servicefabric.MeshApplication'
  - uid: '@azure/servicefabric.MeshCodePackage'
    name: MeshCodePackage
    spec.typeScript:
      - name: MeshCodePackage
        fullName: MeshCodePackage
        uid: '@azure/servicefabric.MeshCodePackage'
  - uid: '@azure/servicefabric.MeshGateway'
    name: MeshGateway
    spec.typeScript:
      - name: MeshGateway
        fullName: MeshGateway
        uid: '@azure/servicefabric.MeshGateway'
  - uid: '@azure/servicefabric.MeshNetwork'
    name: MeshNetwork
    spec.typeScript:
      - name: MeshNetwork
        fullName: MeshNetwork
        uid: '@azure/servicefabric.MeshNetwork'
  - uid: '@azure/servicefabric.MeshSecret'
    name: MeshSecret
    spec.typeScript:
      - name: MeshSecret
        fullName: MeshSecret
        uid: '@azure/servicefabric.MeshSecret'
  - uid: '@azure/servicefabric.MeshSecretValue'
    name: MeshSecretValue
    spec.typeScript:
      - name: MeshSecretValue
        fullName: MeshSecretValue
        uid: '@azure/servicefabric.MeshSecretValue'
  - uid: '@azure/servicefabric.MeshService'
    name: MeshService
    spec.typeScript:
      - name: MeshService
        fullName: MeshService
        uid: '@azure/servicefabric.MeshService'
  - uid: '@azure/servicefabric.MeshServiceReplica'
    name: MeshServiceReplica
    spec.typeScript:
      - name: MeshServiceReplica
        fullName: MeshServiceReplica
        uid: '@azure/servicefabric.MeshServiceReplica'
  - uid: '@azure/servicefabric.MeshVolume'
    name: MeshVolume
    spec.typeScript:
      - name: MeshVolume
        fullName: MeshVolume
        uid: '@azure/servicefabric.MeshVolume'
  - uid: '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
    name: ServiceFabricClientBackupPartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientBackupPartitionOptionalParams
        fullName: ServiceFabricClientBackupPartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
    name: ServiceFabricClientCancelOperationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCancelOperationOptionalParams
        fullName: ServiceFabricClientCancelOperationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskCancelDescription'
    name: RepairTaskCancelDescription
    spec.typeScript:
      - name: RepairTaskCancelDescription
        fullName: RepairTaskCancelDescription
        uid: '@azure/servicefabric.RepairTaskCancelDescription'
  - uid: ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
    name: RepairTaskUpdateInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RepairTaskUpdateInfo
        fullName: RepairTaskUpdateInfo
        uid: '@azure/servicefabric.RepairTaskUpdateInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
    name: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
        fullName: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
  - uid: '@azure/servicefabric.ImageStoreCopyDescription'
    name: ImageStoreCopyDescription
    spec.typeScript:
      - name: ImageStoreCopyDescription
        fullName: ImageStoreCopyDescription
        uid: '@azure/servicefabric.ImageStoreCopyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
    name: ServiceFabricClientCopyImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCopyImageStoreContentOptionalParams
        fullName: ServiceFabricClientCopyImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
  - uid: '@azure/servicefabric.ApplicationDescription'
    name: ApplicationDescription
    spec.typeScript:
      - name: ApplicationDescription
        fullName: ApplicationDescription
        uid: '@azure/servicefabric.ApplicationDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
    name: ServiceFabricClientCreateApplicationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateApplicationOptionalParams
        fullName: ServiceFabricClientCreateApplicationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
  - uid: '@azure/servicefabric.BackupPolicyDescription'
    name: BackupPolicyDescription
    spec.typeScript:
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: '@azure/servicefabric.BackupPolicyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
    name: ServiceFabricClientCreateBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateBackupPolicyOptionalParams
        fullName: ServiceFabricClientCreateBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.CreateComposeDeploymentDescription'
    name: CreateComposeDeploymentDescription
    spec.typeScript:
      - name: CreateComposeDeploymentDescription
        fullName: CreateComposeDeploymentDescription
        uid: '@azure/servicefabric.CreateComposeDeploymentDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
    name: ServiceFabricClientCreateComposeDeploymentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateComposeDeploymentOptionalParams
        fullName: ServiceFabricClientCreateComposeDeploymentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
  - uid: '@azure/servicefabric.NameDescription'
    name: NameDescription
    spec.typeScript:
      - name: NameDescription
        fullName: NameDescription
        uid: '@azure/servicefabric.NameDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
    name: ServiceFabricClientCreateNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateNameOptionalParams
        fullName: ServiceFabricClientCreateNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
  - uid: '@azure/servicefabric.RepairTask'
    name: RepairTask
    spec.typeScript:
      - name: RepairTask
        fullName: RepairTask
        uid: '@azure/servicefabric.RepairTask'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
    name: ServiceFabricClientCreateServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateServiceOptionalParams
        fullName: ServiceFabricClientCreateServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
  - uid: '@azure/servicefabric.ServiceFromTemplateDescription'
    name: ServiceFromTemplateDescription
    spec.typeScript:
      - name: ServiceFromTemplateDescription
        fullName: ServiceFromTemplateDescription
        uid: '@azure/servicefabric.ServiceFromTemplateDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
    name: ServiceFabricClientCreateServiceFromTemplateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateServiceFromTemplateOptionalParams
        fullName: ServiceFabricClientCreateServiceFromTemplateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
    name: ServiceFabricClientDeleteApplicationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteApplicationOptionalParams
        fullName: ServiceFabricClientDeleteApplicationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
    name: ServiceFabricClientDeleteBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteBackupPolicyOptionalParams
        fullName: ServiceFabricClientDeleteBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
    name: ServiceFabricClientDeleteImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteImageStoreContentOptionalParams
        fullName: ServiceFabricClientDeleteImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
    name: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
        fullName: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
    name: ServiceFabricClientDeleteNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteNameOptionalParams
        fullName: ServiceFabricClientDeleteNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
    name: ServiceFabricClientDeletePropertyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeletePropertyOptionalParams
        fullName: ServiceFabricClientDeletePropertyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskDeleteDescription'
    name: RepairTaskDeleteDescription
    spec.typeScript:
      - name: RepairTaskDeleteDescription
        fullName: RepairTaskDeleteDescription
        uid: '@azure/servicefabric.RepairTaskDeleteDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
    name: ServiceFabricClientDeleteServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteServiceOptionalParams
        fullName: ServiceFabricClientDeleteServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
  - uid: '@azure/servicefabric.DeployServicePackageToNodeDescription'
    name: DeployServicePackageToNodeDescription
    spec.typeScript:
      - name: DeployServicePackageToNodeDescription
        fullName: DeployServicePackageToNodeDescription
        uid: '@azure/servicefabric.DeployServicePackageToNodeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
    name: ServiceFabricClientDeployServicePackageToNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeployServicePackageToNodeOptionalParams
        fullName: ServiceFabricClientDeployServicePackageToNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
    name: ServiceFabricClientDisableApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableApplicationBackupOptionalParams
        fullName: ServiceFabricClientDisableApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.DeactivationIntentDescription'
    name: DeactivationIntentDescription
    spec.typeScript:
      - name: DeactivationIntentDescription
        fullName: DeactivationIntentDescription
        uid: '@azure/servicefabric.DeactivationIntentDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
    name: ServiceFabricClientDisableNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableNodeOptionalParams
        fullName: ServiceFabricClientDisableNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
    name: ServiceFabricClientDisablePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisablePartitionBackupOptionalParams
        fullName: ServiceFabricClientDisablePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
    name: ServiceFabricClientDisableServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableServiceBackupOptionalParams
        fullName: ServiceFabricClientDisableServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.EnableBackupDescription'
    name: EnableBackupDescription
    spec.typeScript:
      - name: EnableBackupDescription
        fullName: EnableBackupDescription
        uid: '@azure/servicefabric.EnableBackupDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
    name: ServiceFabricClientEnableApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableApplicationBackupOptionalParams
        fullName: ServiceFabricClientEnableApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
    name: ServiceFabricClientEnableNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableNodeOptionalParams
        fullName: ServiceFabricClientEnableNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
    name: ServiceFabricClientEnablePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnablePartitionBackupOptionalParams
        fullName: ServiceFabricClientEnablePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
    name: ServiceFabricClientEnableServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableServiceBackupOptionalParams
        fullName: ServiceFabricClientEnableServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskApproveDescription'
    name: RepairTaskApproveDescription
    spec.typeScript:
      - name: RepairTaskApproveDescription
        fullName: RepairTaskApproveDescription
        uid: '@azure/servicefabric.RepairTaskApproveDescription'
  - uid: ServiceCallback<@azure/servicefabric.AadMetadataObject>
    name: AadMetadataObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AadMetadataObject
        fullName: AadMetadataObject
        uid: '@azure/servicefabric.AadMetadataObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
    name: ServiceFabricClientGetAadMetadataOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetAadMetadataOptionalParams
        fullName: ServiceFabricClientGetAadMetadataOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
    name: PagedBackupEntityList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupEntityList
        fullName: PagedBackupEntityList
        uid: '@azure/servicefabric.PagedBackupEntityList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
    name: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
        fullName: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
    name: PagedBackupConfigurationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupConfigurationInfoList
        fullName: PagedBackupConfigurationInfoList
        uid: '@azure/servicefabric.PagedBackupConfigurationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
    name: PagedBackupInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupInfoList
        fullName: PagedBackupInfoList
        uid: '@azure/servicefabric.PagedBackupInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
    name: ServiceFabricClientGetApplicationBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationBackupListOptionalParams
        fullName: ServiceFabricClientGetApplicationBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
    name: ServiceFabricClientGetApplicationEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationEventListOptionalParams
        fullName: ServiceFabricClientGetApplicationEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationHealth>
    name: ApplicationHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationHealth
        fullName: ApplicationHealth
        uid: '@azure/servicefabric.ApplicationHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
    name: ServiceFabricClientGetApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationHealthOptionalParams
        fullName: ServiceFabricClientGetApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationInfo>
    name: ApplicationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationInfo
        fullName: ApplicationInfo
        uid: '@azure/servicefabric.ApplicationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
    name: ServiceFabricClientGetApplicationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
    name: PagedApplicationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationInfoList
        fullName: PagedApplicationInfoList
        uid: '@azure/servicefabric.PagedApplicationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
    name: ServiceFabricClientGetApplicationInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationInfoListOptionalParams
        fullName: ServiceFabricClientGetApplicationInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
    name: ApplicationLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationLoadInfo
        fullName: ApplicationLoadInfo
        uid: '@azure/servicefabric.ApplicationLoadInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
    name: ServiceFabricClientGetApplicationLoadInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationLoadInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationLoadInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
    name: ApplicationTypeManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationTypeManifest
        fullName: ApplicationTypeManifest
        uid: '@azure/servicefabric.ApplicationTypeManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
    name: ServiceFabricClientGetApplicationManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationManifestOptionalParams
        fullName: ServiceFabricClientGetApplicationManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
    name: ApplicationNameInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationNameInfo
        fullName: ApplicationNameInfo
        uid: '@azure/servicefabric.ApplicationNameInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
    name: ServiceFabricClientGetApplicationNameInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationNameInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationNameInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
    name: PagedApplicationTypeInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationTypeInfoList
        fullName: PagedApplicationTypeInfoList
        uid: '@azure/servicefabric.PagedApplicationTypeInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
    name: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
    name: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
        fullName: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
    name: ApplicationUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationUpgradeProgressInfo
        fullName: ApplicationUpgradeProgressInfo
        uid: '@azure/servicefabric.ApplicationUpgradeProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
    name: ServiceFabricClientGetApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientGetApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
    name: ServiceFabricClientGetApplicationsEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationsEventListOptionalParams
        fullName: ServiceFabricClientGetApplicationsEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
    name: BackupPolicyDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: '@azure/servicefabric.BackupPolicyDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
    name: ServiceFabricClientGetBackupPolicyByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupPolicyByNameOptionalParams
        fullName: ServiceFabricClientGetBackupPolicyByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
    name: PagedBackupPolicyDescriptionList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupPolicyDescriptionList
        fullName: PagedBackupPolicyDescriptionList
        uid: '@azure/servicefabric.PagedBackupPolicyDescriptionList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
    name: ServiceFabricClientGetBackupPolicyListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupPolicyListOptionalParams
        fullName: ServiceFabricClientGetBackupPolicyListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
  - uid: '@azure/servicefabric.GetBackupByStorageQueryDescription'
    name: GetBackupByStorageQueryDescription
    spec.typeScript:
      - name: GetBackupByStorageQueryDescription
        fullName: GetBackupByStorageQueryDescription
        uid: '@azure/servicefabric.GetBackupByStorageQueryDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
    name: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
        fullName: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.Chaos>
    name: Chaos>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Chaos
        fullName: Chaos
        uid: '@azure/servicefabric.Chaos'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
    name: ServiceFabricClientGetChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosOptionalParams
        fullName: ServiceFabricClientGetChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
    name: ChaosEventsSegment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ChaosEventsSegment
        fullName: ChaosEventsSegment
        uid: '@azure/servicefabric.ChaosEventsSegment'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
    name: ServiceFabricClientGetChaosEventsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosEventsOptionalParams
        fullName: ServiceFabricClientGetChaosEventsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
    name: ChaosScheduleDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: '@azure/servicefabric.ChaosScheduleDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
    name: ServiceFabricClientGetChaosScheduleOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosScheduleOptionalParams
        fullName: ServiceFabricClientGetChaosScheduleOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterConfiguration>
    name: ClusterConfiguration>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterConfiguration
        fullName: ClusterConfiguration
        uid: '@azure/servicefabric.ClusterConfiguration'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
    name: ServiceFabricClientGetClusterConfigurationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterConfigurationOptionalParams
        fullName: ServiceFabricClientGetClusterConfigurationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
    name: ClusterConfigurationUpgradeStatusInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterConfigurationUpgradeStatusInfo
        fullName: ClusterConfigurationUpgradeStatusInfo
        uid: '@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
    name: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
        fullName: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
    name: ServiceFabricClientGetClusterEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterEventListOptionalParams
        fullName: ServiceFabricClientGetClusterEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterHealth>
    name: ClusterHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterHealth
        fullName: ClusterHealth
        uid: '@azure/servicefabric.ClusterHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
    name: ServiceFabricClientGetClusterHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthOptionalParams
        fullName: ServiceFabricClientGetClusterHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
    name: ClusterHealthChunk>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterHealthChunk
        fullName: ClusterHealthChunk
        uid: '@azure/servicefabric.ClusterHealthChunk'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
    name: ServiceFabricClientGetClusterHealthChunkOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthChunkOptionalParams
        fullName: ServiceFabricClientGetClusterHealthChunkOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
    name: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
        fullName: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterLoadInfo>
    name: ClusterLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterLoadInfo
        fullName: ClusterLoadInfo
        uid: '@azure/servicefabric.ClusterLoadInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterLoadOptionalParams'
    name: ServiceFabricClientGetClusterLoadOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterLoadOptionalParams
        fullName: ServiceFabricClientGetClusterLoadOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterLoadOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterManifest>
    name: ClusterManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterManifest
        fullName: ClusterManifest
        uid: '@azure/servicefabric.ClusterManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
    name: ServiceFabricClientGetClusterManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterManifestOptionalParams
        fullName: ServiceFabricClientGetClusterManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
    name: ClusterUpgradeProgressObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterUpgradeProgressObject
        fullName: ClusterUpgradeProgressObject
        uid: '@azure/servicefabric.ClusterUpgradeProgressObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
    name: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
        fullName: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterVersion>
    name: ClusterVersion>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterVersion
        fullName: ClusterVersion
        uid: '@azure/servicefabric.ClusterVersion'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
    name: ServiceFabricClientGetClusterVersionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterVersionOptionalParams
        fullName: ServiceFabricClientGetClusterVersionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
    name: ComposeDeploymentStatusInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComposeDeploymentStatusInfo
        fullName: ComposeDeploymentStatusInfo
        uid: '@azure/servicefabric.ComposeDeploymentStatusInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
    name: PagedComposeDeploymentStatusInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedComposeDeploymentStatusInfoList
        fullName: PagedComposeDeploymentStatusInfoList
        uid: '@azure/servicefabric.PagedComposeDeploymentStatusInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
    name: ComposeDeploymentUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComposeDeploymentUpgradeProgressInfo
        fullName: ComposeDeploymentUpgradeProgressInfo
        uid: '@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ContainerLogs>
    name: ContainerLogs>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerLogs
        fullName: ContainerLogs
        uid: '@azure/servicefabric.ContainerLogs'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
    name: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
        fullName: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
    name: 'ContainerInstanceEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerInstanceEvent
        fullName: ContainerInstanceEvent
        uid: '@azure/servicefabric.ContainerInstanceEvent'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
    name: ServiceFabricClientGetContainersEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetContainersEventListOptionalParams
        fullName: ServiceFabricClientGetContainersEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
    name: ServiceFabricClientGetCorrelatedEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetCorrelatedEventListOptionalParams
        fullName: ServiceFabricClientGetCorrelatedEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
    name: PartitionDataLossProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionDataLossProgress
        fullName: PartitionDataLossProgress
        uid: '@azure/servicefabric.PartitionDataLossProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
    name: ServiceFabricClientGetDataLossProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDataLossProgressOptionalParams
        fullName: ServiceFabricClientGetDataLossProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
    name: DeployedApplicationHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedApplicationHealth
        fullName: DeployedApplicationHealth
        uid: '@azure/servicefabric.DeployedApplicationHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
    name: DeployedApplicationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedApplicationInfo
        fullName: DeployedApplicationInfo
        uid: '@azure/servicefabric.DeployedApplicationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
    name: PagedDeployedApplicationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedDeployedApplicationInfoList
        fullName: PagedDeployedApplicationInfoList
        uid: '@azure/servicefabric.PagedDeployedApplicationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
    name: 'DeployedCodePackageInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedCodePackageInfo
        fullName: DeployedCodePackageInfo
        uid: '@azure/servicefabric.DeployedCodePackageInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
    name: DeployedServicePackageHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServicePackageHealth
        fullName: DeployedServicePackageHealth
        uid: '@azure/servicefabric.DeployedServicePackageHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
    name: 'DeployedServicePackageInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServicePackageInfo
        fullName: DeployedServicePackageInfo
        uid: '@azure/servicefabric.DeployedServicePackageInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
    name: 'DeployedServiceTypeInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServiceTypeInfo
        fullName: DeployedServiceTypeInfo
        uid: '@azure/servicefabric.DeployedServiceTypeInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
    name: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
    name: 'OperationStatus[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/servicefabric.OperationStatus'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
    name: ServiceFabricClientGetFaultOperationListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetFaultOperationListOptionalParams
        fullName: ServiceFabricClientGetFaultOperationListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ImageStoreContent>
    name: ImageStoreContent>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageStoreContent
        fullName: ImageStoreContent
        uid: '@azure/servicefabric.ImageStoreContent'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
    name: ServiceFabricClientGetImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreContentOptionalParams
        fullName: ServiceFabricClientGetImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.FolderSizeInfo>
    name: FolderSizeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FolderSizeInfo
        fullName: FolderSizeInfo
        uid: '@azure/servicefabric.FolderSizeInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreFolderSizeOptionalParams'
    name: ServiceFabricClientGetImageStoreFolderSizeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreFolderSizeOptionalParams
        fullName: ServiceFabricClientGetImageStoreFolderSizeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreFolderSizeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
    name: ServiceFabricClientGetImageStoreRootContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreRootContentOptionalParams
        fullName: ServiceFabricClientGetImageStoreRootContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams'
    name: ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams
        fullName: ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreRootFolderSizeOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.UploadSession>
    name: UploadSession>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UploadSession
        fullName: UploadSession
        uid: '@azure/servicefabric.UploadSession'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
    name: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
        fullName: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
    name: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
        fullName: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
    name: ServiceFabricClientGetNameExistsInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNameExistsInfoOptionalParams
        fullName: ServiceFabricClientGetNameExistsInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
    name: ServiceFabricClientGetNodeEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeEventListOptionalParams
        fullName: ServiceFabricClientGetNodeEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeHealth>
    name: NodeHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeHealth
        fullName: NodeHealth
        uid: '@azure/servicefabric.NodeHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
    name: ServiceFabricClientGetNodeHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeHealthOptionalParams
        fullName: ServiceFabricClientGetNodeHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeInfo>
    name: NodeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeInfo
        fullName: NodeInfo
        uid: '@azure/servicefabric.NodeInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
    name: ServiceFabricClientGetNodeInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeInfoOptionalParams
        fullName: ServiceFabricClientGetNodeInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
    name: PagedNodeInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedNodeInfoList
        fullName: PagedNodeInfoList
        uid: '@azure/servicefabric.PagedNodeInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
    name: ServiceFabricClientGetNodeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeInfoListOptionalParams
        fullName: ServiceFabricClientGetNodeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeLoadInfo>
    name: NodeLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeLoadInfo
        fullName: NodeLoadInfo
        uid: '@azure/servicefabric.NodeLoadInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
    name: ServiceFabricClientGetNodeLoadInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeLoadInfoOptionalParams
        fullName: ServiceFabricClientGetNodeLoadInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
    name: NodeTransitionProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeTransitionProgress
        fullName: NodeTransitionProgress
        uid: '@azure/servicefabric.NodeTransitionProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
    name: ServiceFabricClientGetNodeTransitionProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeTransitionProgressOptionalParams
        fullName: ServiceFabricClientGetNodeTransitionProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
    name: ServiceFabricClientGetNodesEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodesEventListOptionalParams
        fullName: ServiceFabricClientGetNodesEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
    name: PartitionBackupConfigurationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionBackupConfigurationInfo
        fullName: PartitionBackupConfigurationInfo
        uid: '@azure/servicefabric.PartitionBackupConfigurationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
    name: ServiceFabricClientGetPartitionBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupListOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.BackupProgressInfo>
    name: BackupProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupProgressInfo
        fullName: BackupProgressInfo
        uid: '@azure/servicefabric.BackupProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
    name: ServiceFabricClientGetPartitionBackupProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
    name: ServiceFabricClientGetPartitionEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionHealth>
    name: PartitionHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionHealth
        fullName: PartitionHealth
        uid: '@azure/servicefabric.PartitionHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
    name: ServiceFabricClientGetPartitionHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionHealthOptionalParams
        fullName: ServiceFabricClientGetPartitionHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
    name: ServiceFabricClientGetPartitionInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionInfoOptionalParams
        fullName: ServiceFabricClientGetPartitionInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
    name: PagedServicePartitionInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedServicePartitionInfoList
        fullName: PagedServicePartitionInfoList
        uid: '@azure/servicefabric.PagedServicePartitionInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
    name: ServiceFabricClientGetPartitionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionInfoListOptionalParams
        fullName: ServiceFabricClientGetPartitionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
    name: PartitionLoadInformation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionLoadInformation
        fullName: PartitionLoadInformation
        uid: '@azure/servicefabric.PartitionLoadInformation'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
    name: ServiceFabricClientGetPartitionLoadInformationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionLoadInformationOptionalParams
        fullName: ServiceFabricClientGetPartitionLoadInformationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
    name: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
    name: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
    name: PartitionRestartProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionRestartProgress
        fullName: PartitionRestartProgress
        uid: '@azure/servicefabric.PartitionRestartProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
    name: ServiceFabricClientGetPartitionRestartProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionRestartProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionRestartProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
    name: RestoreProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RestoreProgressInfo
        fullName: RestoreProgressInfo
        uid: '@azure/servicefabric.RestoreProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
    name: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
    name: ServiceFabricClientGetPartitionsEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionsEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionsEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PropertyInfo>
    name: PropertyInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PropertyInfo
        fullName: PropertyInfo
        uid: '@azure/servicefabric.PropertyInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
    name: ServiceFabricClientGetPropertyInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPropertyInfoOptionalParams
        fullName: ServiceFabricClientGetPropertyInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
    name: PagedPropertyInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedPropertyInfoList
        fullName: PagedPropertyInfoList
        uid: '@azure/servicefabric.PagedPropertyInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
    name: ServiceFabricClientGetPropertyInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPropertyInfoListOptionalParams
        fullName: ServiceFabricClientGetPropertyInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
    name: 'FabricCodeVersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricCodeVersionInfo
        fullName: FabricCodeVersionInfo
        uid: '@azure/servicefabric.FabricCodeVersionInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
    name: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
        fullName: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
    name: 'FabricConfigVersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricConfigVersionInfo
        fullName: FabricConfigVersionInfo
        uid: '@azure/servicefabric.FabricConfigVersionInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
    name: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
        fullName: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
    name: PartitionQuorumLossProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionQuorumLossProgress
        fullName: PartitionQuorumLossProgress
        uid: '@azure/servicefabric.PartitionQuorumLossProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
    name: ServiceFabricClientGetQuorumLossProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetQuorumLossProgressOptionalParams
        fullName: ServiceFabricClientGetQuorumLossProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
    name: 'RepairTask[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RepairTask
        fullName: RepairTask
        uid: '@azure/servicefabric.RepairTask'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
    name: ServiceFabricClientGetRepairTaskListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetRepairTaskListOptionalParams
        fullName: ServiceFabricClientGetRepairTaskListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
    name: ServiceFabricClientGetReplicaHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaHealthOptionalParams
        fullName: ServiceFabricClientGetReplicaHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
    name: ServiceFabricClientGetReplicaInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaInfoOptionalParams
        fullName: ServiceFabricClientGetReplicaInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
    name: PagedReplicaInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedReplicaInfoList
        fullName: PagedReplicaInfoList
        uid: '@azure/servicefabric.PagedReplicaInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
    name: ServiceFabricClientGetReplicaInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaInfoListOptionalParams
        fullName: ServiceFabricClientGetReplicaInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
    name: ServiceFabricClientGetServiceBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceBackupListOptionalParams
        fullName: ServiceFabricClientGetServiceBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
    name: ServiceFabricClientGetServiceDescriptionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceDescriptionOptionalParams
        fullName: ServiceFabricClientGetServiceDescriptionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
    name: ServiceFabricClientGetServiceEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceEventListOptionalParams
        fullName: ServiceFabricClientGetServiceEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceHealth>
    name: ServiceHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceHealth
        fullName: ServiceHealth
        uid: '@azure/servicefabric.ServiceHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
    name: ServiceFabricClientGetServiceHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceHealthOptionalParams
        fullName: ServiceFabricClientGetServiceHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
    name: ServiceFabricClientGetServiceInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceInfoOptionalParams
        fullName: ServiceFabricClientGetServiceInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
    name: PagedServiceInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedServiceInfoList
        fullName: PagedServiceInfoList
        uid: '@azure/servicefabric.PagedServiceInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
    name: ServiceFabricClientGetServiceInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceInfoListOptionalParams
        fullName: ServiceFabricClientGetServiceInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
    name: ServiceTypeManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeManifest
        fullName: ServiceTypeManifest
        uid: '@azure/servicefabric.ServiceTypeManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
    name: ServiceFabricClientGetServiceManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceManifestOptionalParams
        fullName: ServiceFabricClientGetServiceManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceNameInfo>
    name: ServiceNameInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceNameInfo
        fullName: ServiceNameInfo
        uid: '@azure/servicefabric.ServiceNameInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
    name: ServiceFabricClientGetServiceNameInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceNameInfoOptionalParams
        fullName: ServiceFabricClientGetServiceNameInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
    name: ServiceTypeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: '@azure/servicefabric.ServiceTypeInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
    name: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
        fullName: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
    name: 'ServiceTypeInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: '@azure/servicefabric.ServiceTypeInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
    name: ServiceFabricClientGetServiceTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetServiceTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
    name: ServiceFabricClientGetServicesEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServicesEventListOptionalParams
        fullName: ServiceFabricClientGetServicesEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
    name: PagedSubNameInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedSubNameInfoList
        fullName: PagedSubNameInfoList
        uid: '@azure/servicefabric.PagedSubNameInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
    name: ServiceFabricClientGetSubNameInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetSubNameInfoListOptionalParams
        fullName: ServiceFabricClientGetSubNameInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.UnplacedReplicaInformation>
    name: UnplacedReplicaInformation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UnplacedReplicaInformation
        fullName: UnplacedReplicaInformation
        uid: '@azure/servicefabric.UnplacedReplicaInformation'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetUnplacedReplicaInformationOptionalParams'
    name: ServiceFabricClientGetUnplacedReplicaInformationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetUnplacedReplicaInformationOptionalParams
        fullName: ServiceFabricClientGetUnplacedReplicaInformationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetUnplacedReplicaInformationOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
    name: UpgradeOrchestrationServiceState>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
    name: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
        fullName: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
  - uid: '@azure/servicefabric.ContainerApiRequestBody'
    name: ContainerApiRequestBody
    spec.typeScript:
      - name: ContainerApiRequestBody
        fullName: ContainerApiRequestBody
        uid: '@azure/servicefabric.ContainerApiRequestBody'
  - uid: ServiceCallback<@azure/servicefabric.ContainerApiResponse>
    name: ContainerApiResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerApiResponse
        fullName: ContainerApiResponse
        uid: '@azure/servicefabric.ContainerApiResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
    name: ServiceFabricClientInvokeContainerApiOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeContainerApiOptionalParams
        fullName: ServiceFabricClientInvokeContainerApiOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
    name: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
        fullName: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
    name: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
        fullName: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientMovePrimaryReplicaOptionalParams'
    name: ServiceFabricClientMovePrimaryReplicaOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientMovePrimaryReplicaOptionalParams
        fullName: ServiceFabricClientMovePrimaryReplicaOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientMovePrimaryReplicaOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientMoveSecondaryReplicaOptionalParams'
    name: ServiceFabricClientMoveSecondaryReplicaOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientMoveSecondaryReplicaOptionalParams
        fullName: ServiceFabricClientMoveSecondaryReplicaOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientMoveSecondaryReplicaOptionalParams'
  - uid: '@azure/servicefabric.ChaosScheduleDescription'
    name: ChaosScheduleDescription
    spec.typeScript:
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: '@azure/servicefabric.ChaosScheduleDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
    name: ServiceFabricClientPostChaosScheduleOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientPostChaosScheduleOptionalParams
        fullName: ServiceFabricClientPostChaosScheduleOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
    name: ServiceFabricClientProvisionApplicationTypeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientProvisionApplicationTypeOptionalParams
        fullName: ServiceFabricClientProvisionApplicationTypeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
  - uid: '@azure/servicefabric.ProvisionFabricDescription'
    name: ProvisionFabricDescription
    spec.typeScript:
      - name: ProvisionFabricDescription
        fullName: ProvisionFabricDescription
        uid: '@azure/servicefabric.ProvisionFabricDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
    name: ServiceFabricClientProvisionClusterOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientProvisionClusterOptionalParams
        fullName: ServiceFabricClientProvisionClusterOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
  - uid: '@azure/servicefabric.PropertyDescription'
    name: PropertyDescription
    spec.typeScript:
      - name: PropertyDescription
        fullName: PropertyDescription
        uid: '@azure/servicefabric.PropertyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
    name: ServiceFabricClientPutPropertyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientPutPropertyOptionalParams
        fullName: ServiceFabricClientPutPropertyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
    name: ServiceFabricClientRecoverAllPartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverAllPartitionsOptionalParams
        fullName: ServiceFabricClientRecoverAllPartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
    name: ServiceFabricClientRecoverPartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverPartitionOptionalParams
        fullName: ServiceFabricClientRecoverPartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
    name: ServiceFabricClientRecoverServicePartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverServicePartitionsOptionalParams
        fullName: ServiceFabricClientRecoverServicePartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
    name: ServiceFabricClientRecoverSystemPartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverSystemPartitionsOptionalParams
        fullName: ServiceFabricClientRecoverSystemPartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
    name: ServiceFabricClientRemoveComposeDeploymentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveComposeDeploymentOptionalParams
        fullName: ServiceFabricClientRemoveComposeDeploymentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
    name: ServiceFabricClientRemoveNodeStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveNodeStateOptionalParams
        fullName: ServiceFabricClientRemoveNodeStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
    name: ServiceFabricClientRemoveReplicaOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveReplicaOptionalParams
        fullName: ServiceFabricClientRemoveReplicaOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
  - uid: '@azure/servicefabric.HealthInformation'
    name: HealthInformation
    spec.typeScript:
      - name: HealthInformation
        fullName: HealthInformation
        uid: '@azure/servicefabric.HealthInformation'
  - uid: '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
    name: ServiceFabricClientReportApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportApplicationHealthOptionalParams
        fullName: ServiceFabricClientReportApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
    name: ServiceFabricClientReportClusterHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportClusterHealthOptionalParams
        fullName: ServiceFabricClientReportClusterHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
    name: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
        fullName: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
    name: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
        fullName: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
    name: ServiceFabricClientReportNodeHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportNodeHealthOptionalParams
        fullName: ServiceFabricClientReportNodeHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
    name: ServiceFabricClientReportPartitionHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportPartitionHealthOptionalParams
        fullName: ServiceFabricClientReportPartitionHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
    name: ServiceFabricClientReportReplicaHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportReplicaHealthOptionalParams
        fullName: ServiceFabricClientReportReplicaHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
    name: ServiceFabricClientReportServiceHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportServiceHealthOptionalParams
        fullName: ServiceFabricClientReportServiceHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
    name: ServiceFabricClientResetPartitionLoadOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResetPartitionLoadOptionalParams
        fullName: ServiceFabricClientResetPartitionLoadOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
    name: ResolvedServicePartition>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResolvedServicePartition
        fullName: ResolvedServicePartition
        uid: '@azure/servicefabric.ResolvedServicePartition'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
    name: ServiceFabricClientResolveServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResolveServiceOptionalParams
        fullName: ServiceFabricClientResolveServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
  - uid: '@azure/servicefabric.RestartDeployedCodePackageDescription'
    name: RestartDeployedCodePackageDescription
    spec.typeScript:
      - name: RestartDeployedCodePackageDescription
        fullName: RestartDeployedCodePackageDescription
        uid: '@azure/servicefabric.RestartDeployedCodePackageDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
    name: ServiceFabricClientRestartDeployedCodePackageOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartDeployedCodePackageOptionalParams
        fullName: ServiceFabricClientRestartDeployedCodePackageOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
  - uid: '@azure/servicefabric.RestartNodeDescription'
    name: RestartNodeDescription
    spec.typeScript:
      - name: RestartNodeDescription
        fullName: RestartNodeDescription
        uid: '@azure/servicefabric.RestartNodeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
    name: ServiceFabricClientRestartNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartNodeOptionalParams
        fullName: ServiceFabricClientRestartNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
    name: ServiceFabricClientRestartReplicaOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartReplicaOptionalParams
        fullName: ServiceFabricClientRestartReplicaOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
  - uid: '@azure/servicefabric.RestorePartitionDescription'
    name: RestorePartitionDescription
    spec.typeScript:
      - name: RestorePartitionDescription
        fullName: RestorePartitionDescription
        uid: '@azure/servicefabric.RestorePartitionDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
    name: ServiceFabricClientRestorePartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestorePartitionOptionalParams
        fullName: ServiceFabricClientRestorePartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
    name: ServiceFabricClientResumeApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeApplicationBackupOptionalParams
        fullName: ServiceFabricClientResumeApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ResumeApplicationUpgradeDescription'
    name: ResumeApplicationUpgradeDescription
    spec.typeScript:
      - name: ResumeApplicationUpgradeDescription
        fullName: ResumeApplicationUpgradeDescription
        uid: '@azure/servicefabric.ResumeApplicationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
    name: ServiceFabricClientResumeApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientResumeApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ResumeClusterUpgradeDescription'
    name: ResumeClusterUpgradeDescription
    spec.typeScript:
      - name: ResumeClusterUpgradeDescription
        fullName: ResumeClusterUpgradeDescription
        uid: '@azure/servicefabric.ResumeClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
    name: ServiceFabricClientResumeClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeClusterUpgradeOptionalParams
        fullName: ServiceFabricClientResumeClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
    name: ServiceFabricClientResumePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumePartitionBackupOptionalParams
        fullName: ServiceFabricClientResumePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
    name: ServiceFabricClientResumeServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeServiceBackupOptionalParams
        fullName: ServiceFabricClientResumeServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
    name: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
    name: ServiceFabricClientRollbackClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRollbackClusterUpgradeOptionalParams
        fullName: ServiceFabricClientRollbackClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
    name: UpgradeOrchestrationServiceState
    spec.typeScript:
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
  - uid: ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
    name: UpgradeOrchestrationServiceStateSummary>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UpgradeOrchestrationServiceStateSummary
        fullName: UpgradeOrchestrationServiceStateSummary
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceStateSummary'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
    name: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
        fullName: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription'
    name: ApplicationUpgradeDescription
    spec.typeScript:
      - name: ApplicationUpgradeDescription
        fullName: ApplicationUpgradeDescription
        uid: '@azure/servicefabric.ApplicationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
    name: ServiceFabricClientStartApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientStartApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ChaosParameters'
    name: ChaosParameters
    spec.typeScript:
      - name: ChaosParameters
        fullName: ChaosParameters
        uid: '@azure/servicefabric.ChaosParameters'
  - uid: '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
    name: ServiceFabricClientStartChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartChaosOptionalParams
        fullName: ServiceFabricClientStartChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
  - uid: '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
    name: ClusterConfigurationUpgradeDescription
    spec.typeScript:
      - name: ClusterConfigurationUpgradeDescription
        fullName: ClusterConfigurationUpgradeDescription
        uid: '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
    name: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
        fullName: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription'
    name: StartClusterUpgradeDescription
    spec.typeScript:
      - name: StartClusterUpgradeDescription
        fullName: StartClusterUpgradeDescription
        uid: '@azure/servicefabric.StartClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
    name: ServiceFabricClientStartClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartClusterUpgradeOptionalParams
        fullName: ServiceFabricClientStartClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
    name: ComposeDeploymentUpgradeDescription
    spec.typeScript:
      - name: ComposeDeploymentUpgradeDescription
        fullName: ComposeDeploymentUpgradeDescription
        uid: '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
    name: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
        fullName: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
    name: ServiceFabricClientStartDataLossOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartDataLossOptionalParams
        fullName: ServiceFabricClientStartDataLossOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
    name: ServiceFabricClientStartNodeTransitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartNodeTransitionOptionalParams
        fullName: ServiceFabricClientStartNodeTransitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
    name: ServiceFabricClientStartPartitionRestartOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartPartitionRestartOptionalParams
        fullName: ServiceFabricClientStartPartitionRestartOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
    name: ServiceFabricClientStartQuorumLossOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartQuorumLossOptionalParams
        fullName: ServiceFabricClientStartQuorumLossOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
    name: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
        fullName: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
    name: ServiceFabricClientStopChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStopChaosOptionalParams
        fullName: ServiceFabricClientStopChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
  - uid: '@azure/servicefabric.PropertyBatchDescriptionList'
    name: PropertyBatchDescriptionList
    spec.typeScript:
      - name: PropertyBatchDescriptionList
        fullName: PropertyBatchDescriptionList
        uid: '@azure/servicefabric.PropertyBatchDescriptionList'
  - uid: '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
    name: ServiceFabricClientSubmitPropertyBatchOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSubmitPropertyBatchOptionalParams
        fullName: ServiceFabricClientSubmitPropertyBatchOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
    name: ServiceFabricClientSuspendApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendApplicationBackupOptionalParams
        fullName: ServiceFabricClientSuspendApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
    name: ServiceFabricClientSuspendPartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendPartitionBackupOptionalParams
        fullName: ServiceFabricClientSuspendPartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
    name: ServiceFabricClientSuspendServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendServiceBackupOptionalParams
        fullName: ServiceFabricClientSuspendServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams'
    name: ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams
        fullName: ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientToggleVerboseServicePlacementHealthReportingOptionalParams'
  - uid: '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
    name: UnprovisionApplicationTypeDescriptionInfo
    spec.typeScript:
      - name: UnprovisionApplicationTypeDescriptionInfo
        fullName: UnprovisionApplicationTypeDescriptionInfo
        uid: '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
  - uid: '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
    name: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
        fullName: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
  - uid: '@azure/servicefabric.UnprovisionFabricDescription'
    name: UnprovisionFabricDescription
    spec.typeScript:
      - name: UnprovisionFabricDescription
        fullName: UnprovisionFabricDescription
        uid: '@azure/servicefabric.UnprovisionFabricDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
    name: ServiceFabricClientUnprovisionClusterOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUnprovisionClusterOptionalParams
        fullName: ServiceFabricClientUnprovisionClusterOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
  - uid: '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
    name: ApplicationUpgradeUpdateDescription
    spec.typeScript:
      - name: ApplicationUpgradeUpdateDescription
        fullName: ApplicationUpgradeUpdateDescription
        uid: '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
    name: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
    name: ServiceFabricClientUpdateBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateBackupPolicyOptionalParams
        fullName: ServiceFabricClientUpdateBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.UpdateClusterUpgradeDescription'
    name: UpdateClusterUpgradeDescription
    spec.typeScript:
      - name: UpdateClusterUpgradeDescription
        fullName: UpdateClusterUpgradeDescription
        uid: '@azure/servicefabric.UpdateClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
    name: ServiceFabricClientUpdateClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateClusterUpgradeOptionalParams
        fullName: ServiceFabricClientUpdateClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
    name: RepairTaskUpdateHealthPolicyDescription
    spec.typeScript:
      - name: RepairTaskUpdateHealthPolicyDescription
        fullName: RepairTaskUpdateHealthPolicyDescription
        uid: '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
    name: ServiceFabricClientUpdateServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateServiceOptionalParams
        fullName: ServiceFabricClientUpdateServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
    name: ServiceFabricClientUploadFileOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUploadFileOptionalParams
        fullName: ServiceFabricClientUploadFileOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'
    name: ServiceFabricClientUploadFileChunkOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUploadFileChunkOptionalParams
        fullName: ServiceFabricClientUploadFileChunkOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'