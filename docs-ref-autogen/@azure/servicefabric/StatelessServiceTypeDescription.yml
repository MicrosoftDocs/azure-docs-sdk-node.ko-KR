### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription'
    name: StatelessServiceTypeDescription
    fullName: StatelessServiceTypeDescription
    children:
      - '@azure/servicefabric.StatelessServiceTypeDescription.extensions'
      - '@azure/servicefabric.StatelessServiceTypeDescription.isStateful'
      - '@azure/servicefabric.StatelessServiceTypeDescription.kind'
      - '@azure/servicefabric.StatelessServiceTypeDescription.loadMetrics'
      - '@azure/servicefabric.StatelessServiceTypeDescription.placementConstraints'
      - '@azure/servicefabric.StatelessServiceTypeDescription.servicePlacementPolicies'
      - '@azure/servicefabric.StatelessServiceTypeDescription.serviceTypeName'
      - '@azure/servicefabric.StatelessServiceTypeDescription.useImplicitHost'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="44876-101">프로 비전 된 응용 프로그램 형식의 서비스 매니페스트에서 정의 된 상태 비저장 서비스 형식을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="44876-101">Describes a stateless service type defined in the service manifest of a provisioned application type.</span></span>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.extensions'
    name: extensions
    fullName: extensions
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="44876-102">서비스 형식 확장의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="44876-102">List of service type extensions.</span></span>
    optional: true
    syntax:
      content: 'extensions?: ServiceTypeExtensionDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceTypeExtensionDescription[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.isStateful'
    name: isStateful
    fullName: isStateful
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="44876-103">서비스 유형이 상태 저장 서비스 유형 또는 상태 비저장 서비스 형식 인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="44876-103">Indicates whether the service type is a stateful service type or a stateless service type.</span></span>
      <span data-ttu-id="44876-104">이 속성은 서비스 유형이 상태 저장 서비스 형식이 면, false이 고, 그렇지 true.</span><span class="sxs-lookup"><span data-stu-id="44876-104">This property is true if the service type is a stateful service type, false otherwise.</span></span>
    optional: true
    syntax:
      content: 'isStateful?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.kind'
    name: kind
    fullName: kind
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="44876-105">다형 판별자</span><span class="sxs-lookup"><span data-stu-id="44876-105">Polymorphic Discriminator</span></span>
    syntax:
      content: 'kind: "Stateless"'
      return:
        type:
          - '"Stateless"'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.loadMetrics'
    name: loadMetrics
    fullName: loadMetrics
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="44876-106">서비스 부하 메트릭 ServiceLoadMetricDescription 개체의 배열로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="44876-106">The service load metrics is given as an array of ServiceLoadMetricDescription objects.</span></span>
    optional: true
    syntax:
      content: 'loadMetrics?: ServiceLoadMetricDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceLoadMetricDescription[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.placementConstraints'
    name: placementConstraints
    fullName: placementConstraints
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="44876-107">Service Fabric 클러스터에서이 서비스를 인스턴스화할 때 사용할 배치 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="44876-107">The placement constraint to be used when instantiating this service in a Service Fabric cluster.</span></span>
    optional: true
    syntax:
      content: 'placementConstraints?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.servicePlacementPolicies'
    name: servicePlacementPolicies
    fullName: servicePlacementPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="44876-108">서비스 배치 정책 설명의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="44876-108">List of service placement policy descriptions.</span></span>
    optional: true
    syntax:
      content: 'servicePlacementPolicies?: ServicePlacementPolicyDescriptionUnion[]'
      return:
        type:
          - '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.serviceTypeName'
    name: serviceTypeName
    fullName: serviceTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="44876-109">서비스 매니페스트에 지정 된 대로 서비스 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="44876-109">Name of the service type as specified in the service manifest.</span></span>
    optional: true
    syntax:
      content: 'serviceTypeName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.useImplicitHost'
    name: useImplicitHost
    fullName: useImplicitHost
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="44876-110">나타내는 플래그가이 형식을 구현 및 사용자 서비스 프로세스에 의해 호스트 되지 않는 경우 하지만 암시적으로 생성 하는 시스템 프로세스에 의해 호스트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="44876-110">A flag indicating if this type is not implemented and hosted by a user service process, but is implicitly hosted by a system created process.</span></span> <span data-ttu-id="44876-111">이 값은 게스트 실행 파일 서비스를 그렇지 않으면 false를 사용 하는 서비스에 대 한 true.</span><span class="sxs-lookup"><span data-stu-id="44876-111">This value is true for services using the guest executable services, false otherwise.</span></span>'
    optional: true
    syntax:
      content: 'useImplicitHost?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceTypeExtensionDescription[]'
    name: 'ServiceTypeExtensionDescription[]'
    spec.typeScript:
      - name: ServiceTypeExtensionDescription
        fullName: ServiceTypeExtensionDescription
        uid: '@azure/servicefabric.ServiceTypeExtensionDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServiceLoadMetricDescription[]'
    name: 'ServiceLoadMetricDescription[]'
    spec.typeScript:
      - name: ServiceLoadMetricDescription
        fullName: ServiceLoadMetricDescription
        uid: '@azure/servicefabric.ServiceLoadMetricDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
    name: 'ServicePlacementPolicyDescriptionUnion[]'
    spec.typeScript:
      - name: ServicePlacementPolicyDescriptionUnion
        fullName: ServicePlacementPolicyDescriptionUnion
        uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion'
      - name: '[]'
        fullName: '[]'