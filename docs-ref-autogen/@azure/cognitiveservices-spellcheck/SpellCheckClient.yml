### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient'
    name: SpellCheckClient
    fullName: SpellCheckClient
    children:
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.credentials'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.endpoint'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendOperationRequest'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendRequest'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.constructor'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'endpoint?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c4ac7-101">제공 된 OperationSpec를 사용 하 여 채워지는 HTTP 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-101">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="c4ac7-102">HTTP 요청의 템플릿 값에서 채워집니다는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-102">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="c4ac7-103">Http 요청을 채우는 데 사용할 OperationSpec 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-103">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="c4ac7-104">응답을 받을 때 호출할 콜백.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-104">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c4ac7-105">제공 된 http 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-105">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.constructor'
    name: 'SpellCheckClient(ServiceClientCredentials, Models.SpellCheckClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="c4ac7-106">SpellCheckClient 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-106">Initializes a new instance of the SpellCheckClient class.</span></span>
    syntax:
      content: 'new SpellCheckClient(credentials: ServiceClientCredentials, options?: Models.SpellCheckClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="c4ac7-107">클라이언트 구독을 고유 하 게 식별 하는 구독 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-107">Subscription credentials which uniquely identify client subscription.</span></span>
        - id: options
          type:
            - Models.SpellCheckClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker'
    name: 'spellChecker(string, Models.SpellCheckClientSpellCheckerOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options?: Models.SpellCheckClientSpellCheckerOptionalParams)'
      parameters:
        - id: text
          type:
            - string
          description: |-
            <span data-ttu-id="c4ac7-108">맞춤법 및 문법 오류를 확인 하려면 텍스트 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-108">The text string to check for spelling and grammar errors.</span></span> <span data-ttu-id="c4ac7-109">텍스트 문자열, preContextText 문자열과 postContextText 문자열의 조합 된 길이 10,000 자를 초과할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-109">The combined length of the text string, preContextText string, and postContextText string may not exceed 10,000 characters.</span></span>
            <span data-ttu-id="c4ac7-110">GET 요청의 쿼리 문자열 또는 POST 요청의 본문에서이 매개 변수를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-110">You may specify this parameter in the query string of a GET request or in the body of a POST request.</span></span> <span data-ttu-id="c4ac7-111">쿼리 문자열 길이 제한으로 인해만 짧은 문자열을 확인 하지 않는 한 POST 요청을 일반적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-111">Because of the query string length limit, you'll typically use a POST request unless you're checking only short strings.</span></span>
        - id: options
          type:
            - Models.SpellCheckClientSpellCheckerOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SpellCheckerResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1'
    name: 'spellChecker(string, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: |-
            <span data-ttu-id="c4ac7-112">맞춤법 및 문법 오류를 확인 하려면 텍스트 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-112">The text string to check for spelling and grammar errors.</span></span> <span data-ttu-id="c4ac7-113">텍스트 문자열, preContextText 문자열과 postContextText 문자열의 조합 된 길이 10,000 자를 초과할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-113">The combined length of the text string, preContextText string, and postContextText string may not exceed 10,000 characters.</span></span>
            <span data-ttu-id="c4ac7-114">GET 요청의 쿼리 문자열 또는 POST 요청의 본문에서이 매개 변수를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-114">You may specify this parameter in the query string of a GET request or in the body of a POST request.</span></span> <span data-ttu-id="c4ac7-115">쿼리 문자열 길이 제한으로 인해만 짧은 문자열을 확인 하지 않는 한 POST 요청을 일반적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-115">Because of the query string length limit, you'll typically use a POST request unless you're checking only short strings.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
          description: |
            <span data-ttu-id="c4ac7-116">콜백</span><span class="sxs-lookup"><span data-stu-id="c4ac7-116">The callback</span></span>
      return:
        type:
          - Promise<Models.SpellCheckerResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2'
    name: 'spellChecker(string, SpellCheckClientSpellCheckerOptionalParams, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options: SpellCheckClientSpellCheckerOptionalParams, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: |-
            <span data-ttu-id="c4ac7-117">맞춤법 및 문법 오류를 확인 하려면 텍스트 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-117">The text string to check for spelling and grammar errors.</span></span> <span data-ttu-id="c4ac7-118">텍스트 문자열, preContextText 문자열과 postContextText 문자열의 조합 된 길이 10,000 자를 초과할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-118">The combined length of the text string, preContextText string, and postContextText string may not exceed 10,000 characters.</span></span>
            <span data-ttu-id="c4ac7-119">GET 요청의 쿼리 문자열 또는 POST 요청의 본문에서이 매개 변수를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-119">You may specify this parameter in the query string of a GET request or in the body of a POST request.</span></span> <span data-ttu-id="c4ac7-120">쿼리 문자열 길이 제한으로 인해만 짧은 문자열을 확인 하지 않는 한 POST 요청을 일반적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ac7-120">Because of the query string length limit, you'll typically use a POST request unless you're checking only short strings.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams'
          description: <span data-ttu-id="c4ac7-121">선택적 매개 변수</span><span class="sxs-lookup"><span data-stu-id="c4ac7-121">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
          description: |
            <span data-ttu-id="c4ac7-122">콜백</span><span class="sxs-lookup"><span data-stu-id="c4ac7-122">The callback</span></span>
      return:
        type:
          - Promise<Models.SpellCheckerResponse>
    package: '@azure/cognitiveservices-spellcheck'
references:
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
    name: SpellCheckClientContext
    spec.typeScript:
      - name: SpellCheckClientContext
        fullName: SpellCheckClientContext
        uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SpellCheck
        fullName: SpellCheck
        uid: '@azure/cognitiveservices-spellcheck.SpellCheck'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams'
    name: SpellCheckClientSpellCheckerOptionalParams
    spec.typeScript:
      - name: SpellCheckClientSpellCheckerOptionalParams
        fullName: SpellCheckClientSpellCheckerOptionalParams
        uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams'