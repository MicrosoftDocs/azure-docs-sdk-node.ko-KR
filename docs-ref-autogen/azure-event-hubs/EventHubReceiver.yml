### YamlMime:UniversalReference
ms.openlocfilehash: 15d96371a3794b5c36396870e8227a33cee16ac8
ms.sourcegitcommit: 6341d50df9591697ca6d5ae0e657a9840289d8c9
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/17/2018
ms.locfileid: "40454478"
items:
- uid: azure-event-hubs.EventHubReceiver
  name: EventHubReceiver
  fullName: EventHubReceiver
  children:
  - azure-event-hubs.EventHubReceiver.close
  - azure-event-hubs.EventHubReceiver.consumerGroup
  - azure-event-hubs.EventHubReceiver.detached
  - azure-event-hubs.EventHubReceiver.epoch
  - azure-event-hubs.EventHubReceiver.constructor
  - azure-event-hubs.EventHubReceiver.identifier
  - azure-event-hubs.EventHubReceiver.isOpen
  - azure-event-hubs.EventHubReceiver.options
  - azure-event-hubs.EventHubReceiver.prefetchCount
  - azure-event-hubs.EventHubReceiver.receiverRuntimeMetricEnabled
  - azure-event-hubs.EventHubReceiver.runtimeInfo
  langs:
  - typeScript
  type: class
  summary: 이벤트 허브에서 이벤트 데이터를 받을 EventHubReceiver를 설명 합니다.
  extends:
    name: azure-event-hubs.LinkEntity
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: 기본 AMQP 수신기를 닫습니다.
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.consumerGroup
  name: consumerGroup
  fullName: consumerGroup
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'consumerGroup: string'
    return:
      type:
      - string
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.detached
  name: detached
  children: []
  type: method
  langs:
  - typeScript
  summary: 필요한 경우는 수신자 링크를 다시 연결 됩니다.
  syntax:
    content: 'function detached(receiverError?: AmqpError | Error)'
    parameters:
    - id: receiverError
      type:
      - AmqpError | Error
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.epoch
  name: epoch
  fullName: epoch
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'epoch?: number'
    return:
      type:
      - number
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.constructor
  name: EventHubReceiver
  children: []
  type: constructor
  langs:
  - typeScript
  summary: AMQP에서 새 수신기를 인스턴스화하고 `Receiver`합니다. 사용한 `EventHubClient`합니다.
  syntax:
    content: 'new EventHubReceiver(context: ConnectionContext, partitionId: string | number, options?: ReceiveOptions)'
    parameters:
    - id: context
      type:
      - azure-event-hubs.ConnectionContext
      description: ''
    - id: partitionId
      type:
      - string | number
      description: 수신 하는 파티션 ID입니다.
    - id: options
      type:
      - azure-event-hubs.ReceiveOptions
      description: ''
      optional: true
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.identifier
  name: identifier
  fullName: identifier
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'identifier?: string'
    return:
      type:
      - string
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.isOpen
  name: isOpen
  children: []
  type: method
  langs:
  - typeScript
  summary: AMQP 수신기 링크 열려 있는지 여부를 결정 합니다. 열려 있는 경우에 다른 반환 true false를 반환 합니다.
  syntax:
    content: function isOpen()
    parameters: []
    return:
      type:
      - boolean
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.options
  name: options
  fullName: options
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'options: ReceiveOptions'
    return:
      type:
      - azure-event-hubs.ReceiveOptions
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.prefetchCount
  name: prefetchCount
  fullName: prefetchCount
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'prefetchCount?: number'
    return:
      type:
      - number
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.receiverRuntimeMetricEnabled
  name: receiverRuntimeMetricEnabled
  fullName: receiverRuntimeMetricEnabled
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'receiverRuntimeMetricEnabled: boolean'
    return:
      type:
      - boolean
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubReceiver.runtimeInfo
  name: runtimeInfo
  fullName: runtimeInfo
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'runtimeInfo: ReceiverRuntimeInfo'
    return:
      type:
      - azure-event-hubs.ReceiverRuntimeInfo
  package: azure-event-hubs
references:
- uid: azure-event-hubs.LinkEntity
  spec.typeScript:
  - name: LinkEntity
    fullName: LinkEntity
    uid: azure-event-hubs.LinkEntity
- uid: azure-event-hubs.ConnectionContext
  spec.typeScript:
  - name: ConnectionContext
    fullName: ConnectionContext
    uid: azure-event-hubs.ConnectionContext
- uid: azure-event-hubs.ReceiveOptions
  spec.typeScript:
  - name: ReceiveOptions
    fullName: ReceiveOptions
    uid: azure-event-hubs.ReceiveOptions
- uid: azure-event-hubs.ReceiverRuntimeInfo
  spec.typeScript:
  - name: ReceiverRuntimeInfo
    fullName: ReceiverRuntimeInfo
    uid: azure-event-hubs.ReceiverRuntimeInfo
