### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient
    name: ComputerVisionClient
    fullName: ComputerVisionClient
    children:
      - azure-cognitiveservices-computervision.ComputerVisionClient.addUserAgentInfo
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
      - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getPackageJsonInfo
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResultWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequestWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-101">사용자 에이전트 헤더에 사용자 지정 정보 추가</span><span class="sxs-lookup"><span data-stu-id="7a6e5-101">Adds custom information to user agent header</span></span>
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            <span data-ttu-id="7a6e5-102">사용자 에이전트 헤더 문자열에 추가할 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-102">information to be added to user agent header, as string.</span></span>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
    name: 'analyzeImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-103">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-103">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="7a6e5-104">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-104">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7a6e5-105">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-105">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="7a6e5-106">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-106">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="7a6e5-107">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-107">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-108">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-108">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-109">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-109">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
    name: 'analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-110">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-110">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="7a6e5-111">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-111">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7a6e5-112">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-112">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="7a6e5-113">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-113">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="7a6e5-114">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-114">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-115">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-115">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
    name: 'analyzeImage(string, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-116">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-116">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="7a6e5-117">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-117">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7a6e5-118">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-118">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="7a6e5-119">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-119">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="7a6e5-120">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-120">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-121">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-121">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
    name: 'analyzeImageByDomain(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-122">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-122">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="7a6e5-123">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-123">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="7a6e5-124">현재 API를 다음 도메인 특정 모델을 제공 합니다: 유명인 200,000 명을, 랜드마크 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-124">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="7a6e5-125">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-125">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-126">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-126">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="7a6e5-127">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-127">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-128">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-128">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-129">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-129">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
    name: 'analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-130">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-130">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="7a6e5-131">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-131">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="7a6e5-132">현재 API를 다음 도메인 특정 모델을 제공 합니다: 유명인 200,000 명을, 랜드마크 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-132">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="7a6e5-133">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-133">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-134">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-134">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="7a6e5-135">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-135">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
    name: 'analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-136">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-136">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="7a6e5-137">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-137">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="7a6e5-138">현재 API를 다음 도메인 특정 모델을 제공 합니다: 유명인 200,000 명을, 랜드마크 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-138">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="7a6e5-139">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-139">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-140">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-140">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="7a6e5-141">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-141">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
    name: 'analyzeImageByDomainInStream(string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-142">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-142">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="7a6e5-143">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-143">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="7a6e5-144">현재 API를 다음 도메인 특정 모델을 제공 합니다: 유명인 200,000 명을, 랜드마크 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-144">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="7a6e5-145">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-145">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-146">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-146">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="7a6e5-147">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-147">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-148">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-148">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-149">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-149">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
    name: 'analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-150">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-150">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="7a6e5-151">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-151">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="7a6e5-152">현재 API를 다음 도메인 특정 모델을 제공 합니다: 유명인 200,000 명을, 랜드마크 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-152">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="7a6e5-153">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-153">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-154">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-154">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="7a6e5-155">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-155">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
    name: 'analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-156">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-156">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="7a6e5-157">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-157">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="7a6e5-158">현재 API를 다음 도메인 특정 모델을 제공 합니다: 유명인 200,000 명을, 랜드마크 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-158">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="7a6e5-159">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-159">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-160">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-160">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="7a6e5-161">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-161">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
    name: 'analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-162">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-162">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="7a6e5-163">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-163">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="7a6e5-164">현재 API를 다음 도메인 특정 모델을 제공 합니다: 유명인 200,000 명을, 랜드마크 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-164">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="7a6e5-165">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-165">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-166">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-166">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="7a6e5-167">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-167">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-168">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-168">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-169">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-169">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
    name: 'analyzeImageByDomainWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-170">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-170">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="7a6e5-171">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-171">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="7a6e5-172">현재 API를 다음 도메인 특정 모델을 제공 합니다: 유명인 200,000 명을, 랜드마크 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-172">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="7a6e5-173">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-173">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-174">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-174">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="7a6e5-175">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-175">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-176">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-176">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-177">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-177">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
    name: 'analyzeImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-178">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-178">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="7a6e5-179">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-179">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7a6e5-180">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-180">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="7a6e5-181">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-181">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="7a6e5-182">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-182">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-183">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-183">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-184">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-184">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
    name: 'analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-185">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-185">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="7a6e5-186">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-186">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7a6e5-187">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-187">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="7a6e5-188">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-188">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="7a6e5-189">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-189">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-190">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-190">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
    name: 'analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-191">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-191">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="7a6e5-192">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-192">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7a6e5-193">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-193">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="7a6e5-194">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-194">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="7a6e5-195">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-195">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-196">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-196">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
    name: 'analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-197">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-197">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="7a6e5-198">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-198">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7a6e5-199">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-199">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="7a6e5-200">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-200">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="7a6e5-201">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-201">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-202">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-202">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-203">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-203">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
    name: 'analyzeImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-204">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-204">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="7a6e5-205">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-205">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7a6e5-206">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-206">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="7a6e5-207">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-207">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="7a6e5-208">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-208">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-209">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-209">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-210">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-210">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile
    name: 'batchReadFile(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-211">이 인터페이스를 사용 하 여 텍스트가 많은 문서에 대 한 액세스에 최적화 된 최첨단-광학 문자 인식 (OCR) 알고리즘을 사용 하 여 읽기 작업의 결과 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-211">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="7a6e5-212">파일을 읽고 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-212">When you use the Read File interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="7a6e5-213">"작업 위치" 필드는 결과에 액세스 OCR "작업 결과 읽기" 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-213">The "Operation-Location" field contains the URL that you must use for your "Read Operation Result" operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFile(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-214">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-214">Publicly reachable URL of an image.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-215">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-215">Type of text to recognize.</span></span> <span data-ttu-id="7a6e5-216">가능한 값은 다음과 같습니다. 'Handwritten', 'Printed'</span><span class="sxs-lookup"><span data-stu-id="7a6e5-216">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2
    name: 'batchReadFile(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-217">이 인터페이스를 사용 하 여 텍스트가 많은 문서에 대 한 액세스에 최적화 된 최첨단-광학 문자 인식 (OCR) 알고리즘을 사용 하 여 읽기 작업의 결과 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-217">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="7a6e5-218">파일을 읽고 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-218">When you use the Read File interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="7a6e5-219">"작업 위치" 필드는 결과에 액세스 OCR "작업 결과 읽기" 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-219">The "Operation-Location" field contains the URL that you must use for your "Read Operation Result" operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFile(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1
    name: 'batchReadFile(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-220">이 인터페이스를 사용 하 여 텍스트가 많은 문서에 대 한 액세스에 최적화 된 최첨단-광학 문자 인식 (OCR) 알고리즘을 사용 하 여 읽기 작업의 결과 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-220">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="7a6e5-221">파일을 읽고 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-221">When you use the Read File interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="7a6e5-222">"작업 위치" 필드는 결과에 액세스 OCR "작업 결과 읽기" 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-222">The "Operation-Location" field contains the URL that you must use for your "Read Operation Result" operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFile(url: string, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream
    name: 'batchReadFileInStream(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-223">이 인터페이스를 사용 하 여 텍스트가 많은 문서에 대 한 액세스에 최적화 된 최첨단-광학 문자 인식 (OCR) 알고리즘을 사용 하는 문서 읽기 작업의 결과 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-223">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="7a6e5-224">문서 읽기 인터페이스를 사용 하면 응답 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-224">When you use the Read Document interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="7a6e5-225">"작업 위치" 필드 액세스 OCR 결과 "Get 작업 결과 읽기"에 대 한 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-225">The "Operation-Location" field contains the URL that you must use for your "Get Read Result operation" to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-226">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-226">An image stream.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-227">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-227">Type of text to recognize.</span></span> <span data-ttu-id="7a6e5-228">가능한 값은 다음과 같습니다. 'Handwritten', 'Printed'</span><span class="sxs-lookup"><span data-stu-id="7a6e5-228">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2
    name: 'batchReadFileInStream(stream.Readable, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-229">이 인터페이스를 사용 하 여 텍스트가 많은 문서에 대 한 액세스에 최적화 된 최첨단-광학 문자 인식 (OCR) 알고리즘을 사용 하는 문서 읽기 작업의 결과 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-229">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="7a6e5-230">문서 읽기 인터페이스를 사용 하면 응답 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-230">When you use the Read Document interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="7a6e5-231">"작업 위치" 필드 액세스 OCR 결과 "Get 작업 결과 읽기"에 대 한 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-231">The "Operation-Location" field contains the URL that you must use for your "Get Read Result operation" to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1
    name: 'batchReadFileInStream(stream.Readable, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-232">이 인터페이스를 사용 하 여 텍스트가 많은 문서에 대 한 액세스에 최적화 된 최첨단-광학 문자 인식 (OCR) 알고리즘을 사용 하는 문서 읽기 작업의 결과 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-232">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="7a6e5-233">문서 읽기 인터페이스를 사용 하면 응답 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-233">When you use the Read Document interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="7a6e5-234">"작업 위치" 필드 액세스 OCR 결과 "Get 작업 결과 읽기"에 대 한 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-234">The "Operation-Location" field contains the URL that you must use for your "Get Read Result operation" to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStreamWithHttpOperationResponse
    name: 'batchReadFileInStreamWithHttpOperationResponse(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-235">이 인터페이스를 사용 하 여 텍스트가 많은 문서에 대 한 액세스에 최적화 된 최첨단-광학 문자 인식 (OCR) 알고리즘을 사용 하는 문서 읽기 작업의 결과 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-235">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="7a6e5-236">문서 읽기 인터페이스를 사용 하면 응답 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-236">When you use the Read Document interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="7a6e5-237">"작업 위치" 필드 액세스 OCR 결과 "Get 작업 결과 읽기"에 대 한 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-237">The "Operation-Location" field contains the URL that you must use for your "Get Read Result operation" to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-238">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-238">An image stream.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-239">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-239">Type of text to recognize.</span></span> <span data-ttu-id="7a6e5-240">가능한 값은 다음과 같습니다. 'Handwritten', 'Printed'</span><span class="sxs-lookup"><span data-stu-id="7a6e5-240">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileWithHttpOperationResponse
    name: 'batchReadFileWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-241">이 인터페이스를 사용 하 여 텍스트가 많은 문서에 대 한 액세스에 최적화 된 최첨단-광학 문자 인식 (OCR) 알고리즘을 사용 하 여 읽기 작업의 결과 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-241">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="7a6e5-242">파일을 읽고 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-242">When you use the Read File interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="7a6e5-243">"작업 위치" 필드는 결과에 액세스 OCR "작업 결과 읽기" 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-243">The "Operation-Location" field contains the URL that you must use for your "Read Operation Result" operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileWithHttpOperationResponse(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-244">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-244">Publicly reachable URL of an image.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-245">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-245">Type of text to recognize.</span></span> <span data-ttu-id="7a6e5-246">가능한 값은 다음과 같습니다. 'Handwritten', 'Printed'</span><span class="sxs-lookup"><span data-stu-id="7a6e5-246">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
    name: 'ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            <span data-ttu-id="7a6e5-247">클라이언트 구독을 고유 하 게 식별 하는 구독 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-247">Subscription credentials which uniquely identify client subscription.</span></span>
        - id: endpoint
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-248">지원 되는 Cognitive Services 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-248">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - ServiceClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
    name: 'describeImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-249">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-249">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="7a6e5-250">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-250">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7a6e5-251">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-251">More than one description can be generated for each image.</span></span> <span data-ttu-id="7a6e5-252">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-252">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7a6e5-253">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-253">All descriptions are in English.</span></span>
      <span data-ttu-id="7a6e5-254">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-254">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-255">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-255">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-256">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-256">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-257">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-257">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
    name: 'describeImage(string, Object, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-258">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-258">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="7a6e5-259">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-259">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7a6e5-260">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-260">More than one description can be generated for each image.</span></span> <span data-ttu-id="7a6e5-261">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-261">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7a6e5-262">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-262">All descriptions are in English.</span></span>
      <span data-ttu-id="7a6e5-263">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-263">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-264">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-264">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-265">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-265">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
    name: 'describeImage(string, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-266">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-266">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="7a6e5-267">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-267">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7a6e5-268">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-268">More than one description can be generated for each image.</span></span> <span data-ttu-id="7a6e5-269">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-269">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7a6e5-270">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-270">All descriptions are in English.</span></span>
      <span data-ttu-id="7a6e5-271">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-271">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-272">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-272">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-273">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-273">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
    name: 'describeImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-274">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-274">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="7a6e5-275">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-275">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7a6e5-276">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-276">More than one description can be generated for each image.</span></span> <span data-ttu-id="7a6e5-277">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-277">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7a6e5-278">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-278">All descriptions are in English.</span></span>
      <span data-ttu-id="7a6e5-279">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-279">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-280">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-280">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-281">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-281">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-282">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-282">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
    name: 'describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-283">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-283">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="7a6e5-284">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-284">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7a6e5-285">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-285">More than one description can be generated for each image.</span></span> <span data-ttu-id="7a6e5-286">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-286">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7a6e5-287">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-287">All descriptions are in English.</span></span>
      <span data-ttu-id="7a6e5-288">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-288">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-289">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-289">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-290">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-290">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
    name: 'describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-291">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-291">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="7a6e5-292">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-292">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7a6e5-293">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-293">More than one description can be generated for each image.</span></span> <span data-ttu-id="7a6e5-294">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-294">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7a6e5-295">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-295">All descriptions are in English.</span></span>
      <span data-ttu-id="7a6e5-296">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-296">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-297">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-297">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-298">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-298">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
    name: 'describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-299">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-299">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="7a6e5-300">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-300">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7a6e5-301">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-301">More than one description can be generated for each image.</span></span> <span data-ttu-id="7a6e5-302">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-302">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7a6e5-303">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-303">All descriptions are in English.</span></span>
      <span data-ttu-id="7a6e5-304">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-304">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-305">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-305">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-306">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-306">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-307">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-307">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
    name: 'describeImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-308">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-308">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="7a6e5-309">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-309">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7a6e5-310">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-310">More than one description can be generated for each image.</span></span> <span data-ttu-id="7a6e5-311">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-311">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7a6e5-312">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-312">All descriptions are in English.</span></span>
      <span data-ttu-id="7a6e5-313">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-313">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-314">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-314">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-315">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-315">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-316">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-316">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects
    name: 'detectObjects(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-317">지정된 된 이미지에서 개체 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-317">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="7a6e5-318">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-318">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-319">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-319">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-320">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-320">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjects(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-321">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-321">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_2
    name: 'detectObjects(string, Object, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-322">지정된 된 이미지에서 개체 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-322">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="7a6e5-323">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-323">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-324">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-324">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-325">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-325">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjects(url: string, options: Object, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_1
    name: 'detectObjects(string, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-326">지정된 된 이미지에서 개체 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-326">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="7a6e5-327">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-327">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-328">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-328">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-329">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-329">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjects(url: string, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream
    name: 'detectObjectsInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-330">지정된 된 이미지에서 개체 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-330">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="7a6e5-331">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-331">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-332">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-332">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-333">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-333">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-334">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-334">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2
    name: 'detectObjectsInStream(stream.Readable, Object, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-335">지정된 된 이미지에서 개체 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-335">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="7a6e5-336">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-336">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-337">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-337">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-338">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-338">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, options: Object, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1
    name: 'detectObjectsInStream(stream.Readable, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-339">지정된 된 이미지에서 개체 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-339">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="7a6e5-340">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-340">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-341">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-341">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-342">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-342">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStreamWithHttpOperationResponse
    name: 'detectObjectsInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-343">지정된 된 이미지에서 개체 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-343">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="7a6e5-344">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-344">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-345">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-345">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-346">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-346">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-347">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-347">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsWithHttpOperationResponse
    name: 'detectObjectsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-348">지정된 된 이미지에서 개체 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-348">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="7a6e5-349">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-349">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-350">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-350">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-351">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-351">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-352">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-352">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
    name: 'generateThumbnail(number, number, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-353">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-353">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7a6e5-354">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-354">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="7a6e5-355">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-355">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="7a6e5-356">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-356">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7a6e5-357">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-357">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-358">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-358">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-359">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-359">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            <span data-ttu-id="7a6e5-360">축소판 그림을 픽셀에서의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-360">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="7a6e5-361">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-361">It must be between 1 and 1024.</span></span> <span data-ttu-id="7a6e5-362">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-362">Recommended minimum of 50.</span></span>
        - id: height
          type:
            - number
          description: |
            <span data-ttu-id="7a6e5-363">축소판 그림을 픽셀에서의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-363">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="7a6e5-364">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-364">It must be between 1 and 1024.</span></span> <span data-ttu-id="7a6e5-365">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-365">Recommended minimum of 50.</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-366">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-366">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
    name: 'generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-367">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-367">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7a6e5-368">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-368">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="7a6e5-369">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-369">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="7a6e5-370">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-370">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7a6e5-371">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-371">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-372">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-372">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-373">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-373">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
    name: 'generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-374">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-374">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7a6e5-375">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-375">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="7a6e5-376">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-376">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="7a6e5-377">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-377">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7a6e5-378">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-378">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-379">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-379">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-380">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-380">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
    name: 'generateThumbnailInStream(number, number, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-381">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-381">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7a6e5-382">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-382">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="7a6e5-383">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-383">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="7a6e5-384">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-384">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7a6e5-385">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-385">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-386">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-386">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-387">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-387">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            <span data-ttu-id="7a6e5-388">축소판 그림을 픽셀에서의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-388">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="7a6e5-389">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-389">It must be between 1 and 1024.</span></span> <span data-ttu-id="7a6e5-390">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-390">Recommended minimum of 50.</span></span>
        - id: height
          type:
            - number
          description: |
            <span data-ttu-id="7a6e5-391">축소판 그림을 픽셀에서의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-391">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="7a6e5-392">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-392">It must be between 1 and 1024.</span></span> <span data-ttu-id="7a6e5-393">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-393">Recommended minimum of 50.</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-394">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-394">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
    name: 'generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-395">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-395">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7a6e5-396">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-396">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="7a6e5-397">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-397">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="7a6e5-398">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-398">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7a6e5-399">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-399">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-400">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-400">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-401">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-401">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
    name: 'generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-402">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-402">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7a6e5-403">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-403">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="7a6e5-404">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-404">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="7a6e5-405">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-405">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7a6e5-406">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-406">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-407">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-407">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-408">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-408">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
    name: 'generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-409">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-409">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7a6e5-410">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-410">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="7a6e5-411">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-411">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="7a6e5-412">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-412">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7a6e5-413">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-413">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-414">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-414">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-415">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-415">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            <span data-ttu-id="7a6e5-416">축소판 그림을 픽셀에서의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-416">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="7a6e5-417">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-417">It must be between 1 and 1024.</span></span> <span data-ttu-id="7a6e5-418">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-418">Recommended minimum of 50.</span></span>
        - id: height
          type:
            - number
          description: |
            <span data-ttu-id="7a6e5-419">축소판 그림을 픽셀에서의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-419">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="7a6e5-420">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-420">It must be between 1 and 1024.</span></span> <span data-ttu-id="7a6e5-421">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-421">Recommended minimum of 50.</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-422">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-422">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
    name: 'generateThumbnailWithHttpOperationResponse(number, number, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-423">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-423">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7a6e5-424">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-424">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="7a6e5-425">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-425">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="7a6e5-426">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-426">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7a6e5-427">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-427">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-428">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-428">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-429">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-429">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            <span data-ttu-id="7a6e5-430">축소판 그림을 픽셀에서의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-430">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="7a6e5-431">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-431">It must be between 1 and 1024.</span></span> <span data-ttu-id="7a6e5-432">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-432">Recommended minimum of 50.</span></span>
        - id: height
          type:
            - number
          description: |
            <span data-ttu-id="7a6e5-433">축소판 그림을 픽셀에서의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-433">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="7a6e5-434">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-434">It must be between 1 and 1024.</span></span> <span data-ttu-id="7a6e5-435">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-435">Recommended minimum of 50.</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-436">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-436">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest
    name: 'getAreaOfInterest(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-437">이 작업에는 이미지의 가장 중요 한 영역 주위에 경계 상자가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-437">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="7a6e5-438">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-438">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-439">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-439">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-440">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-440">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-441">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-441">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterest(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-442">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-442">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2
    name: 'getAreaOfInterest(string, Object, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-443">이 작업에는 이미지의 가장 중요 한 영역 주위에 경계 상자가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-443">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="7a6e5-444">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-444">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-445">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-445">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-446">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-446">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-447">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-447">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterest(url: string, options: Object, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1
    name: 'getAreaOfInterest(string, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-448">이 작업에는 이미지의 가장 중요 한 영역 주위에 경계 상자가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-448">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="7a6e5-449">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-449">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-450">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-450">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-451">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-451">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-452">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-452">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterest(url: string, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream
    name: 'getAreaOfInterestInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-453">이 작업에는 이미지의 가장 중요 한 영역 주위에 경계 상자가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-453">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="7a6e5-454">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-454">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-455">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-455">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-456">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-456">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-457">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-457">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-458">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-458">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2
    name: 'getAreaOfInterestInStream(stream.Readable, Object, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-459">이 작업에는 이미지의 가장 중요 한 영역 주위에 경계 상자가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-459">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="7a6e5-460">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-460">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-461">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-461">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-462">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-462">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-463">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-463">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, options: Object, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1
    name: 'getAreaOfInterestInStream(stream.Readable, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-464">이 작업에는 이미지의 가장 중요 한 영역 주위에 경계 상자가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-464">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="7a6e5-465">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-465">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-466">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-466">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-467">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-467">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-468">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-468">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStreamWithHttpOperationResponse
    name: 'getAreaOfInterestInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-469">이 작업에는 이미지의 가장 중요 한 영역 주위에 경계 상자가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-469">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="7a6e5-470">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-470">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-471">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-471">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-472">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-472">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-473">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-473">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-474">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-474">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestWithHttpOperationResponse
    name: 'getAreaOfInterestWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-475">이 작업에는 이미지의 가장 중요 한 영역 주위에 경계 상자가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-475">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="7a6e5-476">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-476">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-477">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-477">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="7a6e5-478">실패 하면 오류 코드 및 오류 메시지가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-478">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="7a6e5-479">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, 시간 제한 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-479">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-480">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-480">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-481">지정 된 azure nodejs 패키지용 package.json을 찾으려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-481">Attempts to find package.json for the given azure nodejs package.</span></span>
      <span data-ttu-id="7a6e5-482">하는 경우 발견, 이름 및 버전을 반환 합니다. 참조 하 여 패키지의 package.json package.json 없으면 기본값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-482">If found, returns the name and version of the package by reading the package.json If package.json is not found, returns a default value.</span></span>
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: <span data-ttu-id="7a6e5-483">특정 azure management 클라이언트의 디렉터리를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-483">pass the directory of the specific azure management client.</span></span>
      return:
        type:
          - Object
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult
    name: 'getReadOperationResult(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-484">이 인터페이스는 읽기 작업의 OCR 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-484">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="7a6e5-485">일괄 처리 파일을 읽고 인터페이스에서 반환 된 "작업 위치" 필드에서이 인터페이스에 대 한 URL 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-485">The URL to this interface should be retrieved from "Operation-Location" field returned from Batch Read File interface.</span></span>
    syntax:
      content: 'function getReadOperationResult(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-486">"일괄 처리 파일 읽기" 인터페이스의 응답에서 반환 하는 읽기 작업의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-486">Id of read operation returned in the response of the "Batch Read File" interface.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2
    name: 'getReadOperationResult(string, Object, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-487">이 인터페이스는 읽기 작업의 OCR 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-487">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="7a6e5-488">일괄 처리 파일을 읽고 인터페이스에서 반환 된 "작업 위치" 필드에서이 인터페이스에 대 한 URL 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-488">The URL to this interface should be retrieved from "Operation-Location" field returned from Batch Read File interface.</span></span>
    syntax:
      content: 'function getReadOperationResult(operationId: string, options: Object, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1
    name: 'getReadOperationResult(string, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-489">이 인터페이스는 읽기 작업의 OCR 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-489">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="7a6e5-490">일괄 처리 파일을 읽고 인터페이스에서 반환 된 "작업 위치" 필드에서이 인터페이스에 대 한 URL 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-490">The URL to this interface should be retrieved from "Operation-Location" field returned from Batch Read File interface.</span></span>
    syntax:
      content: 'function getReadOperationResult(operationId: string, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResultWithHttpOperationResponse
    name: 'getReadOperationResultWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-491">이 인터페이스는 읽기 작업의 OCR 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-491">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="7a6e5-492">일괄 처리 파일을 읽고 인터페이스에서 반환 된 "작업 위치" 필드에서이 인터페이스에 대 한 URL 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-492">The URL to this interface should be retrieved from "Operation-Location" field returned from Batch Read File interface.</span></span>
    syntax:
      content: 'function getReadOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-493">"일괄 처리 파일 읽기" 인터페이스의 응답에서 반환 하는 읽기 작업의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-493">Id of read operation returned in the response of the "Batch Read File" interface.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ReadOperationResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
    name: 'getTextOperationResult(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-494">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-494">This interface is used for getting text operation result.</span></span> <span data-ttu-id="7a6e5-495">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-495">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
    syntax:
      content: 'function getTextOperationResult(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-496">' 텍스트 인식 '의 응답에 반환 된 텍스트 작업의 id</span><span class="sxs-lookup"><span data-stu-id="7a6e5-496">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
    name: 'getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-497">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-497">This interface is used for getting text operation result.</span></span> <span data-ttu-id="7a6e5-498">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-498">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
    syntax:
      content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
    name: 'getTextOperationResult(string, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-499">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-499">This interface is used for getting text operation result.</span></span> <span data-ttu-id="7a6e5-500">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-500">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
    syntax:
      content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
    name: 'getTextOperationResultWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a6e5-501">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-501">This interface is used for getting text operation result.</span></span> <span data-ttu-id="7a6e5-502">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-502">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
    syntax:
      content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-503">' 텍스트 인식 '의 응답에 반환 된 텍스트 작업의 id</span><span class="sxs-lookup"><span data-stu-id="7a6e5-503">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
    name: listModels(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-504">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-504">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="7a6e5-505">현재 API를 다음 도메인 특정 모델을 지원 합니다: 유명인 인식기, 랜드마크 인식기 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-505">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="7a6e5-506">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-506">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-507">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-507">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModels(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
    name: 'listModels(Object, ServiceCallback<ListModelsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-508">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-508">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="7a6e5-509">현재 API를 다음 도메인 특정 모델을 지원 합니다: 유명인 인식기, 랜드마크 인식기 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-509">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="7a6e5-510">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-510">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-511">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-511">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
    name: listModels(ServiceCallback<ListModelsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-512">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-512">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="7a6e5-513">현재 API를 다음 도메인 특정 모델을 지원 합니다: 유명인 인식기, 랜드마크 인식기 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-513">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="7a6e5-514">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-514">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-515">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-515">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
    name: listModelsWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-516">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-516">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="7a6e5-517">현재 API를 다음 도메인 특정 모델을 지원 합니다: 유명인 인식기, 랜드마크 인식기 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-517">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="7a6e5-518">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-518">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-519">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-519">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModelsWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
    name: 'recognizePrintedText(boolean, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-520">광학 문자 인식 (OCR) 이미지에서 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-520">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="7a6e5-521">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-521">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="7a6e5-522">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-522">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7a6e5-523">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-523">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            <span data-ttu-id="7a6e5-524">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-524">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="7a6e5-525">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="7a6e5-525">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-526">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-526">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
    name: 'recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-527">광학 문자 인식 (OCR) 이미지에서 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-527">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="7a6e5-528">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-528">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="7a6e5-529">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-529">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7a6e5-530">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-530">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
    name: 'recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-531">광학 문자 인식 (OCR) 이미지에서 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-531">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="7a6e5-532">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-532">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="7a6e5-533">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-533">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7a6e5-534">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-534">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-535">광학 문자 인식 (OCR) 이미지에서 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-535">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="7a6e5-536">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-536">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="7a6e5-537">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-537">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7a6e5-538">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-538">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            <span data-ttu-id="7a6e5-539">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-539">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="7a6e5-540">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="7a6e5-540">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-541">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-541">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-542">광학 문자 인식 (OCR) 이미지에서 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-542">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="7a6e5-543">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-543">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="7a6e5-544">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-544">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7a6e5-545">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-545">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-546">광학 문자 인식 (OCR) 이미지에서 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-546">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="7a6e5-547">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-547">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="7a6e5-548">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-548">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7a6e5-549">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-549">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
    name: 'recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-550">광학 문자 인식 (OCR) 이미지에서 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-550">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="7a6e5-551">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-551">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="7a6e5-552">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-552">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7a6e5-553">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-553">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            <span data-ttu-id="7a6e5-554">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-554">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="7a6e5-555">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="7a6e5-555">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-556">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-556">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
    name: 'recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-557">광학 문자 인식 (OCR) 이미지에서 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-557">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="7a6e5-558">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-558">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="7a6e5-559">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-559">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7a6e5-560">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-560">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            <span data-ttu-id="7a6e5-561">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-561">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="7a6e5-562">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="7a6e5-562">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-563">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-563">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
    name: 'recognizeText(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-564">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-564">Recognize Text operation.</span></span> <span data-ttu-id="7a6e5-565">텍스트 인식 인터페이스를 사용 하면 응답 '' 작업 위치 '' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-565">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="7a6e5-566">'' 작업 위치 '' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-566">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeText(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-567">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-567">Publicly reachable URL of an image.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-568">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-568">Type of text to recognize.</span></span> <span data-ttu-id="7a6e5-569">가능한 값은 다음과 같습니다. 'Handwritten', 'Printed'</span><span class="sxs-lookup"><span data-stu-id="7a6e5-569">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
    name: 'recognizeText(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-570">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-570">Recognize Text operation.</span></span> <span data-ttu-id="7a6e5-571">텍스트 인식 인터페이스를 사용 하면 응답 '' 작업 위치 '' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-571">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="7a6e5-572">'' 작업 위치 '' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-572">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
    name: 'recognizeText(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-573">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-573">Recognize Text operation.</span></span> <span data-ttu-id="7a6e5-574">텍스트 인식 인터페이스를 사용 하면 응답 '' 작업 위치 '' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-574">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="7a6e5-575">'' 작업 위치 '' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-575">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
    name: 'recognizeTextInStream(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-576">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-576">Recognize Text operation.</span></span> <span data-ttu-id="7a6e5-577">텍스트 인식 인터페이스를 사용 하면 응답 '' 작업 위치 '' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-577">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="7a6e5-578">'' 작업 위치 '' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-578">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-579">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-579">An image stream.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-580">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-580">Type of text to recognize.</span></span> <span data-ttu-id="7a6e5-581">가능한 값은 다음과 같습니다. 'Handwritten', 'Printed'</span><span class="sxs-lookup"><span data-stu-id="7a6e5-581">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
    name: 'recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-582">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-582">Recognize Text operation.</span></span> <span data-ttu-id="7a6e5-583">텍스트 인식 인터페이스를 사용 하면 응답 '' 작업 위치 '' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-583">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="7a6e5-584">'' 작업 위치 '' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-584">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
    name: 'recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-585">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-585">Recognize Text operation.</span></span> <span data-ttu-id="7a6e5-586">텍스트 인식 인터페이스를 사용 하면 응답 '' 작업 위치 '' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-586">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="7a6e5-587">'' 작업 위치 '' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-587">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
    name: 'recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-588">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-588">Recognize Text operation.</span></span> <span data-ttu-id="7a6e5-589">텍스트 인식 인터페이스를 사용 하면 응답 '' 작업 위치 '' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-589">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="7a6e5-590">'' 작업 위치 '' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-590">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-591">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-591">An image stream.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-592">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-592">Type of text to recognize.</span></span> <span data-ttu-id="7a6e5-593">가능한 값은 다음과 같습니다. 'Handwritten', 'Printed'</span><span class="sxs-lookup"><span data-stu-id="7a6e5-593">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
    name: 'recognizeTextWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a6e5-594">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-594">Recognize Text operation.</span></span> <span data-ttu-id="7a6e5-595">텍스트 인식 인터페이스를 사용 하면 응답 '' 작업 위치 '' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-595">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="7a6e5-596">'' 작업 위치 '' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-596">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-597">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-597">Publicly reachable URL of an image.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-598">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-598">Type of text to recognize.</span></span> <span data-ttu-id="7a6e5-599">가능한 값은 다음과 같습니다. 'Handwritten', 'Printed'</span><span class="sxs-lookup"><span data-stu-id="7a6e5-599">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
    name: 'tagImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-600">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-600">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7a6e5-601">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-601">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7a6e5-602">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-602">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7a6e5-603">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-603">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="7a6e5-604">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-604">All tags are in English.</span></span>
      <span data-ttu-id="7a6e5-605">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-605">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-606">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-606">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-607">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-607">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-608">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-608">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
    name: 'tagImage(string, Object, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-609">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-609">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7a6e5-610">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-610">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7a6e5-611">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-611">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7a6e5-612">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-612">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="7a6e5-613">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-613">All tags are in English.</span></span>
      <span data-ttu-id="7a6e5-614">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-614">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-615">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-615">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-616">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-616">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
    name: 'tagImage(string, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-617">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-617">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7a6e5-618">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-618">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7a6e5-619">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-619">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7a6e5-620">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-620">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="7a6e5-621">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-621">All tags are in English.</span></span>
      <span data-ttu-id="7a6e5-622">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-622">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-623">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-623">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-624">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-624">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
    name: 'tagImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-625">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-625">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7a6e5-626">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-626">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7a6e5-627">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-627">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7a6e5-628">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-628">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="7a6e5-629">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-629">All tags are in English.</span></span>
      <span data-ttu-id="7a6e5-630">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-630">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-631">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-631">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-632">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-632">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-633">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-633">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
    name: 'tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-634">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-634">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7a6e5-635">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-635">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7a6e5-636">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-636">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7a6e5-637">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-637">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="7a6e5-638">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-638">All tags are in English.</span></span>
      <span data-ttu-id="7a6e5-639">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-639">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-640">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-640">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-641">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-641">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
    name: 'tagImageInStream(stream.Readable, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-642">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-642">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7a6e5-643">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-643">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7a6e5-644">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-644">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7a6e5-645">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-645">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="7a6e5-646">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-646">All tags are in English.</span></span>
      <span data-ttu-id="7a6e5-647">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-647">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-648">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-648">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-649">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-649">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
    name: 'tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-650">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-650">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7a6e5-651">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-651">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7a6e5-652">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-652">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7a6e5-653">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-653">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="7a6e5-654">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-654">All tags are in English.</span></span>
      <span data-ttu-id="7a6e5-655">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-655">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-656">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-656">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-657">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-657">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="7a6e5-658">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-658">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
    name: 'tagImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a6e5-659">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-659">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7a6e5-660">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-660">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7a6e5-661">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-661">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7a6e5-662">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-662">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="7a6e5-663">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-663">All tags are in English.</span></span>
      <span data-ttu-id="7a6e5-664">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-664">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="7a6e5-665">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-665">A successful response will be returned in JSON.</span></span> <span data-ttu-id="7a6e5-666">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-666">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="7a6e5-667">이미지의 URL이 공개적으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7a6e5-667">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    package: azure-cognitiveservices-computervision
references:
  - uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    name: DomainModelResults>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    name: ImageAnalysis>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    name: ImageDescription>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    name: DetectResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    name: AreaOfInterestResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ReadOperationResult>>
    name: ReadOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
    name: TextOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
    name: ListModelsResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    name: OcrResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    name: TagResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>>'
        fullName: '>>'