### YamlMime:UniversalReference
ms.openlocfilehash: f7bb0a77329788feb31835819b61ccba9c59535e
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026129"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionClient
  name: ComputerVisionClient
  fullName: ComputerVisionClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  name: analyzeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-101">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-101">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="7fbe7-102">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-102">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="7fbe7-103">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-103">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="7fbe7-104">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-104">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-105">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-105">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  name: analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-106">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-106">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="7fbe7-107">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-107">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="7fbe7-108">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-108">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="7fbe7-109">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-109">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  name: analyzeImage(string, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-110">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-110">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="7fbe7-111">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-111">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="7fbe7-112">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-112">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="7fbe7-113">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-113">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  name: analyzeImageByDomain(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-114">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-114">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="7fbe7-115">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-115">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="7fbe7-116">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-116">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="7fbe7-117">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-117">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7fbe7-118">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-118">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="7fbe7-119">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-119">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-120">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-120">The domain-specific content to recognize.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-121">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  name: analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-122">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-122">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="7fbe7-123">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-123">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="7fbe7-124">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-124">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="7fbe7-125">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-125">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7fbe7-126">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-126">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="7fbe7-127">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-127">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  name: analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-128">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-128">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="7fbe7-129">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-129">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="7fbe7-130">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-130">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="7fbe7-131">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-131">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7fbe7-132">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-132">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="7fbe7-133">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-133">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-134">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-134">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="7fbe7-135">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-135">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="7fbe7-136">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-136">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="7fbe7-137">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-137">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7fbe7-138">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-138">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="7fbe7-139">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-139">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-140">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-140">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-141">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-141">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-142">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-142">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="7fbe7-143">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-143">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="7fbe7-144">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-144">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="7fbe7-145">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-145">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7fbe7-146">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-146">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="7fbe7-147">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-147">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-148">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-148">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="7fbe7-149">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-149">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="7fbe7-150">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-150">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="7fbe7-151">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-151">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7fbe7-152">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-152">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="7fbe7-153">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-153">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-154">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-154">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="7fbe7-155">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-155">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="7fbe7-156">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-156">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="7fbe7-157">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-157">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7fbe7-158">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-158">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="7fbe7-159">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-159">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-160">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-160">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-161">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-161">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-162">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-162">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="7fbe7-163">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-163">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="7fbe7-164">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-164">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="7fbe7-165">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-165">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="7fbe7-166">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-166">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="7fbe7-167">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-167">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-168">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-168">The domain-specific content to recognize.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-169">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-169">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  name: analyzeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-170">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-170">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-171">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-171">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  name: analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-172">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-172">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  name: analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-173">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-173">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-174">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-174">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-175">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-175">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-176">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-176">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="7fbe7-177">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-177">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="7fbe7-178">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-178">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="7fbe7-179">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-179">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-180">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-180">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  name: ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        <span data-ttu-id="7fbe7-181">클라이언트 구독을 고유 하 게 식별 하는 구독 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-181">Subscription credentials which uniquely identify client subscription.</span></span>
    - id: endpoint
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-182">지원 되는 Cognitive Services 끝점</span><span class="sxs-lookup"><span data-stu-id="7fbe7-182">Supported Cognitive Services endpoints</span></span>
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  name: describeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-183">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-183">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="7fbe7-184">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-184">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7fbe7-185">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-185">More than one description can be generated for each image.</span></span>  <span data-ttu-id="7fbe7-186">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-186">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7fbe7-187">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-187">All descriptions are in English.</span></span> <span data-ttu-id="7fbe7-188">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-188">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-189">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-189">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-190">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-190">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  name: describeImage(string, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-191">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-191">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="7fbe7-192">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-192">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7fbe7-193">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-193">More than one description can be generated for each image.</span></span>  <span data-ttu-id="7fbe7-194">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-194">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7fbe7-195">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-195">All descriptions are in English.</span></span> <span data-ttu-id="7fbe7-196">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-196">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-197">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-197">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  name: describeImage(string, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-198">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-198">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="7fbe7-199">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-199">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7fbe7-200">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-200">More than one description can be generated for each image.</span></span>  <span data-ttu-id="7fbe7-201">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-201">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7fbe7-202">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-202">All descriptions are in English.</span></span> <span data-ttu-id="7fbe7-203">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-203">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-204">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-204">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  name: describeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-205">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-205">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="7fbe7-206">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-206">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7fbe7-207">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-207">More than one description can be generated for each image.</span></span>  <span data-ttu-id="7fbe7-208">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-208">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7fbe7-209">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-209">All descriptions are in English.</span></span> <span data-ttu-id="7fbe7-210">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-210">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-211">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-211">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-212">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-212">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  name: describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-213">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-213">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="7fbe7-214">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-214">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7fbe7-215">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-215">More than one description can be generated for each image.</span></span>  <span data-ttu-id="7fbe7-216">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-216">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7fbe7-217">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-217">All descriptions are in English.</span></span> <span data-ttu-id="7fbe7-218">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-218">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-219">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-219">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  name: describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-220">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-220">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="7fbe7-221">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-221">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7fbe7-222">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-222">More than one description can be generated for each image.</span></span>  <span data-ttu-id="7fbe7-223">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-223">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7fbe7-224">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-224">All descriptions are in English.</span></span> <span data-ttu-id="7fbe7-225">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-225">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-226">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-226">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-227">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-227">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="7fbe7-228">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-228">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7fbe7-229">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-229">More than one description can be generated for each image.</span></span>  <span data-ttu-id="7fbe7-230">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-230">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7fbe7-231">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-231">All descriptions are in English.</span></span> <span data-ttu-id="7fbe7-232">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-232">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-233">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-233">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-234">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-234">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-235">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-235">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="7fbe7-236">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-236">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="7fbe7-237">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-237">More than one description can be generated for each image.</span></span>  <span data-ttu-id="7fbe7-238">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-238">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="7fbe7-239">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-239">All descriptions are in English.</span></span> <span data-ttu-id="7fbe7-240">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-240">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-241">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-241">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-242">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-242">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  name: endpoint
  fullName: endpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'endpoint: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  name: generateThumbnail(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-243">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-243">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7fbe7-244">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-244">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="7fbe7-245">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-245">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="7fbe7-246">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-246">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7fbe7-247">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-247">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="7fbe7-248">미리 보기의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-248">Width of the thumbnail.</span></span> <span data-ttu-id="7fbe7-249">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-249">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="7fbe7-250">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-250">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="7fbe7-251">축소판 그림의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-251">Height of the thumbnail.</span></span> <span data-ttu-id="7fbe7-252">1 사이 여야 하는데 및</span><span class="sxs-lookup"><span data-stu-id="7fbe7-252">It must be between 1 and</span></span>

        1024. <span data-ttu-id="7fbe7-253">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-253">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-254">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-254">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  name: generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-255">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-255">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7fbe7-256">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-256">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="7fbe7-257">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-257">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="7fbe7-258">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-258">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7fbe7-259">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-259">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  name: generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-260">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-260">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7fbe7-261">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-261">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="7fbe7-262">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-262">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="7fbe7-263">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-263">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7fbe7-264">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-264">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  name: generateThumbnailInStream(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-265">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-265">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7fbe7-266">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-266">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="7fbe7-267">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-267">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="7fbe7-268">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-268">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7fbe7-269">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-269">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="7fbe7-270">미리 보기의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-270">Width of the thumbnail.</span></span> <span data-ttu-id="7fbe7-271">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-271">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="7fbe7-272">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-272">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="7fbe7-273">축소판 그림의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-273">Height of the thumbnail.</span></span> <span data-ttu-id="7fbe7-274">1 사이 여야 하는데 및</span><span class="sxs-lookup"><span data-stu-id="7fbe7-274">It must be between 1 and</span></span>

        1024. <span data-ttu-id="7fbe7-275">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-275">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-276">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-276">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  name: generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-277">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-277">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7fbe7-278">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-278">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="7fbe7-279">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-279">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="7fbe7-280">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-280">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7fbe7-281">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-281">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  name: generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-282">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-282">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7fbe7-283">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-283">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="7fbe7-284">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-284">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="7fbe7-285">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-285">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7fbe7-286">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-286">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-287">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-287">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7fbe7-288">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-288">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="7fbe7-289">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-289">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="7fbe7-290">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-290">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7fbe7-291">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-291">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="7fbe7-292">미리 보기의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-292">Width of the thumbnail.</span></span> <span data-ttu-id="7fbe7-293">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-293">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="7fbe7-294">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-294">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="7fbe7-295">축소판 그림의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-295">Height of the thumbnail.</span></span> <span data-ttu-id="7fbe7-296">1 사이 여야 하는데 및</span><span class="sxs-lookup"><span data-stu-id="7fbe7-296">It must be between 1 and</span></span>

        1024. <span data-ttu-id="7fbe7-297">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-297">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-298">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-298">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-299">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-299">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="7fbe7-300">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-300">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="7fbe7-301">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-301">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="7fbe7-302">성공적인 응답에는 썸네일 이미지 이진 파일이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-302">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="7fbe7-303">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-303">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="7fbe7-304">미리 보기의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-304">Width of the thumbnail.</span></span> <span data-ttu-id="7fbe7-305">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-305">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="7fbe7-306">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-306">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="7fbe7-307">축소판 그림의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-307">Height of the thumbnail.</span></span> <span data-ttu-id="7fbe7-308">1 사이 여야 하는데 및</span><span class="sxs-lookup"><span data-stu-id="7fbe7-308">It must be between 1 and</span></span>

        1024. <span data-ttu-id="7fbe7-309">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-309">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-310">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-310">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  name: getTextOperationResult(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-311">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-311">This interface is used for getting text operation result.</span></span> <span data-ttu-id="7fbe7-312">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-312">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-313">' 텍스트 인식 '의 응답에 반환 된 텍스트 작업의 id</span><span class="sxs-lookup"><span data-stu-id="7fbe7-313">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  name: getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-314">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-314">This interface is used for getting text operation result.</span></span> <span data-ttu-id="7fbe7-315">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-315">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  name: getTextOperationResult(string, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-316">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-316">This interface is used for getting text operation result.</span></span> <span data-ttu-id="7fbe7-317">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-317">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-318">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-318">This interface is used for getting text operation result.</span></span> <span data-ttu-id="7fbe7-319">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-319">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-320">' 텍스트 인식 '의 응답에 반환 된 텍스트 작업의 id</span><span class="sxs-lookup"><span data-stu-id="7fbe7-320">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  name: listModels(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="7fbe7-321">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-321">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="7fbe7-322">현재 API를 하나의 도메인별 모델만 지원: 유명인 인식기를 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-322">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="7fbe7-323">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-323">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-324">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-324">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  name: listModels(Object, ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="7fbe7-325">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-325">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="7fbe7-326">현재 API를 하나의 도메인별 모델만 지원: 유명인 인식기를 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-326">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="7fbe7-327">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-327">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-328">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-328">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  name: listModels(ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="7fbe7-329">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-329">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="7fbe7-330">현재 API를 하나의 도메인별 모델만 지원: 유명인 인식기를 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-330">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="7fbe7-331">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-331">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-332">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-332">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="7fbe7-333">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-333">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="7fbe7-334">현재 API를 하나의 도메인별 모델만 지원: 유명인 인식기를 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-334">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="7fbe7-335">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-335">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="7fbe7-336">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-336">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  name: recognizePrintedText(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-337">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-337">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="7fbe7-338">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-338">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="7fbe7-339">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-339">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7fbe7-340">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-340">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="7fbe7-341">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-341">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="7fbe7-342">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="7fbe7-342">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-343">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-343">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  name: recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-344">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-344">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="7fbe7-345">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-345">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="7fbe7-346">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-346">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7fbe7-347">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-347">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  name: recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-348">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-348">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="7fbe7-349">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-349">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="7fbe7-350">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-350">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7fbe7-351">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-351">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-352">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-352">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="7fbe7-353">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-353">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="7fbe7-354">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-354">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7fbe7-355">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-355">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="7fbe7-356">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-356">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="7fbe7-357">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="7fbe7-357">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-358">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-358">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-359">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-359">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="7fbe7-360">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-360">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="7fbe7-361">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-361">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7fbe7-362">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-362">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-363">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-363">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="7fbe7-364">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-364">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="7fbe7-365">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-365">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7fbe7-366">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-366">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-367">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-367">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="7fbe7-368">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-368">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="7fbe7-369">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-369">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7fbe7-370">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-370">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="7fbe7-371">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-371">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="7fbe7-372">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="7fbe7-372">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-373">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-373">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="7fbe7-374">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-374">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="7fbe7-375">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-375">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="7fbe7-376">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-376">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="7fbe7-377">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-377">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="7fbe7-378">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-378">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="7fbe7-379">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="7fbe7-379">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-380">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-380">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  name: recognizeText(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-381">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-381">Recognize Text operation.</span></span> <span data-ttu-id="7fbe7-382">텍스트 인식 인터페이스를 사용 하면 응답 ' 작업 위치 ' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-382">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="7fbe7-383">' 작업 위치 ' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-383">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-384">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-384">Publicly reachable URL of an image</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-385">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-385">Type of text to recognize.</span></span> <span data-ttu-id="7fbe7-386">가능한 값은 다음과 같습니다. '필기 한', ' 출력 '</span><span class="sxs-lookup"><span data-stu-id="7fbe7-386">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  name: recognizeText(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-387">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-387">Recognize Text operation.</span></span> <span data-ttu-id="7fbe7-388">텍스트 인식 인터페이스를 사용 하면 응답 ' 작업 위치 ' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-388">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="7fbe7-389">' 작업 위치 ' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-389">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  name: recognizeText(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-390">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-390">Recognize Text operation.</span></span> <span data-ttu-id="7fbe7-391">텍스트 인식 인터페이스를 사용 하면 응답 ' 작업 위치 ' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-391">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="7fbe7-392">' 작업 위치 ' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-392">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  name: recognizeTextInStream(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-393">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-393">Recognize Text operation.</span></span> <span data-ttu-id="7fbe7-394">텍스트 인식 인터페이스를 사용 하면 응답 ' 작업 위치 ' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-394">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="7fbe7-395">' 작업 위치 ' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-395">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-396">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-396">An image stream.</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-397">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-397">Type of text to recognize.</span></span> <span data-ttu-id="7fbe7-398">가능한 값은 다음과 같습니다. '필기 한', ' 출력 '</span><span class="sxs-lookup"><span data-stu-id="7fbe7-398">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  name: recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-399">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-399">Recognize Text operation.</span></span> <span data-ttu-id="7fbe7-400">텍스트 인식 인터페이스를 사용 하면 응답 ' 작업 위치 ' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-400">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="7fbe7-401">' 작업 위치 ' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-401">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  name: recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-402">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-402">Recognize Text operation.</span></span> <span data-ttu-id="7fbe7-403">텍스트 인식 인터페이스를 사용 하면 응답 ' 작업 위치 ' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-403">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="7fbe7-404">' 작업 위치 ' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-404">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-405">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-405">Recognize Text operation.</span></span> <span data-ttu-id="7fbe7-406">텍스트 인식 인터페이스를 사용 하면 응답 ' 작업 위치 ' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-406">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="7fbe7-407">' 작업 위치 ' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-407">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-408">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-408">An image stream.</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-409">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-409">Type of text to recognize.</span></span> <span data-ttu-id="7fbe7-410">가능한 값은 다음과 같습니다. '필기 한', ' 출력 '</span><span class="sxs-lookup"><span data-stu-id="7fbe7-410">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-411">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-411">Recognize Text operation.</span></span> <span data-ttu-id="7fbe7-412">텍스트 인식 인터페이스를 사용 하면 응답 ' 작업 위치 ' 라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-412">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="7fbe7-413">' 작업 위치 ' 필드는 인식 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-413">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-414">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-414">Publicly reachable URL of an image</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-415">인식 하는 텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-415">Type of text to recognize.</span></span> <span data-ttu-id="7fbe7-416">가능한 값은 다음과 같습니다. '필기 한', ' 출력 '</span><span class="sxs-lookup"><span data-stu-id="7fbe7-416">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  name: tagImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-417">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-417">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7fbe7-418">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-418">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7fbe7-419">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-419">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7fbe7-420">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 '태그 'cello 표시 될 수 있습니다 '악기' 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-420">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="7fbe7-421">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-421">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-422">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-422">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  name: tagImage(string, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-423">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-423">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7fbe7-424">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-424">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7fbe7-425">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-425">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7fbe7-426">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 '태그 'cello 표시 될 수 있습니다 '악기' 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-426">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="7fbe7-427">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-427">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  name: tagImage(string, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-428">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-428">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7fbe7-429">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-429">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7fbe7-430">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-430">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7fbe7-431">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 '태그 'cello 표시 될 수 있습니다 '악기' 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-431">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="7fbe7-432">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-432">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  name: tagImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-433">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-433">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7fbe7-434">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-434">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7fbe7-435">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-435">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7fbe7-436">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 '태그 'cello 표시 될 수 있습니다 '악기' 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-436">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="7fbe7-437">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-437">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-438">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-438">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  name: tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-439">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-439">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7fbe7-440">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-440">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7fbe7-441">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-441">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7fbe7-442">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 '태그 'cello 표시 될 수 있습니다 '악기' 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-442">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="7fbe7-443">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-443">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  name: tagImageInStream(stream.Readable, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-444">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-444">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7fbe7-445">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-445">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7fbe7-446">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-446">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7fbe7-447">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 '태그 'cello 표시 될 수 있습니다 '악기' 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-447">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="7fbe7-448">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-448">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-449">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-449">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7fbe7-450">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-450">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7fbe7-451">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-451">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7fbe7-452">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 '태그 'cello 표시 될 수 있습니다 '악기' 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-452">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="7fbe7-453">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-453">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="7fbe7-454">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-454">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7fbe7-455">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-455">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="7fbe7-456">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-456">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="7fbe7-457">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-457">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="7fbe7-458">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 '태그 'cello 표시 될 수 있습니다 '악기' 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-458">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="7fbe7-459">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="7fbe7-459">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="7fbe7-460">이미지의 공개적으로 도달 가능한 URL</span><span class="sxs-lookup"><span data-stu-id="7fbe7-460">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  name: DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  name: ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  name: ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  name: TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  name: ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  name: OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  name: TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
