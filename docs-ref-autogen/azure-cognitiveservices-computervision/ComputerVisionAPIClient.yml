### YamlMime:UniversalReference
ms.openlocfilehash: 496552af79989c144ce96db561de8b0882be0c21
ms.sourcegitcommit: 506ba44827323385ad0fd81cd14f70c52fd0371e
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/22/2018
ms.locfileid: "40480327"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient
  name: ComputerVisionAPIClient
  fullName: ComputerVisionAPIClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-101">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-101">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="179d4-102">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-102">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="179d4-103">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-103">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="179d4-104">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-104">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-105">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-105">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="179d4-106">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-106">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="179d4-107">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-107">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="179d4-108">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-108">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-109">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-109">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="179d4-110">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-110">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="179d4-111">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-111">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="179d4-112">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-112">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-113">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-113">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="179d4-114">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-114">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="179d4-115">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-115">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="179d4-116">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-116">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="179d4-117">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-117">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="179d4-118">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-118">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="179d4-119">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-119">The domain-specific content to recognize.</span></span> <span data-ttu-id="179d4-120">가능한 값: '유명인 200,000 명을', '랜드마크'</span><span class="sxs-lookup"><span data-stu-id="179d4-120">Possible values include: 'Celebrities', 'Landmarks'</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-121">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-121">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="179d4-122">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-122">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="179d4-123">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-123">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="179d4-124">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-124">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="179d4-125">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-125">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="179d4-126">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-126">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-127">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-127">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="179d4-128">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-128">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="179d4-129">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-129">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="179d4-130">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-130">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="179d4-131">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-131">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="179d4-132">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-132">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-133">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-133">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="179d4-134">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-134">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="179d4-135">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-135">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="179d4-136">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-136">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="179d4-137">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-137">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="179d4-138">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-138">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="179d4-139">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-139">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-140">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-140">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-141">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-141">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="179d4-142">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-142">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="179d4-143">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-143">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="179d4-144">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-144">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="179d4-145">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-145">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="179d4-146">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-146">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-147">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-147">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="179d4-148">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-148">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="179d4-149">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-149">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="179d4-150">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-150">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="179d4-151">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-151">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="179d4-152">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-152">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-153">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-153">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="179d4-154">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-154">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="179d4-155">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-155">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="179d4-156">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-156">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="179d4-157">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-157">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="179d4-158">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-158">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="179d4-159">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-159">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-160">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-160">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-161">이 작업 도메인 특정 모델을 적용 하 여 이미지 내에서 콘텐츠를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-161">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="179d4-162">Computer Vision API에서 지원 되는 도메인 특정 모델 목록 아래의 /models GET 요청을 사용 하 여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-162">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="179d4-163">API를 단일 도메인 특정 모델 에서만 제공 되는 현재: 유명인 200,000 명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-163">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="179d4-164">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-164">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="179d4-165">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-165">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="179d4-166">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-166">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="179d4-167">도메인 특정 콘텐츠 인식입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-167">The domain-specific content to recognize.</span></span> <span data-ttu-id="179d4-168">가능한 값: '유명인 200,000 명을', '랜드마크'</span><span class="sxs-lookup"><span data-stu-id="179d4-168">Possible values include: 'Celebrities', 'Landmarks'</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-169">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-169">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-170">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-170">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-171">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-171">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-172">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-172">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-173">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-173">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-174">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-174">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-175">이 작업에는 다양 한 이미지 콘텐츠를 기반으로 하는 시각적 기능 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-175">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="179d4-176">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-176">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="179d4-177">요청 내에서 선택적 매개 변수를 반환 하는 기능을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-177">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="179d4-178">기본적으로 이미지 범주는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-178">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  name: azureRegion
  fullName: azureRegion
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'azureRegion: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  name: ComputerVisionAPIClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionAPIClient(credentials: ServiceClientCredentials, azureRegion: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        <span data-ttu-id="179d4-179">클라이언트 구독을 고유 하 게 식별 하는 구독 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-179">Subscription credentials which uniquely identify client subscription.</span></span>
    - id: azureRegion
      type:
      - string
      description: >
        <span data-ttu-id="179d4-180">Cognitive Services 끝점에 지원 되는 Azure 지역입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-180">Supported Azure regions for Cognitive Services endpoints.</span></span> <span data-ttu-id="179d4-181">가능한 값은: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus', 'southcentralus' 'northeurope', 'eastasia' 'australiaeast', 'brazilsouth'</span><span class="sxs-lookup"><span data-stu-id="179d4-181">Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'</span></span>
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-182">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-182">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="179d4-183">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-183">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="179d4-184">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-184">More than one description can be generated for each image.</span></span>  <span data-ttu-id="179d4-185">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-185">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="179d4-186">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-186">All descriptions are in English.</span></span> <span data-ttu-id="179d4-187">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-187">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-188">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-188">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-189">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-189">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="179d4-190">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-190">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="179d4-191">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-191">More than one description can be generated for each image.</span></span>  <span data-ttu-id="179d4-192">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-192">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="179d4-193">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-193">All descriptions are in English.</span></span> <span data-ttu-id="179d4-194">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-194">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-195">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-195">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-196">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-196">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="179d4-197">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-197">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="179d4-198">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-198">More than one description can be generated for each image.</span></span>  <span data-ttu-id="179d4-199">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-199">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="179d4-200">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-200">All descriptions are in English.</span></span> <span data-ttu-id="179d4-201">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-201">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-202">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-202">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-203">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-203">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="179d4-204">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-204">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="179d4-205">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-205">More than one description can be generated for each image.</span></span>  <span data-ttu-id="179d4-206">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-206">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="179d4-207">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-207">All descriptions are in English.</span></span> <span data-ttu-id="179d4-208">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-208">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-209">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-209">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-210">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-210">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-211">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-211">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="179d4-212">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-212">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="179d4-213">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-213">More than one description can be generated for each image.</span></span>  <span data-ttu-id="179d4-214">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-214">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="179d4-215">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-215">All descriptions are in English.</span></span> <span data-ttu-id="179d4-216">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-216">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-217">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-217">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-218">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-218">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="179d4-219">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-219">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="179d4-220">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-220">More than one description can be generated for each image.</span></span>  <span data-ttu-id="179d4-221">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-221">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="179d4-222">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-222">All descriptions are in English.</span></span> <span data-ttu-id="179d4-223">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-223">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-224">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-224">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-225">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-225">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="179d4-226">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-226">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="179d4-227">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-227">More than one description can be generated for each image.</span></span>  <span data-ttu-id="179d4-228">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-228">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="179d4-229">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-229">All descriptions are in English.</span></span> <span data-ttu-id="179d4-230">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-230">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-231">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-231">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-232">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-232">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-233">이 작업 전체 문장 사용 하 여 사람이 읽을 수 있는 언어의 이미지에 대 한 설명을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-233">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="179d4-234">에 대 한 설명도 작업에서 반환 되는 콘텐츠 태그의 컬렉션을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-234">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="179d4-235">각 이미지에 대 한 둘 이상의 설명을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-235">More than one description can be generated for each image.</span></span>  <span data-ttu-id="179d4-236">설명의 신뢰도 점수를 기준으로 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-236">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="179d4-237">모든 설명은 영어에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-237">All descriptions are in English.</span></span> <span data-ttu-id="179d4-238">이미지를 업로드 하는 (1) 또는 (2) 이미지 URL을 지정 합니다.-두 입력된 방법 지원 됩니다. 성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-238">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-239">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-239">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-240">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-240">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="179d4-241">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-241">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="179d4-242">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-242">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="179d4-243">성공적인 응답 이진 축소판 그림 이미지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-243">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="179d4-244">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-244">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-245">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-245">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="179d4-246">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-246">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="179d4-247">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-247">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="179d4-248">성공적인 응답 이진 축소판 그림 이미지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-248">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="179d4-249">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-249">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-250">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-250">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="179d4-251">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-251">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="179d4-252">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-252">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="179d4-253">성공적인 응답 이진 축소판 그림 이미지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-253">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="179d4-254">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-254">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="179d4-255">미리 보기의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-255">Width of the thumbnail.</span></span> <span data-ttu-id="179d4-256">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-256">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="179d4-257">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-257">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="179d4-258">축소판 그림의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-258">Height of the thumbnail.</span></span> <span data-ttu-id="179d4-259">1 사이 여야 하는데 및</span><span class="sxs-lookup"><span data-stu-id="179d4-259">It must be between 1 and</span></span>

        1024. <span data-ttu-id="179d4-260">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-260">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-261">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-261">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="179d4-262">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-262">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="179d4-263">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-263">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="179d4-264">성공적인 응답 이진 축소판 그림 이미지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-264">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="179d4-265">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-265">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="179d4-266">미리 보기의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-266">Width of the thumbnail.</span></span> <span data-ttu-id="179d4-267">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-267">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="179d4-268">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-268">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="179d4-269">축소판 그림의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-269">Height of the thumbnail.</span></span> <span data-ttu-id="179d4-270">1 사이 여야 하는데 및</span><span class="sxs-lookup"><span data-stu-id="179d4-270">It must be between 1 and</span></span>

        1024. <span data-ttu-id="179d4-271">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-271">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-272">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-272">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-273">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-273">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="179d4-274">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-274">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="179d4-275">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-275">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="179d4-276">성공적인 응답 이진 축소판 그림 이미지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-276">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="179d4-277">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-277">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-278">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-278">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="179d4-279">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-279">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="179d4-280">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-280">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="179d4-281">성공적인 응답 이진 축소판 그림 이미지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-281">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="179d4-282">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-282">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-283">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-283">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="179d4-284">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-284">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="179d4-285">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-285">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="179d4-286">성공적인 응답 이진 축소판 그림 이미지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-286">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="179d4-287">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-287">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="179d4-288">미리 보기의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-288">Width of the thumbnail.</span></span> <span data-ttu-id="179d4-289">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-289">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="179d4-290">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-290">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="179d4-291">축소판 그림의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-291">Height of the thumbnail.</span></span> <span data-ttu-id="179d4-292">1 사이 여야 하는데 및</span><span class="sxs-lookup"><span data-stu-id="179d4-292">It must be between 1 and</span></span>

        1024. <span data-ttu-id="179d4-293">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-293">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-294">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-294">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-295">이 작업에는 사용자 지정 너비와 높이 사용 하 여 썸네일 이미지를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-295">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="179d4-296">기본적으로 서비스 이미지 분석, (ROI) 관심 영역을 식별 및 ROI를 기반으로 하는 스마트 자르기 좌표를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-296">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="179d4-297">스마트 자르기 입력된 이미지의 다른 가로 세로 비율을 지정 하는 경우는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-297">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="179d4-298">성공적인 응답 이진 축소판 그림 이미지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-298">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="179d4-299">요청에 실패 한 경우 오류 코드 및 메시지 무엇이 잘못 되었는지 확인 하는 데 응답 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-299">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="179d4-300">미리 보기의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-300">Width of the thumbnail.</span></span> <span data-ttu-id="179d4-301">1에서 1024 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-301">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="179d4-302">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-302">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="179d4-303">축소판 그림의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-303">Height of the thumbnail.</span></span> <span data-ttu-id="179d4-304">1 사이 여야 하는데 및</span><span class="sxs-lookup"><span data-stu-id="179d4-304">It must be between 1 and</span></span>

        1024. <span data-ttu-id="179d4-305">50 개 권장된 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-305">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-306">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-306">This interface is used for getting text operation result.</span></span> <span data-ttu-id="179d4-307">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-307">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="179d4-308">' 필기 한 텍스트 인식 '의 응답에 반환 된 텍스트 작업의 id</span><span class="sxs-lookup"><span data-stu-id="179d4-308">Id of the text operation returned in the response of the 'Recognize Handwritten Text'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-309">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-309">This interface is used for getting text operation result.</span></span> <span data-ttu-id="179d4-310">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-310">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: function, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-311">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-311">This interface is used for getting text operation result.</span></span> <span data-ttu-id="179d4-312">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-312">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-313">이 인터페이스는 텍스트 작업 결과 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-313">This interface is used for getting text operation result.</span></span> <span data-ttu-id="179d4-314">이 인터페이스에 대 한 URL 텍스트 인식 인터페이스에서 반환 하는 ' 작업 위치 ' 필드에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-314">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="179d4-315">' 필기 한 텍스트 인식 '의 응답에 반환 된 텍스트 작업의 id</span><span class="sxs-lookup"><span data-stu-id="179d4-315">Id of the text operation returned in the response of the 'Recognize Handwritten Text'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="179d4-316">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-316">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="179d4-317">현재 API를 하나의 도메인별 모델만 지원: 유명인 인식기를 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-317">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="179d4-318">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-318">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-319">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-319">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="179d4-320">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-320">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="179d4-321">현재 API를 하나의 도메인별 모델만 지원: 유명인 인식기를 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-321">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="179d4-322">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-322">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-323">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-323">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options: function, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="179d4-324">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-324">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="179d4-325">현재 API를 하나의 도메인별 모델만 지원: 유명인 인식기를 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-325">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="179d4-326">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-326">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-327">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-327">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="179d4-328">이 작업에는 Computer Vision API에서 지원 되는 도메인 특정 모델의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-328">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="179d4-329">현재 API를 하나의 도메인별 모델만 지원: 유명인 인식기를 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-329">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="179d4-330">성공적인 응답은 JSON에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-330">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="179d4-331">요청에 실패 한 경우 오류 코드 및 문제가 무엇 인지 이해 하려면 메시지 응답 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-331">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-332">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-332">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="179d4-333">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-333">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="179d4-334">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-334">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="179d4-335">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-335">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-336">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-336">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="179d4-337">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-337">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="179d4-338">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-338">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="179d4-339">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-339">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="179d4-340">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-340">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="179d4-341">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="179d4-341">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-342">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-342">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="179d4-343">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-343">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="179d4-344">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-344">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="179d4-345">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-345">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-346">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-346">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="179d4-347">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-347">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="179d4-348">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-348">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="179d4-349">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-349">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="179d4-350">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-350">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="179d4-351">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="179d4-351">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-352">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-352">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-353">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-353">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="179d4-354">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-354">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="179d4-355">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-355">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="179d4-356">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-356">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-357">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-357">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="179d4-358">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-358">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="179d4-359">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-359">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="179d4-360">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-360">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-361">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-361">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="179d4-362">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-362">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="179d4-363">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-363">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="179d4-364">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-364">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="179d4-365">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-365">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="179d4-366">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="179d4-366">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-367">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-367">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="179d4-368">광학 문자 인식 (OCR) 이미지에서 인쇄 된 텍스트를 감지 하 고 인식 된 문자를 기계에서 사용 가능한 문자 스트림으로 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-368">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="179d4-369">성공 하면 OCR 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-369">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="179d4-370">실패 하면 오류 코드는 오류 메시지와 함께 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-370">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="179d4-371">오류 코드는 InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, 또는 InternalServerError 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-371">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="179d4-372">텍스트 방향을 이미지 여부를 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-372">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="179d4-373">DetectOrientation = true는 OCR 서비스 하려고 방향을 확인 하 여 이미지를 추가 처리 전에 (예: 거꾸로 경우).</span><span class="sxs-lookup"><span data-stu-id="179d4-373">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-374">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-374">Recognize Text operation.</span></span> <span data-ttu-id="179d4-375">텍스트 인식 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-375">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="179d4-376">"작업 위치" 필드는 필기 한 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-376">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-377">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-377">Recognize Text operation.</span></span> <span data-ttu-id="179d4-378">텍스트 인식 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-378">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="179d4-379">"작업 위치" 필드는 필기 한 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-379">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-380">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-380">Recognize Text operation.</span></span> <span data-ttu-id="179d4-381">텍스트 인식 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-381">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="179d4-382">"작업 위치" 필드는 필기 한 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-382">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-383">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-383">Recognize Text operation.</span></span> <span data-ttu-id="179d4-384">텍스트 인식 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-384">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="179d4-385">"작업 위치" 필드는 필기 한 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-385">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-386">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-386">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-387">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-387">Recognize Text operation.</span></span> <span data-ttu-id="179d4-388">텍스트 인식 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-388">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="179d4-389">"작업 위치" 필드는 필기 한 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-389">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-390">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-390">Recognize Text operation.</span></span> <span data-ttu-id="179d4-391">텍스트 인식 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-391">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="179d4-392">"작업 위치" 필드는 필기 한 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-392">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-393">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-393">Recognize Text operation.</span></span> <span data-ttu-id="179d4-394">텍스트 인식 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-394">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="179d4-395">"작업 위치" 필드는 필기 한 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-395">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-396">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-396">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-397">텍스트 작업을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-397">Recognize Text operation.</span></span> <span data-ttu-id="179d4-398">텍스트 인식 인터페이스를 사용 하 여 응답에 "작업-Location" 이라는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-398">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="179d4-399">"작업 위치" 필드는 필기 한 텍스트 작업 결과 가져오기 작업에 사용 해야 하는 URL을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-399">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-400">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-400">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="179d4-401">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-401">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="179d4-402">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-402">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="179d4-403">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-403">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="179d4-404">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-404">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-405">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-405">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="179d4-406">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-406">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="179d4-407">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-407">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="179d4-408">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-408">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="179d4-409">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-409">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-410">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-410">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="179d4-411">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-411">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="179d4-412">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-412">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="179d4-413">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-413">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="179d4-414">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-414">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-415">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-415">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="179d4-416">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-416">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="179d4-417">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-417">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="179d4-418">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-418">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="179d4-419">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-419">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-420">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-420">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-421">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-421">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="179d4-422">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-422">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="179d4-423">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-423">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="179d4-424">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-424">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="179d4-425">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-425">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-426">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-426">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="179d4-427">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-427">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="179d4-428">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-428">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="179d4-429">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-429">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="179d4-430">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-430">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-431">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-431">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="179d4-432">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-432">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="179d4-433">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-433">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="179d4-434">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-434">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="179d4-435">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-435">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="179d4-436">이미지 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-436">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="179d4-437">이 작업에는 단어 또는 제공 된 이미지의 내용에 관련 된 태그의 목록을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-437">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="179d4-438">Computer Vision API 반환할 수 있습니다 개체를 기반으로 태그 하다 보면 지루함을, 경치 또는 작업 이미지에 살고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-438">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="179d4-439">범주 달리 태그 계층 분류 시스템에 따라 구성 되어 있지 않지만 이미지 콘텐츠를 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-439">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="179d4-440">태그는 모호성을 피하기 위해 컨텍스트를 제공 하는 힌트를 포함할 수 있습니다, 그리고 예를 들어 "악기" 힌트 cello"태그"를 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-440">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="179d4-441">모든 태그는 영어입니다.</span><span class="sxs-lookup"><span data-stu-id="179d4-441">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
