### YamlMime:UniversalReference
items:
  - uid: msal.UserAgentApplication
    name: UserAgentApplication
    fullName: UserAgentApplication
    children:
      - msal.UserAgentApplication.acquireTokenPopup
      - msal.UserAgentApplication.acquireTokenRedirect
      - msal.UserAgentApplication.acquireTokenSilent
      - msal.UserAgentApplication.authority
      - msal.UserAgentApplication.getAccount
      - msal.UserAgentApplication.getAllAccounts
      - msal.UserAgentApplication.getAuthorityInstance
      - msal.UserAgentApplication.getCurrentConfiguration
      - msal.UserAgentApplication.getLoginInProgress
      - msal.UserAgentApplication.getPostLogoutRedirectUri
      - msal.UserAgentApplication.getRedirectUri
      - msal.UserAgentApplication.handleRedirectCallback_1
      - msal.UserAgentApplication.handleRedirectCallback
      - msal.UserAgentApplication.loginPopup
      - msal.UserAgentApplication.loginRedirect
      - msal.UserAgentApplication.logout
      - msal.UserAgentApplication.constructor
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="2541a-101">UserAgentApplication 클래스: <xref:UserAgentApplication> 개발자 loginXX를 확인 하는 데 사용할 수 있는 인스턴스를 개체 또는 acquireTokenXX 함수</span><span class="sxs-lookup"><span data-stu-id="2541a-101">UserAgentApplication class : <xref:UserAgentApplication> Object Instance that the developer can use to make loginXX OR acquireTokenXX functions</span></span>'
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenPopup
    name: acquireTokenPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-102">사용자의 브라우저에서 팝업 창을 열지를 통해 API에 대 한 access_token을 가져오려는 경우에 사용</span><span class="sxs-lookup"><span data-stu-id="2541a-102">Use when you want to obtain an access_token for your API via opening a popup window in the user's browser</span></span>
    syntax:
      content: 'function acquireTokenPopup(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenRedirect
    name: acquireTokenRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-103">사용자 권한 부여 끝점으로 리디렉션하여 API에 대 한 access_token을 가져올 하려고 할 때 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-103">Used when you want to obtain an access_token for your API by redirecting the user to the authorization endpoint.</span></span>
    syntax:
      content: 'function acquireTokenRedirect(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenSilent
    name: acquireTokenSilent(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="2541a-104">API에 대 한 모든 호출 전에 토큰을 가져오려면이 함수를 사용 / MSAL 반환 하는 리소스 공급자의 사용 가능한 경우 캐시 된 토큰 또는 전송 하는 숨겨진된 iframe를 사용 하 여 새 토큰을 가져오는 요청을 STS의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-104">Use this function to obtain a token before every call to the API / resource provider MSAL return's a cached token when available Or it send's a request to the STS to obtain a new token using a hidden iframe.</span></span>
    syntax:
      content: 'function acquireTokenSilent(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.authority
    name: authority
    fullName: authority
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="2541a-105">인증 기관 있는 반환 기관 MSAL이 토큰을 가져오는 데 사용할 수 있는 디렉터리를 나타내는 URL</span><span class="sxs-lookup"><span data-stu-id="2541a-105">returns the authority, where authority is a URL indicating the directory that MSAL can use to obtain tokens</span></span>
      - <span data-ttu-id="2541a-106">Azure AD에서이 특성은 MSAL 폼에는 토큰을 가져오는 데 사용 하는 Azure active directory를 나타내는 URL https://login.microsoftonline.com/&lt; Enter_the_Tenant_Info_Here&gt; 응용 프로그램을 지 원하는 경우 계정 하나 조직 디렉터리에 값을 바꿉니다 "Enter_the_Tenant_Info_Here" 테 넌 트 Id 또는 테 넌 트 이름 (예를 들어 contoso.microsoft.com) 하는 경우 응용 프로그램 모든 조직 디렉터리에 계정을, 응용 프로그램 계정이 모든 조직 디렉터리에 개인 Microsoft 계정에서 지 원하는 경우 조직과 "Enter_the_Tenant_Info_Here" 값을 대체, "Enter_the_Tenant_Info_ 대체 공통 된 값 "여기"입니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-106">In Azure AD, this attribute is a URL indicating the Azure active directory that MSAL uses to obtain tokens It is of the form https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt; If your application supports Accounts in one organizational directory, replace "Enter_the_Tenant_Info_Here" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com) If your application supports Accounts in any organizational directory, replace "Enter_the_Tenant_Info_Here" value with organizations If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace "Enter_the_Tenant_Info_Here" value with common.</span></span>
      <span data-ttu-id="2541a-107">지원 제한 개인 Microsoft 계정 소비자와 "Enter_the_Tenant_Info_Here" 값만 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-107">To restrict support to Personal Microsoft accounts only, replace "Enter_the_Tenant_Info_Here" value with consumers.</span></span>
      - <span data-ttu-id="2541a-108">Azure B2C에서는의 https://&lt;인스턴스&gt;/tfp/&lt;테 넌 트&gt;/<policyName>/</span><span class="sxs-lookup"><span data-stu-id="2541a-108">In Azure B2C, it is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/<policyName>/</span></span>
    syntax:
      content: 'authority: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getAccount
    name: getAccount()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-109">상태가 발견 되 면 계정 (로그인 시 만든 계정 개체에서 받은) 또는 null의 서명 된 반환</span><span class="sxs-lookup"><span data-stu-id="2541a-109">Returns the signed in account (received from an account object created at the time of login) or null when no state is found</span></span>
    syntax:
      content: function getAccount()
      parameters: []
      return:
        type:
          - msal.Account
    package: msal
  - uid: msal.UserAgentApplication.getAllAccounts
    name: getAllAccounts()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-110">모든 캐시 된 항목을 필터링 하 고 homeAccountIdentifier에 따라 고유한 계정 목록을 반환 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-110">Used to filter all cached items and return a list of unique accounts based on homeAccountIdentifier.</span></span>
    syntax:
      content: function getAllAccounts()
      parameters: []
      return:
        type:
          - Array<msal.Account>
    package: msal
  - uid: msal.UserAgentApplication.getAuthorityInstance
    name: getAuthorityInstance()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-111">기관 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-111">returns the authority instance</span></span>
    syntax:
      content: function getAuthorityInstance()
      parameters: []
      return:
        type:
          - Authority
    package: msal
  - uid: msal.UserAgentApplication.getCurrentConfiguration
    name: getCurrentConfiguration()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2541a-112">현재를 사용 하 여 <xref:Configuration> MSAL의 개체</span><span class="sxs-lookup"><span data-stu-id="2541a-112">Use to get the current <xref:Configuration> object in MSAL</span></span>'
    syntax:
      content: function getCurrentConfiguration()
      parameters: []
      return:
        type:
          - msal.Configuration
    package: msal
  - uid: msal.UserAgentApplication.getLoginInProgress
    name: getLoginInProgress()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-113">개발자 로그인 진행 중인 경우에 게 알릴 수 있도록 부울 플래그를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-113">Return boolean flag to developer to help inform if login is in progress</span></span>
    syntax:
      content: function getLoginInProgress()
      parameters: []
      return:
        type:
          - boolean
    package: msal
  - uid: msal.UserAgentApplication.getPostLogoutRedirectUri
    name: getPostLogoutRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2541a-114">Null 또는 MSAL에 구성 된 후 로그 아웃 리디렉션 uri를 사용 하십시오.</span><span class="sxs-lookup"><span data-stu-id="2541a-114">Use to get the post logout redirect uri configured in MSAL or null.</span></span>
      <span data-ttu-id="2541a-115">평가 postLogoutredirectUri 함수 이면 그렇지 않은 경우 단순히 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-115">Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.</span></span>
    syntax:
      content: function getPostLogoutRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getRedirectUri
    name: getRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2541a-116">Null 또는 MSAL에 구성 된 리디렉션 uri를 사용 하십시오.</span><span class="sxs-lookup"><span data-stu-id="2541a-116">Use to get the redirect uri configured in MSAL or null.</span></span>
      <span data-ttu-id="2541a-117">평가 redirectUri 함수 이면 그렇지 않은 경우 단순히 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-117">Evaluates redirectUri if its a function, otherwise simply returns its value.</span></span>
    syntax:
      content: function getRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.handleRedirectCallback_1
    name: handleRedirectCallback(authResponseCallback)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-118">성공 또는 오류 개체를 다시 보낼 리디렉션 흐름에 대 한 콜백 함수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-118">Sets the callback functions for the redirect flow to send back the success or error object.</span></span>
    syntax:
      content: 'function handleRedirectCallback(authCallback: authResponseCallback)'
      parameters:
        - id: authCallback
          type:
            - authResponseCallback
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.handleRedirectCallback
    name: 'handleRedirectCallback(tokenReceivedCallback, errorReceivedCallback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-119">성공 또는 오류 개체를 다시 보낼 리디렉션 흐름에 대 한 콜백 함수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-119">Sets the callback functions for the redirect flow to send back the success or error object.</span></span>
    syntax:
      content: 'function handleRedirectCallback(tokenReceivedCallback: tokenReceivedCallback, errorReceivedCallback: errorReceivedCallback)'
      parameters:
        - id: tokenReceivedCallback
          type:
            - tokenReceivedCallback
          description: ''
        - id: errorReceivedCallback
          type:
            - errorReceivedCallback
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.loginPopup
    name: loginPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-120">사용 하 여 사용자의 브라우저에서 팝업 창을 열지를 통해 로그인 프로세스를 시작 하는 중</span><span class="sxs-lookup"><span data-stu-id="2541a-120">Use when initiating the login process via opening a popup window in the user's browser</span></span>
    syntax:
      content: 'function loginPopup(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.loginRedirect
    name: loginRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2541a-121">권한 부여 끝점에 사용자의 브라우저를 리디렉션하여 로그인 프로세스를 시작 하는 경우 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-121">Use when initiating the login process by redirecting the user's browser to the authorization endpoint.</span></span>
    syntax:
      content: 'function loginRedirect(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
    package: msal
  - uid: msal.UserAgentApplication.logout
    name: logout()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2541a-122">현재 사용자 로그 아웃 하 고 사용자는 postLogoutRedirectUri 리디렉션할 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-122">Used to log out the current user, and redirect the user to the postLogoutRedirectUri.</span></span>
      <span data-ttu-id="2541a-123">기본값 동작을 사용자를 리디렉션하는 것이 `window.location.href`합니다.</span><span class="sxs-lookup"><span data-stu-id="2541a-123">Defaults behaviour is to redirect the user to `window.location.href`.</span></span>
    syntax:
      content: function logout()
      parameters: []
    package: msal
  - uid: msal.UserAgentApplication.constructor
    name: UserAgentApplication(Configuration)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: '<span data-ttu-id="2541a-124">에 대 한 생성자는 <xref:UserAgentApplication> 인스턴스화할 수 하는 것이 개체는 <xref:UserAgentApplication> 개체</span><span class="sxs-lookup"><span data-stu-id="2541a-124">Constructor for the <xref:UserAgentApplication> object This is to be able to instantiate the <xref:UserAgentApplication> object</span></span>'
    syntax:
      content: 'new UserAgentApplication(configuration: Configuration)'
      parameters:
        - id: configuration
          type:
            - msal.Configuration
          description: |
            <span data-ttu-id="2541a-125">MSAL UserAgentApplication 인스턴스에 대 한 개체</span><span class="sxs-lookup"><span data-stu-id="2541a-125">object for the MSAL UserAgentApplication instance</span></span>
    package: msal
references:
  - uid: msal.Configuration
    name: Configuration
    spec.typeScript:
      - name: Configuration
        fullName: Configuration
        uid: msal.Configuration
  - uid: msal.AuthenticationParameters
    name: AuthenticationParameters
    spec.typeScript:
      - name: AuthenticationParameters
        fullName: AuthenticationParameters
        uid: msal.AuthenticationParameters
  - uid: Promise<msal.AuthResponse>
    name: AuthResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AuthResponse
        fullName: AuthResponse
        uid: msal.AuthResponse
      - name: '>'
        fullName: '>'
  - uid: msal.Account
    name: Account
    spec.typeScript:
      - name: Account
        fullName: Account
        uid: msal.Account
  - uid: Array<msal.Account>
    name: Account>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Account
        fullName: Account
        uid: msal.Account
      - name: '>'
        fullName: '>'