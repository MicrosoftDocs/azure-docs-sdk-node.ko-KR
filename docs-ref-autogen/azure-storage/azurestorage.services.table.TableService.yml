### YamlMime:UniversalReference
ms.openlocfilehash: 75678ac0c4778f4e5eb067af1f6b210277000246
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52150558"
items:
- uid: azure-storage.azurestorage.services.table.TableService
  name: TableService
  fullName: TableService
  children:
  - azure-storage.azurestorage.services.table.TableService.BatchResponse
  - azure-storage.azurestorage.services.table.TableService.BatchResult
  - azure-storage.azurestorage.services.table.TableService.createTable_1
  - azure-storage.azurestorage.services.table.TableService.createTable
  - azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
  - azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
  - azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
  - azure-storage.azurestorage.services.table.TableService.deleteEntity_1
  - azure-storage.azurestorage.services.table.TableService.deleteEntity
  - azure-storage.azurestorage.services.table.TableService.deleteTable_1
  - azure-storage.azurestorage.services.table.TableService.deleteTable
  - azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
  - azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
  - azure-storage.azurestorage.services.table.TableService.doesTableExist_1
  - azure-storage.azurestorage.services.table.TableService.doesTableExist
  - azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - azure-storage.azurestorage.services.table.TableService.EntityProperty
  - azure-storage.azurestorage.services.table.TableService.executeBatch_1
  - azure-storage.azurestorage.services.table.TableService.executeBatch
  - azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
  - azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
  - azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
  - azure-storage.azurestorage.services.table.TableService.getServiceProperties
  - azure-storage.azurestorage.services.table.TableService.getServiceStats_1
  - azure-storage.azurestorage.services.table.TableService.getServiceStats
  - azure-storage.azurestorage.services.table.TableService.getTableAcl_1
  - azure-storage.azurestorage.services.table.TableService.getTableAcl
  - azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - azure-storage.azurestorage.services.table.TableService.getUrl
  - azure-storage.azurestorage.services.table.TableService.insertEntity_2
  - azure-storage.azurestorage.services.table.TableService.insertEntity
  - azure-storage.azurestorage.services.table.TableService.insertEntity_1
  - azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  - azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
  - azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
  - azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
  - azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
  - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  - azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
  - azure-storage.azurestorage.services.table.TableService.listTablesSegmented
  - azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
  - azure-storage.azurestorage.services.table.TableService.mergeEntity_1
  - azure-storage.azurestorage.services.table.TableService.mergeEntity
  - azure-storage.azurestorage.services.table.TableService.PropertyResolver
  - azure-storage.azurestorage.services.table.TableService.queryEntities_1
  - azure-storage.azurestorage.services.table.TableService.queryEntities
  - azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - azure-storage.azurestorage.services.table.TableService.replaceEntity_1
  - azure-storage.azurestorage.services.table.TableService.replaceEntity
  - azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
  - azure-storage.azurestorage.services.table.TableService.retrieveEntity
  - azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
  - azure-storage.azurestorage.services.table.TableService.setServiceProperties
  - azure-storage.azurestorage.services.table.TableService.setTableAcl_1
  - azure-storage.azurestorage.services.table.TableService.setTableAcl
  - azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  - azure-storage.azurestorage.services.table.TableService.TableResult
  - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  - azure-storage.azurestorage.services.table.TableService.withFilter
  langs:
  - typeScript
  type: module
  summary: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.createTable_1
  name: createTable(string, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정 내에서 새 테이블을 만듭니다.
  syntax:
    content: 'function createTable(table: string, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 새 테이블 정보가 포함 됩니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.createTable
  name: createTable(string, RequestOptions, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정 내에서 새 테이블을 만듭니다.
  syntax:
    content: 'function createTable(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 새 테이블 정보가 포함 됩니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
  name: createTableIfNotExists(string, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 존재 하지 않는 경우 저장소 계정 내에서 새 테이블을 만듭니다.
  syntax:
    content: 'function createTableIfNotExists(table: string, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `result` 됩니다 `true` 테이블을 만든 경우 false이 고, 그렇지 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
  name: createTableIfNotExists(string, RequestOptions, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 존재 하지 않는 경우 저장소 계정 내에서 새 테이블을 만듭니다.
  syntax:
    content: 'function createTableIfNotExists(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `result` 됩니다 `true` 테이블을 만든 경우 false이 고, 그렇지 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
  name: defaultPayloadFormat
  fullName: defaultPayloadFormat
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'defaultPayloadFormat: string'
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteEntity_1
  name: deleteEntity(string, T, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블 내의 엔터티를 삭제합니다. Etag에 따라 조건부로 삭제 하려면 엔터티 ['.metadata'] ['etag']를 설정 합니다.
  syntax:
    content: 'function deleteEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResponse)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteEntity
  name: deleteEntity(string, T, RequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블 내의 엔터티를 삭제합니다. Etag에 따라 조건부로 삭제 하려면 엔터티 ['.metadata'] ['etag']를 설정 합니다.
  syntax:
    content: 'function deleteEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteTable_1
  name: deleteTable(string, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정에서 테이블을 삭제 합니다.
  syntax:
    content: 'function deleteTable(table: string, callback: ErrorOrResponse)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteTable
  name: deleteTable(string, RequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정에서 테이블을 삭제 합니다.
  syntax:
    content: 'function deleteTable(table: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
  name: deleteTableIfExists(string, ErrorOrResult<boolean>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 있는 경우 저장소 계정에서 테이블을 삭제 합니다.
  syntax:
    content: 'function deleteTableIfExists(table: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `result` 됩니다 `true` 되었으면 테이블 삭제, false이 고, 그렇지 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
  name: deleteTableIfExists(string, RequestOptions, ErrorOrResult<boolean>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 있는 경우 저장소 계정에서 테이블을 삭제 합니다.
  syntax:
    content: 'function deleteTableIfExists(table: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `result` 됩니다 `true` 되었으면 테이블 삭제, false이 고, 그렇지 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.doesTableExist_1
  name: doesTableExist(string, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블 서비스에 있는지 여부를 확인 합니다.
  syntax:
    content: 'function doesTableExist(table: string, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 될 테이블이 있으면 true 또는 테이블이 존재 하지 않는 경우에 false 여야 합니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.doesTableExist
  name: doesTableExist(string, RequestOptions, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블 서비스에 있는지 여부를 확인 합니다.
  syntax:
    content: 'function doesTableExist(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 될 테이블이 있으면 true 또는 테이블이 존재 하지 않는 경우에 false 여야 합니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.executeBatch_1
  name: executeBatch(string, TableBatch, ErrorOrResult<BatchResult[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 일괄 처리의 작업을 실행합니다.
  syntax:
    content: 'function executeBatch(table: string, batch: TableBatch, callback: ErrorOrResult<BatchResult[]>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: batch
      type:
      - azure-storage.azurestorage.services.table.TableBatch
      description: 테이블 일괄 처리에 실행 합니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 일괄 처리를 실행 하는 각 작업에 대 한 응답에 포함 됩니다 `result.entity` 실행 하는 각 작업에 대 한 엔터티 정보가 포함 됩니다.
                                                                                    `result.response` 각 작업 실행에 대 한 응답에 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.executeBatch
  name: executeBatch(string, TableBatch, TableEntityRequestOptions, ErrorOrResult<BatchResult[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 일괄 처리의 작업을 실행합니다.
  syntax:
    content: 'function executeBatch(table: string, batch: TableBatch, options: TableEntityRequestOptions, callback: ErrorOrResult<BatchResult[]>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: batch
      type:
      - azure-storage.azurestorage.services.table.TableBatch
      description: 테이블 일괄 처리에 실행 합니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 일괄 처리를 실행 하는 각 작업에 대 한 응답에 포함 됩니다 `result.entity` 실행 하는 각 작업에 대 한 엔터티 정보가 포함 됩니다.
                                                                                    `result.response` 각 작업 실행에 대 한 응답에 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
  name: generateSharedAccessSignature(string, TableSharedAccessPolicy)
  children: []
  type: method
  langs:
  - typeScript
  summary: 공유 액세스 서명 토큰을 검색합니다.
  syntax:
    content: 'function generateSharedAccessSignature(table: string, sharedAccessPolicy: TableSharedAccessPolicy)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
      description: 공유 액세스 정책입니다.
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion(string, TableSharedAccessPolicy, string)
  children: []
  type: method
  langs:
  - typeScript
  summary: 공유 액세스 서명 토큰을 검색합니다.
  syntax:
    content: 'function generateSharedAccessSignatureWithVersion(table: string, sharedAccessPolicy: TableSharedAccessPolicy, sasVersion: string)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
      description: 공유 액세스 정책입니다.
    - id: sasVersion
      type:
      - string
      description: ''
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
  name: getServiceProperties(ErrorOrResult<ServiceProperties>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Azure Storage Analytics를 포함 하 여 저장소 계정의 Table service의 속성을 가져옵니다.
  syntax:
    content: 'function getServiceProperties(callback: ErrorOrResult<ServiceProperties>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 속성이 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties
  name: getServiceProperties(RequestOptions, ErrorOrResult<ServiceProperties>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Azure Storage Analytics를 포함 하 여 저장소 계정의 Table service의 속성을 가져옵니다.
  syntax:
    content: 'function getServiceProperties(options: RequestOptions, callback: ErrorOrResult<ServiceProperties>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 속성이 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getServiceStats_1
  name: getServiceStats(ErrorOrResult<ServiceStats>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 Table service에 대 한 서비스 통계를 가져옵니다.
  syntax:
    content: 'function getServiceStats(callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 속성이 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getServiceStats
  name: getServiceStats(RequestOptions, ErrorOrResult<ServiceStats>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 Table service에 대 한 서비스 통계를 가져옵니다.
  syntax:
    content: 'function getServiceStats(options: RequestOptions, callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 속성이 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getTableAcl_1
  name: getTableAcl(string, ErrorOrResult<GetTableAclResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블의 ACL을 가져옵니다.
  syntax:
    content: 'function getTableAcl(table: string, callback: ErrorOrResult<GetTableAclResult>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 테이블에 대 한 ACL 정보가 포함 됩니다.
                                                                                 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getTableAcl
  name: getTableAcl(string, RequestOptions, ErrorOrResult<GetTableAclResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블의 ACL을 가져옵니다.
  syntax:
    content: 'function getTableAcl(table: string, options: RequestOptions, callback: ErrorOrResult<GetTableAclResult>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 테이블에 대 한 ACL 정보가 포함 됩니다.
                                                                                 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getUrl
  name: getUrl(string, string, boolean)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getUrl(table: string, sasToken?: string, primary?: boolean)'
    parameters:
    - id: table
      type:
      - string
      description: ''
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: primary
      type:
      - boolean
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity_2
  name: insertEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블에 새 엔터티를 삽입합니다.
  syntax:
    content: 'function insertEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity
  name: insertEntity(string, T, InsertEntityRequestOptions, ErrorOrResult<T | EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블에 새 엔터티를 삽입합니다.
  syntax:
    content: 'function insertEntity<T>(table: string, entityDescriptor: T, options: InsertEntityRequestOptions, callback: ErrorOrResult<T | EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity_1
  name: insertEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블에 새 엔터티를 삽입합니다.
  syntax:
    content: 'function insertEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
  name: insertOrMergeEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 삽입 하거나 새 속성 값을 엔터티에 병합 하 여 테이블 내에서 기존 엔터티를 업데이트 합니다.
  syntax:
    content: 'function insertOrMergeEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
  name: insertOrMergeEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 삽입 하거나 새 속성 값을 엔터티에 병합 하 여 테이블 내에서 기존 엔터티를 업데이트 합니다.
  syntax:
    content: 'function insertOrMergeEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
  name: insertOrReplaceEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 삽입 하거나 테이블에 새 엔터티를 업데이트 합니다.
  syntax:
    content: 'function insertOrReplaceEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
  name: insertOrReplaceEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 삽입 하거나 테이블에 새 엔터티를 업데이트 합니다.
  syntax:
    content: 'function insertOrReplaceEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
  name: listTablesSegmented(ListTablesContinuationToken, ErrorOrResult<ListTablesResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 계정의 테이블 항목의 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listTablesSegmented(currentToken: ListTablesContinuationToken, callback: ErrorOrResult<ListTablesResponse>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 포함 됩니다 `entries` 고 `continuationToken`입니다.
                                                                                      `entries`  테이블의 목록을 제공 하며 `continuationToken` 다음 목록 작업에 사용 됩니다.
                                                                                      `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented
  name: listTablesSegmented(ListTablesContinuationToken, ListTablesRequestOptions, ErrorOrResult<ListTablesResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 계정의 테이블 항목의 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listTablesSegmented(currentToken: ListTablesContinuationToken, options: ListTablesRequestOptions, callback: ErrorOrResult<ListTablesResponse>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 포함 됩니다 `entries` 고 `continuationToken`입니다.
                                                                                      `entries`  테이블의 목록을 제공 하며 `continuationToken` 다음 목록 작업에 사용 됩니다.
                                                                                      `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
  name: listTablesSegmentedWithPrefix(string, ListTablesContinuationToken, ErrorOrResult<ListTablesResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 계정의 테이블 항목의 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listTablesSegmentedWithPrefix(prefix: string, currentToken: ListTablesContinuationToken, callback: ErrorOrResult<ListTablesResponse>)'
    parameters:
    - id: prefix
      type:
      - string
      description: 테이블 이름의 접두사입니다.
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 포함 됩니다 `entries` 고 `continuationToken`입니다.
                                                                                      `entries`  테이블의 목록을 제공 하며 `continuationToken` 다음 목록 작업에 사용 됩니다.
                                                                                      `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
  name: listTablesSegmentedWithPrefix(string, ListTablesContinuationToken, ListTablesRequestOptions, ErrorOrResult<ListTablesResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 계정의 테이블 항목의 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listTablesSegmentedWithPrefix(prefix: string, currentToken: ListTablesContinuationToken, options: ListTablesRequestOptions, callback: ErrorOrResult<ListTablesResponse>)'
    parameters:
    - id: prefix
      type:
      - string
      description: 테이블 이름의 접두사입니다.
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 포함 됩니다 `entries` 고 `continuationToken`입니다.
                                                                                      `entries`  테이블의 목록을 제공 하며 `continuationToken` 다음 목록 작업에 사용 됩니다.
                                                                                      `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.mergeEntity_1
  name: mergeEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 새 속성 값을 엔터티에 병합 하 여 테이블 내에서 기존 엔터티를 업데이트 합니다. 에 따라 조건부로 etag를 병합 하려면 엔터티 ['.metadata'] ['etag']를 설정 합니다.
  syntax:
    content: 'function mergeEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.

        응답 '이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.mergeEntity
  name: mergeEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 새 속성 값을 엔터티에 병합 하 여 테이블 내에서 기존 엔터티를 업데이트 합니다. 에 따라 조건부로 etag를 병합 하려면 엔터티 ['.metadata'] ['etag']를 설정 합니다.
  syntax:
    content: 'function mergeEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.

        응답 '이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.queryEntities_1
  name: queryEntities(string, TableQuery, TableContinuationToken, ErrorOrResult<QueryEntitiesResult<T>>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블의 데이터를 쿼리합니다. 파티션 키 및 행 키로 단일 엔터티를 검색 하려면 사용 하 여 엔터티를 검색 합니다.
  syntax:
    content: 'function queryEntities<T>(table: string, tableQuery: TableQuery, currentToken: TableContinuationToken, callback: ErrorOrResult<QueryEntitiesResult<T>>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: tableQuery
      type:
      - azure-storage.azurestorage.services.table.TableQuery
      description: 수행 하는 쿼리. Null, undefined 또는 새 TableQuery()를 사용 하 여 테이블의 모든 엔터티를 가져옵니다.
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
      description: >-
        이전 나열 작업에서 반환 된 연속 토큰입니다.

        'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `entities` 쿼리에 의해 반환 된 엔터티가 포함 됩니다.

        더 많은 일치 하는 엔터티 있으며 반환 하지 못한 경우 `queryResultContinuation` 다음 결과 집합을 검색할 수 있는 연속 토큰이 포함 됩니다.
                                                                                         `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.queryEntities
  name: queryEntities(string, TableQuery, TableContinuationToken, TableEntityRequestOptions, ErrorOrResult<QueryEntitiesResult<T>>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블의 데이터를 쿼리합니다. 파티션 키 및 행 키로 단일 엔터티를 검색 하려면 사용 하 여 엔터티를 검색 합니다.
  syntax:
    content: 'function queryEntities<T>(table: string, tableQuery: TableQuery, currentToken: TableContinuationToken, options: TableEntityRequestOptions, callback: ErrorOrResult<QueryEntitiesResult<T>>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: tableQuery
      type:
      - azure-storage.azurestorage.services.table.TableQuery
      description: 수행 하는 쿼리. Null, undefined 또는 새 TableQuery()를 사용 하 여 테이블의 모든 엔터티를 가져옵니다.
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
      description: >-
        이전 나열 작업에서 반환 된 연속 토큰입니다.

        'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `entities` 쿼리에 의해 반환 된 엔터티가 포함 됩니다.

        더 많은 일치 하는 엔터티 있으며 반환 하지 못한 경우 `queryResultContinuation` 다음 결과 집합을 검색할 수 있는 연속 토큰이 포함 됩니다.
                                                                                         `response` 이 작업과 관련 된 정보가 포함 됩니다.

        엔터티 형식을 반환 하는 것에 대 한 논리는 복잡 해질 수 있습니다.  사용 된 알고리즘에는 다음과 같습니다.

        ```

        var propertyType;


        if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it
          propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);
        } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.
          propertyType = propertyTypeFromService;
        } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true
          if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.
            propertyType = 'Edm.String';
          } else if (javascript type is boolean) {
            propertyType = 'Edm.Boolean';
          }
        }


        if (propertyType) {
          // Set the property type on the property.
        } else {
          // Property gets no EdmType.
        }

        ```

        참고:


        * 서비스는 JsonFullMetadata 또는 JsonMinimalMetadata을 사용 하는 경우 및 Int64, Guid, 이진 또는 날짜/시간 형식이 형식을 제공 합니다.

        * AutoResolveProperties 설명은:
            * 문자열 'Edm.String' 올바르게 확인을 가져옵니다.
            * Int64, Guid, 이진 및 DateTime 모든 가져오기 'Edm.String입니다.'로 확인  이 경우에 발생 JsonNoMetadata 사용 됩니다 (그렇지 않으면 하면 서비스를 통해 이전 단계에서 propertyType).
            * 'Edm.Boolean' 부울 올바르게 확인을 가져옵니다.
            * Int32 및 Double, 없습니다 형식 정보를 모두 반환 되 면 autoResolveProperties 하는 경우에 true =.  경우에 따라 둘 사이 구분할 수 없기 때문입니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.replaceEntity_1
  name: replaceEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블 내에서 기존 엔터티를 바꿉니다. Etag에 따라 조건부로 바꾸려면 엔터티 ['.metadata'] ['etag']를 설정 합니다.
  syntax:
    content: 'function replaceEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.replaceEntity
  name: replaceEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블 내에서 기존 엔터티를 바꿉니다. Etag에 따라 조건부로 바꾸려면 엔터티 ['.metadata'] ['etag']를 설정 합니다.
  syntax:
    content: 'function replaceEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: entityDescriptor
      type:
      - T
      description: 엔터티 설명자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 엔터티 정보가 포함 됩니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
  name: retrieveEntity(string, string, string, ErrorOrResult<T>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블에서 엔터티를 검색합니다.
  syntax:
    content: 'function retrieveEntity<T>(table: string, partitionKey: string, rowKey: string, callback: ErrorOrResult<T>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: partitionKey
      type:
      - string
      description: 파티션 키입니다.
    - id: rowKey
      type:
      - string
      description: 행 키입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<T>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 일치 하는 엔터티가 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity
  name: retrieveEntity(string, string, string, TableEntityRequestOptions, ErrorOrResult<T>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블에서 엔터티를 검색합니다.
  syntax:
    content: 'function retrieveEntity<T>(table: string, partitionKey: string, rowKey: string, options: TableEntityRequestOptions, callback: ErrorOrResult<T>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: partitionKey
      type:
      - string
      description: 파티션 키입니다.
    - id: rowKey
      type:
      - string
      description: 행 키입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<T>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 일치 하는 엔터티가 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.

        엔터티 형식을 반환 하는 것에 대 한 논리는 복잡 해질 수 있습니다.  사용 된 알고리즘에는 다음과 같습니다.

        ```

        var propertyType;


        if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it
          propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);
        } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.
          propertyType = propertyTypeFromService;
        } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true
          if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.
            propertyType = 'Edm.String';
          } else if (javascript type is boolean) {
            propertyType = 'Edm.Boolean';
          }
        }


        if (propertyType) {
          // Set the property type on the property.
        } else {
          // Property gets no EdmType.
        }

        ```

        참고:


        * 서비스는 JsonFullMetadata 또는 JsonMinimalMetadata을 사용 하는 경우 및 Int64, Guid, 이진 또는 날짜/시간 형식이 형식을 제공 합니다.

        * AutoResolveProperties 설명은:
            * 문자열 'Edm.String' 올바르게 확인을 가져옵니다.
            * Int64, Guid, 이진 및 DateTime 모든 가져오기 'Edm.String입니다.'로 확인  이 경우에 발생 JsonNoMetadata 사용 됩니다 (그렇지 않으면 하면 서비스를 통해 이전 단계에서 propertyType).
            * 'Edm.Boolean' 부울 올바르게 확인을 가져옵니다.
            * Int32 및 Double, 없습니다 형식 정보를 모두 반환 되 면 autoResolveProperties 하는 경우에 true =.  경우에 따라 둘 사이 구분할 수 없기 때문입니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
  name: setServiceProperties(ServiceProperties, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Azure Storage Analytics를 포함 하 여 저장소 계정의 Table service의 속성을 설정 합니다.

    또한 서 버전이 지정 되지 않은 들어오는 모든 요청에 대 한 기본 요청 버전을 설정 하려면이 작업을 사용할 수 있습니다.
  syntax:
    content: 'function setServiceProperties(serviceProperties: ServiceProperties, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      description: 서비스 속성입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties
  name: setServiceProperties(ServiceProperties, RequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Azure Storage Analytics를 포함 하 여 저장소 계정의 Table service의 속성을 설정 합니다.

    또한 서 버전이 지정 되지 않은 들어오는 모든 요청에 대 한 기본 요청 버전을 설정 하려면이 작업을 사용할 수 있습니다.
  syntax:
    content: 'function setServiceProperties(serviceProperties: ServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      description: 서비스 속성입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.setTableAcl_1
  name: 'setTableAcl(string, [key: string]: AccessPolicy, ErrorOrResult<Object>)'
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블의 ACL을 업데이트합니다.
  syntax:
    content: 'function setTableAcl(table: string, signedIdentifiers: [key: string]: AccessPolicy, callback: ErrorOrResult<Object>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: 서명 된 식별자입니다. 서명 된 식별자는 배열 이어야 합니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<Object>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 테이블에 대 한 정보가 포함 됩니다.
                                                                                 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.setTableAcl
  name: 'setTableAcl(string, [key: string]: AccessPolicy, RequestOptions, ErrorOrResult<Object>)'
  children: []
  type: method
  langs:
  - typeScript
  summary: 테이블의 ACL을 업데이트합니다.
  syntax:
    content: 'function setTableAcl(table: string, signedIdentifiers: [key: string]: AccessPolicy, options: RequestOptions, callback: ErrorOrResult<Object>)'
    parameters:
    - id: table
      type:
      - string
      description: 테이블 이름입니다.
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: 서명 된 식별자입니다. 서명 된 식별자는 배열 이어야 합니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<Object>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 테이블에 대 한 정보가 포함 됩니다.
                                                                                 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.withFilter
  name: withFilter(IFilter)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    이 TableService 필터링 작업을 연결 합니다. 필터링 작업은 로깅, 자동 재시도 등을 포함할 수 있습니다. 필터 작업 시그니처가 있는 메서드를 구현 하는 개체가: "함수 핸들 (requestOptions, 다음)".


    요청 옵션에 대 한 전처리를 수행한 후 메서드를 호출 해야 "다음" 다음 서명 사용 하 여 콜백을 전달: 서명:

        "function (returnObject, finalCallback, next)"

    이 콜백에서 returnObject(서버에 요청 응답 반환)를 처리한 후 콜백은 next(있는 경우)를 호출하여 다른 필터를 계속 처리하거나 finalCallback을 호출하여 서비스 호출을 종료해야 합니다.
  syntax:
    content: 'function withFilter(newFilter: IFilter)'
    parameters:
    - id: newFilter
      type:
      - azure-storage.azurestorage.common.filters.IFilter
      description: ''
    return:
      type:
      - azure-storage.azurestorage.services.table.TableService
  package: azure-storage
references:
- uid: azure-storage.azurestorage.common.RequestOptions
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: azure-storage.azurestorage.common.RequestOptions
- uid: azure-storage.azurestorage.common.filters.Next
  name: Next
  spec.typeScript:
  - name: Next
    fullName: Next
    uid: azure-storage.azurestorage.common.filters.Next
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  name: IRetryRequestOptions
  spec.typeScript:
  - name: IRetryRequestOptions
    fullName: IRetryRequestOptions
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
- uid: azure-storage.azurestorage.common.filters.IFilter
  name: IFilter
  spec.typeScript:
  - name: IFilter
    fullName: IFilter
    uid: azure-storage.azurestorage.common.filters.IFilter
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  name: IRetryContext
  spec.typeScript:
  - name: IRetryContext
    fullName: IRetryContext
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  name: RetryPolicyFilter
  spec.typeScript:
  - name: RetryPolicyFilter
    fullName: RetryPolicyFilter
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
- uid: azure-storage.Map<any>
  name: Map<any>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <any>
    fullName: <any>
- uid: azure-storage.Map<string>
  name: Map<string>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.common.http.webresource.WebResource
  name: WebResource
  spec.typeScript:
  - name: WebResource
    fullName: WebResource
    uid: azure-storage.azurestorage.common.http.webresource.WebResource
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  name: ServiceProperties
  spec.typeScript:
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  name: StaticWebsiteProperties
  spec.typeScript:
  - name: StaticWebsiteProperties
    fullName: StaticWebsiteProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  name: RetentionPolicy
  spec.typeScript:
  - name: RetentionPolicy
    fullName: RetentionPolicy
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  name: DeleteRetentionPolicyProperties
  spec.typeScript:
  - name: DeleteRetentionPolicyProperties
    fullName: DeleteRetentionPolicyProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  name: MetricsProperties
  spec.typeScript:
  - name: MetricsProperties
    fullName: MetricsProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  name: LoggingProperties
  spec.typeScript:
  - name: LoggingProperties
    fullName: LoggingProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
- uid: azure-storage.azurestorage.StorageHost
  name: StorageHost
  spec.typeScript:
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  name: LocationMode
  spec.typeScript:
  - name: LocationMode
    fullName: LocationMode
    uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
- uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  name: Logger
  spec.typeScript:
  - name: Logger
    fullName: Logger
    uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
- uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  name: Proxy
  spec.typeScript:
  - name: Proxy
    fullName: Proxy
    uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
- uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  name: StorageServiceClient
  spec.typeScript:
  - name: StorageServiceClient
    fullName: StorageServiceClient
    uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
- uid: azure-storage.azurestorage.AccessConditions
  name: AccessConditions
  spec.typeScript:
  - name: AccessConditions
    fullName: AccessConditions
    uid: azure-storage.azurestorage.AccessConditions
- uid: azure-storage.azurestorage.common.AccessPolicy
  name: AccessPolicy
  spec.typeScript:
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  name: LeaseRequestOptions
  spec.typeScript:
  - name: LeaseRequestOptions
    fullName: LeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  name: ConditionalRequestOption
  spec.typeScript:
  - name: ConditionalRequestOption
    fullName: ConditionalRequestOption
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]
  name: Block[]
  spec.typeScript:
  - name: Block
    fullName: Block
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  name: ContainerOptions
  spec.typeScript:
  - name: ContainerOptions
    fullName: ContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  name: ContainerResult
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
- uid: '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
  name: AccessPolicy
  spec.typeScript:
  - name: '[key: string]: '
    fullName: '[key: string]: '
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  name: BlobRequestOptions
  spec.typeScript:
  - name: BlobRequestOptions
    fullName: BlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
- uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  name: SpeedSummary
  spec.typeScript:
  - name: SpeedSummary
    fullName: SpeedSummary
    uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  name: CreateBlobRequestOptions
  spec.typeScript:
  - name: CreateBlobRequestOptions
    fullName: CreateBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
- uid: azure-storage.azurestorage.common.ContinuationToken
  name: ContinuationToken
  spec.typeScript:
  - name: ContinuationToken
    fullName: ContinuationToken
    uid: azure-storage.azurestorage.common.ContinuationToken
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult[]
  name: BlobDirectoryResult[]
  spec.typeScript:
  - name: BlobDirectoryResult
    fullName: BlobDirectoryResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  name: ListBlobsSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobsSegmentedRequestOptions
    fullName: ListBlobsSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]
  name: BlobResult[]
  spec.typeScript:
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]
  name: ContainerResult[]
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '[]'
    fullName: '[]'
- uid: string | azure-storage.azurestorage.StorageHost
  name: StorageHost
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.ErrorOrResponse
  name: ErrorOrResponse
  spec.typeScript:
  - name: ErrorOrResponse
    fullName: ErrorOrResponse
    uid: azure-storage.azurestorage.ErrorOrResponse
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
  name: LeaseResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: LeaseResult
    fullName: LeaseResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  name: AcquireLeaseRequestOptions
  spec.typeScript:
  - name: AcquireLeaseRequestOptions
    fullName: AcquireLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  name: AppendBlobRequestOptions
  spec.typeScript:
  - name: AppendBlobRequestOptions
    fullName: AppendBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
  name: BlobResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  name: BreakLeaseRequestOptions
  spec.typeScript:
  - name: BreakLeaseRequestOptions
    fullName: BreakLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  name: PutBlockListRequest
  spec.typeScript:
  - name: PutBlockListRequest
    fullName: PutBlockListRequest
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
- uid: azure-storage.azurestorage.ErrorOrResult<string>
  name: ErrorOrResult<string>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  name: CreateBlockBlobRequestOptions
  spec.typeScript:
  - name: CreateBlockBlobRequestOptions
    fullName: CreateBlockBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  name: CreateBlockRequestOptions
  spec.typeScript:
  - name: CreateBlockRequestOptions
    fullName: CreateBlockRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
  name: ContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  name: CreateContainerOptions
  spec.typeScript:
  - name: CreateContainerOptions
    fullName: CreateContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  name: CreatePageBlobOptions
  spec.typeScript:
  - name: CreatePageBlobOptions
    fullName: CreatePageBlobOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  name: GetBlobRequestOptions
  spec.typeScript:
  - name: GetBlobRequestOptions
    fullName: GetBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  name: DeleteBlobRequestOptions
  spec.typeScript:
  - name: DeleteBlobRequestOptions
    fullName: DeleteBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<boolean>
  name: ErrorOrResult<boolean>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.common.SharedAccessPolicy
  name: SharedAccessPolicy
  spec.typeScript:
  - name: SharedAccessPolicy
    fullName: SharedAccessPolicy
    uid: azure-storage.azurestorage.common.SharedAccessPolicy
- uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  name: ContentSettingsHeaders
  spec.typeScript:
  - name: ContentSettingsHeaders
    fullName: ContentSettingsHeaders
    uid: azure-storage.azurestorage.common.ContentSettingsHeaders
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
  name: AccountProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: AccountProperties
    fullName: AccountProperties
    uid: azure-storage.azurestorage.common.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  name: BlobToText
  spec.typeScript:
  - name: BlobToText
    fullName: BlobToText
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
  name: ContainerAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerAclResult
    fullName: ContainerAclResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
  name: RangeDiff[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: RangeDiff
    fullName: RangeDiff
    uid: azure-storage.azurestorage.common.RangeDiff
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
  name: BlobServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
  name: ServiceStats>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceStats
    fullName: ServiceStats
    uid: azure-storage.azurestorage.common.models.ServiceStats
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
  name: ListBlobDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobDirectoriesResult
    fullName: ListBlobDirectoriesResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
  name: ListBlobPrefixesSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobPrefixesSegmentedRequestOptions
    fullName: ListBlobPrefixesSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
  name: ListBlobsResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobsResult
    fullName: ListBlobsResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
  name: BlockListResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlockListResult
    fullName: BlockListResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  name: ListContainerOptions
  spec.typeScript:
  - name: ListContainerOptions
    fullName: ListContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
  name: ListContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListContainerResult
    fullName: ListContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
  name: Range[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: Range
    fullName: Range
    uid: azure-storage.azurestorage.common.Range
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  name: SetBlobPropertiesRequestOptions
  spec.typeScript:
  - name: SetBlobPropertiesRequestOptions
    fullName: SetBlobPropertiesRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  name: ContainerAclOptions
  spec.typeScript:
  - name: ContainerAclOptions
    fullName: ContainerAclOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  name: BlobServiceProperties
  spec.typeScript:
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  name: CopyBlobRequestOptions
  spec.typeScript:
  - name: CopyBlobRequestOptions
    fullName: CopyBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  name: BlobService
  spec.typeScript:
  - name: BlobService
    fullName: BlobService
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
- uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  name: FileServiceOptions
  spec.typeScript:
  - name: FileServiceOptions
    fullName: FileServiceOptions
    uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult[]
  name: ShareResult[]
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  name: ShareResult
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
- uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
  name: AccessPolicy>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <
    fullName: <
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
  name: FileResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: FileResult
    fullName: FileResult
    uid: azure-storage.azurestorage.services.file.FileService.FileResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  name: CreateDirectoryRequestOptions
  spec.typeScript:
  - name: CreateDirectoryRequestOptions
    fullName: CreateDirectoryRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
  name: DirectoryResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: DirectoryResult
    fullName: DirectoryResult
    uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  name: CreateFileRequestOptions
  spec.typeScript:
  - name: CreateFileRequestOptions
    fullName: CreateFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  name: CreateRangeRequestOptions
  spec.typeScript:
  - name: CreateRangeRequestOptions
    fullName: CreateRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  name: GetFileRequestOptions
  spec.typeScript:
  - name: GetFileRequestOptions
    fullName: GetFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  name: CreateShareRequestOptions
  spec.typeScript:
  - name: CreateShareRequestOptions
    fullName: CreateShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
  name: ShareResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  name: DeleteShareOptions
  spec.typeScript:
  - name: DeleteShareOptions
    fullName: DeleteShareOptions
    uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
- uid: azure-storage.azurestorage.services.file.FileService.FileToText
  name: FileToText
  spec.typeScript:
  - name: FileToText
    fullName: FileToText
    uid: azure-storage.azurestorage.services.file.FileService.FileToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
  name: ServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
  name: ShareAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareAclResult
    fullName: ShareAclResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  name: ListRequestOptions
  spec.typeScript:
  - name: ListRequestOptions
    fullName: ListRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
  name: ListFilesAndDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListFilesAndDirectoriesResult
    fullName: ListFilesAndDirectoriesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  name: ListRangeRequestOptions
  spec.typeScript:
  - name: ListRangeRequestOptions
    fullName: ListRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  name: ListShareRequestOptions
  spec.typeScript:
  - name: ListShareRequestOptions
    fullName: ListShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
  name: ListSharesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListSharesResult
    fullName: ListSharesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  name: SetFilePropertiesRequestOptions
  spec.typeScript:
  - name: SetFilePropertiesRequestOptions
    fullName: SetFilePropertiesRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  name: ShareProperties
  spec.typeScript:
  - name: ShareProperties
    fullName: ShareProperties
    uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
- uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  name: CopyFileRequestOptions
  spec.typeScript:
  - name: CopyFileRequestOptions
    fullName: CopyFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService
  name: FileService
  spec.typeScript:
  - name: FileService
    fullName: FileService
    uid: azure-storage.azurestorage.services.file.FileService
- uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult[]
  name: QueueResult[]
  spec.typeScript:
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  name: QueueMessageEncoder
  spec.typeScript:
  - name: QueueMessageEncoder
    fullName: QueueMessageEncoder
    uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  name: CreateMessageRequestOptions
  spec.typeScript:
  - name: CreateMessageRequestOptions
    fullName: CreateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
  name: QueueMessageResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  name: CreateQueueRequestOptions
  spec.typeScript:
  - name: CreateQueueRequestOptions
    fullName: CreateQueueRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
  name: QueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  name: GetMessageRequestOptions
  spec.typeScript:
  - name: GetMessageRequestOptions
    fullName: GetMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  name: GetMessagesRequestOptions
  spec.typeScript:
  - name: GetMessagesRequestOptions
    fullName: GetMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
  name: QueueMessageResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  name: ListQueuesRequestOptions
  spec.typeScript:
  - name: ListQueuesRequestOptions
    fullName: ListQueuesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
  name: ListQueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListQueueResult
    fullName: ListQueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  name: PeekMessagesRequestOptions
  spec.typeScript:
  - name: PeekMessagesRequestOptions
    fullName: PeekMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  name: UpdateMessageRequestOptions
  spec.typeScript:
  - name: UpdateMessageRequestOptions
    fullName: UpdateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService
  name: QueueService
  spec.typeScript:
  - name: QueueService
    fullName: QueueService
    uid: azure-storage.azurestorage.services.queue.QueueService
- uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  name: BatchResponse
  spec.typeScript:
  - name: BatchResponse
    fullName: BatchResponse
    uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
- uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  name: TableEntityRequestOptions
  spec.typeScript:
  - name: TableEntityRequestOptions
    fullName: TableEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  name: ListTablesContinuationToken
  spec.typeScript:
  - name: ListTablesContinuationToken
    fullName: ListTablesContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  name: TableContinuationToken
  spec.typeScript:
  - name: TableContinuationToken
    fullName: TableContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  name: PropertyResolver
  spec.typeScript:
  - name: PropertyResolver
    fullName: PropertyResolver
    uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
- uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  name: TableAccessPolicy
  spec.typeScript:
  - name: TableAccessPolicy
    fullName: TableAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
  name: TableResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: TableResult
    fullName: TableResult
    uid: azure-storage.azurestorage.services.table.TableService.TableResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableBatch
  name: TableBatch
  spec.typeScript:
  - name: TableBatch
    fullName: TableBatch
    uid: azure-storage.azurestorage.services.table.TableBatch
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
  name: BatchResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BatchResult
    fullName: BatchResult
    uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  name: TableSharedAccessPolicy
  spec.typeScript:
  - name: TableSharedAccessPolicy
    fullName: TableSharedAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
  name: GetTableAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: GetTableAclResult
    fullName: GetTableAclResult
    uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  name: InsertEntityRequestOptions
  spec.typeScript:
  - name: InsertEntityRequestOptions
    fullName: InsertEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  name: EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: '<T | '
    fullName: '<T | '
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  name: EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  name: ListTablesRequestOptions
  spec.typeScript:
  - name: ListTablesRequestOptions
    fullName: ListTablesRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
  name: ListTablesResponse>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListTablesResponse
    fullName: ListTablesResponse
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableQuery
  name: TableQuery
  spec.typeScript:
  - name: TableQuery
    fullName: TableQuery
    uid: azure-storage.azurestorage.services.table.TableQuery
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
  name: QueryEntitiesResult<T>>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueryEntitiesResult
    fullName: QueryEntitiesResult
    uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - name: <T>>
    fullName: <T>>
- uid: azure-storage.azurestorage.ErrorOrResult<T>
  name: ErrorOrResult<T>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <T>
    fullName: <T>
- uid: azure-storage.azurestorage.ErrorOrResult<Object>
  name: ErrorOrResult<Object>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <Object>
    fullName: <Object>
- uid: azure-storage.azurestorage.services.table.TableService
  name: TableService
  spec.typeScript:
  - name: TableService
    fullName: TableService
    uid: azure-storage.azurestorage.services.table.TableService
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
  name: EntityProperty<Buffer>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Buffer>
    fullName: <Buffer>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
  name: EntityProperty<boolean>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
  name: EntityProperty<Date>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Date>
    fullName: <Date>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
  name: EntityProperty<number>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <number>
    fullName: <number>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
  name: EntityProperty<any>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <any>
    fullName: <any>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
  name: EntityProperty<string>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.table.TableOperation[]
  name: TableOperation[]
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.table.TableOperation
  name: TableOperation
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
- uid: azure-storage.azurestorage.StorageError | Error
  name: StorageError | Error
  spec.typeScript:
  - name: StorageError
    fullName: StorageError
    uid: azure-storage.azurestorage.StorageError
  - name: " | Error"
    fullName: " | Error"
- uid: azure-storage.azurestorage.ServiceResponse
  name: ServiceResponse
  spec.typeScript:
  - name: ServiceResponse
    fullName: ServiceResponse
    uid: azure-storage.azurestorage.ServiceResponse
- uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  name: TokenCredential
  spec.typeScript:
  - name: TokenCredential
    fullName: TokenCredential
    uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
- uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  name: BatchResult
- uid: azure-storage.azurestorage.services.table.TableService.createTable_1
  name: createTable_1
- uid: azure-storage.azurestorage.services.table.TableService.createTable
  name: createTable
- uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
  name: createTableIfNotExists_1
- uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
  name: createTableIfNotExists
- uid: azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
  name: defaultPayloadFormat
- uid: azure-storage.azurestorage.services.table.TableService.deleteEntity_1
  name: deleteEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.deleteEntity
  name: deleteEntity
- uid: azure-storage.azurestorage.services.table.TableService.deleteTable_1
  name: deleteTable_1
- uid: azure-storage.azurestorage.services.table.TableService.deleteTable
  name: deleteTable
- uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
  name: deleteTableIfExists_1
- uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
  name: deleteTableIfExists
- uid: azure-storage.azurestorage.services.table.TableService.doesTableExist_1
  name: doesTableExist_1
- uid: azure-storage.azurestorage.services.table.TableService.doesTableExist
  name: doesTableExist
- uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  name: EntityMetadata
- uid: azure-storage.azurestorage.services.table.TableService.EntityProperty
  name: EntityProperty
- uid: azure-storage.azurestorage.services.table.TableService.executeBatch_1
  name: executeBatch_1
- uid: azure-storage.azurestorage.services.table.TableService.executeBatch
  name: executeBatch
- uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
  name: generateSharedAccessSignature
- uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion
- uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
  name: getServiceProperties_1
- uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties
  name: getServiceProperties
- uid: azure-storage.azurestorage.services.table.TableService.getServiceStats_1
  name: getServiceStats_1
- uid: azure-storage.azurestorage.services.table.TableService.getServiceStats
  name: getServiceStats
- uid: azure-storage.azurestorage.services.table.TableService.getTableAcl_1
  name: getTableAcl_1
- uid: azure-storage.azurestorage.services.table.TableService.getTableAcl
  name: getTableAcl
- uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  name: GetTableAclResult
- uid: azure-storage.azurestorage.services.table.TableService.getUrl
  name: getUrl
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity_2
  name: insertEntity_2
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity
  name: insertEntity
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity_1
  name: insertEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
  name: insertOrMergeEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
  name: insertOrMergeEntity
- uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
  name: insertOrReplaceEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
  name: insertOrReplaceEntity
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  name: ListTablesResponse
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
  name: listTablesSegmented_1
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented
  name: listTablesSegmented
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
  name: listTablesSegmentedWithPrefix_1
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
  name: listTablesSegmentedWithPrefix
- uid: azure-storage.azurestorage.services.table.TableService.mergeEntity_1
  name: mergeEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.mergeEntity
  name: mergeEntity
- uid: azure-storage.azurestorage.services.table.TableService.queryEntities_1
  name: queryEntities_1
- uid: azure-storage.azurestorage.services.table.TableService.queryEntities
  name: queryEntities
- uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  name: QueryEntitiesResult
- uid: azure-storage.azurestorage.services.table.TableService.replaceEntity_1
  name: replaceEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.replaceEntity
  name: replaceEntity
- uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
  name: retrieveEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity
  name: retrieveEntity
- uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
  name: setServiceProperties_1
- uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties
  name: setServiceProperties
- uid: azure-storage.azurestorage.services.table.TableService.setTableAcl_1
  name: setTableAcl_1
- uid: azure-storage.azurestorage.services.table.TableService.setTableAcl
  name: setTableAcl
- uid: azure-storage.azurestorage.services.table.TableService.TableResult
  name: TableResult
- uid: azure-storage.azurestorage.services.table.TableService.withFilter
  name: withFilter
