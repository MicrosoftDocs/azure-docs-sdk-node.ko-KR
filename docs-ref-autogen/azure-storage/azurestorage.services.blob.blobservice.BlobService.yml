### YamlMime:UniversalReference
ms.openlocfilehash: c5a0ae4126a6ac1c3f0711e8ee19aea4799c8860
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40067524"
items:
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  name: BlobService
  fullName: BlobService
  children:
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.constructor
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.defaultEnableReuseSocket
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateBlockIdPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignature
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignatureWithVersion
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlockId
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getUrl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.parallelOperationThreadCount
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.singleBlobPutThresholdInBytes
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.SpeedSummary
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.withFilter
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob_1
  name: abortCopyBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob 복사 작업을 중단 합니다.
  syntax:
    content: 'function abortCopyBlob(container: string, blob: string, copyId: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: copyId
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob
  name: abortCopyBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob 복사 작업을 중단 합니다.
  syntax:
    content: 'function abortCopyBlob(container: string, blob: string, copyId: string, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 대상 컨테이너 이름입니다.
    - id: blob
      type:
      - string
      description: 대상 blob 이름입니다.
    - id: copyId
      type:
      - string
      description: 복사 작업 식별자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 정보가 포함 됩니다.
                                                                              `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease_1
  name: acquireLease
  children: []
  type: method
  langs:
  - typeScript
  summary: 새 임대를 가져옵니다. 컨테이너와 blob를 지정 하는 경우에 blob 임대를 가져옵니다. 그렇지 않은 경우 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 가져옵니다.
  syntax:
    content: 'function acquireLease(container: string, blob: string, options: AcquireLeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease
  name: acquireLease
  children: []
  type: method
  langs:
  - typeScript
  summary: 새 임대를 가져옵니다. 컨테이너와 blob를 지정 하는 경우에 blob 임대를 가져옵니다. 그렇지 않은 경우 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 가져옵니다.
  syntax:
    content: 'function acquireLease(container: string, blob: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream
  name: appendBlockFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    추가 blob에 추가할 읽기 스트림에서 새 블록을 만듭니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendBlockFromStream(container: string, blob: string, readStream: stream.Readable, streamLength: number, options: AppendBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: readStream
      type:
      - stream.Readable
      description: Node.js를 읽을 수 있는 스트림.
    - id: streamLength
      type:
      - number
      description: 스트림 길이입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                              `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream_1
  name: appendBlockFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    추가 blob에 추가할 읽기 스트림에서 새 블록을 만듭니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendBlockFromStream(container: string, blob: string, readStream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText
  name: appendBlockFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    추가 blob에 추가할 텍스트에서 새 블록을 만듭니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendBlockFromText(container: string, blob: string, content: string | Buffer, options: AppendBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: content
      type:
      - string | Buffer
      description: 블록 텍스트 문자열 또는 버퍼입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                              `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText_1
  name: appendBlockFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    추가 blob에 추가할 텍스트에서 새 블록을 만듭니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendBlockFromText(container: string, blob: string, content: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: content
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile_1
  name: appendFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    HTML 파일 개체에서 추가 blob에 추가합니다. Blob 서비스에 이미 있다고 가정 합니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    (브라우저에 대 한 JavaScript 클라이언트 라이브러리의 사용 가능)
  syntax:
    content: 'function appendFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile
  name: appendFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    HTML 파일 개체에서 추가 blob에 추가합니다. Blob 서비스에 이미 있다고 가정 합니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    (브라우저에 대 한 JavaScript 클라이언트 라이브러리의 사용 가능)
  syntax:
    content: 'function appendFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: browserFile
      type:
      - Object
      description: HTML 파일 API에서 업로드할 파일 개체가 생성.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `[result](xref:BlobResult)` blob 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile
  name: appendFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    로컬 파일에서 추가 blob에 추가합니다. Blob 서비스에 이미 있다고 가정 합니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: localFileName
      type:
      - string
      description: 업로드할 파일에 로컬 경로입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: 콜백 함수입니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile_1
  name: appendFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    로컬 파일에서 추가 blob에 추가합니다. Blob 서비스에 이미 있다고 가정 합니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream
  name: appendFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    스트림에서 추가 blob에 추가합니다. Blob 서비스에 이미 있다고 가정 합니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: 업로드 하기 위해 스트림의 길이입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: 콜백 함수입니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream_1
  name: appendFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    스트림에서 추가 blob에 추가합니다. Blob 서비스에 이미 있다고 가정 합니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText
  name: appendFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    텍스트 문자열에서 추가 blob에 추가합니다. Blob 서비스에 이미 있다고 가정 합니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendFromText(container: string, blob: string, text: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: text
      type:
      - string
      description: Blob 텍스트 문자열 또는 버퍼입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText_1
  name: appendFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    텍스트 문자열에서 추가 blob에 추가합니다. Blob 서비스에 이미 있다고 가정 합니다.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.
  syntax:
    content: 'function appendFromText(container: string, blob: string, text: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.constructor
  name: BlobService
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >-
    새 BlobService 개체를 만듭니다.

    없고 연결 문자열 또는 storageaccount storageaccesskey 나와 AZURE_STORAGE_CONNECTION_STRING 또는 AZURE_STORAGE_ACCOUNT 및 AZURE_STORAGE_ACCESS_KEY 환경 변수가 사용 됩니다.
  syntax:
    content: 'new BlobService(storageAccountOrConnectionString: string, storageAccessKey?: string, host?: string | StorageHost, sasToken?: string, endpointSuffix?: string)'
    parameters:
    - id: storageAccountOrConnectionString
      type:
      - string
      description: ''
    - id: storageAccessKey
      type:
      - string
      description: ''
      optional: true
    - id: host
      type:
      - string | azure-storage.azurestorage.StorageHost
      description: ''
      optional: true
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: endpointSuffix
      type:
      - string
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  name: BlobToText
  fullName: BlobToText
  children: []
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease
  name: breakLease
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    임대를 중단 되더라도 현재 임대 기간이 만료 될 때까지 다른 클라이언트가 새로운 임대를 가져올 수 없습니다는 있습니다. 컨테이너와 blob를 지정 하는 경우에 blob 임대를 중단 합니다.

    그렇지 않은 경우 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 중단 합니다.
  syntax:
    content: 'function breakLease(container: string, blob: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease_1
  name: breakLease
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    임대를 중단 되더라도 현재 임대 기간이 만료 될 때까지 다른 클라이언트가 새로운 임대를 가져올 수 없습니다는 있습니다. 컨테이너와 blob를 지정 하는 경우에 blob 임대를 중단 합니다.

    그렇지 않은 경우 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 중단 합니다.
  syntax:
    content: 'function breakLease(container: string, blob: string, options: BreakLeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease
  name: changeLease
  children: []
  type: method
  langs:
  - typeScript
  summary: 활성 임대의 임대 ID를 변경 합니다. 컨테이너와 blob를 지정 하는 경우 blob 임대를 변경 합니다. 이 고, 그렇지 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 변경 합니다.
  syntax:
    content: 'function changeLease(container: string, blob: string, leaseId: string, proposedLeaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: leaseId
      type:
      - string
      description: 현재 임대 식별자입니다.
    - id: proposedLeaseId
      type:
      - string
      description: 제안 된 임대 식별자입니다. GUID 여야 합니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease_1
  name: changeLease
  children: []
  type: method
  langs:
  - typeScript
  summary: 활성 임대의 임대 ID를 변경 합니다. 컨테이너와 blob를 지정 하는 경우 blob 임대를 변경 합니다. 이 고, 그렇지 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 변경 합니다.
  syntax:
    content: 'function changeLease(container: string, blob: string, leaseId: string, proposedLeaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: leaseId
      type:
      - string
      description: 현재 임대 식별자입니다.
    - id: proposedLeaseId
      type:
      - string
      description: 제안 된 임대 식별자입니다. GUID 여야 합니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange_1
  name: clearPageRange
  children: []
  type: method
  langs:
  - typeScript
  summary: 페이지 범위를 지웁니다.
  syntax:
    content: 'function clearPageRange(container: string, blob: string, rangeStart: number, rangeEnd: number, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: rangeStart
      type:
      - number
      description: ''
    - id: rangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange
  name: clearPageRange
  children: []
  type: method
  langs:
  - typeScript
  summary: 페이지 범위를 지웁니다.
  syntax:
    content: 'function clearPageRange(container: string, blob: string, rangeStart: number, rangeEnd: number, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: rangeStart
      type:
      - number
      description: 범위 시작 부분입니다.
    - id: rangeEnd
      type:
      - number
      description: 범위 끝입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks
  name: commitBlocks
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Blob는 블록 Id 목록을 지정 하 여 blob에 기록 합니다.

    Blob 일부로 기록 하기 위해서는 블록 해야 성공적으로 기록 된 이전 createBlock 작업에서 서버에 있습니다.

    참고: 유효한 목록이 없는 blockList 매개 변수에 지정 된 경우 빈 콘텐츠를 사용 하 여 blob를 업데이트할 것, 즉, 기존 블록 blob에서 제거 됩니다, 그리고이 동작은 이전 버전과 호환성 고려 사항에 대 한 유지 됩니다.
  syntax:
    content: 'function commitBlocks(container: string, blob: string, blockList: PutBlockListRequest, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: blockList
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
      description: >-
        블록 ID 목록에 대 한 래퍼는 블록 blob을 구성 하는 Id를 포함 합니다.

        세 가지 목록 나와, 요구 사항에 따라 사용할 하나를 선택 하세요.

        자세한 배경 지식에 대 한 참조 하세요 https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 차단 목록 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks_1
  name: commitBlocks
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Blob는 블록 Id 목록을 지정 하 여 blob에 기록 합니다.

    Blob 일부로 기록 하기 위해서는 블록 해야 성공적으로 기록 된 이전 createBlock 작업에서 서버에 있습니다.

    참고: 유효한 목록이 없는 blockList 매개 변수에 지정 된 경우 빈 콘텐츠를 사용 하 여 blob를 업데이트할 것, 즉, 기존 블록 blob에서 제거 됩니다, 그리고이 동작은 이전 버전과 호환성 고려 사항에 대 한 유지 됩니다.
  syntax:
    content: 'function commitBlocks(container: string, blob: string, blockList: PutBlockListRequest, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blockList
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile_1
  name: createAppendBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    HTML 파일 개체에서 새 추가 blob을 만듭니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    기존 blob에 데이터를 추가 하려는 경우에 appendFromBrowserFile에서 확인 하십시오.

    (브라우저에 대 한 JavaScript 클라이언트 라이브러리의 사용 가능)
  syntax:
    content: 'function createAppendBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile
  name: createAppendBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    HTML 파일 개체에서 새 추가 blob을 만듭니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    기존 blob에 데이터를 추가 하려는 경우에 appendFromBrowserFile에서 확인 하십시오.

    (브라우저에 대 한 JavaScript 클라이언트 라이브러리의 사용 가능)
  syntax:
    content: 'function createAppendBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: browserFile
      type:
      - Object
      description: HTML 파일 API에서 업로드할 파일 개체가 생성.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `[result](xref:BlobResult)` blob 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile
  name: createAppendBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    로컬 파일에서 새 추가 blob을 만듭니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    기존 blob에 데이터를 추가 하려는 경우에 appendFromLocalFile에서 확인 하십시오.
  syntax:
    content: 'function createAppendBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: localFileName
      type:
      - string
      description: 업로드할 파일에 로컬 경로입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: 콜백 함수입니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile_1
  name: createAppendBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    로컬 파일에서 새 추가 blob을 만듭니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    기존 blob에 데이터를 추가 하려는 경우에 appendFromLocalFile에서 확인 하십시오.
  syntax:
    content: 'function createAppendBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream
  name: createAppendBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    스트림에서 추가 blob을 업로드합니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    기존 blob에 데이터를 추가 하려는 경우에 appendFromStream에서 확인 하십시오.
  syntax:
    content: 'function createAppendBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: 업로드 하기 위해 스트림의 길이입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: 콜백 함수입니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream_1
  name: createAppendBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    스트림에서 추가 blob을 업로드합니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    기존 blob에 데이터를 추가 하려는 경우에 appendFromStream에서 확인 하십시오.
  syntax:
    content: 'function createAppendBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText_1
  name: createAppendBlobFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    텍스트 문자열에서 추가 blob을 업로드합니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    기존 blob에 데이터를 추가 하려는 경우에 appendFromText에서 확인 하십시오.
  syntax:
    content: 'function createAppendBlobFromText(container: string, blob: string, text: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText
  name: createAppendBlobFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    텍스트 문자열에서 추가 blob을 업로드합니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    기존 blob에 데이터를 추가 하려는 경우에 appendFromText에서 확인 하십시오.
  syntax:
    content: 'function createAppendBlobFromText(container: string, blob: string, text: string | Buffer, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: text
      type:
      - string | Buffer
      description: Blob 텍스트 문자열 또는 버퍼입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot_1
  name: createBlobSnapshot
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob의 읽기 전용 스냅숏을 만듭니다.
  syntax:
    content: 'function createBlobSnapshot(container: string, blob: string, callback: ErrorOrResult<string>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<string>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot
  name: createBlobSnapshot
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob의 읽기 전용 스냅숏을 만듭니다.
  syntax:
    content: 'function createBlobSnapshot(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<string>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<string>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 스냅숏의 ID를 포함 됩니다.
                                                                          `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile_1
  name: createBlockBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    새 블록 blob을 만듭니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    (브라우저에 대 한 JavaScript 클라이언트 라이브러리의 사용 가능)
  syntax:
    content: 'function createBlockBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile
  name: createBlockBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    새 블록 blob을 만듭니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    (브라우저에 대 한 JavaScript 클라이언트 라이브러리의 사용 가능)
  syntax:
    content: 'function createBlockBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: browserFile
      type:
      - Object
      description: HTML 파일 API에서 업로드할 파일 개체가 생성.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `[result](xref:BlobResult)` blob 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile
  name: createBlockBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    새 블록 blob을 만들거나 기존 블록 blob의 콘텐츠를 업데이트 합니다.

    기존 블록 blob를 업데이트 하는 중 blob의 기존 메타 데이터를 덮어씁니다.

    Put Blob;를 사용 하 여 부분 업데이트가 지원 되지 않습니다. 기존 blob의 콘텐츠를 새 blob의 콘텐츠로 덮어씁니다.

    블록 blob의 콘텐츠를 부분적으로 업데이트를 수행 하려면 블록 목록 배치 작업을 사용 합니다.

    Blob을 초기화만 페이지 blob을 Blob 배치를 호출 합니다. 페이지 blob에 콘텐츠를 추가 하려면 페이지 배치 작업을 호출 합니다.
  syntax:
    content: 'function createBlockBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: localFileName
      type:
      - string
      description: 업로드할 파일에 로컬 경로입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `[result](xref:BlobResult)` blob 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile_1
  name: createBlockBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    새 블록 blob을 만들거나 기존 블록 blob의 콘텐츠를 업데이트 합니다.

    기존 블록 blob를 업데이트 하는 중 blob의 기존 메타 데이터를 덮어씁니다.

    Put Blob;를 사용 하 여 부분 업데이트가 지원 되지 않습니다. 기존 blob의 콘텐츠를 새 blob의 콘텐츠로 덮어씁니다.

    블록 blob의 콘텐츠를 부분적으로 업데이트를 수행 하려면 블록 목록 배치 작업을 사용 합니다.

    Blob을 초기화만 페이지 blob을 Blob 배치를 호출 합니다. 페이지 blob에 콘텐츠를 추가 하려면 페이지 배치 작업을 호출 합니다.
  syntax:
    content: 'function createBlockBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream
  name: createBlockBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 스트림에서 블록 blob을 업로드합니다.
  syntax:
    content: 'function createBlockBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: 업로드 하기 위해 스트림의 길이입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: 콜백 함수입니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream_1
  name: createBlockBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 스트림에서 블록 blob을 업로드합니다.
  syntax:
    content: 'function createBlockBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: 업로드 하기 위해 스트림의 길이입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: 콜백 함수입니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText
  name: createBlockBlobFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: 텍스트 문자열에서 블록 blob을 업로드합니다.
  syntax:
    content: 'function createBlockBlobFromText(container: string, blob: string, text: string | Buffer, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: text
      type:
      - string | Buffer
      description: Blob 텍스트 문자열 또는 버퍼입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText_1
  name: createBlockBlobFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: 텍스트 문자열에서 블록 blob을 업로드합니다.
  syntax:
    content: 'function createBlockBlobFromText(container: string, blob: string, text: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream
  name: createBlockFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob의 일부로 커밋할 새 블록을 만듭니다.
  syntax:
    content: 'function createBlockFromStream(blockId: string, container: string, blob: string, readStream: stream.Readable, streamLength: number, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: 블록 식별자입니다.
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: readStream
      type:
      - stream.Readable
      description: Node.js를 읽을 수 있는 스트림.
    - id: streamLength
      type:
      - number
      description: 스트림 길이입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream_1
  name: createBlockFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob의 일부로 커밋할 새 블록을 만듭니다.
  syntax:
    content: 'function createBlockFromStream(blockId: string, container: string, blob: string, readStream: stream.Readable, streamLength: number, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText_1
  name: createBlockFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob의 일부로 커밋할 새 블록을 만듭니다.
  syntax:
    content: 'function createBlockFromText(blockId: string, container: string, blob: string, content: string | Buffer, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: content
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText
  name: createBlockFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob의 일부로 커밋할 새 블록을 만듭니다.
  syntax:
    content: 'function createBlockFromText(blockId: string, container: string, blob: string, content: string | Buffer, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: 블록 식별자입니다.
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: content
      type:
      - string | Buffer
      description: 블록 내용입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL
  name: createBlockFromURL
  children: []
  type: method
  langs:
  - typeScript
  summary: Azure blob 또는 파일의 URL에서 때 blob의 일부로 커밋할 새 블록을 만듭니다.
  syntax:
    content: 'function createBlockFromURL(blockId: string, container: string, blob: string, sourceURL: string, sourceRangeStart: number, sourceRangeEnd: number, options: CreateBlockRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: 블록 식별자입니다.
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: sourceURL
      type:
      - string
      description: >-
        원본 데이터의 URL입니다.

        Azure Blob 또는 파일을 가리킬 수 있습니다 즉 두 공용 또는 공유 액세스 서명을 연결 합니다.
    - id: sourceRangeStart
      type:
      - number
      description: Bytes(inclusive) 복사 원본에서 수행할 수 있는 범위의 시작입니다.
    - id: sourceRangeEnd
      type:
      - number
      description: 복사 원본에서 수행할 수 있는 bytes(inclusive) 범위의 끝입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL_1
  name: createBlockFromURL
  children: []
  type: method
  langs:
  - typeScript
  summary: Azure blob 또는 파일의 URL에서 때 blob의 일부로 커밋할 새 블록을 만듭니다.
  syntax:
    content: 'function createBlockFromURL(blockId: string, container: string, blob: string, sourceURL: string, sourceRangeStart: number, sourceRangeEnd: number, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: sourceURL
      type:
      - string
      description: ''
    - id: sourceRangeStart
      type:
      - number
      description: ''
    - id: sourceRangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer
  name: createContainer
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정 된 계정의 새 컨테이너를 만듭니다.

    같은 이름의 컨테이너가 이미 있는 경우 작업이 실패 합니다.
  syntax:
    content: 'function createContainer(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너 정보가 포함 됩니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer_1
  name: createContainer
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정 된 계정의 새 컨테이너를 만듭니다.

    같은 이름의 컨테이너가 이미 있는 경우 작업이 실패 합니다.
  syntax:
    content: 'function createContainer(container: string, options: CreateContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너 정보가 포함 됩니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists_1
  name: createContainerIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너가 없는 경우 지정 된 계정의 새 컨테이너를 만듭니다.
  syntax:
    content: 'function createContainerIfNotExists(container: string, options: CreateContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너를 만든 경우 true 또는 false 컨테이너가 이미 있는 경우 됩니다.
                                                                              `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists
  name: createContainerIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너가 없는 경우 지정 된 계정의 새 컨테이너를 만듭니다.
  syntax:
    content: 'function createContainerIfNotExists(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너를 만든 경우 true 또는 false 컨테이너가 이미 있는 경우 됩니다.
                                                                              `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob_1
  name: createOrReplaceAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    빈 추가 blob을 만듭니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.
  syntax:
    content: 'function createOrReplaceAppendBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob
  name: createOrReplaceAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    빈 추가 blob을 만듭니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.
  syntax:
    content: 'function createOrReplaceAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob
  name: createPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createPageBlob(container: string, blob: string, length: number, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob_1
  name: createPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createPageBlob(container: string, blob: string, length: number, options: CreatePageBlobOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile_1
  name: createPageBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    HTML 파일에서 페이지 blob을 업로드합니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    (브라우저에 대 한 JavaScript 클라이언트 라이브러리의 사용 가능)
  syntax:
    content: 'function createPageBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile
  name: createPageBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    HTML 파일에서 페이지 blob을 업로드합니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    (브라우저에 대 한 JavaScript 클라이언트 라이브러리의 사용 가능)
  syntax:
    content: 'function createPageBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: browserFile
      type:
      - Object
      description: HTML 파일 API에서 업로드할 파일 개체가 생성.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `[result](xref:BlobResult)` blob 정보가 포함 됩니다.
                                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile
  name: createPageBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: 파일에서 페이지 blob을 업로드합니다.
  syntax:
    content: 'function createPageBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: localFileName
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: 콜백 함수입니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile_1
  name: createPageBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: 파일에서 페이지 blob을 업로드합니다.
  syntax:
    content: 'function createPageBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream_1
  name: createPageBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 스트림에서 페이지 blob을 업로드합니다.
  syntax:
    content: 'function createPageBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream
  name: createPageBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 스트림에서 페이지 blob을 업로드합니다.
  syntax:
    content: 'function createPageBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: 업로드 하기 위해 스트림의 길이입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: 콜백 함수입니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream_1
  name: createPagesFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 스트림에서 페이지 blob를 업데이트합니다.
  syntax:
    content: 'function createPagesFromStream(container: string, blob: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: rangeStart
      type:
      - number
      description: ''
    - id: rangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream
  name: createPagesFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 스트림에서 페이지 blob를 업데이트합니다.
  syntax:
    content: 'function createPagesFromStream(container: string, blob: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: readStream
      type:
      - stream.Readable
      description: Node.js를 읽을 수 있는 스트림.
    - id: rangeStart
      type:
      - number
      description: 범위 시작 부분입니다.
    - id: rangeEnd
      type:
      - number
      description: 범위 끝입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream
  name: createReadStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob에서 읽는 스트림을 제공 합니다.
  syntax:
    content: 'function createReadStream(container: string, blob: string, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - stream.Readable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream_1
  name: createReadStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob에서 읽는 스트림을 제공 합니다.
  syntax:
    content: 'function createReadStream(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Readable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob_1
  name: createWriteStreamToBlockBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    블록 blob에 쓸 스트림을 제공 합니다.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToBlockBlob(container: string, blob: string, callback?: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
      optional: true
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob
  name: createWriteStreamToBlockBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    블록 blob에 쓸 스트림을 제공 합니다.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToBlockBlob(container: string, blob: string, options: CreateBlockBlobRequestOptions, callback?: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
      optional: true
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob
  name: createWriteStreamToExistingAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    기존 추가 blob에 쓸 스트림을 제공 합니다. Blob이 있다고 가정 합니다.

    그렇지 않은 경우이 메서드를 호출 하기 전에 createAppendBlob를 사용 하 여 blob을 만들 하거나 createWriteStreamToNewAppendBlob를 사용 하십시오.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToExistingAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob_1
  name: createWriteStreamToExistingAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    기존 추가 blob에 쓸 스트림을 제공 합니다. Blob이 있다고 가정 합니다.

    그렇지 않은 경우이 메서드를 호출 하기 전에 createAppendBlob를 사용 하 여 blob을 만들 하거나 createWriteStreamToNewAppendBlob를 사용 하십시오.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToExistingAppendBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob
  name: createWriteStreamToExistingPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    페이지 blob에 쓸 스트림을 제공 합니다. Blob이 있다고 가정 합니다.

    그렇지 않은 경우이 메서드를 호출 하기 전에 createPageBlob를 사용 하 여 blob을 만들 하거나 createWriteStreamNewPageBlob를 사용 하십시오.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToExistingPageBlob(container: string, blob: string, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `[result](xref:BlobResult)` blob 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob_1
  name: createWriteStreamToExistingPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    페이지 blob에 쓸 스트림을 제공 합니다. Blob이 있다고 가정 합니다.

    그렇지 않은 경우이 메서드를 호출 하기 전에 createPageBlob를 사용 하 여 blob을 만들 하거나 createWriteStreamNewPageBlob를 사용 하십시오.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToExistingPageBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob
  name: createWriteStreamToNewAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    새 추가 blob을 쓸 스트림을 제공 합니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToNewAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob_1
  name: createWriteStreamToNewAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    새 추가 blob을 쓸 스트림을 제공 합니다. Blob 서비스에 이미 있는 경우 덮어씁니다.

    덮어쓰지 않도록 대신 blob이 존재 하는 경우 오류를 throw을 옵션 개체를 accessConditions 매개 변수로 전달 하세요.

    이 API API 중복 요소를 방지 하려면 오프셋 추가 조건부 헤더를 내부적으로 사용 하기 때문에 단일 작성기 시나리오에서 엄격 하 게 사용할 수 해야 합니다.

    단일 작성기 시나리오를 보장 하는 경우 options.absorbConditionalErrorsOnRetry 확인 하 고이 플래그를 true로 설정 하면 적합 인지 확인 하세요.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToNewAppendBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob_1
  name: createWriteStreamToNewPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    페이지 blob에 쓸 스트림을 제공 합니다. 데이터를 쓰기 전에 blob을 만듭니다.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToNewPageBlob(container: string, blob: string, length: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob
  name: createWriteStreamToNewPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    페이지 blob에 쓸 스트림을 제공 합니다. 데이터를 쓰기 전에 blob을 만듭니다.

    참고는 `Stream` 이 반환한 파이프를 사용 하 여 API를 사용 해야 합니다.
  syntax:
    content: 'function createWriteStreamToNewPageBlob(container: string, blob: string, length: number, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: length
      type:
      - number
      description: Blob 길이입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `[result](xref:BlobResult)` blob 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.defaultEnableReuseSocket
  name: defaultEnableReuseSocket
  fullName: defaultEnableReuseSocket
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'defaultEnableReuseSocket: boolean'
    return:
      type:
      - boolean
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob
  name: deleteBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정 된 blob 또는 스냅숏에 삭제를 표시합니다. Blob는 나중 가비지 수집 중에 삭제 됩니다.

    Blob에 스냅숏이 있으면 blob을 삭제 하는 경우 해당 삭제 해야 합니다. DeleteSnapshots 옵션을 사용 하 여, blob 및 해당 스냅숏을 모두 삭제 하거나 스냅숏만 하지만 blob 자체를 삭제 하려면 선택할 수 있습니다. Blob에 스냅숏이, deleteSnapshots 옵션을 포함 해야 합니다 또는 blob service가 반환 하는 경우 오류가 발생 하 고 아무 것도 삭제 됩니다.

    SnapshotId 옵션을 사용 하 여 특정 스냅숏을 삭제 하는 경우 deleteSnapshots 옵션을 포함 하지 않아야 합니다.
  syntax:
    content: 'function deleteBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob_1
  name: deleteBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정 된 blob 또는 스냅숏에 삭제를 표시합니다. Blob는 나중 가비지 수집 중에 삭제 됩니다.

    Blob에 스냅숏이 있으면 blob을 삭제 하는 경우 해당 삭제 해야 합니다. DeleteSnapshots 옵션을 사용 하 여, blob 및 해당 스냅숏을 모두 삭제 하거나 스냅숏만 하지만 blob 자체를 삭제 하려면 선택할 수 있습니다. Blob에 스냅숏이, deleteSnapshots 옵션을 포함 해야 합니다 또는 blob service가 반환 하는 경우 오류가 발생 하 고 아무 것도 삭제 됩니다.

    SnapshotId 옵션을 사용 하 여 특정 스냅숏을 삭제 하는 경우 deleteSnapshots 옵션을 포함 하지 않아야 합니다.
  syntax:
    content: 'function deleteBlob(container: string, blob: string, options: DeleteBlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists
  name: deleteBlobIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    있는 경우 지정 된 blob 또는 스냅숏에 삭제를 표시 합니다. Blob는 나중 가비지 수집 중에 삭제 됩니다.

    Blob에 스냅숏이 있으면 blob을 삭제 하는 경우 해당 삭제 해야 합니다. DeleteSnapshots 옵션을 사용 하 여, blob 및 해당 스냅숏을 모두 삭제 하거나 스냅숏만 하지만 blob 자체를 삭제 하려면 선택할 수 있습니다. Blob에 스냅숏이, deleteSnapshots 옵션을 포함 해야 합니다 또는 blob service가 반환 하는 경우 오류가 발생 하 고 아무 것도 삭제 됩니다.

    SnapshotId 옵션을 사용 하 여 특정 스냅숏을 삭제 하는 경우 deleteSnapshots 옵션을 포함 하지 않아야 합니다.
  syntax:
    content: 'function deleteBlobIfExists(container: string, blob: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에서 삭제 되 면 true 또는 blob이 없는 경우 false입니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists_1
  name: deleteBlobIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    있는 경우 지정 된 blob 또는 스냅숏에 삭제를 표시 합니다. Blob는 나중 가비지 수집 중에 삭제 됩니다.

    Blob에 스냅숏이 있으면 blob을 삭제 하는 경우 해당 삭제 해야 합니다. DeleteSnapshots 옵션을 사용 하 여, blob 및 해당 스냅숏을 모두 삭제 하거나 스냅숏만 하지만 blob 자체를 삭제 하려면 선택할 수 있습니다. Blob에 스냅숏이, deleteSnapshots 옵션을 포함 해야 합니다 또는 blob service가 반환 하는 경우 오류가 발생 하 고 아무 것도 삭제 됩니다.

    SnapshotId 옵션을 사용 하 여 특정 스냅숏을 삭제 하는 경우 deleteSnapshots 옵션을 포함 하지 않아야 합니다.
  syntax:
    content: 'function deleteBlobIfExists(container: string, blob: string, options: DeleteBlobRequestOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에서 삭제 되 면 true 또는 blob이 없는 경우 false입니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer
  name: deleteContainer
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 컨테이너 삭제를 표시합니다.

    컨테이너 및 그 안에 포함 된 모든 blob는 나중 가비지 수집 하는 동안 삭제 됩니다.
  syntax:
    content: 'function deleteContainer(container: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer_1
  name: deleteContainer
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 컨테이너 삭제를 표시합니다.

    컨테이너 및 그 안에 포함 된 모든 blob는 나중 가비지 수집 하는 동안 삭제 됩니다.
  syntax:
    content: 'function deleteContainer(container: string, options: ContainerOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists_1
  name: deleteContainerIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    있는 경우 삭제에 대 한 지정된 된 컨테이너를 표시 합니다.

    컨테이너 및 그 안에 포함 된 모든 blob는 나중 가비지 수집 하는 동안 삭제 됩니다.
  syntax:
    content: 'function deleteContainerIfExists(container: string, options: ContainerOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너가 존재 하 고 삭제 된 경우 true 또는 컨테이너가 존재 하지 않은 경우 false입니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists
  name: deleteContainerIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    있는 경우 삭제에 대 한 지정된 된 컨테이너를 표시 합니다.

    컨테이너 및 그 안에 포함 된 모든 blob는 나중 가비지 수집 하는 동안 삭제 됩니다.
  syntax:
    content: 'function deleteContainerIfExists(container: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너가 존재 하 고 삭제 된 경우 true 또는 컨테이너가 존재 하지 않은 경우 false입니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist_1
  name: doesBlobExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob 서비스에 있는지 여부를 확인 합니다.
  syntax:
    content: 'function doesBlobExist(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `errorOrResult` blob가 있으면 true 또는 blob이 없는 경우 false입니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist
  name: doesBlobExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob 서비스에 있는지 여부를 확인 합니다.
  syntax:
    content: 'function doesBlobExist(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `errorOrResult` blob가 있으면 true 또는 blob이 없는 경우 false입니다.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist
  name: doesContainerExist
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너 서비스에 있는지 여부를 확인 합니다.
  syntax:
    content: 'function doesContainerExist(container: string, options: RequestOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너가 존재 하는 경우 true 또는 false 컨테이너가 없는 경우.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist_1
  name: doesContainerExist
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너 서비스에 있는지 여부를 확인 합니다.
  syntax:
    content: 'function doesContainerExist(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너가 존재 하는 경우 true 또는 false 컨테이너가 없는 경우.
                                                                            `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateBlockIdPrefix
  name: generateBlockIdPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: 임의 블록 id 접두사를 생성 합니다.
  syntax:
    content: function generateBlockIdPrefix()
    parameters: []
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignature
  name: generateSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: 공유 액세스 서명 토큰을 검색합니다.
  syntax:
    content: 'function generateSharedAccessSignature(container: string, blob: string, sharedAccessPolicy: SharedAccessPolicy, headers?: ContentSettingsHeaders)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: ''
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: 공유 액세스 정책입니다.
    - id: headers
      type:
      - azure-storage.azurestorage.common.ContentSettingsHeaders
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion
  children: []
  type: method
  langs:
  - typeScript
  summary: 공유 액세스 서명 토큰을 검색합니다.
  syntax:
    content: 'function generateSharedAccessSignatureWithVersion(container: string, blob: string, sharedAccessPolicy: SharedAccessPolicy, sasVersion: string, headers?: ContentSettingsHeaders)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: ''
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: 공유 액세스 정책입니다.
    - id: sasVersion
      type:
      - string
      description: ''
    - id: headers
      type:
      - azure-storage.azurestorage.common.ContentSettingsHeaders
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties
  name: getAccountProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 속성을 가져옵니다.
  syntax:
    content: 'function getAccountProperties(container?: string, blob?: string, options?: RequestOptions, callback?: ErrorOrResult<AccountProperties>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
      optional: true
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
      optional: true
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `[result](xref:AccountProperties)` 는 속성이 포함 됩니다 및 `response` 이 작업과 관련 된 정보가 포함 됩니다.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties_1
  name: getAccountProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 속성을 가져옵니다.
  syntax:
    content: 'function getAccountProperties(container?: string, blob?: string, callback?: ErrorOrResult<AccountProperties>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
      optional: true
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata
  name: getBlobMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정 된 blob 또는 스냅숏에 대 한 모든 사용자 정의 메타 데이터를 반환합니다.

    수정 하거나 blob의 내용을 반환 하지 않습니다.
  syntax:
    content: 'function getBlobMetadata(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata_1
  name: getBlobMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정 된 blob 또는 스냅숏에 대 한 모든 사용자 정의 메타 데이터를 반환합니다.

    수정 하거나 blob의 내용을 반환 하지 않습니다.
  syntax:
    content: 'function getBlobMetadata(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties
  name: getBlobProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    모든 사용자 정의 메타 데이터, 표준 HTTP 속성 및 blob에 대 한 시스템 속성을 반환합니다.

    반환 하거나 blob의 콘텐츠를 수정 하지 않습니다.
  syntax:
    content: 'function getBlobProperties(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties_1
  name: getBlobProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    모든 사용자 정의 메타 데이터, 표준 HTTP 속성 및 blob에 대 한 시스템 속성을 반환합니다.

    반환 하거나 blob의 콘텐츠를 수정 하지 않습니다.
  syntax:
    content: 'function getBlobProperties(container: string, blob: string, optionsOrCallback: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: optionsOrCallback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile_1
  name: getBlobToLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob을 파일로 다운로드합니다.
  syntax:
    content: 'function getBlobToLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile
  name: getBlobToLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob을 파일로 다운로드합니다.
  syntax:
    content: 'function getBlobToLocalFile(container: string, blob: string, localFileName: string, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: localFileName
      type:
      - string
      description: 다운로드 파일에 로컬 경로입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream_1
  name: getBlobToStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 스트림으로 blob을 다운로드합니다.
  syntax:
    content: 'function getBlobToStream(container: string, blob: string, writeStream: stream.Writable, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: writeStream
      type:
      - stream.Writable
      description: Node.js 쓰기 가능한 스트림입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream
  name: getBlobToStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 스트림으로 blob을 다운로드합니다.
  syntax:
    content: 'function getBlobToStream(container: string, blob: string, writeStream: stream.Writable, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: writeStream
      type:
      - stream.Writable
      description: Node.js 쓰기 가능한 스트림입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText_1
  name: getBlobToText
  children: []
  type: method
  langs:
  - typeScript
  summary: 텍스트 문자열에 blob을 다운로드합니다.
  syntax:
    content: 'function getBlobToText(container: string, blob: string, callback: BlobToText)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText
  name: getBlobToText
  children: []
  type: method
  langs:
  - typeScript
  summary: 텍스트 문자열에 blob을 다운로드합니다.
  syntax:
    content: 'function getBlobToText(container: string, blob: string, options: GetBlobRequestOptions, callback: BlobToText)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `text` blob 내용이 포함 됩니다 및 `blockBlob` blob 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlockId
  name: getBlockId
  children: []
  type: method
  langs:
  - typeScript
  summary: 접두사와 블록 수에 따라 블록 id를 가져오려면
  syntax:
    content: 'function getBlockId(prefix: string, number: number | string)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
    - id: number
      type:
      - number | string
      description: ''
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl
  name: getContainerAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너의 ACL을 가져옵니다.
  syntax:
    content: 'function getContainerAcl(container: string, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너에 대 한 정보가 포함 됩니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl_1
  name: getContainerAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너의 ACL을 가져옵니다.
  syntax:
    content: 'function getContainerAcl(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너에 대 한 정보가 포함 됩니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata
  name: getContainerMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너에 대 한 모든 사용자 정의 메타 데이터를 반환합니다.
  syntax:
    content: 'function getContainerMetadata(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너에 대 한 정보가 포함 됩니다.
                                                                              `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata_1
  name: getContainerMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너에 대 한 모든 사용자 정의 메타 데이터를 반환합니다.
  syntax:
    content: 'function getContainerMetadata(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너에 대 한 정보가 포함 됩니다.
                                                                              `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties
  name: getContainerProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 계정에서 컨테이너 및 해당 속성을 검색합니다.
  syntax:
    content: 'function getContainerProperties(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너에 대 한 정보가 포함 됩니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties_1
  name: getContainerProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 계정에서 컨테이너 및 해당 속성을 검색합니다.
  syntax:
    content: 'function getContainerProperties(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너에 대 한 정보가 포함 됩니다.
                                                                        `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff_1
  name: getPageRangesDiff
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPageRangesDiff(container: string, blob: string, previousSnapshotTime: string, callback: ErrorOrResult<RangeDiff[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: previousSnapshotTime
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff
  name: getPageRangesDiff
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPageRangesDiff(container: string, blob: string, previousSnapshotTime: string, options: GetBlobRequestOptions, callback: ErrorOrResult<RangeDiff[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: previousSnapshotTime
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties_1
  name: getServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Azure Storage Analytics를 포함 하 여 저장소 계정의 Blob service의 속성을 가져옵니다.
  syntax:
    content: 'function getServiceProperties(callback?: ErrorOrResult<BlobServiceProperties>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties
  name: getServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Azure Storage Analytics를 포함 하 여 저장소 계정의 Blob service의 속성을 가져옵니다.
  syntax:
    content: 'function getServiceProperties(options: RequestOptions, callback?: ErrorOrResult<BlobServiceProperties>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 는 속성이 포함 됩니다 및 `response` 이 작업과 관련 된 정보가 포함 됩니다.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats
  name: getServiceStats
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 Blob 서비스에 대 한 서비스 통계를 가져옵니다.
  syntax:
    content: 'function getServiceStats(options: RequestOptions, callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 이 고, 그렇지 `result` 통계를 포함 하 고 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats_1
  name: getServiceStats
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 Blob 서비스에 대 한 서비스 통계를 가져옵니다.
  syntax:
    content: 'function getServiceStats(callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getUrl
  name: getUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob 또는 컨테이너 URL을 검색합니다.
  syntax:
    content: 'function getUrl(container: string, blob?: string, sasToken?: string, primary?: boolean, snapshotId?: string)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: primary
      type:
      - boolean
      description: ''
      optional: true
    - id: snapshotId
      type:
      - string
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  name: LeaseRequestOptions
  fullName: LeaseRequestOptions
  children: []
  langs:
  - typeScript
  type: interface
  summary: ''
  extends:
    name: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented
  name: listBlobsSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너의 blob 항목 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listBlobsSegmented(container: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 포함 됩니다 `entries` 고 `continuationToken`입니다.
                                                                      `entries`  blob의 목록을 제공 하며 `continuationToken` 다음 목록 작업에 사용 됩니다.
                                                                      `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented_1
  name: listBlobsSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너의 blob 항목 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listBlobsSegmented(container: string, currentToken: ContinuationToken, options: ListBlobsSegmentedRequestOptions, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 포함 됩니다 `entries` 고 `continuationToken`입니다.
                                                                      `entries`  blob의 목록을 제공 하며 `continuationToken` 다음 목록 작업에 사용 됩니다.
                                                                      `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix_1
  name: listBlobsSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너에는 지정한 접두사로 시작 하는 blob 항목 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listBlobsSegmentedWithPrefix(container: string, prefix: string, currentToken: ContinuationToken, options: ListBlobsSegmentedRequestOptions, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: prefix
      type:
      - string
      description: Blob 이름 접두사입니다.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob와 다음 목록 작업에 대 한 연속 토큰의 항목이 포함 됩니다.
                                                                      `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix
  name: listBlobsSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너에는 지정한 접두사로 시작 하는 blob 항목 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listBlobsSegmentedWithPrefix(container: string, prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: prefix
      type:
      - string
      description: Blob 이름 접두사입니다.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob와 다음 목록 작업에 대 한 연속 토큰의 항목이 포함 됩니다.
                                                                      `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks
  name: listBlocks
  children: []
  type: method
  langs:
  - typeScript
  summary: 블록 blob의 일부로 업로드 된 블록 목록을 검색 합니다.
  syntax:
    content: 'function listBlocks(container: string, blob: string, blocklisttype: string, options: BlobRequestOptions, callback: ErrorOrResult<BlockListResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: blocklisttype
      type:
      - string
      description: 검색할 블록 목록의 형식입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 차단 목록 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks_1
  name: listBlocks
  children: []
  type: method
  langs:
  - typeScript
  summary: 블록 blob의 일부로 업로드 된 블록 목록을 검색 합니다.
  syntax:
    content: 'function listBlocks(container: string, blob: string, blocklisttype: string, callback: ErrorOrResult<BlockListResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blocklisttype
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented
  name: listContainersSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 계정의 컨테이너 항목 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listContainersSegmented(currentToken: ContinuationToken, options: ListContainerOptions, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 포함 됩니다 `entries` 고 `continuationToken`입니다.
                                                                                `entries`  컨테이너 목록을 제공 하며 `continuationToken` 다음 목록 작업에 사용 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented_1
  name: listContainersSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 계정의 컨테이너 항목 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listContainersSegmented(currentToken: ContinuationToken, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix
  name: listContainersSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 계정의 지정 된 접두사로 시작 하는 컨테이너 항목 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listContainersSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, options: ListContainerOptions, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: 컨테이너 이름의 접두사입니다.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: 이전 나열 작업에서 반환 된 연속 토큰입니다. 'Null' 또는 '정의 되지 않은' 첫 번째 작업은이 경우 사용 하세요.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 포함 됩니다 `entries` 고 `continuationToken`입니다.
                                                                                `entries`  컨테이너 목록을 제공 하며 `continuationToken` 다음 목록 작업에 사용 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix_1
  name: listContainersSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 계정의 지정 된 접두사로 시작 하는 컨테이너 항목 컬렉션을 포함 하는 세그먼트를 나열 합니다.
  syntax:
    content: 'function listContainersSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges
  name: listPageRanges
  children: []
  type: method
  langs:
  - typeScript
  summary: 페이지 범위를 나열합니다. 범위 및 rangeEnd 지정 되 면 기본적으로 페이지 범위 또는 페이지 범위만 모든 바이트의 특정 범위에 대해 나열 합니다.
  syntax:
    content: 'function listPageRanges(container: string, blob: string, options: GetBlobRequestOptions, callback: ErrorOrResult<Range[]>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 페이지 범위 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges_1
  name: listPageRanges
  children: []
  type: method
  langs:
  - typeScript
  summary: 페이지 범위를 나열합니다. 범위 및 rangeEnd 지정 되 면 기본적으로 페이지 범위 또는 페이지 범위만 모든 바이트의 특정 범위에 대해 나열 합니다.
  syntax:
    content: 'function listPageRanges(container: string, blob: string, callback: ErrorOrResult<Range[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.parallelOperationThreadCount
  name: parallelOperationThreadCount
  fullName: parallelOperationThreadCount
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'parallelOperationThreadCount: number'
    return:
      type:
      - number
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease
  name: releaseLease
  children: []
  type: method
  langs:
  - typeScript
  summary: 임대를 해제합니다. 컨테이너와 blob를 지정 하는 경우에 blob 임대를 해제 합니다. 이 고, 그렇지 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 해제 합니다.
  syntax:
    content: 'function releaseLease(container: string, blob: string, leaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: leaseId
      type:
      - string
      description: 임대 식별자입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease_1
  name: releaseLease
  children: []
  type: method
  langs:
  - typeScript
  summary: 임대를 해제합니다. 컨테이너와 blob를 지정 하는 경우에 blob 임대를 해제 합니다. 이 고, 그렇지 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 해제 합니다.
  syntax:
    content: 'function releaseLease(container: string, blob: string, leaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: leaseId
      type:
      - string
      description: 임대 식별자입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease
  name: renewLease
  children: []
  type: method
  langs:
  - typeScript
  summary: 기존 임대를 갱신합니다. 컨테이너와 blob를 지정 하는 경우 blob 임대를 갱신 합니다. 이 고, 그렇지 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 갱신 합니다.
  syntax:
    content: 'function renewLease(container: string, blob: string, leaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: leaseId
      type:
      - string
      description: 임대 식별자입니다. GUID 여야 합니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease_1
  name: renewLease
  children: []
  type: method
  langs:
  - typeScript
  summary: 기존 임대를 갱신합니다. 컨테이너와 blob를 지정 하는 경우 blob 임대를 갱신 합니다. 이 고, 그렇지 컨테이너를 지정 하 고 blob가 null만 컨테이너 임대를 갱신 합니다.
  syntax:
    content: 'function renewLease(container: string, blob: string, leaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: leaseId
      type:
      - string
      description: 임대 식별자입니다. GUID 여야 합니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 임대 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob
  name: resizePageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: 페이지 blob 크기를 조정 합니다.
  syntax:
    content: 'function resizePageBlob(container: string, blob: string, size: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: size
      type:
      - number
      description: 페이지 blob (바이트)에서의 크기입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob_1
  name: resizePageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: 페이지 blob 크기를 조정 합니다.
  syntax:
    content: 'function resizePageBlob(container: string, blob: string, size: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: size
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata
  name: setBlobMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: 사용자 정의 메타 지정 된 blob 또는 스냅숏을 수정 하거나 blob의 내용을 반환 하지 않는 하나 이상의 이름-값 쌍으로 설정 합니다.
  syntax:
    content: 'function setBlobMetadata(container: string, blob: string, metadata: Map<string>, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: 메타 데이터 키/값 쌍입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata_1
  name: setBlobMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: 사용자 정의 메타 지정 된 blob 또는 스냅숏을 수정 하거나 blob의 내용을 반환 하지 않는 하나 이상의 이름-값 쌍으로 설정 합니다.
  syntax:
    content: 'function setBlobMetadata(container: string, blob: string, metadata: Map<string>, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: 메타 데이터 키/값 쌍입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties_1
  name: setBlobProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정 된 blob 또는 스냅숏에 대 한 사용자 정의 속성 집합입니다.

    수정 하거나 blob의 내용을 반환 하지 않습니다.
  syntax:
    content: 'function setBlobProperties(container: string, blob: string, optionsOrCallback: SetBlobPropertiesRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: optionsOrCallback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties
  name: setBlobProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    사용자 정의 속성에 지정 된 blob 또는 스냅숏 지웁니다.

    수정 하거나 blob의 내용을 반환 하지 않습니다.
  syntax:
    content: 'function setBlobProperties(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier_1
  name: setBlobTier
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob storage LRS 계정 blockblob의 계층 또는 프리미엄 저장소 계정으로 pageblob의 계층을 설정합니다.
  syntax:
    content: 'function setBlobTier(container: string, blob: string, blobTier: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blobTier
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier
  name: setBlobTier
  children: []
  type: method
  langs:
  - typeScript
  summary: Blob storage LRS 계정 blockblob의 계층 또는 프리미엄 저장소 계정으로 pageblob의 계층을 설정합니다.
  syntax:
    content: 'function setBlobTier(container: string, blob: string, blobTier: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: blobTier
      type:
      - string
      description: 가능한 값에 대 한 BlobUtilities.BlobTier.StandardBlobTier 또는 BlobUtilities.BlobTier.PremiumPageBlobTier를 참조 하세요.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl
  name: setContainerAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너의 ACL을 업데이트합니다.
  syntax:
    content: 'function setContainerAcl(container: string, signedIdentifiers: function, options: ContainerAclOptions, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: signedIdentifiers
      type:
      - function
      description: 컨테이너 ACL 설정입니다. 참조 `[AccessPolicy](xref:AccessPolicy)` 자세한 정보에 대 한 합니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` 컨테이너에 대 한 정보가 포함 됩니다.
                                                                                    `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl_1
  name: setContainerAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 컨테이너의 ACL을 업데이트합니다.
  syntax:
    content: 'function setContainerAcl(container: string, signedIdentifiers: function, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: signedIdentifiers
      type:
      - function
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata
  name: setContainerMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    컨테이너의 메타 데이터를 설정합니다.

    컨테이너와 연결 된 모든 기존 메타 데이터를 덮어씁니다 컨테이너 메타 데이터 설정 작업을 호출 합니다.

    개별 이름/값 쌍을 수정 하는 것이 불가능 합니다.
  syntax:
    content: 'function setContainerMetadata(container: string, metadata: Map<string>, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: 메타 데이터 키/값 쌍입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata_1
  name: setContainerMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    컨테이너의 메타 데이터를 설정합니다.

    컨테이너와 연결 된 모든 기존 메타 데이터를 덮어씁니다 컨테이너 메타 데이터 설정 작업을 호출 합니다.

    개별 이름/값 쌍을 수정 하는 것이 불가능 합니다.
  syntax:
    content: 'function setContainerMetadata(container: string, metadata: Map<string>, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: 메타 데이터 키/값 쌍입니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber
  name: setPageBlobSequenceNumber
  children: []
  type: method
  langs:
  - typeScript
  summary: 페이지 blob의 시퀀스 번호를 설정합니다.
  syntax:
    content: 'function setPageBlobSequenceNumber(container: string, blob: string, sequenceNumberAction: string, sequenceNumber: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: sequenceNumberAction
      type:
      - string
      description: >-
        시퀀스 번호에 대해 수행할 작업을 나타내는 값입니다.

        허용 되는 값은 azure에서 정의 됩니다. BlobUtilities.SequenceNumberAction 합니다.
    - id: sequenceNumber
      type:
      - number
      description: >-
        시퀀스 번호입니다.  시퀀스 번호의 값 0과 2 사이 여야 합니다. ^63-1입니다.

        이 작업은 증분 작업 하는 경우 null로이 매개 변수를 설정 합니다.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob에 대 한 정보가 포함 됩니다.
                                                                                  `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber_1
  name: setPageBlobSequenceNumber
  children: []
  type: method
  langs:
  - typeScript
  summary: 페이지 blob의 시퀀스 번호를 설정합니다.
  syntax:
    content: 'function setPageBlobSequenceNumber(container: string, blob: string, sequenceNumberAction: string, sequenceNumber: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: sequenceNumberAction
      type:
      - string
      description: ''
    - id: sequenceNumber
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties_1
  name: setServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Azure Storage Analytics를 포함 하 여 저장소 계정의 Blob service의 속성을 설정 합니다.

    또한 서 버전이 지정 되지 않은 들어오는 모든 요청에 대 한 기본 요청 버전을 설정 하려면이 작업을 사용할 수 있습니다.

    Blob 서비스 속성 (예: 일시 삭제를 사용 하도록 설정)로 설정 하면 적용 되려면 최대 30 초까지 걸릴 수 있습니다.
  syntax:
    content: 'function setServiceProperties(serviceProperties: BlobServiceProperties, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties
  name: setServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Azure Storage Analytics를 포함 하 여 저장소 계정의 Blob service의 속성을 설정 합니다.

    또한 서 버전이 지정 되지 않은 들어오는 모든 요청에 대 한 기본 요청 버전을 설정 하려면이 작업을 사용할 수 있습니다.

    Blob 서비스 속성 (예: 일시 삭제를 사용 하도록 설정)로 설정 하면 적용 되려면 최대 30 초까지 걸릴 수 있습니다.
  syntax:
    content: 'function setServiceProperties(serviceProperties: BlobServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      description: 서비스 속성입니다.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.singleBlobPutThresholdInBytes
  name: singleBlobPutThresholdInBytes
  fullName: singleBlobPutThresholdInBytes
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'singleBlobPutThresholdInBytes: number'
    return:
      type:
      - number
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SpeedSummary
  name: SpeedSummary
  fullName: SpeedSummary
  children: []
  langs:
  - typeScript
  type: property
  summary: 에 대 한 콜백을 {BlobService ~ getBlobToText}.
  syntax:
    content: 'static SpeedSummary: SpeedSummary'
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob
  name: startCopyBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    대상 blob에 blob 또는 Azure Storage 파일을 복사 하기 시작 합니다.

    기본적으로는 비동기 복사에 대해이 작업 확인 또는 복사 작업을 중단 하는 데 사용할 수 있는 복사 ID를 포함 하는 개체를 반환 합니다. Blob service는 최상의 노력으로 blob을 복사합니다.

    비동기 복사 작업에 대 한 원본 blob는 블록 blob, 추가 blob, 페이지 blob 또는 Azure Storage 파일을 수 있습니다.


    참조 https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob 대 한 자세한 내용은 합니다.
  syntax:
    content: 'function startCopyBlob(sourceUri: string, targetcontainer: string, targetblob: string, options: CopyBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: sourceUri
      type:
      - string
      description: 원본 blob URI입니다.
    - id: targetcontainer
      type:
      - string
      description: ''
    - id: targetblob
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. 그렇지 않으면 `result` blob 정보가 포함 됩니다.
                                                                              `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob_1
  name: startCopyBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    대상 blob에 blob 또는 Azure Storage 파일을 복사 하기 시작 합니다.

    기본적으로는 비동기 복사에 대해이 작업 확인 또는 복사 작업을 중단 하는 데 사용할 수 있는 복사 ID를 포함 하는 개체를 반환 합니다. Blob service는 최상의 노력으로 blob을 복사합니다.

    비동기 복사 작업에 대 한 원본 blob는 블록 blob, 추가 blob, 페이지 blob 또는 Azure Storage 파일을 수 있습니다.


    참조 https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob 대 한 자세한 내용은 합니다.
  syntax:
    content: 'function startCopyBlob(sourceUri: string, targetcontainer: string, targetblob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: sourceUri
      type:
      - string
      description: ''
    - id: targetcontainer
      type:
      - string
      description: ''
    - id: targetblob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob
  name: undeleteBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    삭제 취소 Blob 작업 내용과 일시 삭제 된 blob 또는 스냅숏의 메타 데이터를 복원합니다.

    변경 하지 않고 성공 blob 또는 소프트 삭제 되지 않습니다는 스냅숏을 삭제 취소 하려고 합니다.
  syntax:
    content: 'function undeleteBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: 컨테이너 이름
    - id: blob
      type:
      - string
      description: Blob 이름입니다.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` 오류가 발생 하는 경우 정보가 포함 됩니다. `response` 이 작업과 관련 된 정보가 포함 됩니다.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob_1
  name: undeleteBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    삭제 취소 Blob 작업 내용과 일시 삭제 된 blob 또는 스냅숏의 메타 데이터를 복원합니다.

    변경 하지 않고 성공 blob 또는 소프트 삭제 되지 않습니다는 스냅숏을 삭제 취소 하려고 합니다.
  syntax:
    content: 'function undeleteBlob(container: string, blob: string, options: ConditionalRequestOption, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.withFilter
  name: withFilter
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    이 BlobService 필터링 작업을 연결 합니다. 필터링 작업은 로깅, 자동 재시도 등을 포함할 수 있습니다. 필터 작업 시그니처가 있는 메서드를 구현 하는 개체가: "함수 핸들 (requestOptions, 다음)".


    요청 옵션에 대 한 전처리를 수행한 후 메서드를 호출 해야 "다음" 다음 서명 사용 하 여 콜백을 전달: 서명:

        "function (returnObject, finalCallback, next)"

    이 콜백에서 returnObject(서버에 요청 응답 반환)를 처리한 후 콜백은 next(있는 경우)를 호출하여 다른 필터를 계속 처리하거나 finalCallback을 호출하여 서비스 호출을 종료해야 합니다.
  syntax:
    content: 'function withFilter(newFilter: IFilter)'
    parameters:
    - id: newFilter
      type:
      - azure-storage.azurestorage.common.filters.IFilter
      description: ''
    return:
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService
  package: azure-storage
references:
- uid: azure-storage.azurestorage.common.RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: azure-storage.azurestorage.common.RequestOptions
- uid: azure-storage.azurestorage.common.filters.Next
  spec.typeScript:
  - name: Next
    fullName: Next
    uid: azure-storage.azurestorage.common.filters.Next
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  spec.typeScript:
  - name: IRetryRequestOptions
    fullName: IRetryRequestOptions
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
- uid: azure-storage.azurestorage.common.filters.IFilter
  spec.typeScript:
  - name: IFilter
    fullName: IFilter
    uid: azure-storage.azurestorage.common.filters.IFilter
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  spec.typeScript:
  - name: IRetryContext
    fullName: IRetryContext
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  spec.typeScript:
  - name: RetryPolicyFilter
    fullName: RetryPolicyFilter
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
- uid: azure-storage.Map<any>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <any>
    fullName: <any>
- uid: azure-storage.Map<string>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.common.http.webresource.WebResource
  spec.typeScript:
  - name: WebResource
    fullName: WebResource
    uid: azure-storage.azurestorage.common.http.webresource.WebResource
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  spec.typeScript:
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  spec.typeScript:
  - name: StaticWebsiteProperties
    fullName: StaticWebsiteProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  spec.typeScript:
  - name: RetentionPolicy
    fullName: RetentionPolicy
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  spec.typeScript:
  - name: DeleteRetentionPolicyProperties
    fullName: DeleteRetentionPolicyProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  spec.typeScript:
  - name: MetricsProperties
    fullName: MetricsProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  spec.typeScript:
  - name: LoggingProperties
    fullName: LoggingProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
- uid: azure-storage.azurestorage.StorageHost
  spec.typeScript:
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  spec.typeScript:
  - name: LocationMode
    fullName: LocationMode
    uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
- uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  spec.typeScript:
  - name: Logger
    fullName: Logger
    uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
- uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  spec.typeScript:
  - name: Proxy
    fullName: Proxy
    uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
- uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  spec.typeScript:
  - name: StorageServiceClient
    fullName: StorageServiceClient
    uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
- uid: azure-storage.azurestorage.AccessConditions
  spec.typeScript:
  - name: AccessConditions
    fullName: AccessConditions
    uid: azure-storage.azurestorage.AccessConditions
- uid: azure-storage.azurestorage.common.AccessPolicy
  spec.typeScript:
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  spec.typeScript:
  - name: LeaseRequestOptions
    fullName: LeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  spec.typeScript:
  - name: ConditionalRequestOption
    fullName: ConditionalRequestOption
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]
  spec.typeScript:
  - name: Block
    fullName: Block
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  spec.typeScript:
  - name: ContainerOptions
    fullName: ContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  spec.typeScript:
  - name: BlobRequestOptions
    fullName: BlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
- uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  spec.typeScript:
  - name: SpeedSummary
    fullName: SpeedSummary
    uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  spec.typeScript:
  - name: CreateBlobRequestOptions
    fullName: CreateBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
- uid: azure-storage.azurestorage.common.ContinuationToken
  spec.typeScript:
  - name: ContinuationToken
    fullName: ContinuationToken
    uid: azure-storage.azurestorage.common.ContinuationToken
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]
  spec.typeScript:
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '[]'
    fullName: '[]'
- uid: string | azure-storage.azurestorage.StorageHost
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.ErrorOrResponse
  spec.typeScript:
  - name: ErrorOrResponse
    fullName: ErrorOrResponse
    uid: azure-storage.azurestorage.ErrorOrResponse
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: LeaseResult
    fullName: LeaseResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  spec.typeScript:
  - name: AcquireLeaseRequestOptions
    fullName: AcquireLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  spec.typeScript:
  - name: AppendBlobRequestOptions
    fullName: AppendBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  spec.typeScript:
  - name: BreakLeaseRequestOptions
    fullName: BreakLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  spec.typeScript:
  - name: PutBlockListRequest
    fullName: PutBlockListRequest
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
- uid: azure-storage.azurestorage.ErrorOrResult<string>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  spec.typeScript:
  - name: CreateBlockBlobRequestOptions
    fullName: CreateBlockBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  spec.typeScript:
  - name: CreateBlockRequestOptions
    fullName: CreateBlockRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  spec.typeScript:
  - name: CreateContainerOptions
    fullName: CreateContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  spec.typeScript:
  - name: CreatePageBlobOptions
    fullName: CreatePageBlobOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  spec.typeScript:
  - name: GetBlobRequestOptions
    fullName: GetBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  spec.typeScript:
  - name: DeleteBlobRequestOptions
    fullName: DeleteBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<boolean>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.common.SharedAccessPolicy
  spec.typeScript:
  - name: SharedAccessPolicy
    fullName: SharedAccessPolicy
    uid: azure-storage.azurestorage.common.SharedAccessPolicy
- uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  spec.typeScript:
  - name: ContentSettingsHeaders
    fullName: ContentSettingsHeaders
    uid: azure-storage.azurestorage.common.ContentSettingsHeaders
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: AccountProperties
    fullName: AccountProperties
    uid: azure-storage.azurestorage.common.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  spec.typeScript:
  - name: BlobToText
    fullName: BlobToText
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerAclResult
    fullName: ContainerAclResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: RangeDiff
    fullName: RangeDiff
    uid: azure-storage.azurestorage.common.RangeDiff
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceStats
    fullName: ServiceStats
    uid: azure-storage.azurestorage.common.models.ServiceStats
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobsResult
    fullName: ListBlobsResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobsSegmentedRequestOptions
    fullName: ListBlobsSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlockListResult
    fullName: BlockListResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  spec.typeScript:
  - name: ListContainerOptions
    fullName: ListContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListContainerResult
    fullName: ListContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: Range
    fullName: Range
    uid: azure-storage.azurestorage.common.Range
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  spec.typeScript:
  - name: SetBlobPropertiesRequestOptions
    fullName: SetBlobPropertiesRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  spec.typeScript:
  - name: ContainerAclOptions
    fullName: ContainerAclOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  spec.typeScript:
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  spec.typeScript:
  - name: CopyBlobRequestOptions
    fullName: CopyBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  spec.typeScript:
  - name: BlobService
    fullName: BlobService
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
- uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  spec.typeScript:
  - name: FileServiceOptions
    fullName: FileServiceOptions
    uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult[]
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
- uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <
    fullName: <
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: FileResult
    fullName: FileResult
    uid: azure-storage.azurestorage.services.file.FileService.FileResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  spec.typeScript:
  - name: CreateDirectoryRequestOptions
    fullName: CreateDirectoryRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: DirectoryResult
    fullName: DirectoryResult
    uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  spec.typeScript:
  - name: CreateFileRequestOptions
    fullName: CreateFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  spec.typeScript:
  - name: CreateRangeRequestOptions
    fullName: CreateRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  spec.typeScript:
  - name: GetFileRequestOptions
    fullName: GetFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  spec.typeScript:
  - name: CreateShareRequestOptions
    fullName: CreateShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  spec.typeScript:
  - name: DeleteShareOptions
    fullName: DeleteShareOptions
    uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
- uid: azure-storage.azurestorage.services.file.FileService.FileToText
  spec.typeScript:
  - name: FileToText
    fullName: FileToText
    uid: azure-storage.azurestorage.services.file.FileService.FileToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareAclResult
    fullName: ShareAclResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  spec.typeScript:
  - name: ListRequestOptions
    fullName: ListRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListFilesAndDirectoriesResult
    fullName: ListFilesAndDirectoriesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  spec.typeScript:
  - name: ListRangeRequestOptions
    fullName: ListRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  spec.typeScript:
  - name: ListShareRequestOptions
    fullName: ListShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListSharesResult
    fullName: ListSharesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  spec.typeScript:
  - name: SetFilePropertiesRequestOptions
    fullName: SetFilePropertiesRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  spec.typeScript:
  - name: ShareProperties
    fullName: ShareProperties
    uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
- uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  spec.typeScript:
  - name: CopyFileRequestOptions
    fullName: CopyFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService
  spec.typeScript:
  - name: FileService
    fullName: FileService
    uid: azure-storage.azurestorage.services.file.FileService
- uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult[]
  spec.typeScript:
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  spec.typeScript:
  - name: QueueMessageEncoder
    fullName: QueueMessageEncoder
    uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  spec.typeScript:
  - name: CreateMessageRequestOptions
    fullName: CreateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  spec.typeScript:
  - name: CreateQueueRequestOptions
    fullName: CreateQueueRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  spec.typeScript:
  - name: GetMessageRequestOptions
    fullName: GetMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  spec.typeScript:
  - name: GetMessagesRequestOptions
    fullName: GetMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  spec.typeScript:
  - name: ListQueuesRequestOptions
    fullName: ListQueuesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListQueueResult
    fullName: ListQueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  spec.typeScript:
  - name: PeekMessagesRequestOptions
    fullName: PeekMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  spec.typeScript:
  - name: UpdateMessageRequestOptions
    fullName: UpdateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService
  spec.typeScript:
  - name: QueueService
    fullName: QueueService
    uid: azure-storage.azurestorage.services.queue.QueueService
- uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  spec.typeScript:
  - name: BatchResponse
    fullName: BatchResponse
    uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
- uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  spec.typeScript:
  - name: TableEntityRequestOptions
    fullName: TableEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  spec.typeScript:
  - name: ListTablesContinuationToken
    fullName: ListTablesContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  spec.typeScript:
  - name: TableContinuationToken
    fullName: TableContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  spec.typeScript:
  - name: PropertyResolver
    fullName: PropertyResolver
    uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
- uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  spec.typeScript:
  - name: TableAccessPolicy
    fullName: TableAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: TableResult
    fullName: TableResult
    uid: azure-storage.azurestorage.services.table.TableService.TableResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableBatch
  spec.typeScript:
  - name: TableBatch
    fullName: TableBatch
    uid: azure-storage.azurestorage.services.table.TableBatch
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BatchResult
    fullName: BatchResult
    uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  spec.typeScript:
  - name: TableSharedAccessPolicy
    fullName: TableSharedAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: GetTableAclResult
    fullName: GetTableAclResult
    uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  spec.typeScript:
  - name: InsertEntityRequestOptions
    fullName: InsertEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: '<T | '
    fullName: '<T | '
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  spec.typeScript:
  - name: ListTablesRequestOptions
    fullName: ListTablesRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListTablesResponse
    fullName: ListTablesResponse
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableQuery
  spec.typeScript:
  - name: TableQuery
    fullName: TableQuery
    uid: azure-storage.azurestorage.services.table.TableQuery
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueryEntitiesResult
    fullName: QueryEntitiesResult
    uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - name: <T>>
    fullName: <T>>
- uid: azure-storage.azurestorage.ErrorOrResult<T>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <T>
    fullName: <T>
- uid: azure-storage.azurestorage.ErrorOrResult<function>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <function>
    fullName: <function>
- uid: azure-storage.azurestorage.services.table.TableService
  spec.typeScript:
  - name: TableService
    fullName: TableService
    uid: azure-storage.azurestorage.services.table.TableService
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Buffer>
    fullName: <Buffer>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Date>
    fullName: <Date>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <number>
    fullName: <number>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <any>
    fullName: <any>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.table.TableOperation[]
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.table.TableOperation
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
- uid: azure-storage.azurestorage.StorageError | Error
  spec.typeScript:
  - name: StorageError
    fullName: StorageError
    uid: azure-storage.azurestorage.StorageError
  - name: " | Error"
    fullName: " | Error"
- uid: azure-storage.azurestorage.ServiceResponse
  spec.typeScript:
  - name: ServiceResponse
    fullName: ServiceResponse
    uid: azure-storage.azurestorage.ServiceResponse
- uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  spec.typeScript:
  - name: TokenCredential
    fullName: TokenCredential
    uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
