### YamlMime:UniversalReference
ms.openlocfilehash: 25398934df36e1db337a121eec9544e3bc741397
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/20/2018
ms.locfileid: "53706567"
items:
- uid: azure-cognitiveservices-spellcheck.SpellCheckClient
  name: SpellCheckClient
  fullName: SpellCheckClient
  children:
  - azure-cognitiveservices-spellcheck.SpellCheckClient.credentials
  - azure-cognitiveservices-spellcheck.SpellCheckClient.endpoint
  - azure-cognitiveservices-spellcheck.SpellCheckClient.constructor
  - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker
  - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2
  - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1
  - azure-cognitiveservices-spellcheck.SpellCheckClient.spellCheckerWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-spellcheck
- uid: azure-cognitiveservices-spellcheck.SpellCheckClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-spellcheck
- uid: azure-cognitiveservices-spellcheck.SpellCheckClient.endpoint
  name: endpoint
  fullName: endpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'endpoint: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-spellcheck
- uid: azure-cognitiveservices-spellcheck.SpellCheckClient.constructor
  name: SpellCheckClient(ServiceClientCredentials, SpellCheckClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new SpellCheckClient(credentials: ServiceClientCredentials, options?: SpellCheckClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        클라이언트 구독을 고유 하 게 식별 하는 구독 자격 증명입니다.
    - id: options
      type:
      - azure-cognitiveservices-spellcheck.SpellCheckClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-spellcheck
- uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker
  name: spellChecker(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function spellChecker(text: string, options?: Object)'
    parameters:
    - id: text
      type:
      - string
      description: >
        맞춤법 및 문법 오류를 확인 하려면 텍스트 문자열입니다. 텍스트 문자열, preContextText 문자열과 postContextText 문자열의 조합 된 길이 10,000 자를 초과할 수 없습니다. GET 요청의 쿼리 문자열 또는 POST 요청의 본문에서이 매개 변수를 지정할 수 있습니다. 쿼리 문자열 길이 제한으로 인해만 짧은 문자열을 확인 하지 않는 한 POST 요청을 일반적으로 사용할 수 있습니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
  package: azure-cognitiveservices-spellcheck
- uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2
  name: spellChecker(string, Object, ServiceCallback<SpellCheck>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function spellChecker(text: string, options: Object, callback: ServiceCallback<SpellCheck>)'
    parameters:
    - id: text
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
  package: azure-cognitiveservices-spellcheck
- uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1
  name: spellChecker(string, ServiceCallback<SpellCheck>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function spellChecker(text: string, callback: ServiceCallback<SpellCheck>)'
    parameters:
    - id: text
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
  package: azure-cognitiveservices-spellcheck
- uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellCheckerWithHttpOperationResponse
  name: spellCheckerWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function spellCheckerWithHttpOperationResponse(text: string, options?: Object)'
    parameters:
    - id: text
      type:
      - string
      description: >
        맞춤법 및 문법 오류를 확인 하려면 텍스트 문자열입니다. 텍스트 문자열, preContextText 문자열과 postContextText 문자열의 조합 된 길이 10,000 자를 초과할 수 없습니다. GET 요청의 쿼리 문자열 또는 POST 요청의 본문에서이 매개 변수를 지정할 수 있습니다. 쿼리 문자열 길이 제한으로 인해만 짧은 문자열을 확인 하지 않는 한 POST 요청을 일반적으로 사용할 수 있습니다.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
  package: azure-cognitiveservices-spellcheck
references:
- uid: azure-cognitiveservices-spellcheck.SpellCheckClientOptions
  name: SpellCheckClientOptions
  spec.typeScript:
  - name: SpellCheckClientOptions
    fullName: SpellCheckClientOptions
    uid: azure-cognitiveservices-spellcheck.SpellCheckClientOptions
- uid: Promise<azure-cognitiveservices-spellcheck.SpellCheck>
  name: SpellCheck>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: SpellCheck
    fullName: SpellCheck
    uid: azure-cognitiveservices-spellcheck.SpellCheck
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
  name: SpellCheck>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: SpellCheck
    fullName: SpellCheck
    uid: azure-cognitiveservices-spellcheck.SpellCheck
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
  name: SpellCheck>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: SpellCheck
    fullName: SpellCheck
    uid: azure-cognitiveservices-spellcheck.SpellCheck
  - name: '>>'
    fullName: '>>'
