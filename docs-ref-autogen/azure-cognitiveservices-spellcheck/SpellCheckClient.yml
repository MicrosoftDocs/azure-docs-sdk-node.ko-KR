### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient
    name: SpellCheckClient
    fullName: SpellCheckClient
    children:
      - azure-cognitiveservices-spellcheck.SpellCheckClient.addUserAgentInfo
      - azure-cognitiveservices-spellcheck.SpellCheckClient.credentials
      - azure-cognitiveservices-spellcheck.SpellCheckClient.endpoint
      - azure-cognitiveservices-spellcheck.SpellCheckClient.getPackageJsonInfo
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest_1
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequestWithHttpOperationResponse
      - azure-cognitiveservices-spellcheck.SpellCheckClient.constructor
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellCheckerWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: 사용자 에이전트 헤더에 사용자 지정 정보 추가
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            사용자 에이전트 헤더 문자열에 추가할 정보입니다.
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정 된 azure nodejs 패키지용 package.json을 찾으려고 시도 합니다.
      하는 경우 발견, 이름 및 버전을 반환 합니다. 참조 하 여 패키지의 package.json package.json 없으면 기본값을 반환 합니다.
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: 특정 azure management 클라이언트의 디렉터리를 전달 합니다.
      return:
        type:
          - Object
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.constructor
    name: 'SpellCheckClient(ServiceClientCredentials, SpellCheckClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new SpellCheckClient(credentials: ServiceClientCredentials, options?: SpellCheckClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            클라이언트 구독을 고유 하 게 식별 하는 구독 자격 증명입니다.
        - id: options
          type:
            - azure-cognitiveservices-spellcheck.SpellCheckClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker
    name: 'spellChecker(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options?: Object)'
      parameters:
        - id: text
          type:
            - string
          description: |
            맞춤법 및 문법 오류를 확인 하려면 텍스트 문자열입니다. 텍스트 문자열, preContextText 문자열과 postContextText 문자열의 조합 된 길이 10,000 자를 초과할 수 없습니다. GET 요청의 쿼리 문자열 또는 POST 요청의 본문에서이 매개 변수를 지정할 수 있습니다. 쿼리 문자열 길이 제한으로 인해만 짧은 문자열을 확인 하지 않는 한 POST 요청을 일반적으로 사용할 수 있습니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2
    name: 'spellChecker(string, Object, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options: Object, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1
    name: 'spellChecker(string, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellCheckerWithHttpOperationResponse
    name: 'spellCheckerWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellCheckerWithHttpOperationResponse(text: string, options?: Object)'
      parameters:
        - id: text
          type:
            - string
          description: |
            맞춤법 및 문법 오류를 확인 하려면 텍스트 문자열입니다. 텍스트 문자열, preContextText 문자열과 postContextText 문자열의 조합 된 길이 10,000 자를 초과할 수 없습니다. GET 요청의 쿼리 문자열 또는 POST 요청의 본문에서이 매개 변수를 지정할 수 있습니다. 쿼리 문자열 길이 제한으로 인해만 짧은 문자열을 확인 하지 않는 한 POST 요청을 일반적으로 사용할 수 있습니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
    package: azure-cognitiveservices-spellcheck
references:
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClientOptions
    name: SpellCheckClientOptions
    spec.typeScript:
      - name: SpellCheckClientOptions
        fullName: SpellCheckClientOptions
        uid: azure-cognitiveservices-spellcheck.SpellCheckClientOptions
  - uid: Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
    name: SpellCheck>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>>'
        fullName: '>>'