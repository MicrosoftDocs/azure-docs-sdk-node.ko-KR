### YamlMime:UniversalReference
ms.openlocfilehash: a54a8d025a067a5a1f8e278ccbb96a5c55d02684
ms.sourcegitcommit: 094b6aa16c2ee9aa1418d36ce033f1d99151d913
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 09/18/2018
ms.locfileid: "45957227"
items:
- uid: azure-event-processor-host.CheckpointManager
  name: CheckpointManager
  fullName: CheckpointManager
  children:
  - azure-event-processor-host.CheckpointManager.checkpointStoreExists
  - azure-event-processor-host.CheckpointManager.createAllCheckpointsIfNotExists
  - azure-event-processor-host.CheckpointManager.createCheckpointStoreIfNotExists
  - azure-event-processor-host.CheckpointManager.deleteCheckpoint
  - azure-event-processor-host.CheckpointManager.deleteCheckpointStore
  - azure-event-processor-host.CheckpointManager.getCheckpoint
  - azure-event-processor-host.CheckpointManager.updateCheckpoint
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.checkpointStoreExists
  name: checkpointStoreExists
  children: []
  type: method
  langs:
  - typeScript
  summary: 검사점 저장소 유무
  syntax:
    content: function checkpointStoreExists()
    parameters: []
    return:
      type:
      - Promise<boolean>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.createAllCheckpointsIfNotExists
  name: createAllCheckpointsIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    지정 된 파티션에 대 한 소유자 검사점을 만듭니다. 모든 검사점 이미 존재 하는 소유자에 대 한 일은 없습니다.

    임대 및 검사점 (Azure Storage 구현을 수행) 모두에 대해 동일한 저장소를 사용할 수 있기 때문에이의 의미 체계는 복잡 하며 모든 파티션에 대해 임대 포함 해야 하는 파티션에 대 한 검사점을 할 필요는 없습니다.

    이므로 검사점을 전혀 사용 하지 마십시오 올바른 시나리오를 구분 하기 위해 만드는 structure(s) 검사점을 포함 하는 실제로 (구조에 오프셋/시퀀스 번호 쌍을 저장) 검사점을 만드는 저장소에 대 한 중요 한 것입니다.
  syntax:
    content: 'function createAllCheckpointsIfNotExists(partitionIds: string[])'
    parameters:
    - id: partitionIds
      type:
      - string[]
      description: 에 대 한 검사점 소유자를 만들려는 파티션 목록입니다.
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.createCheckpointStoreIfNotExists
  name: createCheckpointStoreIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: 존재 하지 않는 경우 검사점 저장소를 만듭니다. 있는 경우는 없습니다.
  syntax:
    content: function createCheckpointStoreIfNotExists()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.deleteCheckpoint
  name: deleteCheckpoint
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 파티션에 대 한 저장된 된 검사점을 삭제 합니다. 성공으로 처리 되는 지정 된 파티션에 대 한 검사점이 없거나 저장된 인 경우 허용 되지만 없어도; 소유자 검사점 삭제 구현 하는 것은 더 더욱 편리 하 게 작업을 수행 하는 무료입니다.
  syntax:
    content: 'function deleteCheckpoint(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: 스토어에서 검사점을 삭제 하려면 partitionId입니다.
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.deleteCheckpointStore
  name: deleteCheckpointStore
  children: []
  type: method
  langs:
  - typeScript
  summary: 검사점 저장소를 삭제 합니다.
  syntax:
    content: function deleteCheckpointStore()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.getCheckpoint
  name: getCheckpoint
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 파티션과 연결 된 검사점 정보를 가져옵니다. 검사점이 없거나 해당 파티션에 대해 생성 된 경우 정의 되지 않은 반환할 수 있습니다.
  syntax:
    content: 'function getCheckpoint(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: 에 대 한 검사점 정보를 가져오려면 partitionId입니다.
    return:
      type:
      - Promise<azure-event-processor-host.CheckpointInfo | undefined>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.updateCheckpoint
  name: updateCheckpoint
  children: []
  type: method
  langs:
  - typeScript
  summary: 제공 된 검사점에 대 한 오프셋/sequenceNumber를 사용 하 여 저장소에 검사점을 업데이트 합니다.
  syntax:
    content: 'function updateCheckpoint(lease: CompleteLease, checkpoint: CheckpointInfo)'
    parameters:
    - id: lease
      type:
      - azure-event-processor-host.CompleteLease
      description: 검사점을 수행 하는 파티션 정보입니다.
    - id: checkpoint
      type:
      - azure-event-processor-host.CheckpointInfo
      description: 오프셋/sequeceNumber 사용 하 여 저장소를 업데이트 하려면
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
references:
- uid: Promise<azure-event-processor-host.CheckpointInfo | undefined>
  name: CheckpointInfo | undefined>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: azure-event-processor-host.CheckpointInfo
  - name: " | undefined>"
    fullName: " | undefined>"
- uid: azure-event-processor-host.CompleteLease
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: azure-event-processor-host.CompleteLease
- uid: azure-event-processor-host.CheckpointInfo
  name: CheckpointInfo
  spec.typeScript:
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: azure-event-processor-host.CheckpointInfo
