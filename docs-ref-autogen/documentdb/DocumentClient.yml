### YamlMime:UniversalReference
ms.openlocfilehash: 99d34b9f67f4793f59a448d80cf88796f9b44ae1
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/13/2018
ms.locfileid: "40064715"
items:
- uid: documentdb.DocumentClient
  id: documentdb.DocumentClient
  name: DocumentClient
  summary: >-
    <span data-ttu-id="4f10e-101">Azure Cosmos DB 데이터베이스 계정의 클라이언트 쪽 논리적 표현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-101">Provides a client-side logical representation of the Azure Cosmos DB database account.</span></span>

    <span data-ttu-id="4f10e-102">이 클라이언트 구성 및 Azure Cosmos DB 데이터베이스 서비스에서 요청을 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-102">This client is used to configure and execute requests in the Azure Cosmos DB database service.</span></span>
  fullName: documentdb.DocumentClient
  type: Class
  children:
  - documentdb.DocumentClient.#ctor
  - documentdb.DocumentClient#getWriteEndpoint
  - documentdb.DocumentClient#getReadEndpoint
  - documentdb.DocumentClient#createDatabase
  - documentdb.DocumentClient#createCollection
  - documentdb.DocumentClient#createDocument
  - documentdb.DocumentClient#createAttachment
  - documentdb.DocumentClient#createUser
  - documentdb.DocumentClient#createPermission
  - documentdb.DocumentClient#createTrigger
  - documentdb.DocumentClient#createUserDefinedFunction
  - documentdb.DocumentClient#createStoredProcedure
  - documentdb.DocumentClient#createAttachmentAndUploadMedia
  - documentdb.DocumentClient#readDatabase
  - documentdb.DocumentClient#readCollection
  - documentdb.DocumentClient#readDocument
  - documentdb.DocumentClient#readAttachment
  - documentdb.DocumentClient#readUser
  - documentdb.DocumentClient#readPermission
  - documentdb.DocumentClient#readTrigger
  - documentdb.DocumentClient#readUserDefinedFunction
  - documentdb.DocumentClient#readStoredProcedure
  - documentdb.DocumentClient#readConflict
  - documentdb.DocumentClient#readDatabases
  - documentdb.DocumentClient#readCollections
  - documentdb.DocumentClient#readDocuments
  - documentdb.DocumentClient#readPartitionKeyRanges
  - documentdb.DocumentClient#readAttachments
  - documentdb.DocumentClient#readUsers
  - documentdb.DocumentClient#readPermissions
  - documentdb.DocumentClient#readTriggers
  - documentdb.DocumentClient#readUserDefinedFunctions
  - documentdb.DocumentClient#readStoredProcedures
  - documentdb.DocumentClient#readConflicts
  - documentdb.DocumentClient#queryDatabases
  - documentdb.DocumentClient#queryCollections
  - documentdb.DocumentClient#queryDocuments
  - documentdb.DocumentClient#queryPartitionKeyRanges
  - documentdb.DocumentClient#queryAttachments
  - documentdb.DocumentClient#queryUsers
  - documentdb.DocumentClient#queryPermissions
  - documentdb.DocumentClient#queryTriggers
  - documentdb.DocumentClient#queryUserDefinedFunctions
  - documentdb.DocumentClient#queryStoredProcedures
  - documentdb.DocumentClient#queryConflicts
  - documentdb.DocumentClient#deleteDatabase
  - documentdb.DocumentClient#deleteCollection
  - documentdb.DocumentClient#deleteDocument
  - documentdb.DocumentClient#deleteAttachment
  - documentdb.DocumentClient#deleteUser
  - documentdb.DocumentClient#deletePermission
  - documentdb.DocumentClient#deleteTrigger
  - documentdb.DocumentClient#deleteUserDefinedFunction
  - documentdb.DocumentClient#deleteStoredProcedure
  - documentdb.DocumentClient#deleteConflict
  - documentdb.DocumentClient#replaceCollection
  - documentdb.DocumentClient#replaceDocument
  - documentdb.DocumentClient#replaceAttachment
  - documentdb.DocumentClient#replaceUser
  - documentdb.DocumentClient#replacePermission
  - documentdb.DocumentClient#replaceTrigger
  - documentdb.DocumentClient#replaceUserDefinedFunction
  - documentdb.DocumentClient#replaceStoredProcedure
  - documentdb.DocumentClient#upsertDocument
  - documentdb.DocumentClient#upsertAttachment
  - documentdb.DocumentClient#upsertUser
  - documentdb.DocumentClient#upsertPermission
  - documentdb.DocumentClient#upsertTrigger
  - documentdb.DocumentClient#upsertUserDefinedFunction
  - documentdb.DocumentClient#upsertStoredProcedure
  - documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  - documentdb.DocumentClient#readMedia
  - documentdb.DocumentClient#updateMedia
  - documentdb.DocumentClient#executeStoredProcedure
  - documentdb.DocumentClient#replaceOffer
  - documentdb.DocumentClient#readOffer
  - documentdb.DocumentClient#readOffers
  - documentdb.DocumentClient#queryOffers
  - documentdb.DocumentClient#getDatabaseAccount
  - documentdb.DocumentClient#getSessionToken
  langs:
  - js
- id: documentdb.DocumentClient.#ctor
  uid: documentdb.DocumentClient.#ctor
  parent: documentdb.DocumentClient
  name: DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  fullName: documentdb.DocumentClient.DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  summary: >-
    <span data-ttu-id="4f10e-103">Azure Cosmos DB 데이터베이스 계정의 클라이언트 쪽 논리적 표현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-103">Provides a client-side logical representation of the Azure Cosmos DB database account.</span></span>

    <span data-ttu-id="4f10e-104">이 클라이언트 구성 및 Azure Cosmos DB 데이터베이스 서비스에서 요청을 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-104">This client is used to configure and execute requests in the Azure Cosmos DB database service.</span></span>
  type: Constructor
  syntax:
    parameters:
    - id: urlConnection
      type:
      - string
      description: <span data-ttu-id="4f10e-105">사용 하는 클라이언트를 만드는 서비스 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-105">The service endpoint to use to create the client.</span></span>
    - id: auth
      type:
      - object
      description: <span data-ttu-id="4f10e-106">요청 인증에 사용 되 고 해야 하는 개체 옵션 중 하나를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-106">An object that is used for authenticating requests and must contains one of the options</span></span>
    - id: auth.masterKey
      type:
      - string
      description: <span data-ttu-id="4f10e-107">권한 부여 마스터 키를 사용 하 여 클라이언트를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-107">The authorization master key to use to create the client.</span></span>
      optional: true
    - id: auth.resourceTokens
      type:
      - Object
      description: <span data-ttu-id="4f10e-108">리소스 토큰을 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-108">An object that contains resources tokens.</span></span> <span data-ttu-id="4f10e-109">개체에 대 한 키는 리소스 Id 및 값은 리소스 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-109">Keys for the object are resource Ids and values are the resource tokens.</span></span>
      optional: true
    - id: auth.permissionFeed
      type:
      - Array
      description: <span data-ttu-id="4f10e-110">배열을 <xref:Permission> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-110">An array of <xref:Permission> objects.</span></span>
      optional: true
    - id: connectionPolicy
      type:
      - object
      description: <span data-ttu-id="4f10e-111">인스턴스의 <xref:ConnectionPolicy> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-111">An instance of <xref:ConnectionPolicy> class.</span></span> <span data-ttu-id="4f10e-112">이 매개 변수가 선택 사항이 며 생략 하는 경우 기본 connectionPolicy에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-112">This parameter is optional and the default connectionPolicy will be used if omitted.</span></span>
      optional: true
    - id: consistencyLevel
      type:
      - string
      description: <span data-ttu-id="4f10e-113">일관성 수준을 나타내는 선택적 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-113">An optional parameter that represents the consistency level.</span></span> <span data-ttu-id="4f10e-114">값을 가질 수 <xref:ConsistencyLevel>입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-114">It can take any value from <xref:ConsistencyLevel>.</span></span>
      optional: true
    content: new DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  langs:
  - js
- uid: documentdb.DocumentClient#getWriteEndpoint
  id: documentdb.DocumentClient#getWriteEndpoint
  parent: documentdb.DocumentClient
  name: getWriteEndpoint(callback)
  summary: <span data-ttu-id="4f10e-115">지역 복제 데이터베이스 계정의 현재 쓰기 끝점을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-115">Gets the curent write endpoint for a geo-replicated database account.</span></span>
  fullName: documentdb.DocumentClient.getWriteEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: <span data-ttu-id="4f10e-116">Endpoint(string) 인수로 사용 하는 콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-116">The callback function which takes endpoint(string) as an argument.</span></span>
    content: function getWriteEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getReadEndpoint
  id: documentdb.DocumentClient#getReadEndpoint
  parent: documentdb.DocumentClient
  name: getReadEndpoint(callback)
  summary: <span data-ttu-id="4f10e-117">읽기 지역에서 복제 된 데이터베이스 계정에 대 한 끝점 curent를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-117">Gets the curent read endpoint for a geo-replicated database account.</span></span>
  fullName: documentdb.DocumentClient.getReadEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: <span data-ttu-id="4f10e-118">Endpoint(string) 인수로 사용 하는 콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-118">The callback function which takes endpoint(string) as an argument.</span></span>
    content: function getReadEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDatabase
  id: documentdb.DocumentClient#createDatabase
  parent: documentdb.DocumentClient
  name: createDatabase(body, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-119">데이터베이스를 만들기 위한 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-119">Send a request for creating a database.</span></span>

    <p>
     <span data-ttu-id="4f10e-120">데이터베이스는 사용자, 사용 권한 및 컬렉션 집합을 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-120">A database manages users, permissions and a set of collections.</span></span>  <br>
     <span data-ttu-id="4f10e-121">각 Azure Cosmos DB 데이터베이스 계정은 여러 독립적인 명명 된 데이터에 대 한 논리적 컨테이너 되 고 있는 데이터베이스를 사용 하 여 데이터베이스를 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-121">Each Azure Cosmos DB Database Account is able to support multiple independent named databases, with the database being the logical container for data.</span></span> <br>
     <span data-ttu-id="4f10e-122">각 데이터베이스 하나 이상의 문서에 포함 하는 각각 하나 이상의 컬렉션으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-122">Each Database consists of one or more collections, each of which in turn contain one or more documents.</span></span> <span data-ttu-id="4f10e-123">데이터베이스 되므로 관리 리소스를 서비스 마스터 키에 액세스 하 고 사용자 Api를 사용 하 여 모든 작업을 완료 하기 위해 필요한 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-123">Since databases are an an administrative resource, the Service Master Key will be required in order to access and successfully complete any action using the User APIs.</span></span> <br>
    </p>
  fullName: documentdb.DocumentClient.createDatabase(body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: body
      type:
      - Object
      description: <span data-ttu-id="4f10e-124">만들려는 데이터베이스를 나타내는 json 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-124">A json object that represents The database to be created.</span></span>
    - id: body.id
      type:
      - string
      description: <span data-ttu-id="4f10e-125">데이터베이스의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-125">The id of the database.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-126">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-126">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-127">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-127">The callback for the request.</span></span>
    content: function createDatabase(body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createCollection
  id: documentdb.DocumentClient#createCollection
  parent: documentdb.DocumentClient
  name: createCollection(databaseLink, body, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-128">컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-128">Creates a collection.</span></span>

    <p>

    <span data-ttu-id="4f10e-129">컬렉션은 문서에 대 한 명명 된 논리적 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-129">A collection is a named logical container for documents.</span></span> <br>

    <span data-ttu-id="4f10e-130">데이터베이스 0 개 이상의 명명 된 컬렉션에 포함 될 수 있습니다 및 0 개 이상의 JSON 문서의 각 컬렉션을 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-130">A database may contain zero or more named collections and each collection consists of zero or more JSON documents.</span></span> <br>

    <span data-ttu-id="4f10e-131">스키마가 없음에도, 컬렉션의 문서 필요가 없습니다 동일한 구조 또는 필드를 공유 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-131">Being schema-free, the documents in a collection do not need to share the same structure or fields.</span></span> <br>

    <span data-ttu-id="4f10e-132">컬렉션에 응용 프로그램 리소스 되므로 마스터 키 또는 리소스 키를 사용 하 여 승인을 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-132">Since collections are application resources, they can be authorized using either the master key or resource keys.</span></span> <br>

    </p>
  fullName: documentdb.DocumentClient.createCollection(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-133">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-133">The self-link of the database.</span></span>
    - id: body
      type:
      - object
      description: <span data-ttu-id="4f10e-134">컬렉션의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-134">Represents the body of the collection.</span></span>
    - id: body.id
      type:
      - string
      description: <span data-ttu-id="4f10e-135">컬렉션의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-135">The id of the collection.</span></span>
    - id: body.indexingPolicy
      type:
      - documentdb.IndexingPolicy
      description: <span data-ttu-id="4f10e-136">컬렉션과 연결 된 인덱싱 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-136">The indexing policy associated with the collection.</span></span>
    - id: body.defaultTtl
      type:
      - number
      description: <span data-ttu-id="4f10e-137">컬렉션의 문서에 대 한 시간 (초)에 기본 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-137">The default time to live in seconds for documents in a collection.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-138">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-138">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-139">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-139">The callback for the request.</span></span>
    content: function createCollection(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDocument
  id: documentdb.DocumentClient#createDocument
  parent: documentdb.DocumentClient
  name: createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-140">문서를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-140">Create a document.</span></span>

    <p>

    <span data-ttu-id="4f10e-141">스키마가 없으므로 집합 JSON 문서에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-141">There is no set schema for JSON documents.</span></span> <span data-ttu-id="4f10e-142">모든 사용자 지정 속성 수와 첨부 파일의 선택적 목록 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-142">They may contain any number of custom properties as well as an optional list of attachments.</span></span> <br>

    <span data-ttu-id="4f10e-143">문서는 응용 프로그램 리소스 및 마스터 키 또는 리소스 키를 사용 하 여 권한을 부여할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-143">A Document is an application resource and can be authorized using the master key or resource keys</span></span>

    </p>
  fullName: documentdb.DocumentClient.createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-144">컬렉션 링크 또는 파티션 해결 프로그램을 사용 하는 경우 데이터베이스 연결</span><span class="sxs-lookup"><span data-stu-id="4f10e-144">The collection link or database link if using a partition resolver</span></span>
    - id: body
      type:
      - object
      description: <span data-ttu-id="4f10e-145">문서의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-145">Represents the body of the document.</span></span> <span data-ttu-id="4f10e-146">임의 개수의 사용자 정의 속성을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-146">Can contain any number of user defined properties.</span></span>
    - id: body.id
      type:
      - string
      description: <span data-ttu-id="4f10e-147">문서의 id는 각 문서에 대해 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-147">The id of the document, MUST be unique for each document.</span></span>
      optional: true
    - id: body.ttl
      type:
      - number
      description: <span data-ttu-id="4f10e-148">문서의 초에 live를 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-148">The time to live in seconds of the document.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-149">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-149">The request options.</span></span>
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: <span data-ttu-id="4f10e-150">자동 id 생성을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-150">Disables the automatic id generation.</span></span> <span data-ttu-id="4f10e-151">본문에 id가 없습니다.이 옵션은 true를 하는 경우 오류가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-151">If id is missing in the body and this option is true, an error will be returned.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-152">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-152">The callback for the request.</span></span>
    content: function createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachment
  id: documentdb.DocumentClient#createAttachment
  parent: documentdb.DocumentClient
  name: createAttachment(documentLink, body, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-153">문서 개체에 대 한 첨부 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-153">Create an attachment for the document object.</span></span>

    <p>

    <span data-ttu-id="4f10e-154">각 문서는 0 개 이상의 첨부 파일을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-154">Each document may contain zero or more attachments.</span></span> <span data-ttu-id="4f10e-155">모든 MIME 유형-텍스트, 이미지, 이진 데이터의 첨부 파일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-155">Attachments can be of any MIME type - text, image, binary data.</span></span> <br>

    <span data-ttu-id="4f10e-156">이러한 작업은 Azure Blob 저장소에서 외부적으로 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-156">These are stored externally in Azure Blob storage.</span></span> <span data-ttu-id="4f10e-157">첨부 파일은 부모 문서 삭제 될 때 자동으로 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-157">Attachments are automatically deleted when the parent document is deleted.</span></span>

    </P>
  fullName: documentdb.DocumentClient.createAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-158">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-158">The self-link of the document.</span></span>
    - id: body
      type:
      - Object
      description: <span data-ttu-id="4f10e-159">메타 데이터를 같은 contentType 미디어 첨부 파일 미디어를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-159">The metadata the defines the attachment media like media, contentType.</span></span> <span data-ttu-id="4f10e-160">다른 속성을 메타의 일부로 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-160">It can include any other properties as part of the metedata.</span></span>
    - id: body.contentType
      type:
      - string
      description: <span data-ttu-id="4f10e-161">첨부 파일의 MIME contentType입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-161">The MIME contentType of the attachment.</span></span>
    - id: body.media
      type:
      - string
      description: <span data-ttu-id="4f10e-162">첨부 파일 콘텐츠를 사용 하 여 연결 하는 미디어 링크입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-162">Media link associated with the attachment content.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-163">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-163">The request options.</span></span>
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-164">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-164">The callback for the request.</span></span>
    content: function createAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUser
  id: documentdb.DocumentClient#createUser
  parent: documentdb.DocumentClient
  name: createUser(databaseLink, body, options, callback)
  summary: <span data-ttu-id="4f10e-165">데이터베이스 사용자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-165">Create a database user.</span></span>
  fullName: documentdb.DocumentClient.createUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-166">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-166">The self-link of the database.</span></span>
    - id: body
      type:
      - object
      description: <span data-ttu-id="4f10e-167">사용자의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-167">Represents the body of the user.</span></span>
    - id: body.id
      type:
      - string
      description: <span data-ttu-id="4f10e-168">사용자의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-168">The id of the user.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-169">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-169">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-170">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-170">The callback for the request.</span></span>
    content: function createUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createPermission
  id: documentdb.DocumentClient#createPermission
  parent: documentdb.DocumentClient
  name: createPermission(userLink, body, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-171">사용 권한을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-171">Create a permission.</span></span>

    <p> <span data-ttu-id="4f10e-172">사용 권한을 사용자별 문서 또는 컬렉션과 예를 들어 특정 리소스에 액세스할 수 있는 권한을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-172">A permission represents a per-User Permission to access a specific resource e.g. Document or Collection.</span></span>  </p>
  fullName: documentdb.DocumentClient.createPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: <span data-ttu-id="4f10e-173">자체 링크 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-173">The self-link of the user.</span></span>
    - id: body
      type:
      - object
      description: <span data-ttu-id="4f10e-174">사용 권한의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-174">Represents the body of the permission.</span></span>
    - id: body.id
      type:
      - string
      description: <span data-ttu-id="4f10e-175">사용 권한의 id</span><span class="sxs-lookup"><span data-stu-id="4f10e-175">The id of the permission</span></span>
    - id: body.permissionMode
      type:
      - string
      description: <span data-ttu-id="4f10e-176">권한의 모드의 값 이어야 합니다. <xref:documentdb.PermissionMode></span><span class="sxs-lookup"><span data-stu-id="4f10e-176">The mode of the permission, must be a value of <xref:documentdb.PermissionMode></span></span>
    - id: body.resource
      type:
      - string
      description: <span data-ttu-id="4f10e-177">사용 권한을 적용할 수 있는 리소스의 링크입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-177">The link of the resource that the permission will be applied to.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-178">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-178">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-179">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-179">The callback for the request.</span></span>
    content: function createPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createTrigger
  id: documentdb.DocumentClient#createTrigger
  parent: documentdb.DocumentClient
  name: createTrigger(collectionLink, trigger, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-180">트리거를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-180">Create a trigger.</span></span>

    <p>

    <span data-ttu-id="4f10e-181">Azure Cosmos DB는 사전 및 post 트리거 정의에서 실행 되어야 하는 JavaScript에서 만들고, 업데이트 및 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-181">Azure Cosmos DB supports pre and post triggers defined in JavaScript to be executed on creates, updates and deletes.</span></span> <br>

    <span data-ttu-id="4f10e-182">자세한 내용은 서버 쪽 JavaScript API 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="4f10e-182">For additional details, refer to the server-side JavaScript API documentation.</span></span>

    </p>
  fullName: documentdb.DocumentClient.createTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-183">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-183">The self-link of the collection.</span></span>
    - id: trigger
      type:
      - object
      description: <span data-ttu-id="4f10e-184">트리거 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-184">Represents the body of the trigger.</span></span>
    - id: trigger.id
      type:
      - string
      description: <span data-ttu-id="4f10e-185">트리거의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-185">The id of the trigger.</span></span>
    - id: trigger.triggerType
      type:
      - string
      description: <span data-ttu-id="4f10e-186">트리거를 형식의 값 중 하나 여야 합니다 <xref:documentdb.TriggerType>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-186">The type of the trigger, should be one of the values of <xref:documentdb.TriggerType>.</span></span>
    - id: trigger.triggerOperation
      type:
      - string
      description: <span data-ttu-id="4f10e-187">트리거 작업의 값 중 하나 여야 합니다 <xref:documentdb.TriggerOperation>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-187">The trigger operation, should be one of the values of <xref:documentdb.TriggerOperation>.</span></span>
    - id: trigger.serverScript
      type:
      - function
      description: <span data-ttu-id="4f10e-188">트리거 본문에 전달 될 수 너무 화 하는 대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-188">The body of the trigger, it can be passed as stringified too.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-189">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-189">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-190">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-190">The callback for the request.</span></span>
    content: function createTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUserDefinedFunction
  id: documentdb.DocumentClient#createUserDefinedFunction
  parent: documentdb.DocumentClient
  name: createUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-191">UserDefinedFunction를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-191">Create a UserDefinedFunction.</span></span>

    <p>

    <span data-ttu-id="4f10e-192">Azure Cosmos DB는 쿼리, 저장된 프로시저 및 트리거 내에서 사용할 수 있는 JavaScript Udf를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-192">Azure Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers.</span></span> <br>

    <span data-ttu-id="4f10e-193">자세한 내용은 서버 쪽 JavaScript API 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="4f10e-193">For additional details, refer to the server-side JavaScript API documentation.</span></span>

    </p>
  fullName: documentdb.DocumentClient.createUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-194">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-194">The self-link of the collection.</span></span>
    - id: udf
      type:
      - object
      description: <span data-ttu-id="4f10e-195">UserDefinedFunction의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-195">Represents the body of the userDefinedFunction.</span></span>
    - id: udf.id
      type:
      - string
      description: <span data-ttu-id="4f10e-196">Udf의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-196">The id of the udf.</span></span>
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: <span data-ttu-id="4f10e-197">Udf의 형식, 그 중 하나 여야 합니다 값 <xref:documentdb.UserDefinedFunctionType></span><span class="sxs-lookup"><span data-stu-id="4f10e-197">The type of the udf, it should be one of the values of <xref:documentdb.UserDefinedFunctionType></span></span>
    - id: udf.serverScript
      type:
      - function
      description: <span data-ttu-id="4f10e-198">본문을 나타내는 udf 전달 될 수 너무 화 하는 대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-198">Represents the body of the udf, it can be passed as stringified too.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-199">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-199">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-200">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-200">The callback for the request.</span></span>
    content: function createUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createStoredProcedure
  id: documentdb.DocumentClient#createStoredProcedure
  parent: documentdb.DocumentClient
  name: createStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-201">저장 프로시저를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-201">Create a StoredProcedure.</span></span>

    <p>

    <span data-ttu-id="4f10e-202">Azure Cosmos DB는 저장된 프로시저를 저장소 계층에 있는 문서 컬렉션에 대해 직접 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-202">Azure Cosmos DB allows stored procedures to be executed in the storage tier, directly against a document collection.</span></span> <span data-ttu-id="4f10e-203">스크립트</span><span class="sxs-lookup"><span data-stu-id="4f10e-203">The script</span></span> <br>

    <span data-ttu-id="4f10e-204">지정된 된 컬렉션의 기본 저장소 파티션에 ACID 트랜잭션에서 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-204">gets executed under ACID transactions on the primary storage partition of the specified collection.</span></span> <span data-ttu-id="4f10e-205">자세한 내용은</span><span class="sxs-lookup"><span data-stu-id="4f10e-205">For additional details,</span></span> <br>

    <span data-ttu-id="4f10e-206">서버 쪽 JavaScript API 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="4f10e-206">refer to the server-side JavaScript API documentation.</span></span>

    </p>
  fullName: documentdb.DocumentClient.createStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-207">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-207">The self-link of the collection.</span></span>
    - id: sproc
      type:
      - object
      description: <span data-ttu-id="4f10e-208">저장된 프로시저의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-208">Represents the body of the stored procedure.</span></span>
    - id: sproc.id
      type:
      - string
      description: <span data-ttu-id="4f10e-209">저장된 프로시저의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-209">The id of the stored procedure.</span></span>
    - id: sproc.serverScript
      type:
      - function
      description: <span data-ttu-id="4f10e-210">저장된 프로시저의 본문에 전달 될 수 너무 화 하는 대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-210">The body of the stored procedure, it can be passed as stringified too.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-211">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-211">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-212">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-212">The callback for the request.</span></span>
    content: function createStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachmentAndUploadMedia
  id: documentdb.DocumentClient#createAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: <span data-ttu-id="4f10e-213">문서 개체에 대 한 첨부 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-213">Create an attachment for the document object.</span></span>
  fullName: documentdb.DocumentClient.createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-214">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-214">The self-link of the document.</span></span>
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: <span data-ttu-id="4f10e-215">업로드 해야 하는 자체 미디어를 나타내는 스트림.</span><span class="sxs-lookup"><span data-stu-id="4f10e-215">the stream that represents the media itself that needs to be uploaded.</span></span>
    - id: options
      type:
      - documentdb.MediaOptions
      description: <span data-ttu-id="4f10e-216">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-216">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-217">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-217">The callback for the request.</span></span>
    content: function createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabase
  id: documentdb.DocumentClient#readDatabase
  parent: documentdb.DocumentClient
  name: readDatabase(databaseLink, options, callback)
  summary: <span data-ttu-id="4f10e-218">데이터베이스를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-218">Reads a database.</span></span>
  fullName: documentdb.DocumentClient.readDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-219">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-219">The self-link of the database.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-220">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-220">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-221">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-221">The callback for the request.</span></span>
    content: function readDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollection
  id: documentdb.DocumentClient#readCollection
  parent: documentdb.DocumentClient
  name: readCollection(collectionLink, options, callback)
  summary: <span data-ttu-id="4f10e-222">컬렉션을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-222">Reads a collection.</span></span>
  fullName: documentdb.DocumentClient.readCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-223">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-223">The self-link of the collection.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-224">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-224">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-225">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-225">The callback for the request.</span></span>
    content: function readCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocument
  id: documentdb.DocumentClient#readDocument
  parent: documentdb.DocumentClient
  name: readDocument(documentLink, options, callback)
  summary: <span data-ttu-id="4f10e-226">문서를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-226">Reads a document.</span></span>
  fullName: documentdb.DocumentClient.readDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-227">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-227">The self-link of the document.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-228">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-228">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-229">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-229">The callback for the request.</span></span>
    content: function readDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachment
  id: documentdb.DocumentClient#readAttachment
  parent: documentdb.DocumentClient
  name: readAttachment(attachmentLink, options, callback)
  summary: <span data-ttu-id="4f10e-230">첨부 파일 개체를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-230">Reads an Attachment object.</span></span>
  fullName: documentdb.DocumentClient.readAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-231">자체 링크 첨부 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-231">The self-link of the attachment.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-232">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-232">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-233">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-233">The callback for the request.</span></span>
    content: function readAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUser
  id: documentdb.DocumentClient#readUser
  parent: documentdb.DocumentClient
  name: readUser(userLink, options, callback)
  summary: <span data-ttu-id="4f10e-234">사용자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-234">Reads a user.</span></span>
  fullName: documentdb.DocumentClient.readUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: <span data-ttu-id="4f10e-235">자체 링크 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-235">The self-link of the user.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-236">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-236">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-237">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-237">The callback for the request.</span></span>
    content: function readUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermission
  id: documentdb.DocumentClient#readPermission
  parent: documentdb.DocumentClient
  name: readPermission(permissionLink, options, callback)
  summary: <span data-ttu-id="4f10e-238">사용 권한을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-238">Reads a permission.</span></span>
  fullName: documentdb.DocumentClient.readPermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-239">자체 링크 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-239">The self-link of the permission.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-240">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-240">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-241">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-241">The callback for the request.</span></span>
    content: function readPermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readTrigger
  id: documentdb.DocumentClient#readTrigger
  parent: documentdb.DocumentClient
  name: readTrigger(triggerLink, options, callback)
  summary: <span data-ttu-id="4f10e-242">트리거 개체를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-242">Reads a trigger object.</span></span>
  fullName: documentdb.DocumentClient.readTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: <span data-ttu-id="4f10e-243">자체 링크 트리거입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-243">The self-link of the trigger.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-244">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-244">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-245">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-245">The callback for the request.</span></span>
    content: function readTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunction
  id: documentdb.DocumentClient#readUserDefinedFunction
  parent: documentdb.DocumentClient
  name: readUserDefinedFunction(udfLink, options, callback)
  summary: <span data-ttu-id="4f10e-246">Udf를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-246">Reads a udf object.</span></span>
  fullName: documentdb.DocumentClient.readUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: <span data-ttu-id="4f10e-247">사용자의 자체 링크 함수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-247">The self-link of the user defined function.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-248">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-248">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-249">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-249">The callback for the request.</span></span>
    content: function readUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedure
  id: documentdb.DocumentClient#readStoredProcedure
  parent: documentdb.DocumentClient
  name: readStoredProcedure(sprocLink, options, callback)
  summary: <span data-ttu-id="4f10e-250">StoredProcedure 개체를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-250">Reads a StoredProcedure object.</span></span>
  fullName: documentdb.DocumentClient.readStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: <span data-ttu-id="4f10e-251">자체 링크 저장된 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-251">The self-link of the stored procedure.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-252">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-252">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-253">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-253">The callback for the request.</span></span>
    content: function readStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflict
  id: documentdb.DocumentClient#readConflict
  parent: documentdb.DocumentClient
  name: readConflict(conflictLink, options, callback)
  summary: <span data-ttu-id="4f10e-254">충돌을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-254">Reads a conflict.</span></span>
  fullName: documentdb.DocumentClient.readConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: <span data-ttu-id="4f10e-255">자체 링크 충돌 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-255">The self-link of the conflict.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-256">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-256">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-257">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-257">The callback for the request.</span></span>
    content: function readConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabases
  id: documentdb.DocumentClient#readDatabases
  parent: documentdb.DocumentClient
  name: readDatabases(options)
  summary: <span data-ttu-id="4f10e-258">모든 데이터베이스를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-258">Lists all databases.</span></span>
  fullName: documentdb.DocumentClient.readDatabases(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-259">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-259">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-260">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-260">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readDatabases(options)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollections
  id: documentdb.DocumentClient#readCollections
  parent: documentdb.DocumentClient
  name: readCollections(databaseLink, options)
  summary: <span data-ttu-id="4f10e-261">이 데이터베이스의 모든 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-261">Get all collections in this database.</span></span>
  fullName: documentdb.DocumentClient.readCollections(databaseLink, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-262">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-262">The self-link of the database.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-263">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-263">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-264">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-264">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readCollections(databaseLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocuments
  id: documentdb.DocumentClient#readDocuments
  parent: documentdb.DocumentClient
  name: readDocuments(collectionLink, options)
  summary: <span data-ttu-id="4f10e-265">이 컬렉션의 모든 문서를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-265">Get all documents in this collection.</span></span>
  fullName: documentdb.DocumentClient.readDocuments(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-266">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-266">The self-link of the collection.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-267">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-267">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-268">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-268">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readDocuments(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readPartitionKeyRanges
  id: documentdb.DocumentClient#readPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: readPartitionKeyRanges(collectionLink, options)
  summary: <span data-ttu-id="4f10e-269">모든 파티션 가져오기 범위를이 컬렉션의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-269">Get all Partition key Ranges in this collection.</span></span>
  fullName: documentdb.DocumentClient.readPartitionKeyRanges(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-270">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-270">The self-link of the collection.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-271">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-271">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-272">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-272">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readPartitionKeyRanges(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachments
  id: documentdb.DocumentClient#readAttachments
  parent: documentdb.DocumentClient
  name: readAttachments(documentLink, options)
  summary: <span data-ttu-id="4f10e-273">이 문서에 대 한 모든 첨부 파일을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-273">Get all attachments for this document.</span></span>
  fullName: documentdb.DocumentClient.readAttachments(documentLink, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-274">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-274">The self-link of the document.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-275">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-275">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-276">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-276">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readAttachments(documentLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUsers
  id: documentdb.DocumentClient#readUsers
  parent: documentdb.DocumentClient
  name: readUsers(databaseLink, feedOptions)
  summary: <span data-ttu-id="4f10e-277">이 데이터베이스의 모든 사용자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-277">Get all users in this database.</span></span>
  fullName: documentdb.DocumentClient.readUsers(databaseLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-278">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-278">The self-link of the database.</span></span>
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-279">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-279">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-280">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-280">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readUsers(databaseLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermissions
  id: documentdb.DocumentClient#readPermissions
  parent: documentdb.DocumentClient
  name: readPermissions(userLink, feedOptions)
  summary: <span data-ttu-id="4f10e-281">이 사용자에 대 한 모든 권한을 얻습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-281">Get all permissions for this user.</span></span>
  fullName: documentdb.DocumentClient.readPermissions(userLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: <span data-ttu-id="4f10e-282">자체 링크 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-282">The self-link of the user.</span></span>
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-283">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-283">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-284">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-284">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readPermissions(userLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readTriggers
  id: documentdb.DocumentClient#readTriggers
  parent: documentdb.DocumentClient
  name: readTriggers(collectionLink, options)
  summary: <span data-ttu-id="4f10e-285">이 컬렉션의 모든 트리거를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-285">Get all triggers in this collection.</span></span>
  fullName: documentdb.DocumentClient.readTriggers(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-286">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-286">The self-link of the collection.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-287">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-287">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-288">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-288">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readTriggers(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunctions
  id: documentdb.DocumentClient#readUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: readUserDefinedFunctions(collectionLink, options)
  summary: <span data-ttu-id="4f10e-289">이 컬렉션의 모든 UserDefinedFunctions를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-289">Get all UserDefinedFunctions in this collection.</span></span>
  fullName: documentdb.DocumentClient.readUserDefinedFunctions(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-290">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-290">The self-link of the collection.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-291">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-291">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-292">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-292">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readUserDefinedFunctions(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedures
  id: documentdb.DocumentClient#readStoredProcedures
  parent: documentdb.DocumentClient
  name: readStoredProcedures(collectionLink, options)
  summary: <span data-ttu-id="4f10e-293">이 컬렉션의 모든 StoredProcedures를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-293">Get all StoredProcedures in this collection.</span></span>
  fullName: documentdb.DocumentClient.readStoredProcedures(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-294">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-294">The self-link of the collection.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-295">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-295">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-296">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-296">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readStoredProcedures(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflicts
  id: documentdb.DocumentClient#readConflicts
  parent: documentdb.DocumentClient
  name: readConflicts(collectionLink, options)
  summary: <span data-ttu-id="4f10e-297">이 컬렉션의 모든 충돌 가져오기.</span><span class="sxs-lookup"><span data-stu-id="4f10e-297">Get all conflicts in this collection.</span></span>
  fullName: documentdb.DocumentClient.readConflicts(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-298">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-298">The self-link of the collection.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-299">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-299">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-300">읽기 피드를 처리할 QueryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-300">An instance of QueryIterator to handle reading feed.</span></span>'
    content: function readConflicts(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDatabases
  id: documentdb.DocumentClient#queryDatabases
  parent: documentdb.DocumentClient
  name: queryDatabases(query, options)
  summary: <span data-ttu-id="4f10e-301">쿼리를 충족 하는 모든 데이터베이스를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-301">Lists all databases that satisfy a query.</span></span>
  fullName: documentdb.DocumentClient.queryDatabases(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-302">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-302">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-303">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-303">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-304">읽기 피드를 처리할 QueryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-304">An instance of QueryIterator to handle reading feed.</span></span>'
    content: function queryDatabases(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryCollections
  id: documentdb.DocumentClient#queryCollections
  parent: documentdb.DocumentClient
  name: queryCollections(databaseLink, query, options)
  summary: <span data-ttu-id="4f10e-305">데이터베이스에 대 한 컬렉션을 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-305">Query the collections for the database.</span></span>
  fullName: documentdb.DocumentClient.queryCollections(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-306">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-306">The self-link of the database.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-307">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-307">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-308">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-308">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-309">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-309">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryCollections(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDocuments
  id: documentdb.DocumentClient#queryDocuments
  parent: documentdb.DocumentClient
  name: queryDocuments(documentsFeedOrDatabaseLink, query, options)
  summary: <span data-ttu-id="4f10e-310">컬렉션에 대 한 문서를 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-310">Query the documents for the collection.</span></span>
  fullName: documentdb.DocumentClient.queryDocuments(documentsFeedOrDatabaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-311">컬렉션 링크 또는 파티션 해결 프로그램을 사용 하는 경우 데이터베이스 연결</span><span class="sxs-lookup"><span data-stu-id="4f10e-311">The collection link or database link if using a partition resolver</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-312">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-312">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-313">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-313">Represents the feed options.</span></span>
      optional: true
    - id: options.partitionKey
      type:
      - object
      description: <span data-ttu-id="4f10e-314">파티션 확인자를 사용 하 여 사용할 선택적 파티션 키</span><span class="sxs-lookup"><span data-stu-id="4f10e-314">Optional partition key to be used with the partition resolver</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-315">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-315">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryDocuments(documentsFeedOrDatabaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPartitionKeyRanges
  id: documentdb.DocumentClient#queryPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: queryPartitionKeyRanges(databaseLink, query, options)
  summary: <span data-ttu-id="4f10e-316">파티션 키 범위를 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-316">Query the partition key ranges</span></span>
  fullName: documentdb.DocumentClient.queryPartitionKeyRanges(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-317">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-317">The self-link of the database.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-318">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-318">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-319">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-319">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-320">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-320">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryPartitionKeyRanges(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryAttachments
  id: documentdb.DocumentClient#queryAttachments
  parent: documentdb.DocumentClient
  name: queryAttachments(documentLink, query, options)
  summary: <span data-ttu-id="4f10e-321">문서에 대 한 첨부 파일을 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-321">Query the attachments for the document.</span></span>
  fullName: documentdb.DocumentClient.queryAttachments(documentLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-322">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-322">The self-link of the document.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-323">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-323">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-324">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-324">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-325">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-325">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryAttachments(documentLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUsers
  id: documentdb.DocumentClient#queryUsers
  parent: documentdb.DocumentClient
  name: queryUsers(databaseLink, query, options)
  summary: <span data-ttu-id="4f10e-326">데이터베이스에 대 한 사용자를 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-326">Query the users for the database.</span></span>
  fullName: documentdb.DocumentClient.queryUsers(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-327">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-327">The self-link of the database.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-328">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-328">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-329">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-329">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-330">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-330">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryUsers(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPermissions
  id: documentdb.DocumentClient#queryPermissions
  parent: documentdb.DocumentClient
  name: queryPermissions(userLink, query, options)
  summary: <span data-ttu-id="4f10e-331">사용자에 대 한 권한을 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-331">Query the permission for the user.</span></span>
  fullName: documentdb.DocumentClient.queryPermissions(userLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: <span data-ttu-id="4f10e-332">자체 링크 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-332">The self-link of the user.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-333">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-333">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-334">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-334">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-335">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-335">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryPermissions(userLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryTriggers
  id: documentdb.DocumentClient#queryTriggers
  parent: documentdb.DocumentClient
  name: queryTriggers(collectionLink, query, options)
  summary: <span data-ttu-id="4f10e-336">컬렉션에 대 한 트리거를 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-336">Query the triggers for the collection.</span></span>
  fullName: documentdb.DocumentClient.queryTriggers(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-337">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-337">The self-link of the collection.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-338">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-338">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-339">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-339">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-340">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-340">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryTriggers(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUserDefinedFunctions
  id: documentdb.DocumentClient#queryUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: queryUserDefinedFunctions(collectionLink, query, options)
  summary: <span data-ttu-id="4f10e-341">쿼리 사용자 컬렉션에 대 한 함수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-341">Query the user defined functions for the collection.</span></span>
  fullName: documentdb.DocumentClient.queryUserDefinedFunctions(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-342">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-342">The self-link of the collection.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-343">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-343">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-344">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-344">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-345">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-345">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryUserDefinedFunctions(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryStoredProcedures
  id: documentdb.DocumentClient#queryStoredProcedures
  parent: documentdb.DocumentClient
  name: queryStoredProcedures(collectionLink, query, options)
  summary: <span data-ttu-id="4f10e-346">컬렉션에 대 한 storedProcedures를 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-346">Query the storedProcedures for the collection.</span></span>
  fullName: documentdb.DocumentClient.queryStoredProcedures(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-347">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-347">The self-link of the collection.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-348">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-348">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-349">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-349">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-350">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-350">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryStoredProcedures(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryConflicts
  id: documentdb.DocumentClient#queryConflicts
  parent: documentdb.DocumentClient
  name: queryConflicts(collectionLink, query, options)
  summary: <span data-ttu-id="4f10e-351">컬렉션에 대 한 충돌을 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-351">Query the conflicts for the collection.</span></span>
  fullName: documentdb.DocumentClient.queryConflicts(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-352">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-352">The self-link of the collection.</span></span>
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-353">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-353">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-354">피드 옵션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-354">Represents the feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-355">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-355">An instance of queryIterator to handle reading feed.</span></span>'
    content: function queryConflicts(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDatabase
  id: documentdb.DocumentClient#deleteDatabase
  parent: documentdb.DocumentClient
  name: deleteDatabase(databaseLink, options, callback)
  summary: <span data-ttu-id="4f10e-356">데이터베이스 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-356">Delete the database object.</span></span>
  fullName: documentdb.DocumentClient.deleteDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-357">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-357">The self-link of the database.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-358">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-358">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-359">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-359">The callback for the request.</span></span>
    content: function deleteDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteCollection
  id: documentdb.DocumentClient#deleteCollection
  parent: documentdb.DocumentClient
  name: deleteCollection(collectionLink, options, callback)
  summary: <span data-ttu-id="4f10e-360">컬렉션 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-360">Delete the collection object.</span></span>
  fullName: documentdb.DocumentClient.deleteCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-361">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-361">The self-link of the collection.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-362">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-362">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-363">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-363">The callback for the request.</span></span>
    content: function deleteCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDocument
  id: documentdb.DocumentClient#deleteDocument
  parent: documentdb.DocumentClient
  name: deleteDocument(documentLink, options, callback)
  summary: <span data-ttu-id="4f10e-364">문서 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-364">Delete the document object.</span></span>
  fullName: documentdb.DocumentClient.deleteDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-365">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-365">The self-link of the document.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-366">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-366">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-367">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-367">The callback for the request.</span></span>
    content: function deleteDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteAttachment
  id: documentdb.DocumentClient#deleteAttachment
  parent: documentdb.DocumentClient
  name: deleteAttachment(attachmentLink, options, callback)
  summary: <span data-ttu-id="4f10e-368">첨부 파일 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-368">Delete the attachment object.</span></span>
  fullName: documentdb.DocumentClient.deleteAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-369">자체 링크 첨부 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-369">The self-link of the attachment.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-370">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-370">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-371">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-371">The callback for the request.</span></span>
    content: function deleteAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUser
  id: documentdb.DocumentClient#deleteUser
  parent: documentdb.DocumentClient
  name: deleteUser(userLink, options, callback)
  summary: <span data-ttu-id="4f10e-372">사용자 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-372">Delete the user object.</span></span>
  fullName: documentdb.DocumentClient.deleteUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: <span data-ttu-id="4f10e-373">자체 링크 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-373">The self-link of the user.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-374">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-374">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-375">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-375">The callback for the request.</span></span>
    content: function deleteUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deletePermission
  id: documentdb.DocumentClient#deletePermission
  parent: documentdb.DocumentClient
  name: deletePermission(permissionLink, options, callback)
  summary: <span data-ttu-id="4f10e-376">사용 권한 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-376">Delete the permission object.</span></span>
  fullName: documentdb.DocumentClient.deletePermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-377">자체 링크 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-377">The self-link of the permission.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-378">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-378">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-379">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-379">The callback for the request.</span></span>
    content: function deletePermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteTrigger
  id: documentdb.DocumentClient#deleteTrigger
  parent: documentdb.DocumentClient
  name: deleteTrigger(triggerLink, options, callback)
  summary: <span data-ttu-id="4f10e-380">트리거 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-380">Delete the trigger object.</span></span>
  fullName: documentdb.DocumentClient.deleteTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: <span data-ttu-id="4f10e-381">자체 링크 트리거입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-381">The self-link of the trigger.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-382">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-382">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-383">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-383">The callback for the request.</span></span>
    content: function deleteTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUserDefinedFunction
  id: documentdb.DocumentClient#deleteUserDefinedFunction
  parent: documentdb.DocumentClient
  name: deleteUserDefinedFunction(udfLink, options, callback)
  summary: <span data-ttu-id="4f10e-384">UserDefinedFunction 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-384">Delete the UserDefinedFunction object.</span></span>
  fullName: documentdb.DocumentClient.deleteUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: <span data-ttu-id="4f10e-385">사용자의 자체 링크 함수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-385">The self-link of the user defined function.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-386">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-386">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-387">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-387">The callback for the request.</span></span>
    content: function deleteUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteStoredProcedure
  id: documentdb.DocumentClient#deleteStoredProcedure
  parent: documentdb.DocumentClient
  name: deleteStoredProcedure(sprocLink, options, callback)
  summary: <span data-ttu-id="4f10e-388">StoredProcedure 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-388">Delete the StoredProcedure object.</span></span>
  fullName: documentdb.DocumentClient.deleteStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: <span data-ttu-id="4f10e-389">자체 링크 저장된 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-389">The self-link of the stored procedure.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-390">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-390">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-391">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-391">The callback for the request.</span></span>
    content: function deleteStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteConflict
  id: documentdb.DocumentClient#deleteConflict
  parent: documentdb.DocumentClient
  name: deleteConflict(conflictLink, options, callback)
  summary: <span data-ttu-id="4f10e-392">충돌 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-392">Delete the conflict object.</span></span>
  fullName: documentdb.DocumentClient.deleteConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: <span data-ttu-id="4f10e-393">자체 링크 충돌 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-393">The self-link of the conflict.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-394">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-394">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-395">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-395">The callback for the request.</span></span>
    content: function deleteConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceCollection
  id: documentdb.DocumentClient#replaceCollection
  parent: documentdb.DocumentClient
  name: replaceCollection(collectionLink, collection, options, callback)
  summary: <span data-ttu-id="4f10e-396">문서 컬렉션을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-396">Replace the document collection.</span></span>
  fullName: documentdb.DocumentClient.replaceCollection(collectionLink, collection, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-397">자체 링크의 문서 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-397">The self-link of the document collection.</span></span>
    - id: collection
      type:
      - object
      description: <span data-ttu-id="4f10e-398">새 문서 컬렉션 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-398">Represent the new document collection body.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-399">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-399">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-400">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-400">The callback for the request.</span></span>
    content: function replaceCollection(collectionLink, collection, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceDocument
  id: documentdb.DocumentClient#replaceDocument
  parent: documentdb.DocumentClient
  name: replaceDocument(documentLink, document, options, callback)
  summary: <span data-ttu-id="4f10e-401">문서 개체를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-401">Replace the document object.</span></span>
  fullName: documentdb.DocumentClient.replaceDocument(documentLink, document, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-402">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-402">The self-link of the document.</span></span>
    - id: document
      type:
      - object
      description: <span data-ttu-id="4f10e-403">새 문서 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-403">Represent the new document body.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-404">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-404">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-405">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-405">The callback for the request.</span></span>
    content: function replaceDocument(documentLink, document, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceAttachment
  id: documentdb.DocumentClient#replaceAttachment
  parent: documentdb.DocumentClient
  name: replaceAttachment(attachmentLink, attachment, options, callback)
  summary: <span data-ttu-id="4f10e-406">첨부 파일 개체를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-406">Replace the attachment object.</span></span>
  fullName: documentdb.DocumentClient.replaceAttachment(attachmentLink, attachment, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-407">자체 링크 첨부 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-407">The self-link of the attachment.</span></span>
    - id: attachment
      type:
      - object
      description: <span data-ttu-id="4f10e-408">새 첨부 파일 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-408">Represent the new attachment body.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-409">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-409">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-410">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-410">The callback for the request.</span></span>
    content: function replaceAttachment(attachmentLink, attachment, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUser
  id: documentdb.DocumentClient#replaceUser
  parent: documentdb.DocumentClient
  name: replaceUser(userLink, user, options, callback)
  summary: <span data-ttu-id="4f10e-411">사용자 개체를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-411">Replace the user object.</span></span>
  fullName: documentdb.DocumentClient.replaceUser(userLink, user, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: <span data-ttu-id="4f10e-412">자체 링크 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-412">The self-link of the user.</span></span>
    - id: user
      type:
      - object
      description: <span data-ttu-id="4f10e-413">새 사용자 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-413">Represent the new user body.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-414">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-414">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-415">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-415">The callback for the request.</span></span>
    content: function replaceUser(userLink, user, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replacePermission
  id: documentdb.DocumentClient#replacePermission
  parent: documentdb.DocumentClient
  name: replacePermission(permissionLink, permission, options, callback)
  summary: <span data-ttu-id="4f10e-416">사용 권한 개체를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-416">Replace the permission object.</span></span>
  fullName: documentdb.DocumentClient.replacePermission(permissionLink, permission, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-417">자체 링크 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-417">The self-link of the permission.</span></span>
    - id: permission
      type:
      - object
      description: <span data-ttu-id="4f10e-418">새 권한 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-418">Represent the new permission body.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-419">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-419">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-420">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-420">The callback for the request.</span></span>
    content: function replacePermission(permissionLink, permission, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceTrigger
  id: documentdb.DocumentClient#replaceTrigger
  parent: documentdb.DocumentClient
  name: replaceTrigger(triggerLink, trigger, options, callback)
  summary: <span data-ttu-id="4f10e-421">트리거 개체를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-421">Replace the trigger object.</span></span>
  fullName: documentdb.DocumentClient.replaceTrigger(triggerLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: <span data-ttu-id="4f10e-422">자체 링크 트리거입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-422">The self-link of the trigger.</span></span>
    - id: trigger
      type:
      - object
      description: <span data-ttu-id="4f10e-423">새 트리거 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-423">Represent the new trigger body.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-424">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-424">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-425">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-425">The callback for the request.</span></span>
    content: function replaceTrigger(triggerLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUserDefinedFunction
  id: documentdb.DocumentClient#replaceUserDefinedFunction
  parent: documentdb.DocumentClient
  name: replaceUserDefinedFunction(udfLink, udf, options, callback)
  summary: <span data-ttu-id="4f10e-426">UserDefinedFunction 개체를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-426">Replace the UserDefinedFunction object.</span></span>
  fullName: documentdb.DocumentClient.replaceUserDefinedFunction(udfLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: <span data-ttu-id="4f10e-427">사용자의 자체 링크 함수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-427">The self-link of the user defined function.</span></span>
    - id: udf
      type:
      - object
      description: <span data-ttu-id="4f10e-428">새 udf 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-428">Represent the new udf body.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-429">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-429">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-430">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-430">The callback for the request.</span></span>
    content: function replaceUserDefinedFunction(udfLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceStoredProcedure
  id: documentdb.DocumentClient#replaceStoredProcedure
  parent: documentdb.DocumentClient
  name: replaceStoredProcedure(sprocLink, sproc, options, callback)
  summary: <span data-ttu-id="4f10e-431">StoredProcedure 개체를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-431">Replace the StoredProcedure object.</span></span>
  fullName: documentdb.DocumentClient.replaceStoredProcedure(sprocLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: <span data-ttu-id="4f10e-432">자체 링크 저장된 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-432">The self-link of the stored procedure.</span></span>
    - id: sproc
      type:
      - object
      description: <span data-ttu-id="4f10e-433">새 저장 프로시저 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-433">Represent the new sproc body.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-434">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-434">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-435">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-435">The callback for the request.</span></span>
    content: function replaceStoredProcedure(sprocLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertDocument
  id: documentdb.DocumentClient#upsertDocument
  parent: documentdb.DocumentClient
  name: upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-436">문서 Upsert</span><span class="sxs-lookup"><span data-stu-id="4f10e-436">Upsert a document.</span></span>

    <p>

    <span data-ttu-id="4f10e-437">스키마가 없으므로 집합 JSON 문서에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-437">There is no set schema for JSON documents.</span></span> <span data-ttu-id="4f10e-438">모든 사용자 지정 속성 수와 첨부 파일의 선택적 목록 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-438">They may contain any number of custom properties as well as an optional list of attachments.</span></span> <br>

    <span data-ttu-id="4f10e-439">문서는 응용 프로그램 리소스 및 마스터 키 또는 리소스 키를 사용 하 여 권한을 부여할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-439">A Document is an application resource and can be authorized using the master key or resource keys</span></span>

    </p>
  fullName: documentdb.DocumentClient.upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-440">컬렉션 링크 또는 파티션 해결 프로그램을 사용 하는 경우 데이터베이스 연결</span><span class="sxs-lookup"><span data-stu-id="4f10e-440">The collection link or database link if using a partition resolver</span></span>
    - id: body
      type:
      - object
      description: <span data-ttu-id="4f10e-441">문서의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-441">Represents the body of the document.</span></span> <span data-ttu-id="4f10e-442">임의 개수의 사용자 정의 속성을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-442">Can contain any number of user defined properties.</span></span>
    - id: body.id
      type:
      - string
      description: <span data-ttu-id="4f10e-443">문서의 id는 각 문서에 대해 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-443">The id of the document, MUST be unique for each document.</span></span>
      optional: true
    - id: body.ttl
      type:
      - number
      description: <span data-ttu-id="4f10e-444">문서의 초에 live를 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-444">The time to live in seconds of the document.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-445">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-445">The request options.</span></span>
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: <span data-ttu-id="4f10e-446">자동 id 생성을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-446">Disables the automatic id generation.</span></span> <span data-ttu-id="4f10e-447">본문에 id가 없습니다.이 옵션은 true를 하는 경우 오류가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-447">If id is missing in the body and this option is true, an error will be returned.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-448">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-448">The callback for the request.</span></span>
    content: function upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachment
  id: documentdb.DocumentClient#upsertAttachment
  parent: documentdb.DocumentClient
  name: upsertAttachment(documentLink, body, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-449">Upsert 문서 개체에 대 한 첨부 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-449">Upsert an attachment for the document object.</span></span>

    <p>

    <span data-ttu-id="4f10e-450">각 문서는 0 개 이상의 첨부 파일을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-450">Each document may contain zero or more attachments.</span></span> <span data-ttu-id="4f10e-451">모든 MIME 유형-텍스트, 이미지, 이진 데이터의 첨부 파일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-451">Attachments can be of any MIME type - text, image, binary data.</span></span> <br>

    <span data-ttu-id="4f10e-452">이러한 작업은 Azure Blob 저장소에서 외부적으로 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-452">These are stored externally in Azure Blob storage.</span></span> <span data-ttu-id="4f10e-453">첨부 파일은 부모 문서 삭제 될 때 자동으로 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-453">Attachments are automatically deleted when the parent document is deleted.</span></span>

    </P>
  fullName: documentdb.DocumentClient.upsertAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-454">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-454">The self-link of the document.</span></span>
    - id: body
      type:
      - Object
      description: <span data-ttu-id="4f10e-455">메타 데이터를 같은 contentType 미디어 첨부 파일 미디어를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-455">The metadata the defines the attachment media like media, contentType.</span></span> <span data-ttu-id="4f10e-456">다른 속성을 메타의 일부로 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-456">It can include any other properties as part of the metedata.</span></span>
    - id: body.contentType
      type:
      - string
      description: <span data-ttu-id="4f10e-457">첨부 파일의 MIME contentType입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-457">The MIME contentType of the attachment.</span></span>
    - id: body.media
      type:
      - string
      description: <span data-ttu-id="4f10e-458">첨부 파일 콘텐츠를 사용 하 여 연결 하는 미디어 링크입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-458">Media link associated with the attachment content.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-459">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-459">The request options.</span></span>
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-460">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-460">The callback for the request.</span></span>
    content: function upsertAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUser
  id: documentdb.DocumentClient#upsertUser
  parent: documentdb.DocumentClient
  name: upsertUser(databaseLink, body, options, callback)
  summary: <span data-ttu-id="4f10e-461">Upsert 데이터베이스 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-461">Upsert a database user.</span></span>
  fullName: documentdb.DocumentClient.upsertUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: <span data-ttu-id="4f10e-462">자체 링크 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-462">The self-link of the database.</span></span>
    - id: body
      type:
      - object
      description: <span data-ttu-id="4f10e-463">사용자의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-463">Represents the body of the user.</span></span>
    - id: body.id
      type:
      - string
      description: <span data-ttu-id="4f10e-464">사용자의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-464">The id of the user.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-465">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-465">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-466">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-466">The callback for the request.</span></span>
    content: function upsertUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertPermission
  id: documentdb.DocumentClient#upsertPermission
  parent: documentdb.DocumentClient
  name: upsertPermission(userLink, body, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-467">Upsert는 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-467">Upsert a permission.</span></span>

    <p> <span data-ttu-id="4f10e-468">사용 권한을 사용자별 문서 또는 컬렉션과 예를 들어 특정 리소스에 액세스할 수 있는 권한을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-468">A permission represents a per-User Permission to access a specific resource e.g. Document or Collection.</span></span>  </p>
  fullName: documentdb.DocumentClient.upsertPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: <span data-ttu-id="4f10e-469">자체 링크 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-469">The self-link of the user.</span></span>
    - id: body
      type:
      - object
      description: <span data-ttu-id="4f10e-470">사용 권한의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-470">Represents the body of the permission.</span></span>
    - id: body.id
      type:
      - string
      description: <span data-ttu-id="4f10e-471">사용 권한의 id</span><span class="sxs-lookup"><span data-stu-id="4f10e-471">The id of the permission</span></span>
    - id: body.permissionMode
      type:
      - string
      description: <span data-ttu-id="4f10e-472">권한의 모드의 값 이어야 합니다. <xref:documentdb.PermissionMode></span><span class="sxs-lookup"><span data-stu-id="4f10e-472">The mode of the permission, must be a value of <xref:documentdb.PermissionMode></span></span>
    - id: body.resource
      type:
      - string
      description: <span data-ttu-id="4f10e-473">사용 권한을 적용할 수 있는 리소스의 링크입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-473">The link of the resource that the permission will be applied to.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-474">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-474">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-475">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-475">The callback for the request.</span></span>
    content: function upsertPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertTrigger
  id: documentdb.DocumentClient#upsertTrigger
  parent: documentdb.DocumentClient
  name: upsertTrigger(collectionLink, trigger, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-476">Upsert 트리거입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-476">Upsert a trigger.</span></span>

    <p>

    <span data-ttu-id="4f10e-477">Azure Cosmos DB는 사전 및 post 트리거 정의에서 실행 되어야 하는 JavaScript에서 만들고, 업데이트 및 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-477">Azure Cosmos DB supports pre and post triggers defined in JavaScript to be executed on creates, updates and deletes.</span></span> <br>

    <span data-ttu-id="4f10e-478">자세한 내용은 서버 쪽 JavaScript API 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="4f10e-478">For additional details, refer to the server-side JavaScript API documentation.</span></span>

    </p>
  fullName: documentdb.DocumentClient.upsertTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-479">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-479">The self-link of the collection.</span></span>
    - id: trigger
      type:
      - object
      description: <span data-ttu-id="4f10e-480">트리거 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-480">Represents the body of the trigger.</span></span>
    - id: trigger.id
      type:
      - string
      description: <span data-ttu-id="4f10e-481">트리거의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-481">The id of the trigger.</span></span>
    - id: trigger.triggerType
      type:
      - string
      description: <span data-ttu-id="4f10e-482">트리거를 형식의 값 중 하나 여야 합니다 <xref:documentdb.TriggerType>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-482">The type of the trigger, should be one of the values of <xref:documentdb.TriggerType>.</span></span>
    - id: trigger.triggerOperation
      type:
      - string
      description: <span data-ttu-id="4f10e-483">트리거 작업의 값 중 하나 여야 합니다 <xref:documentdb.TriggerOperation>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-483">The trigger operation, should be one of the values of <xref:documentdb.TriggerOperation>.</span></span>
    - id: trigger.serverScript
      type:
      - function
      description: <span data-ttu-id="4f10e-484">트리거 본문에 전달 될 수 너무 화 하는 대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-484">The body of the trigger, it can be passed as stringified too.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-485">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-485">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-486">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-486">The callback for the request.</span></span>
    content: function upsertTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUserDefinedFunction
  id: documentdb.DocumentClient#upsertUserDefinedFunction
  parent: documentdb.DocumentClient
  name: upsertUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-487">UserDefinedFunction Upsert 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-487">Upsert a UserDefinedFunction.</span></span>

    <p>

    <span data-ttu-id="4f10e-488">Azure Cosmos DB는 쿼리, 저장된 프로시저 및 트리거 내에서 사용할 수 있는 JavaScript Udf를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-488">Azure Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers.</span></span> <br>

    <span data-ttu-id="4f10e-489">자세한 내용은 서버 쪽 JavaScript API 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="4f10e-489">For additional details, refer to the server-side JavaScript API documentation.</span></span>

    </p>
  fullName: documentdb.DocumentClient.upsertUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-490">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-490">The self-link of the collection.</span></span>
    - id: udf
      type:
      - object
      description: <span data-ttu-id="4f10e-491">UserDefinedFunction의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-491">Represents the body of the userDefinedFunction.</span></span>
    - id: udf.id
      type:
      - string
      description: <span data-ttu-id="4f10e-492">Udf의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-492">The id of the udf.</span></span>
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: <span data-ttu-id="4f10e-493">Udf의 형식, 그 중 하나 여야 합니다 값 <xref:documentdb.UserDefinedFunctionType></span><span class="sxs-lookup"><span data-stu-id="4f10e-493">The type of the udf, it should be one of the values of <xref:documentdb.UserDefinedFunctionType></span></span>
    - id: udf.serverScript
      type:
      - function
      description: <span data-ttu-id="4f10e-494">본문을 나타내는 udf 전달 될 수 너무 화 하는 대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-494">Represents the body of the udf, it can be passed as stringified too.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-495">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-495">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-496">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-496">The callback for the request.</span></span>
    content: function upsertUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertStoredProcedure
  id: documentdb.DocumentClient#upsertStoredProcedure
  parent: documentdb.DocumentClient
  name: upsertStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    <span data-ttu-id="4f10e-497">Upsert는 저장 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-497">Upsert a StoredProcedure.</span></span>

    <p>

    <span data-ttu-id="4f10e-498">Azure Cosmos DB는 저장된 프로시저를 저장소 계층에 있는 문서 컬렉션에 대해 직접 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-498">Azure Cosmos DB allows stored procedures to be executed in the storage tier, directly against a document collection.</span></span> <span data-ttu-id="4f10e-499">스크립트</span><span class="sxs-lookup"><span data-stu-id="4f10e-499">The script</span></span> <br>

    <span data-ttu-id="4f10e-500">지정된 된 컬렉션의 기본 저장소 파티션에 ACID 트랜잭션에서 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-500">gets executed under ACID transactions on the primary storage partition of the specified collection.</span></span> <span data-ttu-id="4f10e-501">자세한 내용은</span><span class="sxs-lookup"><span data-stu-id="4f10e-501">For additional details,</span></span> <br>

    <span data-ttu-id="4f10e-502">서버 쪽 JavaScript API 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="4f10e-502">refer to the server-side JavaScript API documentation.</span></span>

    </p>
  fullName: documentdb.DocumentClient.upsertStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: <span data-ttu-id="4f10e-503">자체 링크의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-503">The self-link of the collection.</span></span>
    - id: sproc
      type:
      - object
      description: <span data-ttu-id="4f10e-504">저장된 프로시저의 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-504">Represents the body of the stored procedure.</span></span>
    - id: sproc.id
      type:
      - string
      description: <span data-ttu-id="4f10e-505">저장된 프로시저의 id입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-505">The id of the stored procedure.</span></span>
    - id: sproc.serverScript
      type:
      - function
      description: <span data-ttu-id="4f10e-506">저장된 프로시저의 본문에 전달 될 수 너무 화 하는 대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-506">The body of the stored procedure, it can be passed as stringified too.</span></span>
    - id: options
      type:
      - documentdb.RequestOptions
      description: <span data-ttu-id="4f10e-507">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-507">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-508">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-508">The callback for the request.</span></span>
    content: function upsertStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  id: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: <span data-ttu-id="4f10e-509">Upsert 문서 개체에 대 한 첨부 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-509">Upsert an attachment for the document object.</span></span>
  fullName: documentdb.DocumentClient.upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: <span data-ttu-id="4f10e-510">자체 링크의 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-510">The self-link of the document.</span></span>
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: <span data-ttu-id="4f10e-511">업로드 해야 하는 자체 미디어를 나타내는 스트림.</span><span class="sxs-lookup"><span data-stu-id="4f10e-511">the stream that represents the media itself that needs to be uploaded.</span></span>
    - id: options
      type:
      - documentdb.MediaOptions
      description: <span data-ttu-id="4f10e-512">요청 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-512">The request options.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-513">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-513">The callback for the request.</span></span>
    content: function upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readMedia
  id: documentdb.DocumentClient#readMedia
  parent: documentdb.DocumentClient
  name: readMedia(mediaLink, callback)
  summary: <span data-ttu-id="4f10e-514">첨부 파일 개체에 대 한 미디어를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-514">Read the media for the attachment object.</span></span>
  fullName: documentdb.DocumentClient.readMedia(mediaLink, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: <span data-ttu-id="4f10e-515">첨부 파일에 있는 미디어의 미디어 링크입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-515">The media link of the media in the attachment.</span></span>
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-516">요청에 대 한 콜백 결과 매개 변수 버퍼 또는 수 값에 따라 스트림을 <xref:documentdb.MediaReadMode>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-516">The callback for the request, the result parameter can be a buffer or a stream depending on the value of <xref:documentdb.MediaReadMode>.</span></span>
    content: function readMedia(mediaLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#updateMedia
  id: documentdb.DocumentClient#updateMedia
  parent: documentdb.DocumentClient
  name: updateMedia(mediaLink, readableStream, options, callback)
  summary: <span data-ttu-id="4f10e-517">첨부 파일에 대 한 미디어를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-517">Update media for the attachment</span></span>
  fullName: documentdb.DocumentClient.updateMedia(mediaLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: <span data-ttu-id="4f10e-518">첨부 파일에 있는 미디어의 미디어 링크입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-518">The media link of the media in the attachment.</span></span>
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: <span data-ttu-id="4f10e-519">업로드 해야 하는 자체 미디어를 나타내는 스트림.</span><span class="sxs-lookup"><span data-stu-id="4f10e-519">The stream that represents the media itself that needs to be uploaded.</span></span>
    - id: options
      type:
      - documentdb.MediaOptions
      description: <span data-ttu-id="4f10e-520">미디어에 대 한 옵션</span><span class="sxs-lookup"><span data-stu-id="4f10e-520">options for the media</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-521">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-521">The callback for the request.</span></span>
    content: function updateMedia(mediaLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#executeStoredProcedure
  id: documentdb.DocumentClient#executeStoredProcedure
  parent: documentdb.DocumentClient
  name: executeStoredProcedure(sprocLink, params, options, callback)
  summary: <span data-ttu-id="4f10e-522">파티션 키를 사용 하 여 개체를 나타내는 저장 프로시저를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-522">Execute the StoredProcedure represented by the object with partition key.</span></span>
  fullName: documentdb.DocumentClient.executeStoredProcedure(sprocLink, params, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: <span data-ttu-id="4f10e-523">자체 링크 저장된 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-523">The self-link of the stored procedure.</span></span>
    - id: params
      type:
      - Array
      description: <span data-ttu-id="4f10e-524">저장된 프로시저의 매개 변수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-524">represent the parameters of the stored procedure.</span></span>
      optional: true
    - id: options
      type:
      - Object
      description: <span data-ttu-id="4f10e-525">파티션 키</span><span class="sxs-lookup"><span data-stu-id="4f10e-525">partition key</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-526">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-526">The callback for the request.</span></span>
    content: function executeStoredProcedure(sprocLink, params, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceOffer
  id: documentdb.DocumentClient#replaceOffer
  parent: documentdb.DocumentClient
  name: replaceOffer(offerLink, offer, callback)
  summary: <span data-ttu-id="4f10e-527">제안 개체를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-527">Replace the offer object.</span></span>
  fullName: documentdb.DocumentClient.replaceOffer(offerLink, offer, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: <span data-ttu-id="4f10e-528">자체 링크를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-528">The self-link of the offer.</span></span>
    - id: offer
      type:
      - object
      description: <span data-ttu-id="4f10e-529">새 제품 본문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-529">Represent the new offer body.</span></span>
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-530">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-530">The callback for the request.</span></span>
    content: function replaceOffer(offerLink, offer, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffer
  id: documentdb.DocumentClient#readOffer
  parent: documentdb.DocumentClient
  name: readOffer(offerLink, callback)
  summary: <span data-ttu-id="4f10e-531">제품을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-531">Reads an offer.</span></span>
  fullName: documentdb.DocumentClient.readOffer(offerLink, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: <span data-ttu-id="4f10e-532">자체 링크를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-532">The self-link of the offer.</span></span>
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-533">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-533">The callback for the request.</span></span>
    content: function readOffer(offerLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffers
  id: documentdb.DocumentClient#readOffers
  parent: documentdb.DocumentClient
  name: readOffers(options)
  summary: <span data-ttu-id="4f10e-534">모든 제품을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-534">Lists all offers.</span></span>
  fullName: documentdb.DocumentClient.readOffers(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-535">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-535">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-536">읽기 피드를 처리할 queryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-536">An instance of queryIterator to handle reading feed.</span></span>'
    content: function readOffers(options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryOffers
  id: documentdb.DocumentClient#queryOffers
  parent: documentdb.DocumentClient
  name: queryOffers(query, options)
  summary: <span data-ttu-id="4f10e-537">쿼리를 충족 하는 모든 제품을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-537">Lists all offers that satisfy a query.</span></span>
  fullName: documentdb.DocumentClient.queryOffers(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: <span data-ttu-id="4f10e-538">SQL 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-538">A SQL query.</span></span>
    - id: options
      type:
      - documentdb.FeedOptions
      description: <span data-ttu-id="4f10e-539">피드 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-539">The feed options.</span></span>
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- <span data-ttu-id="4f10e-540">읽기 피드를 처리할 QueryIterator의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-540">An instance of QueryIterator to handle reading feed.</span></span>'
    content: function queryOffers(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#getDatabaseAccount
  id: documentdb.DocumentClient#getDatabaseAccount
  parent: documentdb.DocumentClient
  name: getDatabaseAccount(callback)
  summary: <span data-ttu-id="4f10e-541">데이터베이스 계정 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-541">Gets the Database account information.</span></span>
  fullName: documentdb.DocumentClient.getDatabaseAccount(callback)
  type: Function
  syntax:
    parameters:
    - id: options.urlConnection
      type:
      - string
      description: <span data-ttu-id="4f10e-542">데이터베이스 계정을 검색 해야 하는 끝점 url입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-542">The endpoint url whose database account needs to be retrieved.</span></span> <span data-ttu-id="4f10e-543">그렇지 않은 경우 사용할 경우 현재 클라이언트의 url.</span><span class="sxs-lookup"><span data-stu-id="4f10e-543">If not present, current client's url will be used.</span></span>
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: <span data-ttu-id="4f10e-544">요청에 대 한 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-544">The callback for the request.</span></span> <span data-ttu-id="4f10e-545">콜백 두 번째 매개 변수 형식이 됩니다 <xref:documentdb.DatabaseAccount>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-545">The second parameter of the callback will be of type <xref:documentdb.DatabaseAccount>.</span></span>
    content: function getDatabaseAccount(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getSessionToken
  id: documentdb.DocumentClient#getSessionToken
  parent: documentdb.DocumentClient
  name: getSessionToken(collectionLink)
  summary: <span data-ttu-id="4f10e-546">지정 된 collectionLink는 SessionToken을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4f10e-546">Gets the SessionToken for a given collectionLink</span></span>
  fullName: documentdb.DocumentClient.getSessionToken(collectionLink)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      description: <span data-ttu-id="4f10e-547">에 세션 토큰을 필요한 컬렉션의 링크</span><span class="sxs-lookup"><span data-stu-id="4f10e-547">The link of the collection for which the session token is needed</span></span>
    content: function getSessionToken(collectionLink)
  langs:
  - js
references:
- uid: documentdb.QueryIterator
  name: QueryIterator
  fullName: documentdb.QueryIterator
  isExternal: false
