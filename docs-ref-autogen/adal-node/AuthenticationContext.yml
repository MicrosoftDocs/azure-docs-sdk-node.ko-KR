### YamlMime:UniversalReference
ms.openlocfilehash: 718b5e201a01e0a07231aa2a48f11df17d286ec6
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52167848"
items:
- uid: adal-node.AuthenticationContext
  name: AuthenticationContext
  fullName: AuthenticationContext
  children:
  - adal-node.AuthenticationContext.acquireToken
  - adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode
  - adal-node.AuthenticationContext.acquireTokenWithClientCertificate
  - adal-node.AuthenticationContext.acquireTokenWithClientCredentials
  - adal-node.AuthenticationContext.acquireTokenWithDeviceCode
  - adal-node.AuthenticationContext.acquireTokenWithRefreshToken
  - adal-node.AuthenticationContext.acquireTokenWithRefreshToken_1
  - adal-node.AuthenticationContext.acquireTokenWithUsernamePassword
  - adal-node.AuthenticationContext.acquireUserCode
  - adal-node.AuthenticationContext.constructor
  - adal-node.AuthenticationContext.authority
  - adal-node.AuthenticationContext.cache
  - adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode
  - adal-node.AuthenticationContext.correlationId
  - adal-node.AuthenticationContext.options
  langs:
  - typeScript
  type: class
  summary: ''
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireToken
  name: acquireToken(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-101">지정된 된 리소스에 대 한 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-101">Gets a token for a given resource.</span></span>
  syntax:
    content: 'function acquireToken(resource: string, userId: string, clientId: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="fff62-102">토큰이 유효 하는 리소스를 식별 하는 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-102">A URI that identifies the resource for which the token is valid.</span></span>
    - id: userId
      type:
      - string
      description: <span data-ttu-id="fff62-103">이 응용 프로그램을 인증 하는 대신 사용자의 사용자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-103">The username of the user on behalf this application is authenticating.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="fff62-104">호출 응용 프로그램의 OAuth 클라이언트 id입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-104">The OAuth client id of the calling application.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="fff62-105">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-105">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode
  name: acquireTokenWithAuthorizationCode(string, string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-106">지정된 된 리소스에 대 한 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-106">Gets a token for a given resource.</span></span>
  syntax:
    content: 'function acquireTokenWithAuthorizationCode(authorizationCode: string, redirectUri: string, resource: string, clientId: string, clientSecret: string, callback: AcquireTokenCallback)'
    parameters:
    - id: authorizationCode
      type:
      - string
      description: <span data-ttu-id="fff62-107">클라이언트에서 권한 부여 코드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-107">An authorization code returned from a client.</span></span>
    - id: redirectUri
      type:
      - string
      description: <span data-ttu-id="fff62-108">권한 부여 호출에 사용 된 리디렉션 uri입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-108">The redirect uri that was used in the authorize call.</span></span>
    - id: resource
      type:
      - string
      description: <span data-ttu-id="fff62-109">토큰이 유효 하는 리소스를 식별 하는 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-109">A URI that identifies the resource for which the token is valid.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="fff62-110">호출 응용 프로그램의 OAuth 클라이언트 id입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-110">The OAuth client id of the calling application.</span></span>
    - id: clientSecret
      type:
      - string
      description: <span data-ttu-id="fff62-111">호출 응용 프로그램의 OAuth 클라이언트 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-111">The OAuth client secret of the calling application.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="fff62-112">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-112">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithClientCertificate
  name: acquireTokenWithClientCertificate(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-113">새 액세스 토큰을 통해 인증서 자격 증명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-113">Gets a new access token using via a certificate credential.</span></span>
  syntax:
    content: 'function acquireTokenWithClientCertificate(resource: string, clientId: string, certificate: string, thumbprint: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="fff62-114">토큰이 유효 하는 리소스를 식별 하는 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-114">A URI that identifies the resource for which the token is valid.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="fff62-115">호출 응용 프로그램의 OAuth 클라이언트 id입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-115">The OAuth client id of the calling application.</span></span>
    - id: certificate
      type:
      - string
      description: <span data-ttu-id="fff62-116">PEM로 인코딩된 인증서의 개인 키입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-116">A PEM encoded certificate private key.</span></span>
    - id: thumbprint
      type:
      - string
      description: <span data-ttu-id="fff62-117">16 진수 인코딩 인증서의 지문입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-117">A hex encoded thumbprint of the certificate.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="fff62-118">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-118">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithClientCredentials
  name: acquireTokenWithClientCredentials(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-119">지정된 된 리소스에 대 한 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-119">Gets a token for a given resource.</span></span>
  syntax:
    content: 'function acquireTokenWithClientCredentials(resource: string, clientId: string, clientSecret: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="fff62-120">토큰이 유효 하는 리소스를 식별 하는 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-120">A URI that identifies the resource for which the token is valid.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="fff62-121">호출 응용 프로그램의 OAuth 클라이언트 id입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-121">The OAuth client id of the calling application.</span></span>
    - id: clientSecret
      type:
      - string
      description: <span data-ttu-id="fff62-122">호출 응용 프로그램의 OAuth 클라이언트 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-122">The OAuth client secret of the calling application.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="fff62-123">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-123">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithDeviceCode
  name: acquireTokenWithDeviceCode(string, string, UserCodeInfo, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-124">새 액세스 토큰을 장치 코드를 통해 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-124">Gets a new access token using via a device code.</span></span>
  syntax:
    content: 'function acquireTokenWithDeviceCode(resource: string, clientId: string, userCodeInfo: UserCodeInfo, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: ''
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="fff62-125">호출 응용 프로그램의 OAuth 클라이언트 id입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-125">The OAuth client id of the calling application.</span></span>
    - id: userCodeInfo
      type:
      - adal-node.UserCodeInfo
      description: <span data-ttu-id="fff62-126">Device_code를 포함 간격을 다시 시도 하 고 만료 된 토큰에 대 한 get 요청에 대 한 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-126">Contains device_code, retry interval, and expire time for the request for get the token.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="fff62-127">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-127">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithRefreshToken
  name: acquireTokenWithRefreshToken(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-128">새 액세스를 이전에 발급 된 새로 고침 토큰을 통해 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-128">Gets a new access token via a previously issued refresh token.</span></span>
  syntax:
    content: 'function acquireTokenWithRefreshToken(refreshToken: string, clientId: string, resource: string, callback: AcquireTokenCallback)'
    parameters:
    - id: refreshToken
      type:
      - string
      description: <span data-ttu-id="fff62-129">AcquireToken의 이전 실행에서 tokne 응답에서 반환 된 새로 고침 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-129">A refresh token returned in a tokne response from a previous invocation of acquireToken.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="fff62-130">호출 응용 프로그램의 OAuth 클라이언트 id입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-130">The OAuth client id of the calling application.</span></span>
    - id: resource
      type:
      - string
      description: <span data-ttu-id="fff62-131">토큰 요청 되는 OAuth 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-131">The OAuth resource for which a token is being request.</span></span>  <span data-ttu-id="fff62-132">이 매개 변수는 선택 사항이 며 설정할 수 있는 null입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-132">This parameter is optional and can be set to null.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="fff62-133">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-133">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithRefreshToken_1
  name: acquireTokenWithRefreshToken(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-134">새 액세스를 이전에 발급 된 새로 고침 토큰을 통해 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-134">Gets a new access token via a previously issued refresh token.</span></span>
  syntax:
    content: 'function acquireTokenWithRefreshToken(refreshToken: string, clientId: string, clientSecret: string, resource: string, callback: AcquireTokenCallback)'
    parameters:
    - id: refreshToken
      type:
      - string
      description: ''
    - id: clientId
      type:
      - string
      description: ''
    - id: clientSecret
      type:
      - string
      description: ''
    - id: resource
      type:
      - string
      description: ''
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: ''
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithUsernamePassword
  name: acquireTokenWithUsernamePassword(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-135">지정된 된 리소스에 대 한 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-135">Gets a token for a given resource.</span></span>
  syntax:
    content: 'function acquireTokenWithUsernamePassword(resource: string, username: string, password: string, clientId: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="fff62-136">토큰이 유효 하는 리소스를 식별 하는 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-136">A URI that identifies the resource for which the token is valid.</span></span>
    - id: username
      type:
      - string
      description: <span data-ttu-id="fff62-137">이 응용 프로그램을 인증 하는 대신 사용자의 사용자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-137">The username of the user on behalf this application is authenticating.</span></span>
    - id: password
      type:
      - string
      description: <span data-ttu-id="fff62-138">Username 매개 변수에서 명명 된 사용자의 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-138">The password of the user named in the username parameter.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="fff62-139">호출 응용 프로그램의 OAuth 클라이언트 id입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-139">The OAuth client id of the calling application.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="fff62-140">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-140">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireUserCode
  name: acquireUserCode(string, string, string, AcquireUserCodeCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-141">User_code, 장치의 사용자를 인증 하기 위한 device_code를 포함 하는 userCodeInfo를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-141">Gets the userCodeInfo which contains user_code, device_code for authenticating user on device.</span></span>
  syntax:
    content: 'function acquireUserCode(resource: string, clientId: string, language: string, callback: AcquireUserCodeCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="fff62-142">URI는 리소스를 식별 하 고 device_code user_code 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-142">A URI that identifies the resource for which the device_code and user_code is valid for.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="fff62-143">호출 응용 프로그램의 OAuth 클라이언트 id입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-143">The OAuth client id of the calling application.</span></span>
    - id: language
      type:
      - string
      description: <span data-ttu-id="fff62-144">메시지를 지역화 해야 하는 방법을 지정 하는 언어 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-144">The language code specifying how the message should be localized to.</span></span>
    - id: callback
      type:
      - adal-node.AcquireUserCodeCallback
      description: >
        <span data-ttu-id="fff62-145">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-145">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.constructor
  name: AuthenticationContext(string, undefined | false | true, TokenCache)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-146">새 AuthenticationContext 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-146">Creates a new AuthenticationContext object.</span></span>  <span data-ttu-id="fff62-147">기본적으로 인증 기관 목록 알려진된 Azure Active Directory 기관에 대해 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-147">By default the authority will be checked against a list of known Azure Active Directory authorities.</span></span>  <span data-ttu-id="fff62-148">기관에서 이러한 잘 알려진 기관 중 하나로 인식 되지 않으면 토큰 획득 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-148">If the authority is not recognized as one of these well known authorities then token acquisition will fail.</span></span>  <span data-ttu-id="fff62-149">아래 validateAuthority 매개 변수를 통해이 동작을 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-149">This behavior can be turned off via the validateAuthority parameter below.</span></span>
  syntax:
    content: 'new AuthenticationContext(authority: string, validateAuthority?: undefined | false | true, cache?: TokenCache)'
    parameters:
    - id: authority
      type:
      - string
      description: <span data-ttu-id="fff62-150">토큰은 권한을 식별 하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-150">A URL that identifies a token authority.</span></span>
    - id: validateAuthority
      type:
      - undefined | false | true
      description: ''
      optional: true
    - id: cache
      type:
      - adal-node.TokenCache
      description: ''
      optional: true
  package: adal-node
- uid: adal-node.AuthenticationContext.authority
  name: authority
  fullName: authority
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="fff62-151">{문자열} 기관 토큰은 권한을 식별 하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-151">{string}  authority A URL that identifies a token authority.</span></span>
  syntax:
    content: 'public authority: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.AuthenticationContext.cache
  name: cache
  fullName: cache
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="fff62-152">{TokenCache} 캐시가 AuthenticationContext 인스턴스에 사용 되는 토큰 캐시</span><span class="sxs-lookup"><span data-stu-id="fff62-152">{TokenCache} cache The token cache used by this AuthenticationContext instance</span></span>
  syntax:
    content: 'public cache: TokenCache'
    return:
      type:
      - adal-node.TokenCache
  package: adal-node
- uid: adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode
  name: cancelRequestToGetTokenWithDeviceCode(UserCodeInfo, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fff62-153">장치 코드를 사용 하 여 토큰을 가져오는 폴링 요청을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-153">Cancels the polling request to get token with device code.</span></span>
  syntax:
    content: 'function cancelRequestToGetTokenWithDeviceCode(userCodeInfo: UserCodeInfo, callback: AcquireTokenCallback)'
    parameters:
    - id: userCodeInfo
      type:
      - adal-node.UserCodeInfo
      description: <span data-ttu-id="fff62-154">Device_code를 포함 간격을 다시 시도 하 고 만료 된 토큰에 대 한 get 요청에 대 한 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-154">Contains device_code, retry interval, and expire time for the request for get the token.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="fff62-155">콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-155">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.correlationId
  name: correlationId
  fullName: correlationId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="fff62-156">{문자열} correlationId 다음 acquireToken 요청에 사용 될 상관 관계 id.</span><span class="sxs-lookup"><span data-stu-id="fff62-156">{string} correlationId The correlation id that will be used for the next acquireToken request.</span></span>
  syntax:
    content: 'public correlationId: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.AuthenticationContext.options
  name: options
  fullName: options
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="fff62-157">{모든} 옵션이 AuthenticationContext 인스턴스에 의해 생성 된 요청에 적용 되는 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="fff62-157">{any} options Options that are applied to requests generated by this AuthenticationContext instance.</span></span>
  syntax:
    content: 'public options: any'
    return:
      type:
      - any
  package: adal-node
references:
- uid: adal-node.TokenCache
  name: TokenCache
  spec.typeScript:
  - name: TokenCache
    fullName: TokenCache
    uid: adal-node.TokenCache
- uid: adal-node.AcquireTokenCallback
  name: AcquireTokenCallback
  spec.typeScript:
  - name: AcquireTokenCallback
    fullName: AcquireTokenCallback
    uid: adal-node.AcquireTokenCallback
- uid: adal-node.UserCodeInfo
  name: UserCodeInfo
  spec.typeScript:
  - name: UserCodeInfo
    fullName: UserCodeInfo
    uid: adal-node.UserCodeInfo
- uid: adal-node.AcquireUserCodeCallback
  name: AcquireUserCodeCallback
  spec.typeScript:
  - name: AcquireUserCodeCallback
    fullName: AcquireUserCodeCallback
    uid: adal-node.AcquireUserCodeCallback
