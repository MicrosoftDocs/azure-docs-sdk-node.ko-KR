### YamlMime:UniversalReference
ms.openlocfilehash: 5970fbf41b85f441e3cf2934470ea54795aae476
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52052407"
items:
- uid: adal-node.MemoryCache
  name: MemoryCache
  fullName: MemoryCache
  children:
  - adal-node.MemoryCache.add
  - adal-node.MemoryCache.find
  - adal-node.MemoryCache.constructor
  - adal-node.MemoryCache.remove
  langs:
  - typeScript
  type: class
  summary: ''
  package: adal-node
- uid: adal-node.MemoryCache.add
  name: 'add(TokenResponse[], (err: Error, result: boolean) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d48c4-101">단일 일괄 작업에서 캐시 항목의 컬렉션을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-101">Adds a collection of entries to the cache in a single batch operation.</span></span>
  syntax:
    content: 'function add(entries: TokenResponse[], callback: (err: Error, result: boolean) => void)'
    parameters:
    - id: entries
      type:
      - adal-node.TokenResponse[]
      description: <span data-ttu-id="d48c4-102">캐시에 추가할 항목의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-102">An array of entries to add to the cache.</span></span>
    - id: callback
      type:
      - '(err: Error, result: boolean) => void'
      description: >
        <span data-ttu-id="d48c4-103">이 함수는 작업이 완료 될 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-103">This function is called when the operation is complete.</span></span>  <span data-ttu-id="d48c4-104">모든 오류는 첫 번째 매개 변수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-104">Any error is provided as the first parameter.</span></span>
  package: adal-node
- uid: adal-node.MemoryCache.find
  name: 'find(any, (err: Error, results: any[]) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d48c4-105">전달 된 값의 모든 일치 하는 캐시에서 모든 항목을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-105">Finds all entries in the cache that match all of the passed in values.</span></span>
  syntax:
    content: 'function find(query: any, callback: (err: Error, results: any[]) => void)'
    parameters:
    - id: query
      type:
      - any
      description: <span data-ttu-id="d48c4-106">캐시의 각 항목에이 개체를 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-106">This object will be compared to each entry in the cache.</span></span>  <span data-ttu-id="d48c4-107">이 개체의 값이 모두 일치 하는 모든 항목 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-107">Any entries that match all of the values in this object will be returned.</span></span>  <span data-ttu-id="d48c4-108">전달 된 개체의 모든 값은 잠재적으로 반환 된 개체의 값을 정확 하 게 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-108">All the values in the passed in object must match values in a potentialy returned object exactly.</span></span>  <span data-ttu-id="d48c4-109">반환된 된 개체에 전달 된 것 보다 많은 값 있을 쿼리 개체에서입니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-109">The returned object may have more values than the passed in query object.</span></span> <span data-ttu-id="d48c4-110">잠시 후 살펴보겠습니다 http://underscorejs.org/#where 쿼리를 제공 하는 방법의 예입니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-110">Please take a look at http://underscorejs.org/#where for an example on how to provide query.</span></span>
    - id: callback
      type:
      - '(err: Error, results: any[]) => void'
      description: "\n"
  package: adal-node
- uid: adal-node.MemoryCache.constructor
  name: MemoryCache()
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: new MemoryCache()
    parameters: []
  package: adal-node
- uid: adal-node.MemoryCache.remove
  name: 'remove(TokenResponse[], (err: Error, result: null) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d48c4-111">단일 일괄 작업으로 캐시에서 항목의 컬렉션을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-111">Removes a collection of entries from the cache in a single batch operation.</span></span>
  syntax:
    content: 'function remove(entires: TokenResponse[], callback: (err: Error, result: null) => void)'
    parameters:
    - id: entires
      type:
      - adal-node.TokenResponse[]
      description: ''
    - id: callback
      type:
      - '(err: Error, result: null) => void'
      description: >
        <span data-ttu-id="d48c4-112">이 함수는 작업이 완료 될 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-112">This function is called when the operation is complete.</span></span>  <span data-ttu-id="d48c4-113">모든 오류는 첫 번째 매개 변수로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d48c4-113">Any error is provided as the first parameter.</span></span>
  package: adal-node
references:
- uid: adal-node.TokenResponse[]
  name: TokenResponse[]
  spec.typeScript:
  - name: TokenResponse
    fullName: TokenResponse
    uid: adal-node.TokenResponse
  - name: '[]'
    fullName: '[]'
