### YamlMime:UniversalReference
items:
  - uid: azure-arm-storage.StorageAccounts
    name: StorageAccounts
    fullName: StorageAccounts
    children:
      - azure-arm-storage.StorageAccounts.beginCreate
      - azure-arm-storage.StorageAccounts.beginCreate_2
      - azure-arm-storage.StorageAccounts.beginCreate_1
      - azure-arm-storage.StorageAccounts.beginCreateWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.beginFailover
      - azure-arm-storage.StorageAccounts.beginFailover_2
      - azure-arm-storage.StorageAccounts.beginFailover_1
      - azure-arm-storage.StorageAccounts.beginFailoverWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.checkNameAvailability
      - azure-arm-storage.StorageAccounts.checkNameAvailability_2
      - azure-arm-storage.StorageAccounts.checkNameAvailability_1
      - azure-arm-storage.StorageAccounts.checkNameAvailabilityWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.create
      - azure-arm-storage.StorageAccounts.create_2
      - azure-arm-storage.StorageAccounts.create_1
      - azure-arm-storage.StorageAccounts.createWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.deleteMethod
      - azure-arm-storage.StorageAccounts.deleteMethod_2
      - azure-arm-storage.StorageAccounts.deleteMethod_1
      - azure-arm-storage.StorageAccounts.deleteMethodWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.failover
      - azure-arm-storage.StorageAccounts.failover_2
      - azure-arm-storage.StorageAccounts.failover_1
      - azure-arm-storage.StorageAccounts.failoverWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.getProperties
      - azure-arm-storage.StorageAccounts.getProperties_2
      - azure-arm-storage.StorageAccounts.getProperties_1
      - azure-arm-storage.StorageAccounts.getPropertiesWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.list
      - azure-arm-storage.StorageAccounts.list_2
      - azure-arm-storage.StorageAccounts.list_1
      - azure-arm-storage.StorageAccounts.listAccountSAS
      - azure-arm-storage.StorageAccounts.listAccountSAS_2
      - azure-arm-storage.StorageAccounts.listAccountSAS_1
      - azure-arm-storage.StorageAccounts.listAccountSASWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.listByResourceGroup
      - azure-arm-storage.StorageAccounts.listByResourceGroup_2
      - azure-arm-storage.StorageAccounts.listByResourceGroup_1
      - azure-arm-storage.StorageAccounts.listByResourceGroupWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.listKeys
      - azure-arm-storage.StorageAccounts.listKeys_2
      - azure-arm-storage.StorageAccounts.listKeys_1
      - azure-arm-storage.StorageAccounts.listKeysWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.listServiceSAS
      - azure-arm-storage.StorageAccounts.listServiceSAS_2
      - azure-arm-storage.StorageAccounts.listServiceSAS_1
      - azure-arm-storage.StorageAccounts.listServiceSASWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.listWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.regenerateKey
      - azure-arm-storage.StorageAccounts.regenerateKey_2
      - azure-arm-storage.StorageAccounts.regenerateKey_1
      - azure-arm-storage.StorageAccounts.regenerateKeyWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.revokeUserDelegationKeys
      - azure-arm-storage.StorageAccounts.revokeUserDelegationKeys_2
      - azure-arm-storage.StorageAccounts.revokeUserDelegationKeys_1
      - azure-arm-storage.StorageAccounts.revokeUserDelegationKeysWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.update
      - azure-arm-storage.StorageAccounts.update_2
      - azure-arm-storage.StorageAccounts.update_1
      - azure-arm-storage.StorageAccounts.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginCreate
    name: 'beginCreate(string, string, StorageAccountCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.
      계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
    syntax:
      content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: |
            만든된 계정에 대해 제공 하는 매개 변수입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginCreate_2
    name: 'beginCreate(string, string, StorageAccountCreateParameters, Object, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.
      계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
    syntax:
      content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginCreate_1
    name: 'beginCreate(string, string, StorageAccountCreateParameters, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.
      계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
    syntax:
      content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginCreateWithHttpOperationResponse
    name: 'beginCreateWithHttpOperationResponse(string, string, StorageAccountCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.
      계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
    syntax:
      content: 'function beginCreateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: |
            만든된 계정에 대해 제공 하는 매개 변수입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginFailover
    name: 'beginFailover(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 가용성 문제가 발생 한 경우 저장소 계정에 대 한 장애 조치 요청을 트리거할 수 있습니다. 장애 조치 RA-GRS 계정의 보조 클러스터에 저장소 계정의 기본 클러스터에서 발생합니다. 보조 클러스터 장애 조치 후 주 됩니다.
    syntax:
      content: 'function beginFailover(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginFailover_2
    name: 'beginFailover(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 가용성 문제가 발생 한 경우 저장소 계정에 대 한 장애 조치 요청을 트리거할 수 있습니다. 장애 조치 RA-GRS 계정의 보조 클러스터에 저장소 계정의 기본 클러스터에서 발생합니다. 보조 클러스터 장애 조치 후 주 됩니다.
    syntax:
      content: 'function beginFailover(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginFailover_1
    name: 'beginFailover(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 가용성 문제가 발생 한 경우 저장소 계정에 대 한 장애 조치 요청을 트리거할 수 있습니다. 장애 조치 RA-GRS 계정의 보조 클러스터에 저장소 계정의 기본 클러스터에서 발생합니다. 보조 클러스터 장애 조치 후 주 됩니다.
    syntax:
      content: 'function beginFailover(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginFailoverWithHttpOperationResponse
    name: 'beginFailoverWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 가용성 문제가 발생 한 경우 저장소 계정에 대 한 장애 조치 요청을 트리거할 수 있습니다. 장애 조치 RA-GRS 계정의 보조 클러스터에 저장소 계정의 기본 클러스터에서 발생합니다. 보조 클러스터 장애 조치 후 주 됩니다.
    syntax:
      content: 'function beginFailoverWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.checkNameAvailability
    name: 'checkNameAvailability(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 저장소 계정 이름이 유효 하지 않은 사용에서 확인 합니다.
    syntax:
      content: 'function checkNameAvailability(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            저장소 계정 이름입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.CheckNameAvailabilityResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.checkNameAvailability_2
    name: 'checkNameAvailability(string, Object, ServiceCallback<CheckNameAvailabilityResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 저장소 계정 이름이 유효 하지 않은 사용에서 확인 합니다.
    syntax:
      content: 'function checkNameAvailability(name: string, options: Object, callback: ServiceCallback<CheckNameAvailabilityResult>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.CheckNameAvailabilityResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.checkNameAvailability_1
    name: 'checkNameAvailability(string, ServiceCallback<CheckNameAvailabilityResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 저장소 계정 이름이 유효 하지 않은 사용에서 확인 합니다.
    syntax:
      content: 'function checkNameAvailability(name: string, callback: ServiceCallback<CheckNameAvailabilityResult>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.CheckNameAvailabilityResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.checkNameAvailabilityWithHttpOperationResponse
    name: 'checkNameAvailabilityWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 저장소 계정 이름이 유효 하지 않은 사용에서 확인 합니다.
    syntax:
      content: 'function checkNameAvailabilityWithHttpOperationResponse(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            저장소 계정 이름입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.CheckNameAvailabilityResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.create
    name: 'create(string, string, StorageAccountCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.
      계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: |
            만든된 계정에 대해 제공 하는 매개 변수입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.create_2
    name: 'create(string, string, StorageAccountCreateParameters, Object, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.
      계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.create_1
    name: 'create(string, string, StorageAccountCreateParameters, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.
      계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.createWithHttpOperationResponse
    name: 'createWithHttpOperationResponse(string, string, StorageAccountCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.
      계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
    syntax:
      content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: |
            만든된 계정에 대해 제공 하는 매개 변수입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Microsoft Azure에서 저장소 계정을 삭제합니다.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Microsoft Azure에서 저장소 계정을 삭제합니다.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Microsoft Azure에서 저장소 계정을 삭제합니다.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Microsoft Azure에서 저장소 계정을 삭제합니다.
    syntax:
      content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.failover
    name: 'failover(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 가용성 문제가 발생 한 경우 저장소 계정에 대 한 장애 조치 요청을 트리거할 수 있습니다. 장애 조치 RA-GRS 계정의 보조 클러스터에 저장소 계정의 기본 클러스터에서 발생합니다. 보조 클러스터 장애 조치 후 주 됩니다.
    syntax:
      content: 'function failover(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.failover_2
    name: 'failover(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 가용성 문제가 발생 한 경우 저장소 계정에 대 한 장애 조치 요청을 트리거할 수 있습니다. 장애 조치 RA-GRS 계정의 보조 클러스터에 저장소 계정의 기본 클러스터에서 발생합니다. 보조 클러스터 장애 조치 후 주 됩니다.
    syntax:
      content: 'function failover(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.failover_1
    name: 'failover(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 가용성 문제가 발생 한 경우 저장소 계정에 대 한 장애 조치 요청을 트리거할 수 있습니다. 장애 조치 RA-GRS 계정의 보조 클러스터에 저장소 계정의 기본 클러스터에서 발생합니다. 보조 클러스터 장애 조치 후 주 됩니다.
    syntax:
      content: 'function failover(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.failoverWithHttpOperationResponse
    name: 'failoverWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 가용성 문제가 발생 한 경우 저장소 계정에 대 한 장애 조치 요청을 트리거할 수 있습니다. 장애 조치 RA-GRS 계정의 보조 클러스터에 저장소 계정의 기본 클러스터에서 발생합니다. 보조 클러스터 장애 조치 후 주 됩니다.
    syntax:
      content: 'function failoverWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.getProperties
    name: 'getProperties(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 저장소 계정 이름, SKU 이름, 위치 및 계정 상태에 제한 되지 않음 포함에 대 한 속성을 반환 합니다. ListKeys 작업 저장소 키를 검색 하는 것 같습니다.'
    syntax:
      content: 'function getProperties(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.getProperties_2
    name: 'getProperties(string, string, Object, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 저장소 계정 이름, SKU 이름, 위치 및 계정 상태에 제한 되지 않음 포함에 대 한 속성을 반환 합니다. ListKeys 작업 저장소 키를 검색 하는 것 같습니다.'
    syntax:
      content: 'function getProperties(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.getProperties_1
    name: 'getProperties(string, string, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 저장소 계정 이름, SKU 이름, 위치 및 계정 상태에 제한 되지 않음 포함에 대 한 속성을 반환 합니다. ListKeys 작업 저장소 키를 검색 하는 것 같습니다.'
    syntax:
      content: 'function getProperties(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.getPropertiesWithHttpOperationResponse
    name: 'getPropertiesWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '지정된 된 저장소 계정 이름, SKU 이름, 위치 및 계정 상태에 제한 되지 않음 포함에 대 한 속성을 반환 합니다. ListKeys 작업 저장소 키를 검색 하는 것 같습니다.'
    syntax:
      content: 'function getPropertiesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: 구독에서 사용 가능한 모든 저장소 계정을 나열합니다. 이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.list_2
    name: 'list(Object, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 구독에서 사용 가능한 모든 저장소 계정을 나열합니다. 이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
    syntax:
      content: 'function list(options: Object, callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.list_1
    name: list(ServiceCallback<StorageAccountListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: 구독에서 사용 가능한 모든 저장소 계정을 나열합니다. 이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
    syntax:
      content: 'function list(callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listAccountSAS
    name: 'listAccountSAS(string, string, AccountSasParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 저장소 계정의 SAS 자격 증명을 나열 합니다.
    syntax:
      content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.AccountSasParameters
          description: |
            저장소 계정에 대 한 목록 SAS 자격 증명을 제공 하는 매개 변수입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ListAccountSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listAccountSAS_2
    name: 'listAccountSAS(string, string, AccountSasParameters, Object, ServiceCallback<ListAccountSasResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 저장소 계정의 SAS 자격 증명을 나열 합니다.
    syntax:
      content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options: Object, callback: ServiceCallback<ListAccountSasResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.AccountSasParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListAccountSasResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListAccountSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listAccountSAS_1
    name: 'listAccountSAS(string, string, AccountSasParameters, ServiceCallback<ListAccountSasResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 저장소 계정의 SAS 자격 증명을 나열 합니다.
    syntax:
      content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, callback: ServiceCallback<ListAccountSasResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.AccountSasParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListAccountSasResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListAccountSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listAccountSASWithHttpOperationResponse
    name: 'listAccountSASWithHttpOperationResponse(string, string, AccountSasParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 저장소 계정의 SAS 자격 증명을 나열 합니다.
    syntax:
      content: 'function listAccountSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.AccountSasParameters
          description: |
            저장소 계정에 대 한 목록 SAS 자격 증명을 제공 하는 매개 변수입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ListAccountSasResponse>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listByResourceGroup
    name: 'listByResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 리소스 그룹에서 사용 가능한 모든 저장소 계정을 나열합니다.
      이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listByResourceGroup_2
    name: 'listByResourceGroup(string, Object, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 리소스 그룹에서 사용 가능한 모든 저장소 계정을 나열합니다.
      이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: Object, callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listByResourceGroup_1
    name: 'listByResourceGroup(string, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 리소스 그룹에서 사용 가능한 모든 저장소 계정을 나열합니다.
      이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listByResourceGroupWithHttpOperationResponse
    name: 'listByResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정된 된 리소스 그룹에서 사용 가능한 모든 저장소 계정을 나열합니다.
      이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
    syntax:
      content: 'function listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listKeys
    name: 'listKeys(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 저장소 계정에 대 한 액세스 키를 나열합니다.
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listKeys_2
    name: 'listKeys(string, string, Object, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 저장소 계정에 대 한 액세스 키를 나열합니다.
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<StorageAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listKeys_1
    name: 'listKeys(string, string, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 저장소 계정에 대 한 액세스 키를 나열합니다.
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listKeysWithHttpOperationResponse
    name: 'listKeysWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 저장소 계정에 대 한 액세스 키를 나열합니다.
    syntax:
      content: 'function listKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listServiceSAS
    name: 'listServiceSAS(string, string, ServiceSasParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 특정 리소스의 서비스 SAS 자격 증명을 나열 합니다.
    syntax:
      content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.ServiceSasParameters
          description: |
            매개 변수를 목록 서비스 SAS 자격 증명을 제공 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ListServiceSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listServiceSAS_2
    name: 'listServiceSAS(string, string, ServiceSasParameters, Object, ServiceCallback<ListServiceSasResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 특정 리소스의 서비스 SAS 자격 증명을 나열 합니다.
    syntax:
      content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options: Object, callback: ServiceCallback<ListServiceSasResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.ServiceSasParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListServiceSasResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListServiceSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listServiceSAS_1
    name: 'listServiceSAS(string, string, ServiceSasParameters, ServiceCallback<ListServiceSasResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 특정 리소스의 서비스 SAS 자격 증명을 나열 합니다.
    syntax:
      content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, callback: ServiceCallback<ListServiceSasResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.ServiceSasParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListServiceSasResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListServiceSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listServiceSASWithHttpOperationResponse
    name: 'listServiceSASWithHttpOperationResponse(string, string, ServiceSasParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 특정 리소스의 서비스 SAS 자격 증명을 나열 합니다.
    syntax:
      content: 'function listServiceSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.ServiceSasParameters
          description: |
            매개 변수를 목록 서비스 SAS 자격 증명을 제공 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ListServiceSasResponse>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: 구독에서 사용 가능한 모든 저장소 계정을 나열합니다. 이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.regenerateKey
    name: 'regenerateKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 저장소 계정에 대 한 액세스 키 중 하나를 다시 생성합니다.
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: keyName
          type:
            - string
          description: |
            가능한 값이 다시 생성된 하려면 저장소 키의 이름을 (key1, key2 됩니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.regenerateKey_2
    name: 'regenerateKey(string, string, string, Object, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 저장소 계정에 대 한 액세스 키 중 하나를 다시 생성합니다.
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options: Object, callback: ServiceCallback<StorageAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.regenerateKey_1
    name: 'regenerateKey(string, string, string, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 저장소 계정에 대 한 액세스 키 중 하나를 다시 생성합니다.
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, callback: ServiceCallback<StorageAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.regenerateKeyWithHttpOperationResponse
    name: 'regenerateKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정된 된 저장소 계정에 대 한 액세스 키 중 하나를 다시 생성합니다.
    syntax:
      content: 'function regenerateKeyWithHttpOperationResponse(resourceGroupName: string, accountName: string, keyName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: keyName
          type:
            - string
          description: |
            가능한 값이 다시 생성된 하려면 저장소 키의 이름을 (key1, key2 됩니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.revokeUserDelegationKeys
    name: 'revokeUserDelegationKeys(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 사용자 위임 키를 취소 합니다.
    syntax:
      content: 'function revokeUserDelegationKeys(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.revokeUserDelegationKeys_2
    name: 'revokeUserDelegationKeys(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 사용자 위임 키를 취소 합니다.
    syntax:
      content: 'function revokeUserDelegationKeys(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.revokeUserDelegationKeys_1
    name: 'revokeUserDelegationKeys(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 사용자 위임 키를 취소 합니다.
    syntax:
      content: 'function revokeUserDelegationKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.revokeUserDelegationKeysWithHttpOperationResponse
    name: 'revokeUserDelegationKeysWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 사용자 위임 키를 취소 합니다.
    syntax:
      content: 'function revokeUserDelegationKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.update
    name: 'update(string, string, StorageAccountUpdateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'SKU, 암호화, 액세스 계층 또는 저장소 계정에 대 한 태그를 업데이트 하려면 업데이트 작업을 사용할 수 있습니다. 사용자 지정 도메인을 계정에 매핑할 데도 수 있습니다. 저장소 계정 당 하나의 사용자 지정 도메인만 지원 됩니다. 사용자 지정 도메인의 대체/변경이 지원 되지 않습니다. 이전 사용자 지정 도메인을 바꾸기 위해 이전 값 수 있어야 선택 취소 하 고 등록을 새 값을 설정할 수 있습니다. 여러 속성의 업데이트를 사용할 수 있습니다. 이 호출은 계정의 저장소 키를 변경 하지 않습니다. 저장소 계정 키를 변경 하려는 경우 작업을 다시 생성 키를 사용 합니다. 저장소 계정의 이름과 위치를 만든 후 변경할 수 없습니다.'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountUpdateParameters
          description: |
            업데이트 된 계정에 대해 제공 하는 매개 변수입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.update_2
    name: 'update(string, string, StorageAccountUpdateParameters, Object, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'SKU, 암호화, 액세스 계층 또는 저장소 계정에 대 한 태그를 업데이트 하려면 업데이트 작업을 사용할 수 있습니다. 사용자 지정 도메인을 계정에 매핑할 데도 수 있습니다. 저장소 계정 당 하나의 사용자 지정 도메인만 지원 됩니다. 사용자 지정 도메인의 대체/변경이 지원 되지 않습니다. 이전 사용자 지정 도메인을 바꾸기 위해 이전 값 수 있어야 선택 취소 하 고 등록을 새 값을 설정할 수 있습니다. 여러 속성의 업데이트를 사용할 수 있습니다. 이 호출은 계정의 저장소 키를 변경 하지 않습니다. 저장소 계정 키를 변경 하려는 경우 작업을 다시 생성 키를 사용 합니다. 저장소 계정의 이름과 위치를 만든 후 변경할 수 없습니다.'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountUpdateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.update_1
    name: 'update(string, string, StorageAccountUpdateParameters, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'SKU, 암호화, 액세스 계층 또는 저장소 계정에 대 한 태그를 업데이트 하려면 업데이트 작업을 사용할 수 있습니다. 사용자 지정 도메인을 계정에 매핑할 데도 수 있습니다. 저장소 계정 당 하나의 사용자 지정 도메인만 지원 됩니다. 사용자 지정 도메인의 대체/변경이 지원 되지 않습니다. 이전 사용자 지정 도메인을 바꾸기 위해 이전 값 수 있어야 선택 취소 하 고 등록을 새 값을 설정할 수 있습니다. 여러 속성의 업데이트를 사용할 수 있습니다. 이 호출은 계정의 저장소 키를 변경 하지 않습니다. 저장소 계정 키를 변경 하려는 경우 작업을 다시 생성 키를 사용 합니다. 저장소 계정의 이름과 위치를 만든 후 변경할 수 없습니다.'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.updateWithHttpOperationResponse
    name: 'updateWithHttpOperationResponse(string, string, StorageAccountUpdateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'SKU, 암호화, 액세스 계층 또는 저장소 계정에 대 한 태그를 업데이트 하려면 업데이트 작업을 사용할 수 있습니다. 사용자 지정 도메인을 계정에 매핑할 데도 수 있습니다. 저장소 계정 당 하나의 사용자 지정 도메인만 지원 됩니다. 사용자 지정 도메인의 대체/변경이 지원 되지 않습니다. 이전 사용자 지정 도메인을 바꾸기 위해 이전 값 수 있어야 선택 취소 하 고 등록을 새 값을 설정할 수 있습니다. 여러 속성의 업데이트를 사용할 수 있습니다. 이 호출은 계정의 저장소 키를 변경 하지 않습니다. 저장소 계정 키를 변경 하려는 경우 작업을 다시 생성 키를 사용 합니다. 저장소 계정의 이름과 위치를 만든 후 변경할 수 없습니다.'
    syntax:
      content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
        - id: accountName
          type:
            - string
          description: |
            지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountUpdateParameters
          description: |
            업데이트 된 계정에 대해 제공 하는 매개 변수입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    package: azure-arm-storage
references:
  - uid: azure-arm-storage.StorageAccountCreateParameters
    name: StorageAccountCreateParameters
    spec.typeScript:
      - name: StorageAccountCreateParameters
        fullName: StorageAccountCreateParameters
        uid: azure-arm-storage.StorageAccountCreateParameters
  - uid: Promise<azure-arm-storage.StorageAccount>
    name: StorageAccount>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageAccount
        fullName: StorageAccount
        uid: azure-arm-storage.StorageAccount
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.StorageAccount>
    name: StorageAccount>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccount
        fullName: StorageAccount
        uid: azure-arm-storage.StorageAccount
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    name: StorageAccount>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageAccount
        fullName: StorageAccount
        uid: azure-arm-storage.StorageAccount
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-storage.CheckNameAvailabilityResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-storage.CheckNameAvailabilityResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.CheckNameAvailabilityResult>>
    name: CheckNameAvailabilityResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-storage.CheckNameAvailabilityResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.StorageAccountListResult>
    name: StorageAccountListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageAccountListResult
        fullName: StorageAccountListResult
        uid: azure-arm-storage.StorageAccountListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.StorageAccountListResult>
    name: StorageAccountListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccountListResult
        fullName: StorageAccountListResult
        uid: azure-arm-storage.StorageAccountListResult
      - name: '>'
        fullName: '>'
  - uid: azure-arm-storage.AccountSasParameters
    name: AccountSasParameters
    spec.typeScript:
      - name: AccountSasParameters
        fullName: AccountSasParameters
        uid: azure-arm-storage.AccountSasParameters
  - uid: Promise<azure-arm-storage.ListAccountSasResponse>
    name: ListAccountSasResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListAccountSasResponse
        fullName: ListAccountSasResponse
        uid: azure-arm-storage.ListAccountSasResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.ListAccountSasResponse>
    name: ListAccountSasResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListAccountSasResponse
        fullName: ListAccountSasResponse
        uid: azure-arm-storage.ListAccountSasResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.ListAccountSasResponse>>
    name: ListAccountSasResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListAccountSasResponse
        fullName: ListAccountSasResponse
        uid: azure-arm-storage.ListAccountSasResponse
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
    name: StorageAccountListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageAccountListResult
        fullName: StorageAccountListResult
        uid: azure-arm-storage.StorageAccountListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.StorageAccountListKeysResult>
    name: StorageAccountListKeysResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageAccountListKeysResult
        fullName: StorageAccountListKeysResult
        uid: azure-arm-storage.StorageAccountListKeysResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
    name: StorageAccountListKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccountListKeysResult
        fullName: StorageAccountListKeysResult
        uid: azure-arm-storage.StorageAccountListKeysResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
    name: StorageAccountListKeysResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageAccountListKeysResult
        fullName: StorageAccountListKeysResult
        uid: azure-arm-storage.StorageAccountListKeysResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-storage.ServiceSasParameters
    name: ServiceSasParameters
    spec.typeScript:
      - name: ServiceSasParameters
        fullName: ServiceSasParameters
        uid: azure-arm-storage.ServiceSasParameters
  - uid: Promise<azure-arm-storage.ListServiceSasResponse>
    name: ListServiceSasResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListServiceSasResponse
        fullName: ListServiceSasResponse
        uid: azure-arm-storage.ListServiceSasResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.ListServiceSasResponse>
    name: ListServiceSasResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListServiceSasResponse
        fullName: ListServiceSasResponse
        uid: azure-arm-storage.ListServiceSasResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.ListServiceSasResponse>>
    name: ListServiceSasResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListServiceSasResponse
        fullName: ListServiceSasResponse
        uid: azure-arm-storage.ListServiceSasResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-storage.StorageAccountUpdateParameters
    name: StorageAccountUpdateParameters
    spec.typeScript:
      - name: StorageAccountUpdateParameters
        fullName: StorageAccountUpdateParameters
        uid: azure-arm-storage.StorageAccountUpdateParameters