### YamlMime:UniversalReference
ms.openlocfilehash: 937d978c38f15492d7555089842122a22c9cc663
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40070182"
items:
- uid: azure-arm-storage.StorageAccounts
  name: StorageAccounts
  fullName: StorageAccounts
  children:
  - azure-arm-storage.StorageAccounts.beginCreate
  - azure-arm-storage.StorageAccounts.beginCreate_1
  - azure-arm-storage.StorageAccounts.beginCreate_2
  - azure-arm-storage.StorageAccounts.beginCreateWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.checkNameAvailability
  - azure-arm-storage.StorageAccounts.checkNameAvailability_1
  - azure-arm-storage.StorageAccounts.checkNameAvailability_2
  - azure-arm-storage.StorageAccounts.checkNameAvailabilityWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.create_1
  - azure-arm-storage.StorageAccounts.create_2
  - azure-arm-storage.StorageAccounts.create
  - azure-arm-storage.StorageAccounts.createOrUpdateManagementPolicies_1
  - azure-arm-storage.StorageAccounts.createOrUpdateManagementPolicies_2
  - azure-arm-storage.StorageAccounts.createOrUpdateManagementPolicies
  - azure-arm-storage.StorageAccounts.createOrUpdateManagementPoliciesWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.createWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.deleteManagementPolicies_1
  - azure-arm-storage.StorageAccounts.deleteManagementPolicies
  - azure-arm-storage.StorageAccounts.deleteManagementPolicies_2
  - azure-arm-storage.StorageAccounts.deleteManagementPoliciesWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.deleteMethod
  - azure-arm-storage.StorageAccounts.deleteMethod_1
  - azure-arm-storage.StorageAccounts.deleteMethod_2
  - azure-arm-storage.StorageAccounts.deleteMethodWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.getManagementPolicies
  - azure-arm-storage.StorageAccounts.getManagementPolicies_1
  - azure-arm-storage.StorageAccounts.getManagementPolicies_2
  - azure-arm-storage.StorageAccounts.getManagementPoliciesWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.getProperties
  - azure-arm-storage.StorageAccounts.getProperties_1
  - azure-arm-storage.StorageAccounts.getProperties_2
  - azure-arm-storage.StorageAccounts.getPropertiesWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.list
  - azure-arm-storage.StorageAccounts.list_2
  - azure-arm-storage.StorageAccounts.list_1
  - azure-arm-storage.StorageAccounts.listAccountSAS_1
  - azure-arm-storage.StorageAccounts.listAccountSAS_2
  - azure-arm-storage.StorageAccounts.listAccountSAS
  - azure-arm-storage.StorageAccounts.listAccountSASWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.listByResourceGroup
  - azure-arm-storage.StorageAccounts.listByResourceGroup_1
  - azure-arm-storage.StorageAccounts.listByResourceGroup_2
  - azure-arm-storage.StorageAccounts.listByResourceGroupWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.listKeys
  - azure-arm-storage.StorageAccounts.listKeys_1
  - azure-arm-storage.StorageAccounts.listKeys_2
  - azure-arm-storage.StorageAccounts.listKeysWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.listServiceSAS_1
  - azure-arm-storage.StorageAccounts.listServiceSAS_2
  - azure-arm-storage.StorageAccounts.listServiceSAS
  - azure-arm-storage.StorageAccounts.listServiceSASWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.listWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.regenerateKey
  - azure-arm-storage.StorageAccounts.regenerateKey_1
  - azure-arm-storage.StorageAccounts.regenerateKey_2
  - azure-arm-storage.StorageAccounts.regenerateKeyWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.update
  - azure-arm-storage.StorageAccounts.update_1
  - azure-arm-storage.StorageAccounts.update_2
  - azure-arm-storage.StorageAccounts.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginCreate
  name: beginCreate
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.

    계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: >
        만든된 계정에 대해 제공 하는 매개 변수입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginCreate_1
  name: beginCreate
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.

    계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginCreate_2
  name: beginCreate
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.

    계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options: function, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginCreateWithHttpOperationResponse
  name: beginCreateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.

    계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
  syntax:
    content: 'function beginCreateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: >
        만든된 계정에 대해 제공 하는 매개 변수입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.checkNameAvailability
  name: checkNameAvailability
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정 이름이 유효 하지 않은 사용에서 확인 합니다.
  syntax:
    content: 'function checkNameAvailability(name: string, options?: function)'
    parameters:
    - id: name
      type:
      - string
      description: >
        저장소 계정 이름입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.CheckNameAvailabilityResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.checkNameAvailability_1
  name: checkNameAvailability
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정 이름이 유효 하지 않은 사용에서 확인 합니다.
  syntax:
    content: 'function checkNameAvailability(name: string, callback: ServiceCallback<CheckNameAvailabilityResult>)'
    parameters:
    - id: name
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.CheckNameAvailabilityResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.checkNameAvailability_2
  name: checkNameAvailability
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정 이름이 유효 하지 않은 사용에서 확인 합니다.
  syntax:
    content: 'function checkNameAvailability(name: string, options: function, callback: ServiceCallback<CheckNameAvailabilityResult>)'
    parameters:
    - id: name
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.CheckNameAvailabilityResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.checkNameAvailabilityWithHttpOperationResponse
  name: checkNameAvailabilityWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정 이름이 유효 하지 않은 사용에서 확인 합니다.
  syntax:
    content: 'function checkNameAvailabilityWithHttpOperationResponse(name: string, options?: function)'
    parameters:
    - id: name
      type:
      - string
      description: >
        저장소 계정 이름입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.CheckNameAvailabilityResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.

    계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.

    계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options: function, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.

    계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: >
        만든된 계정에 대해 제공 하는 매개 변수입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.createOrUpdateManagementPolicies_1
  name: createOrUpdateManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 설정 합니다.
  syntax:
    content: 'function createOrUpdateManagementPolicies(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccountManagementPolicies>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountManagementPolicies>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountManagementPolicies>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.createOrUpdateManagementPolicies_2
  name: createOrUpdateManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 설정 합니다.
  syntax:
    content: 'function createOrUpdateManagementPolicies(resourceGroupName: string, accountName: string, options: function, callback: ServiceCallback<StorageAccountManagementPolicies>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountManagementPolicies>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountManagementPolicies>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.createOrUpdateManagementPolicies
  name: createOrUpdateManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 설정 합니다.
  syntax:
    content: 'function createOrUpdateManagementPolicies(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountManagementPolicies>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.createOrUpdateManagementPoliciesWithHttpOperationResponse
  name: createOrUpdateManagementPoliciesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 설정 합니다.
  syntax:
    content: 'function createOrUpdateManagementPoliciesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountManagementPolicies>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 매개 변수를 사용 하 여 새 저장소 계정을 비동기식으로 만듭니다.

    계정을 이미 만든 경우 서로 다른 속성을 사용 하 여 후속 만들기 요청이 실행 되는 계정 속성 업데이트 됩니다. 계정이 이미 생성 하 고 속성의 정확히 동일한 집합을 사용 하 여 후속 만들기 또는 업데이트 요청을 발생 하는 경우 요청이 성공할 수 있습니다.
  syntax:
    content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: >
        만든된 계정에 대해 제공 하는 매개 변수입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteManagementPolicies_1
  name: deleteManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 삭제 합니다.
  syntax:
    content: 'function deleteManagementPolicies(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteManagementPolicies
  name: deleteManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 삭제 합니다.
  syntax:
    content: 'function deleteManagementPolicies(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteManagementPolicies_2
  name: deleteManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 삭제 합니다.
  syntax:
    content: 'function deleteManagementPolicies(resourceGroupName: string, accountName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteManagementPoliciesWithHttpOperationResponse
  name: deleteManagementPoliciesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 삭제 합니다.
  syntax:
    content: 'function deleteManagementPoliciesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Microsoft Azure에서 저장소 계정을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Microsoft Azure에서 저장소 계정을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Microsoft Azure에서 저장소 계정을 삭제합니다.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Microsoft Azure에서 저장소 계정을 삭제합니다.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getManagementPolicies
  name: getManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 가져옵니다.
  syntax:
    content: 'function getManagementPolicies(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountManagementPolicies>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getManagementPolicies_1
  name: getManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 가져옵니다.
  syntax:
    content: 'function getManagementPolicies(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccountManagementPolicies>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountManagementPolicies>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountManagementPolicies>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getManagementPolicies_2
  name: getManagementPolicies
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 가져옵니다.
  syntax:
    content: 'function getManagementPolicies(resourceGroupName: string, accountName: string, options: function, callback: ServiceCallback<StorageAccountManagementPolicies>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountManagementPolicies>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountManagementPolicies>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getManagementPoliciesWithHttpOperationResponse
  name: getManagementPoliciesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정 된 저장소 계정에 연결 된 데이터 정책 규칙을 가져옵니다.
  syntax:
    content: 'function getManagementPoliciesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountManagementPolicies>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getProperties
  name: getProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정 이름, SKU 이름, 위치 및 계정 상태에 제한 되지 않음 포함에 대 한 속성을 반환 합니다. ListKeys 작업 저장소 키를 검색 하는 것 같습니다.
  syntax:
    content: 'function getProperties(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getProperties_1
  name: getProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정 이름, SKU 이름, 위치 및 계정 상태에 제한 되지 않음 포함에 대 한 속성을 반환 합니다. ListKeys 작업 저장소 키를 검색 하는 것 같습니다.
  syntax:
    content: 'function getProperties(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getProperties_2
  name: getProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정 이름, SKU 이름, 위치 및 계정 상태에 제한 되지 않음 포함에 대 한 속성을 반환 합니다. ListKeys 작업 저장소 키를 검색 하는 것 같습니다.
  syntax:
    content: 'function getProperties(resourceGroupName: string, accountName: string, options: function, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getPropertiesWithHttpOperationResponse
  name: getPropertiesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정 이름, SKU 이름, 위치 및 계정 상태에 제한 되지 않음 포함에 대 한 속성을 반환 합니다. ListKeys 작업 저장소 키를 검색 하는 것 같습니다.
  syntax:
    content: 'function getPropertiesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독에서 사용 가능한 모든 저장소 계정을 나열합니다. 이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
  syntax:
    content: 'function list(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독에서 사용 가능한 모든 저장소 계정을 나열합니다. 이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
  syntax:
    content: 'function list(options: function, callback: ServiceCallback<StorageAccountListResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독에서 사용 가능한 모든 저장소 계정을 나열합니다. 이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
  syntax:
    content: 'function list(callback: ServiceCallback<StorageAccountListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listAccountSAS_1
  name: listAccountSAS
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 SAS 자격 증명을 나열 합니다.
  syntax:
    content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, callback: ServiceCallback<ListAccountSasResponse>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.AccountSasParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListAccountSasResponse>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListAccountSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listAccountSAS_2
  name: listAccountSAS
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 SAS 자격 증명을 나열 합니다.
  syntax:
    content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options: function, callback: ServiceCallback<ListAccountSasResponse>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.AccountSasParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListAccountSasResponse>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListAccountSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listAccountSAS
  name: listAccountSAS
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 SAS 자격 증명을 나열 합니다.
  syntax:
    content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.AccountSasParameters
      description: >
        저장소 계정에 대 한 목록 SAS 자격 증명을 제공 하는 매개 변수입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListAccountSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listAccountSASWithHttpOperationResponse
  name: listAccountSASWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 저장소 계정의 SAS 자격 증명을 나열 합니다.
  syntax:
    content: 'function listAccountSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.AccountSasParameters
      description: >
        저장소 계정에 대 한 목록 SAS 자격 증명을 제공 하는 매개 변수입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListAccountSasResponse>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listByResourceGroup
  name: listByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 리소스 그룹에서 사용 가능한 모든 저장소 계정을 나열합니다.

    이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listByResourceGroup_1
  name: listByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 리소스 그룹에서 사용 가능한 모든 저장소 계정을 나열합니다.

    이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<StorageAccountListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listByResourceGroup_2
  name: listByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 리소스 그룹에서 사용 가능한 모든 저장소 계정을 나열합니다.

    이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, options: function, callback: ServiceCallback<StorageAccountListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listByResourceGroupWithHttpOperationResponse
  name: listByResourceGroupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    지정된 된 리소스 그룹에서 사용 가능한 모든 저장소 계정을 나열합니다.

    이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
  syntax:
    content: 'function listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listKeys
  name: listKeys
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정에 대 한 액세스 키를 나열합니다.
  syntax:
    content: 'function listKeys(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listKeys_1
  name: listKeys
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정에 대 한 액세스 키를 나열합니다.
  syntax:
    content: 'function listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccountListKeysResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listKeys_2
  name: listKeys
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정에 대 한 액세스 키를 나열합니다.
  syntax:
    content: 'function listKeys(resourceGroupName: string, accountName: string, options: function, callback: ServiceCallback<StorageAccountListKeysResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listKeysWithHttpOperationResponse
  name: listKeysWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정에 대 한 액세스 키를 나열합니다.
  syntax:
    content: 'function listKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listServiceSAS_1
  name: listServiceSAS
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스의 서비스 SAS 자격 증명을 나열 합니다.
  syntax:
    content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, callback: ServiceCallback<ListServiceSasResponse>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.ServiceSasParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListServiceSasResponse>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListServiceSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listServiceSAS_2
  name: listServiceSAS
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스의 서비스 SAS 자격 증명을 나열 합니다.
  syntax:
    content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options: function, callback: ServiceCallback<ListServiceSasResponse>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.ServiceSasParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListServiceSasResponse>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListServiceSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listServiceSAS
  name: listServiceSAS
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스의 서비스 SAS 자격 증명을 나열 합니다.
  syntax:
    content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.ServiceSasParameters
      description: >
        매개 변수를 목록 서비스 SAS 자격 증명을 제공 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListServiceSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listServiceSASWithHttpOperationResponse
  name: listServiceSASWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 특정 리소스의 서비스 SAS 자격 증명을 나열 합니다.
  syntax:
    content: 'function listServiceSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.ServiceSasParameters
      description: >
        매개 변수를 목록 서비스 SAS 자격 증명을 제공 합니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListServiceSasResponse>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 구독에서 사용 가능한 모든 저장소 계정을 나열합니다. 이때 저장소 키는 반환 되지 않습니다. 이 대 한 ListKeys 작업을 사용 합니다.
  syntax:
    content: 'function listWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.regenerateKey
  name: regenerateKey
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정에 대 한 액세스 키 중 하나를 다시 생성합니다.
  syntax:
    content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: keyName
      type:
      - string
      description: >
        저장소 키 다시 생성, 가능한 vaules 되도록 원하는 이름을 (key1, key2 됩니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.regenerateKey_1
  name: regenerateKey
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정에 대 한 액세스 키 중 하나를 다시 생성합니다.
  syntax:
    content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, callback: ServiceCallback<StorageAccountListKeysResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.regenerateKey_2
  name: regenerateKey
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정에 대 한 액세스 키 중 하나를 다시 생성합니다.
  syntax:
    content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options: function, callback: ServiceCallback<StorageAccountListKeysResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.regenerateKeyWithHttpOperationResponse
  name: regenerateKeyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 지정된 된 저장소 계정에 대 한 액세스 키 중 하나를 다시 생성합니다.
  syntax:
    content: 'function regenerateKeyWithHttpOperationResponse(resourceGroupName: string, accountName: string, keyName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: keyName
      type:
      - string
      description: >
        저장소 키 다시 생성, 가능한 vaules 되도록 원하는 이름을 (key1, key2 됩니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: SKU, 암호화, 액세스 계층 또는 저장소 계정에 대 한 태그를 업데이트 하려면 업데이트 작업을 사용할 수 있습니다. 사용자 지정 도메인을 계정에 매핑할 데도 수 있습니다. 저장소 계정 당 하나의 사용자 지정 도메인만 지원 됩니다. 사용자 지정 도메인의 대체/변경이 지원 되지 않습니다. 이전 사용자 지정 도메인을 바꾸기 위해 이전 값 수 있어야 선택 취소 하 고 등록을 새 값을 설정할 수 있습니다. 여러 속성의 업데이트를 사용할 수 있습니다. 이 호출은 계정의 저장소 키를 변경 하지 않습니다. 저장소 계정 키를 변경 하려는 경우 작업을 다시 생성 키를 사용 합니다. 저장소 계정의 이름과 위치를 만든 후 변경할 수 없습니다.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountUpdateParameters
      description: >
        업데이트 된 계정에 대해 제공 하는 매개 변수입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: SKU, 암호화, 액세스 계층 또는 저장소 계정에 대 한 태그를 업데이트 하려면 업데이트 작업을 사용할 수 있습니다. 사용자 지정 도메인을 계정에 매핑할 데도 수 있습니다. 저장소 계정 당 하나의 사용자 지정 도메인만 지원 됩니다. 사용자 지정 도메인의 대체/변경이 지원 되지 않습니다. 이전 사용자 지정 도메인을 바꾸기 위해 이전 값 수 있어야 선택 취소 하 고 등록을 새 값을 설정할 수 있습니다. 여러 속성의 업데이트를 사용할 수 있습니다. 이 호출은 계정의 저장소 키를 변경 하지 않습니다. 저장소 계정 키를 변경 하려는 경우 작업을 다시 생성 키를 사용 합니다. 저장소 계정의 이름과 위치를 만든 후 변경할 수 없습니다.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: SKU, 암호화, 액세스 계층 또는 저장소 계정에 대 한 태그를 업데이트 하려면 업데이트 작업을 사용할 수 있습니다. 사용자 지정 도메인을 계정에 매핑할 데도 수 있습니다. 저장소 계정 당 하나의 사용자 지정 도메인만 지원 됩니다. 사용자 지정 도메인의 대체/변경이 지원 되지 않습니다. 이전 사용자 지정 도메인을 바꾸기 위해 이전 값 수 있어야 선택 취소 하 고 등록을 새 값을 설정할 수 있습니다. 여러 속성의 업데이트를 사용할 수 있습니다. 이 호출은 계정의 저장소 키를 변경 하지 않습니다. 저장소 계정 키를 변경 하려는 경우 작업을 다시 생성 키를 사용 합니다. 저장소 계정의 이름과 위치를 만든 후 변경할 수 없습니다.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options: function, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountUpdateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: SKU, 암호화, 액세스 계층 또는 저장소 계정에 대 한 태그를 업데이트 하려면 업데이트 작업을 사용할 수 있습니다. 사용자 지정 도메인을 계정에 매핑할 데도 수 있습니다. 저장소 계정 당 하나의 사용자 지정 도메인만 지원 됩니다. 사용자 지정 도메인의 대체/변경이 지원 되지 않습니다. 이전 사용자 지정 도메인을 바꾸기 위해 이전 값 수 있어야 선택 취소 하 고 등록을 새 값을 설정할 수 있습니다. 여러 속성의 업데이트를 사용할 수 있습니다. 이 호출은 계정의 저장소 키를 변경 하지 않습니다. 저장소 계정 키를 변경 하려는 경우 작업을 다시 생성 키를 사용 합니다. 저장소 계정의 이름과 위치를 만든 후 변경할 수 없습니다.
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        사용자 구독 내의 리소스 그룹의 이름입니다. 이름은 대/소문자 구분입니다.
    - id: accountName
      type:
      - string
      description: >
        지정된 된 리소스 그룹 내에서 저장소 계정의 이름입니다. Storage 계정 이름은 3자에서 24자 사이여야 하고 숫자 및 소문자만 사용해야 합니다.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountUpdateParameters
      description: >
        업데이트 된 계정에 대해 제공 하는 매개 변수입니다.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  package: azure-arm-storage
references:
- uid: azure-arm-storage.StorageAccountCreateParameters
  spec.typeScript:
  - name: StorageAccountCreateParameters
    fullName: StorageAccountCreateParameters
    uid: azure-arm-storage.StorageAccountCreateParameters
- uid: Promise<azure-arm-storage.StorageAccount>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageAccount
    fullName: StorageAccount
    uid: azure-arm-storage.StorageAccount
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.StorageAccount>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageAccount
    fullName: StorageAccount
    uid: azure-arm-storage.StorageAccount
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageAccount
    fullName: StorageAccount
    uid: azure-arm-storage.StorageAccount
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.CheckNameAvailabilityResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckNameAvailabilityResult
    fullName: CheckNameAvailabilityResult
    uid: azure-arm-storage.CheckNameAvailabilityResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CheckNameAvailabilityResult
    fullName: CheckNameAvailabilityResult
    uid: azure-arm-storage.CheckNameAvailabilityResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.CheckNameAvailabilityResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CheckNameAvailabilityResult
    fullName: CheckNameAvailabilityResult
    uid: azure-arm-storage.CheckNameAvailabilityResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.StorageAccountManagementPolicies>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageAccountManagementPolicies
    fullName: StorageAccountManagementPolicies
    uid: azure-arm-storage.StorageAccountManagementPolicies
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.StorageAccountManagementPolicies>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageAccountManagementPolicies
    fullName: StorageAccountManagementPolicies
    uid: azure-arm-storage.StorageAccountManagementPolicies
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountManagementPolicies>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageAccountManagementPolicies
    fullName: StorageAccountManagementPolicies
    uid: azure-arm-storage.StorageAccountManagementPolicies
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.StorageAccountListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageAccountListResult
    fullName: StorageAccountListResult
    uid: azure-arm-storage.StorageAccountListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.StorageAccountListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageAccountListResult
    fullName: StorageAccountListResult
    uid: azure-arm-storage.StorageAccountListResult
  - name: '>'
    fullName: '>'
- uid: azure-arm-storage.AccountSasParameters
  spec.typeScript:
  - name: AccountSasParameters
    fullName: AccountSasParameters
    uid: azure-arm-storage.AccountSasParameters
- uid: Promise<azure-arm-storage.ListAccountSasResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListAccountSasResponse
    fullName: ListAccountSasResponse
    uid: azure-arm-storage.ListAccountSasResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListAccountSasResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListAccountSasResponse
    fullName: ListAccountSasResponse
    uid: azure-arm-storage.ListAccountSasResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListAccountSasResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListAccountSasResponse
    fullName: ListAccountSasResponse
    uid: azure-arm-storage.ListAccountSasResponse
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageAccountListResult
    fullName: StorageAccountListResult
    uid: azure-arm-storage.StorageAccountListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.StorageAccountListKeysResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageAccountListKeysResult
    fullName: StorageAccountListKeysResult
    uid: azure-arm-storage.StorageAccountListKeysResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageAccountListKeysResult
    fullName: StorageAccountListKeysResult
    uid: azure-arm-storage.StorageAccountListKeysResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageAccountListKeysResult
    fullName: StorageAccountListKeysResult
    uid: azure-arm-storage.StorageAccountListKeysResult
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-storage.ServiceSasParameters
  spec.typeScript:
  - name: ServiceSasParameters
    fullName: ServiceSasParameters
    uid: azure-arm-storage.ServiceSasParameters
- uid: Promise<azure-arm-storage.ListServiceSasResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListServiceSasResponse
    fullName: ListServiceSasResponse
    uid: azure-arm-storage.ListServiceSasResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListServiceSasResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListServiceSasResponse
    fullName: ListServiceSasResponse
    uid: azure-arm-storage.ListServiceSasResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListServiceSasResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListServiceSasResponse
    fullName: ListServiceSasResponse
    uid: azure-arm-storage.ListServiceSasResponse
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-storage.StorageAccountUpdateParameters
  spec.typeScript:
  - name: StorageAccountUpdateParameters
    fullName: StorageAccountUpdateParameters
    uid: azure-arm-storage.StorageAccountUpdateParameters
