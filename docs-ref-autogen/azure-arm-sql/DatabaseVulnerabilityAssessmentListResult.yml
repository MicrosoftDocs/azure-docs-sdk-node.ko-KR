### YamlMime:UniversalReference
items:
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult
    name: DatabaseVulnerabilityAssessmentListResult
    fullName: DatabaseVulnerabilityAssessmentListResult
    children:
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.Array
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.concat
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.concat_1
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.every
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.filter_1
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.filter
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.forEach
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.indexOf
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.join
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.lastIndexOf
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.length
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.map
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.nextLink
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.pop
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.push
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduce
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduce_1
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduce_2
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduceRight
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduceRight_1
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduceRight_2
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reverse
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.shift
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.slice
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.some
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.sort
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.splice
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.splice_1
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.toLocaleString
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.toString
      - azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.unshift
    langs:
      - typeScript
    type: interface
    summary: 목록에서 데이터베이스의 취약성 평가입니다.
    extends:
      name: Array<azure-arm-sql.DatabaseVulnerabilityAssessment>
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.concat
    name: 'concat(ConcatArray<DatabaseVulnerabilityAssessment>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 두 개 이상의 배열을 결합합니다.
    syntax:
      content: 'function concat(items: ConcatArray<DatabaseVulnerabilityAssessment>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-sql.DatabaseVulnerabilityAssessment>[]'
          description: |
            Array1의 끝에 추가할 추가 항목입니다.
      return:
        type:
          - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 두 개 이상의 배열을 결합합니다.
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            Array1의 끝에 추가할 추가 항목입니다.
      return:
        type:
          - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.every
    name: 'every((value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 모든 구성원은 지정 된 테스트를 만족 하는지 여부를 결정 합니다.
    syntax:
      content: 'function every(callbackfn: (value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. 모든 메서드는 배열의 끝까지 또는 callbackfn를 false로 반환 될 때까지 array1에서 각 요소에 대 한 callbackfn 함수를 호출 합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.filter_1
    name: 'filter((value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 콜백 함수에 지정 된 조건을 충족 하는 배열의 요소를 반환 합니다.
    syntax:
      content: 'function filter(callbackfn: (value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => any'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. 필터 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.filter
    name: 'filter((value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 콜백 함수에 지정 된 조건을 충족 하는 배열의 요소를 반환 합니다.
    syntax:
      content: 'function filter<S>(callbackfn: (value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. 필터 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.forEach
    name: 'forEach((value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 각 요소에 대해 지정된 된 작업을 수행합니다.
    syntax:
      content: 'function forEach(callbackfn: (value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => void'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. forEach 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.indexOf
    name: 'indexOf(DatabaseVulnerabilityAssessment, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 맨 처음 발견 되는 값의 인덱스를 반환 합니다.
    syntax:
      content: 'function indexOf(searchElement: DatabaseVulnerabilityAssessment, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-sql.DatabaseVulnerabilityAssessment
          description: 배열에서 찾을 값입니다.
        - id: fromIndex
          type:
            - number
          description: |
            검색을 시작 하는 배열 인덱스입니다. FromIndex가 생략 되 면 하는 경우 인덱스 0에 검색을 시작 합니다.
          optional: true
      return:
        type:
          - number
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 구분 기호 문자열로 구분 된 배열의 모든 요소를 추가 합니다.
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            결과 문자열에 다음에서 배열의 한 요소를 구분 하는 데는 문자열입니다. 생략 하면 배열 요소를 쉼표로 구분 됩니다.
          optional: true
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.lastIndexOf
    name: 'lastIndexOf(DatabaseVulnerabilityAssessment, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 지정된 된 값 중 마지막 요소의 인덱스를 반환합니다.
    syntax:
      content: 'function lastIndexOf(searchElement: DatabaseVulnerabilityAssessment, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-sql.DatabaseVulnerabilityAssessment
          description: 배열에서 찾을 값입니다.
        - id: fromIndex
          type:
            - number
          description: |
            검색을 시작 하는 배열 인덱스입니다. FromIndex가 생략 되 면 경우 배열의 마지막 인덱스 검색을 시작 합니다.
          optional: true
      return:
        type:
          - number
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: 배열의 길이를 가져오거나 설정합니다. 배열에 정의 된 요소의 최고값 보다 더 높은 수 단일입니다.
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.map
    name: 'map((value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 각 요소에 대해 정의 된 콜백 함수를 호출 하 고 결과 포함 하는 배열을 반환 합니다.
    syntax:
      content: 'function map<U>(callbackfn: (value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => U'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. Map 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: 결과의 다음 페이지를 검색 하는 링크입니다.
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 마지막 요소를 제거 하 고 반환 합니다.
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-sql.DatabaseVulnerabilityAssessment | undefined
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.push
    name: 'push(DatabaseVulnerabilityAssessment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 새 요소를 추가 하 고 배열의 새 길이 반환 합니다.
    syntax:
      content: 'function push(items: DatabaseVulnerabilityAssessment[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
          description: |
            배열의 새 요소입니다.
      return:
        type:
          - number
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduce
    name: 'reduce((previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduce(callbackfn: (previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment'
          description: 최대 4 개의 인수를 받아들이는 함수입니다. Reduce 메서드를 사용 하는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
      return:
        type:
          - azure-arm-sql.DatabaseVulnerabilityAssessment
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduce_1
    name: 'reduce((previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment, DatabaseVulnerabilityAssessment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduce(callbackfn: (previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment, initialValue: DatabaseVulnerabilityAssessment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment'
          description: ''
        - id: initialValue
          type:
            - azure-arm-sql.DatabaseVulnerabilityAssessment
          description: ''
      return:
        type:
          - azure-arm-sql.DatabaseVulnerabilityAssessment
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduce_2
    name: 'reduce((previousValue: U, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에 있는 모든 요소에 지정 된 콜백 함수를 호출합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => U'
          description: 최대 4 개의 인수를 받아들이는 함수입니다. Reduce 메서드를 사용 하는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: initialValue
          type:
            - U
          description: |
            InitialValue를 지정 하는 경우 초기 값으로 누적 시작에 사용 됩니다. 첫 번째 호출은 callbackfn 함수에 인수로 배열 값 대신이 값을 제공합니다.
      return:
        type:
          - U
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduceRight
    name: 'reduceRight((previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment'
          description: 최대 4 개의 인수를 받아들이는 함수입니다. ReduceRight 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
      return:
        type:
          - azure-arm-sql.DatabaseVulnerabilityAssessment
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduceRight_1
    name: 'reduceRight((previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment, DatabaseVulnerabilityAssessment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment, initialValue: DatabaseVulnerabilityAssessment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DatabaseVulnerabilityAssessment, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => DatabaseVulnerabilityAssessment'
          description: ''
        - id: initialValue
          type:
            - azure-arm-sql.DatabaseVulnerabilityAssessment
          description: ''
      return:
        type:
          - azure-arm-sql.DatabaseVulnerabilityAssessment
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 내림차순 배열에 있는 모든 요소에 대해 지정 된 콜백 함수를 호출 합니다. 콜백 함수의 반환 값은 누적 된 결과 하 고 콜백 함수에 다음 호출에서 인수로 제공 됩니다.
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: DatabaseVulnerabilityAssessment, currentIndex: number, array: DatabaseVulnerabilityAssessment[]) => U'
          description: 최대 4 개의 인수를 받아들이는 함수입니다. ReduceRight 메서드는 배열의 각 요소에 대해 callbackfn 함수에 한 번 호출합니다.
        - id: initialValue
          type:
            - U
          description: |
            InitialValue를 지정 하는 경우 초기 값으로 누적 시작에 사용 됩니다. 첫 번째 호출은 callbackfn 함수에 인수로 배열 값 대신이 값을 제공합니다.
      return:
        type:
          - U
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 요소를 반대로 바꿉니다.
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 첫 번째 요소를 제거 하 고 반환 합니다.
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-sql.DatabaseVulnerabilityAssessment | undefined
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 일정 부분을 반환 합니다.
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: 시작 배열의 지정된 된 부분입니다.
          optional: true
        - id: end
          type:
            - number
          description: |
            끝 배열의 지정된 된 부분입니다.
          optional: true
      return:
        type:
          - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.some
    name: 'some((value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 지정 된 콜백 함수를 배열의 모든 요소에 대해 true를 반환 하는지 여부를 결정 합니다.
    syntax:
      content: 'function some(callbackfn: (value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DatabaseVulnerabilityAssessment, index: number, array: DatabaseVulnerabilityAssessment[]) => boolean'
          description: 최대 3 개의 인수를 받아들이는 함수입니다. 일부 메서드는 배열의 끝까지 또는 callbackfn를 true로 반환 될 때까지 array1에서 각 요소에 대해 callbackfn 함수를 호출 합니다.
        - id: thisArg
          type:
            - any
          description: |
            개체는이 키워드는 callbackfn 함수에서 참조할 수 있습니다. ThisArg를 생략 하면 정의 되지 않은으로이 값입니다.
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.sort
    name: 'sort((a: DatabaseVulnerabilityAssessment, b: DatabaseVulnerabilityAssessment) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열을 정렬합니다.
    syntax:
      content: 'function sort(compareFn?: (a: DatabaseVulnerabilityAssessment, b: DatabaseVulnerabilityAssessment) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: DatabaseVulnerabilityAssessment, b: DatabaseVulnerabilityAssessment) => number'
          description: |
            요소의 순서를 결정 하는 데 사용 되는 함수의 이름입니다. 생략 하면 요소가 오름차순, ASCII 문자 순서로 정렬 됩니다.
          optional: true
      return:
        type:
          - this
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 요소를 제거 하 고 필요한 경우 새 요소를 삽입 그 자리에 삭제 된 요소를 반환 합니다.
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: 시작 요소를 제거 하는 배열의 0부터 시작 하는 위치입니다.
        - id: deleteCount
          type:
            - number
          description: |
            제거할 요소의 수입니다.
          optional: true
      return:
        type:
          - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.splice_1
    name: 'splice(number, number, DatabaseVulnerabilityAssessment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열에서 요소를 제거 하 고 필요한 경우 새 요소를 삽입 그 자리에 삭제 된 요소를 반환 합니다.
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: DatabaseVulnerabilityAssessment[])'
      parameters:
        - id: start
          type:
            - number
          description: 시작 요소를 제거 하는 배열의 0부터 시작 하는 위치입니다.
        - id: deleteCount
          type:
            - number
          description: 제거할 요소의 수입니다.
        - id: items
          type:
            - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
          description: |
            삭제 된 요소 대신 배열에 삽입할 요소입니다.
      return:
        type:
          - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 문자열 표현을 반환 합니다. 요소는 해당 toLocalString 메서드를 사용 하 여 문자열로 변환 됩니다.
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 문자열 표현을 반환 합니다.
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessmentListResult.unshift
    name: 'unshift(DatabaseVulnerabilityAssessment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 배열의 시작에 새 요소를 삽입합니다.
    syntax:
      content: 'function unshift(items: DatabaseVulnerabilityAssessment[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
          description: |
            배열의 시작에 삽입할 요소입니다.
      return:
        type:
          - number
    package: azure-arm-sql
references:
  - uid: Array<azure-arm-sql.DatabaseVulnerabilityAssessment>
    name: DatabaseVulnerabilityAssessment>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: DatabaseVulnerabilityAssessment
        fullName: DatabaseVulnerabilityAssessment
        uid: azure-arm-sql.DatabaseVulnerabilityAssessment
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-sql.DatabaseVulnerabilityAssessment>[]'
    name: 'DatabaseVulnerabilityAssessment>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: DatabaseVulnerabilityAssessment
        fullName: DatabaseVulnerabilityAssessment
        uid: azure-arm-sql.DatabaseVulnerabilityAssessment
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-sql.DatabaseVulnerabilityAssessment[]'
    name: 'DatabaseVulnerabilityAssessment[]'
    spec.typeScript:
      - name: DatabaseVulnerabilityAssessment
        fullName: DatabaseVulnerabilityAssessment
        uid: azure-arm-sql.DatabaseVulnerabilityAssessment
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessment
    name: DatabaseVulnerabilityAssessment
    spec.typeScript:
      - name: DatabaseVulnerabilityAssessment
        fullName: DatabaseVulnerabilityAssessment
        uid: azure-arm-sql.DatabaseVulnerabilityAssessment
  - uid: azure-arm-sql.DatabaseVulnerabilityAssessment | undefined
    name: DatabaseVulnerabilityAssessment | undefined
    spec.typeScript:
      - name: DatabaseVulnerabilityAssessment
        fullName: DatabaseVulnerabilityAssessment
        uid: azure-arm-sql.DatabaseVulnerabilityAssessment
      - name: ' | undefined'
        fullName: ' | undefined'