### YamlMime:UniversalReference
ms.openlocfilehash: 70f7fdced044f28d0c42ea199dc464034747e39c
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40069480"
items:
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  fullName: ModuleClient
  children:
  - azure-iot-device.ModuleClient.close
  - azure-iot-device.ModuleClient.fromAuthenticationProvider
  - azure-iot-device.ModuleClient.fromConnectionString
  - azure-iot-device.ModuleClient.fromEnvironment
  - azure-iot-device.ModuleClient.fromSharedAccessSignature
  - azure-iot-device.ModuleClient.invokeMethod
  - azure-iot-device.ModuleClient.invokeMethod_1
  - azure-iot-device.ModuleClient.onMethod
  - azure-iot-device.ModuleClient.sendOutputEvent
  - azure-iot-device.ModuleClient.sendOutputEventBatch
  - azure-iot-device.ModuleClient.setOptions
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="a250b-101">IoT Hub 장치 클라이언트를 Azure IoT hub를 사용 하 여 장치를 연결 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-101">IoT Hub device client used to connect a device with an Azure IoT hub.</span></span>

    <span data-ttu-id="a250b-102">사용자는 SDK의 팩터리 메서드 중 하나를 호출 해야 [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) 하거나 [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) IoT Hub 장치 클라이언트를 만드는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-102">Users of the SDK should call one of the factory methods, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) to create an IoT Hub device client.</span></span>
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="a250b-103">전송 연결을 종료 하 고 클라이언트 리소스를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-103">Closes the transport connection and destroys the client resources.</span></span>

    <span data-ttu-id="a250b-104">*참고:이 메서드는 ModuleClient를 호출한 후 개체 재사용할 수 없습니다.*</span><span class="sxs-lookup"><span data-stu-id="a250b-104">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
  syntax:
    content: 'function close(closeCallback?: (err?: Error, result?: Disconnected) => void)'
    parameters:
    - id: closeCallback
      type:
      - '(err?: Error, result?: Disconnected) => void'
      description: >
        <span data-ttu-id="a250b-105">전송 연결이 끊어진 후 호출 함수 및 클라이언트 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-105">Function to call once the transport is disconnected and the client closed.</span></span>
      optional: true
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
  name: fromAuthenticationProvider
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-106">지정 된 인증 방법 및 지정 된 전송 형식을 사용 하 여 IoT Hub 모듈 클라이언트를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-106">Creates an IoT Hub module client from the given authentication method and using the given transport type.</span></span>
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: <span data-ttu-id="a250b-107">IoT hub에 대 한 인증 매개 변수를 가져오는 데 사용 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-107">Object used to obtain the authentication parameters for the IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="a250b-108">IoT hub에 연결 하는 데 사용 되는 프로토콜을 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-108">Transport protocol used to connect to IoT hub.</span></span>
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-109">지정 된 전송 형식을 사용 하 여 지정 된 연결 문자열에서 IoT Hub 장치 클라이언트를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-109">Creates an IoT Hub device client from the given connection string using the given transport type.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="a250b-110">IoT hub에 대 한 권한 "장치 연결"을 캡슐화 하는 연결 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-110">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="a250b-111">전송 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-111">A transport constructor.</span></span>
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment
  name: fromEnvironment
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="a250b-112">환경에서 구성 정보를 사용 하 여 IoT Hub 모듈 클라이언트를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-112">Creates an IoT Hub module client by using configuration information from the environment.</span></span>

    <span data-ttu-id="a250b-113">환경 변수를 호출 하면 `EdgeHubConnectionString` 또는 `IotHubConnectionString` 가 값을 사용 하 고 호출 플랫폼인 `fromConnectionString` 에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-113">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="a250b-114">이러한 환경 변수가 존재 하지 않는 경우 다음 변수 정의 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-114">If those environment variables do not exist then the following variables MUST be defined:</span></span>

        - <span data-ttu-id="a250b-115">Iotedged의 워크 로드 API에 대 한 IOTEDGE_WORKLOADURI URI</span><span class="sxs-lookup"><span data-stu-id="a250b-115">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
        - <span data-ttu-id="a250b-116">IOTEDGE_DEVICEID 장치 식별자</span><span class="sxs-lookup"><span data-stu-id="a250b-116">IOTEDGE_DEVICEID             Device identifier</span></span>
        - <span data-ttu-id="a250b-117">IOTEDGE_MODULEID 모듈 식별자</span><span class="sxs-lookup"><span data-stu-id="a250b-117">IOTEDGE_MODULEID             Module identifier</span></span>
        - <span data-ttu-id="a250b-118">IOTEDGE_MODULEGENERATIONID 모듈 생성 식별자</span><span class="sxs-lookup"><span data-stu-id="a250b-118">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
        - <span data-ttu-id="a250b-119">IOTEDGE_IOTHUBHOSTNAME IoT Hub 호스트 이름</span><span class="sxs-lookup"><span data-stu-id="a250b-119">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
        - <span data-ttu-id="a250b-120">IOTEDGE_AUTHSCHEME 인증 체계를 지정 해야 합니다. "sasToken" 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-120">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
  syntax:
    content: 'static function fromEnvironment(transportCtor: any, callback: (err?: Error, client?: ModuleClient) => void)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: <span data-ttu-id="a250b-121">IoT hub에 연결 하는 데 사용 되는 프로토콜을 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-121">Transport protocol used to connect to IoT hub.</span></span>
    - id: callback
      type:
      - '(err?: Error, client?: ModuleClient) => void'
      description: >
        <span data-ttu-id="a250b-122">ModuleClient constructured 되었을 때 또는 클라이언트를 만드는 동안 오류가 발생 하는 경우 호출할 콜백.</span><span class="sxs-lookup"><span data-stu-id="a250b-122">Callback to invoke when the ModuleClient has been constructured or if an error occurs while creating the client.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-123">지정 된 전송 형식을 사용 하 여 지정 된 공유 액세스 서명에서 IoT Hub 모듈 클라이언트를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-123">Creates an IoT Hub module client from the given shared access signature using the given transport type.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="a250b-124">IoT hub에 대 한 권한 "장치 연결"을 캡슐화 하는 공유 액세스 서명입니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-124">A shared access signature which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod
  name: invokeMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-125">다운스트림 장치에서 또는 동일한 Edge 장치에서 다른 모듈에서 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-125">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="a250b-126">이 기능 모듈을 Edge 장치의 일부로 실행 되는 경우에 작동 note 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a250b-126">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: MethodCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="a250b-127">대상 장치 식별자</span><span class="sxs-lookup"><span data-stu-id="a250b-127">target device identifier</span></span>
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: <span data-ttu-id="a250b-128">직접 메서드 호출의 매개 변수</span><span class="sxs-lookup"><span data-stu-id="a250b-128">parameters of the direct method call</span></span>
    - id: callback
      type:
      - azure-iot-device.MethodCallback
      description: >
        <span data-ttu-id="a250b-129">Error 개체 또는 메서드 호출의 결과 사용 하 여 호출 될 콜백.</span><span class="sxs-lookup"><span data-stu-id="a250b-129">callback that will be invoked either with an Error object or the result of the method call.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_1
  name: invokeMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-130">다운스트림 장치에서 또는 동일한 Edge 장치에서 다른 모듈에서 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-130">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="a250b-131">이 기능 모듈을 Edge 장치의 일부로 실행 되는 경우에 작동 note 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a250b-131">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: MethodCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    - id: callback
      type:
      - azure-iot-device.MethodCallback
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.onMethod
  name: onMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-132">명명 된 메서드에 대 한 콜백을 등록 `methodName`합니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-132">Registers a callback for a method named `methodName`.</span></span>
  syntax:
    content: 'function onMethod(methodName: string, callback: (request: DeviceMethodRequest, response: DeviceMethodResponse) => void)'
    parameters:
    - id: methodName
      type:
      - string
      description: <span data-ttu-id="a250b-133">콜백에 의해 처리 됩니다 하는 메서드의 이름</span><span class="sxs-lookup"><span data-stu-id="a250b-133">Name of the method that will be handled by the callback</span></span>
    - id: callback
      type:
      - '(request: DeviceMethodRequest, response: DeviceMethodResponse) => void'
      description: >
        <span data-ttu-id="a250b-134">메서드 요청 메서드를 호출할 때마다 호출 됩니다 하는 함수 `methodName` 수신 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-134">Function that shall be called whenever a method request for the method called `methodName` is received.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent
  name: sendOutputEvent
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-135">지정 된 모듈 출력에는 이벤트를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-135">Sends an event to the given module output</span></span>
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message, callback: (err?: Error, result?: MessageEnqueued) => void)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="a250b-136">이벤트를 보낼 출력의 이름</span><span class="sxs-lookup"><span data-stu-id="a250b-136">Name of the output to send the event to</span></span>
    - id: message
      type:
      - Message
      description: <span data-ttu-id="a250b-137">지정 된 출력으로 보낼 메시지</span><span class="sxs-lookup"><span data-stu-id="a250b-137">Message to send to the given output</span></span>
    - id: callback
      type:
      - '(err?: Error, result?: MessageEnqueued) => void'
      description: >
        <span data-ttu-id="a250b-138">작업 큐에 대기 되었습니다 때 호출할 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-138">Function to call when the operation has been queued.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch
  name: sendOutputEventBatch
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-139">이벤트의 배열이 지정 된 모듈 출력에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-139">Sends an array of events to the given module output</span></span>
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: (err?: Error, result?: MessageEnqueued) => void)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="a250b-140">이벤트를 보낼 출력의 이름</span><span class="sxs-lookup"><span data-stu-id="a250b-140">Name of the output to send the events to</span></span>
    - id: messages
      type:
      - Message[]
      description: ''
    - id: callback
      type:
      - '(err?: Error, result?: MessageEnqueued) => void'
      description: >
        <span data-ttu-id="a250b-141">작업을 대기 하는 경우 호출할 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-141">Function to call when the operations have been queued.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions
  name: setOptions
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a250b-142">옵션을 전달 합니다 `ModuleClient` 전송 구성에 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-142">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
  syntax:
    content: 'function setOptions(options: DeviceClientOptions, done?: (err?: Error, result?: TransportConfigured) => void)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: <span data-ttu-id="a250b-143"><xref:DeviceClientOptions> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a250b-143">A <xref:DeviceClientOptions> object.</span></span>
    - id: done
      type:
      - '(err?: Error, result?: TransportConfigured) => void'
      description: >
        <span data-ttu-id="a250b-144">옵션을 설정한 후 호출할 콜백.</span><span class="sxs-lookup"><span data-stu-id="a250b-144">The callback to call once the options have been set.</span></span>
      optional: true
  package: azure-iot-device
references:
- uid: azure-iot-device.MethodParams
  spec.typeScript:
  - name: MethodParams
    fullName: MethodParams
    uid: azure-iot-device.MethodParams
- uid: azure-iot-device.MethodCallback
  spec.typeScript:
  - name: MethodCallback
    fullName: MethodCallback
    uid: azure-iot-device.MethodCallback
- uid: azure-iot-device.DeviceClientOptions
  spec.typeScript:
  - name: DeviceClientOptions
    fullName: DeviceClientOptions
    uid: azure-iot-device.DeviceClientOptions
- uid: azure-iot-device.ModuleClient
  spec.typeScript:
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
