### YamlMime:UniversalReference
items:
  - uid: azure-arm-cdn.CdnManagementClient
    name: CdnManagementClient
    fullName: CdnManagementClient
    children:
      - azure-arm-cdn.CdnManagementClient.acceptLanguage
      - azure-arm-cdn.CdnManagementClient.addUserAgentInfo
      - azure-arm-cdn.CdnManagementClient.apiVersion
      - azure-arm-cdn.CdnManagementClient.constructor
      - azure-arm-cdn.CdnManagementClient.checkNameAvailability
      - azure-arm-cdn.CdnManagementClient.checkNameAvailability_2
      - azure-arm-cdn.CdnManagementClient.checkNameAvailability_1
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithHttpOperationResponse
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_2
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_1
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscriptionWithHttpOperationResponse
      - azure-arm-cdn.CdnManagementClient.credentials
      - azure-arm-cdn.CdnManagementClient.customDomains
      - azure-arm-cdn.CdnManagementClient.edgeNodes
      - azure-arm-cdn.CdnManagementClient.endpoints
      - azure-arm-cdn.CdnManagementClient.generateClientRequestId
      - azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult_2
      - azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult
      - azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult_1
      - azure-arm-cdn.CdnManagementClient.getPackageJsonInfo
      - azure-arm-cdn.CdnManagementClient.longRunningOperationRetryTimeout
      - azure-arm-cdn.CdnManagementClient.operations
      - azure-arm-cdn.CdnManagementClient.origins
      - azure-arm-cdn.CdnManagementClient.profiles
      - azure-arm-cdn.CdnManagementClient.resourceUsageOperations
      - azure-arm-cdn.CdnManagementClient.sendLongRunningRequest_1
      - azure-arm-cdn.CdnManagementClient.sendLongRunningRequest
      - azure-arm-cdn.CdnManagementClient.sendLongRunningRequestWithHttpOperationResponse
      - azure-arm-cdn.CdnManagementClient.sendRequest_1
      - azure-arm-cdn.CdnManagementClient.sendRequest
      - azure-arm-cdn.CdnManagementClient.sendRequestWithHttpOperationResponse
      - azure-arm-cdn.CdnManagementClient.subscriptionId
      - azure-arm-cdn.CdnManagementClient.validateProbe
      - azure-arm-cdn.CdnManagementClient.validateProbe_2
      - azure-arm-cdn.CdnManagementClient.validateProbe_1
      - azure-arm-cdn.CdnManagementClient.validateProbeWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.acceptLanguage
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: 사용자 에이전트 헤더에 사용자 지정 정보 추가
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            사용자 에이전트 헤더 문자열에 추가할 정보입니다.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.apiVersion
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiVersion: string'
      return:
        type:
          - string
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.constructor
    name: 'CdnManagementClient(ServiceClientCredentials, string, string, AzureServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: CdnManagementClient 클래스의 새 인스턴스를 초기화합니다.
    syntax:
      content: 'new CdnManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, baseUri?: string, options?: AzureServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            Azure에 연결 하는 클라이언트에 필요한 자격 증명입니다.
        - id: subscriptionId
          type:
            - string
          description: |
            Azure 구독 ID입니다.
        - id: baseUri
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - AzureServiceClientOptions
          description: ''
          optional: true
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailability
    name: 'checkNameAvailability(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 리소스 이름의 가용성을 확인 합니다. 이 이름은 전역적으로 고유함 CDN 끝점을 같은 리소스에 대 한 필요 합니다.
    syntax:
      content: 'function checkNameAvailability(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            유효성을 검사 하는 리소스 이름입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailability_2
    name: 'checkNameAvailability(string, Object, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 리소스 이름의 가용성을 확인 합니다. 이 이름은 전역적으로 고유함 CDN 끝점을 같은 리소스에 대 한 필요 합니다.
    syntax:
      content: 'function checkNameAvailability(name: string, options: Object, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailability_1
    name: 'checkNameAvailability(string, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 리소스 이름의 가용성을 확인 합니다. 이 이름은 전역적으로 고유함 CDN 끝점을 같은 리소스에 대 한 필요 합니다.
    syntax:
      content: 'function checkNameAvailability(name: string, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithHttpOperationResponse
    name: 'checkNameAvailabilityWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 리소스 이름의 가용성을 확인 합니다. 이 이름은 전역적으로 고유함 CDN 끝점을 같은 리소스에 대 한 필요 합니다.
    syntax:
      content: 'function checkNameAvailabilityWithHttpOperationResponse(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            유효성을 검사 하는 리소스 이름입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.CheckNameAvailabilityOutput>>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription
    name: 'checkNameAvailabilityWithSubscription(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 리소스 이름의 가용성을 확인 합니다. 이 이름은 전역적으로 고유함 CDN 끝점을 같은 리소스에 대 한 필요 합니다.
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            유효성을 검사 하는 리소스 이름입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_2
    name: 'checkNameAvailabilityWithSubscription(string, Object, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 리소스 이름의 가용성을 확인 합니다. 이 이름은 전역적으로 고유함 CDN 끝점을 같은 리소스에 대 한 필요 합니다.
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, options: Object, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_1
    name: 'checkNameAvailabilityWithSubscription(string, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 리소스 이름의 가용성을 확인 합니다. 이 이름은 전역적으로 고유함 CDN 끝점을 같은 리소스에 대 한 필요 합니다.
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscriptionWithHttpOperationResponse
    name: 'checkNameAvailabilityWithSubscriptionWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 리소스 이름의 가용성을 확인 합니다. 이 이름은 전역적으로 고유함 CDN 끝점을 같은 리소스에 대 한 필요 합니다.
    syntax:
      content: 'function checkNameAvailabilityWithSubscriptionWithHttpOperationResponse(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            유효성을 검사 하는 리소스 이름입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.CheckNameAvailabilityOutput>>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.customDomains
    name: customDomains
    fullName: customDomains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'customDomains: CustomDomains'
      return:
        type:
          - azure-arm-cdn.CustomDomains
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.edgeNodes
    name: edgeNodes
    fullName: edgeNodes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'edgeNodes: EdgeNodes'
      return:
        type:
          - azure-arm-cdn.EdgeNodes
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.endpoints
    name: endpoints
    fullName: endpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoints: Endpoints'
      return:
        type:
          - azure-arm-cdn.Endpoints
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.generateClientRequestId
    name: generateClientRequestId
    fullName: generateClientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'generateClientRequestId: boolean'
      return:
        type:
          - boolean
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult_2
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, options?: RequestOptions)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: options
          type:
            - RequestOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<TResult>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, RequestOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, options: RequestOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: options
          type:
            - RequestOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult_1
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, callback: ServiceCallback<TResult>)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      지정 된 azure nodejs 패키지용 package.json을 찾으려고 시도 합니다.
      하는 경우 발견, 이름 및 버전을 반환 합니다. 참조 하 여 패키지의 package.json package.json 없으면 기본값을 반환 합니다.
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: 특정 azure management 클라이언트의 디렉터리를 전달 합니다.
      return:
        type:
          - Object
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'longRunningOperationRetryTimeout: number'
      return:
        type:
          - number
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.operations
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - azure-arm-cdn.Operations
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.origins
    name: origins
    fullName: origins
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'origins: Origins'
      return:
        type:
          - azure-arm-cdn.Origins
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.profiles
    name: profiles
    fullName: profiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'profiles: Profiles'
      return:
        type:
          - azure-arm-cdn.Profiles
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.resourceUsageOperations
    name: resourceUsageOperations
    fullName: resourceUsageOperations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'resourceUsageOperations: ResourceUsageOperations'
      return:
        type:
          - azure-arm-cdn.ResourceUsageOperations
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendLongRunningRequest_1
    name: sendLongRunningRequest(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequest<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendLongRunningRequest
    name: 'sendLongRunningRequest(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequest<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendLongRunningRequestWithHttpOperationResponse
    name: sendLongRunningRequestWithHttpOperationResponse(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequestWithHttpOperationResponse<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.subscriptionId
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.validateProbe
    name: 'validateProbe(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 확인 하 고 프로브 경로가 올바른 경로 파일에 액세스할 수 있습니다. 프로브 경로 CDN 끝점을 통해 동적 콘텐츠의 배달을 가속화 하기 위해 원본 서버에서 호스팅되는 파일의 경로입니다. 끝점 구성에 지정 된 원본 경로 상대적인이 경로가입니다.
    syntax:
      content: 'function validateProbe(probeURL: string, options?: Object)'
      parameters:
        - id: probeURL
          type:
            - string
          description: |
            프로브 URL의 유효성을 검사입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.ValidateProbeOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.validateProbe_2
    name: 'validateProbe(string, Object, ServiceCallback<ValidateProbeOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 확인 하 고 프로브 경로가 올바른 경로 파일에 액세스할 수 있습니다. 프로브 경로 CDN 끝점을 통해 동적 콘텐츠의 배달을 가속화 하기 위해 원본 서버에서 호스팅되는 파일의 경로입니다. 끝점 구성에 지정 된 원본 경로 상대적인이 경로가입니다.
    syntax:
      content: 'function validateProbe(probeURL: string, options: Object, callback: ServiceCallback<ValidateProbeOutput>)'
      parameters:
        - id: probeURL
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ValidateProbeOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ValidateProbeOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.validateProbe_1
    name: 'validateProbe(string, ServiceCallback<ValidateProbeOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 확인 하 고 프로브 경로가 올바른 경로 파일에 액세스할 수 있습니다. 프로브 경로 CDN 끝점을 통해 동적 콘텐츠의 배달을 가속화 하기 위해 원본 서버에서 호스팅되는 파일의 경로입니다. 끝점 구성에 지정 된 원본 경로 상대적인이 경로가입니다.
    syntax:
      content: 'function validateProbe(probeURL: string, callback: ServiceCallback<ValidateProbeOutput>)'
      parameters:
        - id: probeURL
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ValidateProbeOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ValidateProbeOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.validateProbeWithHttpOperationResponse
    name: 'validateProbeWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 확인 하 고 프로브 경로가 올바른 경로 파일에 액세스할 수 있습니다. 프로브 경로 CDN 끝점을 통해 동적 콘텐츠의 배달을 가속화 하기 위해 원본 서버에서 호스팅되는 파일의 경로입니다. 끝점 구성에 지정 된 원본 경로 상대적인이 경로가입니다.
    syntax:
      content: 'function validateProbeWithHttpOperationResponse(probeURL: string, options?: Object)'
      parameters:
        - id: probeURL
          type:
            - string
          description: |
            프로브 URL의 유효성을 검사입니다.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.ValidateProbeOutput>>
    package: azure-arm-cdn
references:
  - uid: azure-arm-cdn.CustomDomains
    name: CustomDomains
    spec.typeScript:
      - name: CustomDomains
        fullName: CustomDomains
        uid: azure-arm-cdn.CustomDomains
  - uid: azure-arm-cdn.EdgeNodes
    name: EdgeNodes
    spec.typeScript:
      - name: EdgeNodes
        fullName: EdgeNodes
        uid: azure-arm-cdn.EdgeNodes
  - uid: azure-arm-cdn.Endpoints
    name: Endpoints
    spec.typeScript:
      - name: Endpoints
        fullName: Endpoints
        uid: azure-arm-cdn.Endpoints
  - uid: azure-arm-cdn.Operations
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: azure-arm-cdn.Operations
  - uid: azure-arm-cdn.Origins
    name: Origins
    spec.typeScript:
      - name: Origins
        fullName: Origins
        uid: azure-arm-cdn.Origins
  - uid: azure-arm-cdn.Profiles
    name: Profiles
    spec.typeScript:
      - name: Profiles
        fullName: Profiles
        uid: azure-arm-cdn.Profiles
  - uid: azure-arm-cdn.ResourceUsageOperations
    name: ResourceUsageOperations
    spec.typeScript:
      - name: ResourceUsageOperations
        fullName: ResourceUsageOperations
        uid: azure-arm-cdn.ResourceUsageOperations
  - uid: Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-cdn.CheckNameAvailabilityOutput
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-cdn.CheckNameAvailabilityOutput
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-cdn.CheckNameAvailabilityOutput>>
    name: CheckNameAvailabilityOutput>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-cdn.CheckNameAvailabilityOutput
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-cdn.ValidateProbeOutput>
    name: ValidateProbeOutput>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ValidateProbeOutput
        fullName: ValidateProbeOutput
        uid: azure-arm-cdn.ValidateProbeOutput
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-cdn.ValidateProbeOutput>
    name: ValidateProbeOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ValidateProbeOutput
        fullName: ValidateProbeOutput
        uid: azure-arm-cdn.ValidateProbeOutput
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-cdn.ValidateProbeOutput>>
    name: ValidateProbeOutput>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ValidateProbeOutput
        fullName: ValidateProbeOutput
        uid: azure-arm-cdn.ValidateProbeOutput
      - name: '>>'
        fullName: '>>'